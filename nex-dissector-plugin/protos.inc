-- This file is autogenerated
-- Pls dont
F.Sint8 = ProtoField.int8("Sint8", "Sint8 (uint8)")
F.Sint16 = ProtoField.int16("Sint16", "Sint16 (uint16)")
F.Sint32 = ProtoField.int32("Sint32", "Sint32 (uint32)")
F.Sint64 = ProtoField.int64("Sint64", "Sint64 (uint64)")
F.Int32 = ProtoField.int32("Int32", "Int32 (uint32)")
F.byte = ProtoField.uint8("byte", "byte (uint8)")
F.Uint8 = ProtoField.uint8("Uint8", "Uint8 (uint8)")
F.Uint16 = ProtoField.uint16("Uint16", "Uint16 (uint16)")
F.Uint32 = ProtoField.uint32("Uint32", "Uint32 (uint32)")
F.Uint64 = ProtoField.uint64("Uint64", "Uint64 (uint64)")
F.PID = ProtoField.uint32("PID", "PID (uint32)")
F.Result = ProtoField.uint32("Result", "Result (uint32)")
F.DateTime = ProtoField.uint64("DateTime", "DateTime (uint64)")
F.Buffer_len = ProtoField.uint32("Buffer_len", "Buffer length (Buffer)")
F.Buffer_data = ProtoField.bytes("Buffer_data", "Buffer data (Buffer)")
F.qBuffer_len = ProtoField.uint16("qBuffer_len", "qBuffer length (Buffer)")
F.qBuffer_data = ProtoField.bytes("qBuffer_data", "qBuffer data (Buffer)")
F.String_len = ProtoField.uint16("String_len", "String length (String)")
F.String_data = ProtoField.string("String_data", "String data (String)")
F.StationURL_len = ProtoField.uint16("StationURL_len", "StationURL length (String)")
F.StationURL_data = ProtoField.string("StationURL_data", "StationURL data (String)")
F.Bool = ProtoField.bool("Bool", "Bool (bool)")
F.Float = ProtoField.float("Float", "Float (float)")
F.Double = ProtoField.double("Double", "Double (double)")
F.Data = ProtoField.bytes("Data", "Data (Data)")
F.Variant = ProtoField.bytes("Variant", "Variant (Variant)")
F.Variant_Sint64 = ProtoField.int64("Variant_Sint64", "Sint64 (uint64)")
F.Variant_Double = ProtoField.double("Variant_Double", "Double (double)")
F.Variant_Bool = ProtoField.bool("Variant_Bool", "Bool (bool)")
F.Variant_String_len = ProtoField.uint16("Variant_String_len", "String length (String)")
F.Variant_String_data = ProtoField.string("Variant_String_data", "String data (String)")
F.Variant_DateTime = ProtoField.uint64("Variant_DateTime", "DateTime (uint64)")
F.Variant_Uint64 = ProtoField.uint64("Variant_Uint64", "Uint64 (uint64)")
F.Structure = ProtoField.bytes("Structure", "Structure (Structure)")
F.Structure_Version = ProtoField.uint8("Structure_Version", "Version (uint8)")
F.Structure_Length = ProtoField.uint32("Structure_Length", "Length (uint32)")
F.DataHeader = ProtoField.bytes("DataHeader", "DataHeader (DataHeader)")
F.RVConnectionData = ProtoField.bytes("RVConnectionData", "RVConnectionData (RVConnectionData)")
F.RVConnectionData_m_urlRegularProtocols_len = ProtoField.uint16("RVConnectionData_m_urlRegularProtocols_len", "m_urlRegularProtocols length (String)")
F.RVConnectionData_m_urlRegularProtocols_data = ProtoField.string("RVConnectionData_m_urlRegularProtocols_data", "m_urlRegularProtocols data (String)")
F.RVConnectionData_m_lstSpecialProtocols_len = ProtoField.uint32("RVConnectionData_m_lstSpecialProtocols_len", "m_lstSpecialProtocols length (uint32)")
F.RVConnectionData_m_lstSpecialProtocols_item = ProtoField.uint8("RVConnectionData_m_lstSpecialProtocols_item", "m_lstSpecialProtocols (uint8)")
F.RVConnectionData_m_urlSpecialProtocols_len = ProtoField.uint16("RVConnectionData_m_urlSpecialProtocols_len", "m_urlSpecialProtocols length (String)")
F.RVConnectionData_m_urlSpecialProtocols_data = ProtoField.string("RVConnectionData_m_urlSpecialProtocols_data", "m_urlSpecialProtocols data (String)")
F.ResultRange = ProtoField.bytes("ResultRange", "ResultRange (ResultRange)")
F.ResultRange_m_uiOffset = ProtoField.uint32("ResultRange_m_uiOffset", "m_uiOffset (uint32)")
F.ResultRange_m_uiSize = ProtoField.uint32("ResultRange_m_uiSize", "m_uiSize (uint32)")
F.CalicoPlayerSimple = ProtoField.bytes("CalicoPlayerSimple", "CalicoPlayerSimple (CalicoPlayerSimple)")
F.CalicoPlayerSimple_principalId = ProtoField.uint32("CalicoPlayerSimple_principalId", "principalId (uint32)")
F.CalicoPlayerSimple_name_len = ProtoField.uint16("CalicoPlayerSimple_name_len", "name length (String)")
F.CalicoPlayerSimple_name_data = ProtoField.string("CalicoPlayerSimple_name_data", "name data (String)")
F.CalicoPlayerSimple_playerType = ProtoField.uint8("CalicoPlayerSimple_playerType", "playerType (uint8)")
F.CalicoPlayerSimple_udemae = ProtoField.int32("CalicoPlayerSimple_udemae", "udemae (uint32)")
F.CalicoPlayerSimple_playerRank = ProtoField.int32("CalicoPlayerSimple_playerRank", "playerRank (uint32)")
F.CalicoPlayerSimple_starRank = ProtoField.int32("CalicoPlayerSimple_starRank", "starRank (uint32)")
F.CalicoPlayerSimple_fesGrade = ProtoField.int32("CalicoPlayerSimple_fesGrade", "fesGrade (uint32)")
F.CalicoPlayerSimple_weaponId = ProtoField.int32("CalicoPlayerSimple_weaponId", "weaponId (uint32)")
F.CalicoPlayerSimple_headId = ProtoField.int32("CalicoPlayerSimple_headId", "headId (uint32)")
F.CalicoPlayerSimple_headSkillIds_len = ProtoField.uint32("CalicoPlayerSimple_headSkillIds_len", "headSkillIds length (uint32)")
F.CalicoPlayerSimple_headSkillIds_item = ProtoField.int32("CalicoPlayerSimple_headSkillIds_item", "headSkillIds (uint32)")
F.CalicoPlayerSimple_clothesId = ProtoField.int32("CalicoPlayerSimple_clothesId", "clothesId (uint32)")
F.CalicoPlayerSimple_clothesSkillIds_len = ProtoField.uint32("CalicoPlayerSimple_clothesSkillIds_len", "clothesSkillIds length (uint32)")
F.CalicoPlayerSimple_clothesSkillIds_item = ProtoField.int32("CalicoPlayerSimple_clothesSkillIds_item", "clothesSkillIds (uint32)")
F.CalicoPlayerSimple_shoesId = ProtoField.int32("CalicoPlayerSimple_shoesId", "shoesId (uint32)")
F.CalicoPlayerSimple_shoesSkillIds_len = ProtoField.uint32("CalicoPlayerSimple_shoesSkillIds_len", "shoesSkillIds length (uint32)")
F.CalicoPlayerSimple_shoesSkillIds_item = ProtoField.int32("CalicoPlayerSimple_shoesSkillIds_item", "shoesSkillIds (uint32)")
F.CalicoPlayerResult = ProtoField.bytes("CalicoPlayerResult", "CalicoPlayerResult (CalicoPlayerResult)")
F.CalicoPlayerResult_killCount = ProtoField.int32("CalicoPlayerResult_killCount", "killCount (uint32)")
F.CalicoPlayerResult_assistCount = ProtoField.int32("CalicoPlayerResult_assistCount", "assistCount (uint32)")
F.CalicoPlayerResult_deathCount = ProtoField.int32("CalicoPlayerResult_deathCount", "deathCount (uint32)")
F.CalicoPlayerResult_specialCount = ProtoField.int32("CalicoPlayerResult_specialCount", "specialCount (uint32)")
F.CalicoPlayerResult_gamePaintPoint = ProtoField.int32("CalicoPlayerResult_gamePaintPoint", "gamePaintPoint (uint32)")
F.CalicoPlayerResult_sortScore = ProtoField.int32("CalicoPlayerResult_sortScore", "sortScore (uint32)")
F.DataStoreRatingInitParam = ProtoField.bytes("DataStoreRatingInitParam", "DataStoreRatingInitParam (DataStoreRatingInitParam)")
F.DataStoreRatingInitParam_flag = ProtoField.uint8("DataStoreRatingInitParam_flag", "flag (uint8)")
F.DataStoreRatingInitParam_internalFlag = ProtoField.uint8("DataStoreRatingInitParam_internalFlag", "internalFlag (uint8)")
F.DataStoreRatingInitParam_lockType = ProtoField.uint8("DataStoreRatingInitParam_lockType", "lockType (uint8)")
F.DataStoreRatingInitParam_initialValue = ProtoField.int64("DataStoreRatingInitParam_initialValue", "initialValue (uint64)")
F.DataStoreRatingInitParam_rangeMin = ProtoField.int32("DataStoreRatingInitParam_rangeMin", "rangeMin (uint32)")
F.DataStoreRatingInitParam_rangeMax = ProtoField.int32("DataStoreRatingInitParam_rangeMax", "rangeMax (uint32)")
F.DataStoreRatingInitParam_periodHour = ProtoField.int8("DataStoreRatingInitParam_periodHour", "periodHour (uint8)")
F.DataStoreRatingInitParam_periodDuration = ProtoField.int16("DataStoreRatingInitParam_periodDuration", "periodDuration (uint16)")
F.DataStoreRatingInfo = ProtoField.bytes("DataStoreRatingInfo", "DataStoreRatingInfo (DataStoreRatingInfo)")
F.DataStoreRatingInfo_totalValue = ProtoField.int64("DataStoreRatingInfo_totalValue", "totalValue (uint64)")
F.DataStoreRatingInfo_count = ProtoField.uint32("DataStoreRatingInfo_count", "count (uint32)")
F.DataStoreRatingInfo_initialValue = ProtoField.int64("DataStoreRatingInfo_initialValue", "initialValue (uint64)")
F.MiiV2 = ProtoField.bytes("MiiV2", "MiiV2 (MiiV2)")
F.MiiV2_Name_len = ProtoField.uint16("MiiV2_Name_len", "Name length (String)")
F.MiiV2_Name_data = ProtoField.string("MiiV2_Name_data", "Name data (String)")
F.MiiV2_Unknown = ProtoField.uint8("MiiV2_Unknown", "Unknown (uint8)")
F.MiiV2_Unknown2 = ProtoField.uint8("MiiV2_Unknown2", "Unknown2 (uint8)")
F.MiiV2_Mii_data_FFLStoreData_len = ProtoField.uint32("MiiV2_Mii_data_FFLStoreData_len", "Mii_data_FFLStoreData length (Buffer)")
F.MiiV2_Mii_data_FFLStoreData_data = ProtoField.bytes("MiiV2_Mii_data_FFLStoreData_data", "Mii_data_FFLStoreData data (Buffer)")
F.MiiV2_Unknown3 = ProtoField.uint64("MiiV2_Unknown3", "Unknown3 (uint64)")
F.CalicoStatsBase = ProtoField.bytes("CalicoStatsBase", "CalicoStatsBase (CalicoStatsBase)")
F.CalicoStatsBase_gameMode = ProtoField.uint32("CalicoStatsBase_gameMode", "gameMode (uint32)")
F.CalicoStatsBase_rule = ProtoField.int32("CalicoStatsBase_rule", "rule (uint32)")
F.CalicoStatsBase_result = ProtoField.uint8("CalicoStatsBase_result", "result (uint8)")
F.CalicoStatsBase_stage = ProtoField.int32("CalicoStatsBase_stage", "stage (uint32)")
F.CalicoStatsBase_myTeamMembers_len = ProtoField.uint32("CalicoStatsBase_myTeamMembers_len", "myTeamMembers length (uint32)")
F.CalicoStatsBase_otherTeamMembers_len = ProtoField.uint32("CalicoStatsBase_otherTeamMembers_len", "otherTeamMembers length (uint32)")
F.CalicoStatsBase_weaponPaintPoint = ProtoField.int32("CalicoStatsBase_weaponPaintPoint", "weaponPaintPoint (uint32)")
F.CalicoStatsBase_startTime = ProtoField.uint64("CalicoStatsBase_startTime", "startTime (uint64)")
F.CalicoStatsBase_battleNum = ProtoField.uint64("CalicoStatsBase_battleNum", "battleNum (uint64)")
F.CalicoStatsBase_playerRank = ProtoField.int32("CalicoStatsBase_playerRank", "playerRank (uint32)")
F.CalicoStatsBase_starRank = ProtoField.int32("CalicoStatsBase_starRank", "starRank (uint32)")
F.PropertyVariant = ProtoField.bytes("PropertyVariant", "PropertyVariant (PropertyVariant)")
F.PropertyVariant_ID = ProtoField.uint32("PropertyVariant_ID", "ID (uint32)")
F.MessageRecipient = ProtoField.bytes("MessageRecipient", "MessageRecipient (MessageRecipient)")
F.MessageRecipient_m_uiRecipientType = ProtoField.uint32("MessageRecipient_m_uiRecipientType", "m_uiRecipientType (uint32)")
F.MessageRecipient_m_principalId = ProtoField.uint32("MessageRecipient_m_principalId", "m_principalId (uint32)")
F.MessageRecipient_m_gatheringId = ProtoField.uint32("MessageRecipient_m_gatheringId", "m_gatheringId (uint32)")
F.DataStorePermission = ProtoField.bytes("DataStorePermission", "DataStorePermission (DataStorePermission)")
F.DataStorePermission_permission = ProtoField.uint8("DataStorePermission_permission", "permission (uint8)")
F.DataStorePermission_recipientIds_len = ProtoField.uint32("DataStorePermission_recipientIds_len", "recipientIds length (uint32)")
F.DataStorePermission_recipientIds_item = ProtoField.uint32("DataStorePermission_recipientIds_item", "recipientIds (uint32)")
F.DataStoreRatingInitParamWithSlot = ProtoField.bytes("DataStoreRatingInitParamWithSlot", "DataStoreRatingInitParamWithSlot (DataStoreRatingInitParamWithSlot)")
F.DataStoreRatingInitParamWithSlot_slot = ProtoField.int8("DataStoreRatingInitParamWithSlot_slot", "slot (uint8)")
F.DataStorePersistenceInitParam = ProtoField.bytes("DataStorePersistenceInitParam", "DataStorePersistenceInitParam (DataStorePersistenceInitParam)")
F.DataStorePersistenceInitParam_persistenceSlotId = ProtoField.uint16("DataStorePersistenceInitParam_persistenceSlotId", "persistenceSlotId (uint16)")
F.DataStorePersistenceInitParam_deleteLastObject = ProtoField.bool("DataStorePersistenceInitParam_deleteLastObject", "deleteLastObject (bool)")
F.DataStoreRatingInfoWithSlot = ProtoField.bytes("DataStoreRatingInfoWithSlot", "DataStoreRatingInfoWithSlot (DataStoreRatingInfoWithSlot)")
F.DataStoreRatingInfoWithSlot_slot = ProtoField.int8("DataStoreRatingInfoWithSlot_slot", "slot (uint8)")
F.DataStoreKeyValue = ProtoField.bytes("DataStoreKeyValue", "DataStoreKeyValue (DataStoreKeyValue)")
F.DataStoreKeyValue_key_len = ProtoField.uint16("DataStoreKeyValue_key_len", "key length (String)")
F.DataStoreKeyValue_key_data = ProtoField.string("DataStoreKeyValue_key_data", "key data (String)")
F.DataStoreKeyValue_value_len = ProtoField.uint16("DataStoreKeyValue_value_len", "value length (String)")
F.DataStoreKeyValue_value_data = ProtoField.string("DataStoreKeyValue_value_data", "value data (String)")
F.PrincipalBasicInfo = ProtoField.bytes("PrincipalBasicInfo", "PrincipalBasicInfo (PrincipalBasicInfo)")
F.PrincipalBasicInfo_Pid = ProtoField.uint32("PrincipalBasicInfo_Pid", "Pid (uint32)")
F.PrincipalBasicInfo_NNID_len = ProtoField.uint16("PrincipalBasicInfo_NNID_len", "NNID length (String)")
F.PrincipalBasicInfo_NNID_data = ProtoField.string("PrincipalBasicInfo_NNID_data", "NNID data (String)")
F.PrincipalBasicInfo_Unknown = ProtoField.uint8("PrincipalBasicInfo_Unknown", "Unknown (uint8)")
F.CalicoRegularStats = ProtoField.bytes("CalicoRegularStats", "CalicoRegularStats (CalicoRegularStats)")
F.CalicoRegularStats_myTeamPercentage = ProtoField.int32("CalicoRegularStats_myTeamPercentage", "myTeamPercentage (uint32)")
F.CalicoRegularStats_otherTeamPercentage = ProtoField.int32("CalicoRegularStats_otherTeamPercentage", "otherTeamPercentage (uint32)")
F.CalicoRegularStats_winMeter = ProtoField.int32("CalicoRegularStats_winMeter", "winMeter (uint32)")
F.StageTimeAttackWeapon = ProtoField.bytes("StageTimeAttackWeapon", "StageTimeAttackWeapon (StageTimeAttackWeapon)")
F.StageTimeAttackWeapon_weaponLevel = ProtoField.int32("StageTimeAttackWeapon_weaponLevel", "weaponLevel (uint32)")
F.StageTimeAttackWeapon_clearTime = ProtoField.int32("StageTimeAttackWeapon_clearTime", "clearTime (uint32)")
F.Gathering = ProtoField.bytes("Gathering", "Gathering (Gathering)")
F.Gathering_m_idMyself = ProtoField.uint32("Gathering_m_idMyself", "m_idMyself (uint32)")
F.Gathering_m_pidOwner = ProtoField.uint32("Gathering_m_pidOwner", "m_pidOwner (uint32)")
F.Gathering_m_pidHost = ProtoField.uint32("Gathering_m_pidHost", "m_pidHost (uint32)")
F.Gathering_m_uiMinParticipants = ProtoField.uint16("Gathering_m_uiMinParticipants", "m_uiMinParticipants (uint16)")
F.Gathering_m_uiMaxParticipants = ProtoField.uint16("Gathering_m_uiMaxParticipants", "m_uiMaxParticipants (uint16)")
F.Gathering_m_uiParticipationPolicy = ProtoField.uint32("Gathering_m_uiParticipationPolicy", "m_uiParticipationPolicy (uint32)")
F.Gathering_m_uiPolicyArgument = ProtoField.uint32("Gathering_m_uiPolicyArgument", "m_uiPolicyArgument (uint32)")
F.Gathering_m_uiFlags = ProtoField.uint32("Gathering_m_uiFlags", "m_uiFlags (uint32)")
F.Gathering_m_uiState = ProtoField.uint32("Gathering_m_uiState", "m_uiState (uint32)")
F.Gathering_m_strDescription_len = ProtoField.uint16("Gathering_m_strDescription_len", "m_strDescription length (String)")
F.Gathering_m_strDescription_data = ProtoField.string("Gathering_m_strDescription_data", "m_strDescription data (String)")
F.MatchmakeParam = ProtoField.bytes("MatchmakeParam", "MatchmakeParam (MatchmakeParam)")
F.MatchmakeParam_m_Params_len = ProtoField.uint32("MatchmakeParam_m_Params_len", "m_Params length (uint32)")
F.MatchmakeParam_m_Params_key_len = ProtoField.uint16("MatchmakeParam_m_Params_key_len", "m_Params length (String)")
F.MatchmakeParam_m_Params_key_data = ProtoField.string("MatchmakeParam_m_Params_key_data", "m_Params data (String)")
F.PlayerStatSet = ProtoField.bytes("PlayerStatSet", "PlayerStatSet (PlayerStatSet)")
F.PlayerStatSet_m_playerPID = ProtoField.uint32("PlayerStatSet_m_playerPID", "m_playerPID (uint32)")
F.PlayerStatSet_m_playerName_len = ProtoField.uint16("PlayerStatSet_m_playerName_len", "m_playerName length (String)")
F.PlayerStatSet_m_playerName_data = ProtoField.string("PlayerStatSet_m_playerName_data", "m_playerName data (String)")
F.PlayerStatSet_m_submittedTime = ProtoField.uint64("PlayerStatSet_m_submittedTime", "m_submittedTime (uint64)")
F.PlayerStatSet_m_stats_len = ProtoField.uint32("PlayerStatSet_m_stats_len", "m_stats length (uint32)")
F.UplaySectionContentLocalized = ProtoField.bytes("UplaySectionContentLocalized", "UplaySectionContentLocalized (UplaySectionContentLocalized)")
F.UplaySectionContentLocalized_m_key_len = ProtoField.uint16("UplaySectionContentLocalized_m_key_len", "m_key length (String)")
F.UplaySectionContentLocalized_m_key_data = ProtoField.string("UplaySectionContentLocalized_m_key_data", "m_key data (String)")
F.UplaySectionContentLocalized_m_culture_len = ProtoField.uint16("UplaySectionContentLocalized_m_culture_len", "m_culture length (String)")
F.UplaySectionContentLocalized_m_culture_data = ProtoField.string("UplaySectionContentLocalized_m_culture_data", "m_culture data (String)")
F.UplaySectionContentLocalized_m_text_len = ProtoField.uint16("UplaySectionContentLocalized_m_text_len", "m_text length (String)")
F.UplaySectionContentLocalized_m_text_data = ProtoField.string("UplaySectionContentLocalized_m_text_data", "m_text data (String)")
F.UplaySectionContentLocalized_m_url_len = ProtoField.uint16("UplaySectionContentLocalized_m_url_len", "m_url length (String)")
F.UplaySectionContentLocalized_m_url_data = ProtoField.string("UplaySectionContentLocalized_m_url_data", "m_url data (String)")
F.UplaySectionContentLocalized_m_duration = ProtoField.int32("UplaySectionContentLocalized_m_duration", "m_duration (uint32)")
F.UplaySectionContentLocalized_m_size_len = ProtoField.uint16("UplaySectionContentLocalized_m_size_len", "m_size length (String)")
F.UplaySectionContentLocalized_m_size_data = ProtoField.string("UplaySectionContentLocalized_m_size_data", "m_size data (String)")
F.UplaySectionContentLocalized_m_width_len = ProtoField.uint16("UplaySectionContentLocalized_m_width_len", "m_width length (String)")
F.UplaySectionContentLocalized_m_width_data = ProtoField.string("UplaySectionContentLocalized_m_width_data", "m_width data (String)")
F.UplaySectionContentLocalized_m_height_len = ProtoField.uint16("UplaySectionContentLocalized_m_height_len", "m_height length (String)")
F.UplaySectionContentLocalized_m_height_data = ProtoField.string("UplaySectionContentLocalized_m_height_data", "m_height data (String)")
F.LeaguePlayerDetail = ProtoField.bytes("LeaguePlayerDetail", "LeaguePlayerDetail (LeaguePlayerDetail)")
F.LeaguePlayerDetail_principalId = ProtoField.uint64("LeaguePlayerDetail_principalId", "principalId (uint64)")
F.LeaguePlayerDetail_weaponId = ProtoField.int32("LeaguePlayerDetail_weaponId", "weaponId (uint32)")
F.Mii = ProtoField.bytes("Mii", "Mii (Mii)")
F.Mii_Unknown_len = ProtoField.uint16("Mii_Unknown_len", "Unknown length (String)")
F.Mii_Unknown_data = ProtoField.string("Mii_Unknown_data", "Unknown data (String)")
F.Mii_Unknown2 = ProtoField.bool("Mii_Unknown2", "Unknown2 (bool)")
F.Mii_Unknown3 = ProtoField.uint8("Mii_Unknown3", "Unknown3 (uint8)")
F.Mii_Mii_data_len = ProtoField.uint32("Mii_Mii_data_len", "Mii_data length (Buffer)")
F.Mii_Mii_data_data = ProtoField.bytes("Mii_Mii_data_data", "Mii_data data (Buffer)")
F.GameKey = ProtoField.bytes("GameKey", "GameKey (GameKey)")
F.GameKey_Title_id = ProtoField.uint64("GameKey_Title_id", "Title_id (uint64)")
F.GameKey_Title_version = ProtoField.uint16("GameKey_Title_version", "Title_version (uint16)")
F.Ranking2CommonData = ProtoField.bytes("Ranking2CommonData", "Ranking2CommonData (Ranking2CommonData)")
F.Ranking2CommonData_userName_len = ProtoField.uint16("Ranking2CommonData_userName_len", "userName length (String)")
F.Ranking2CommonData_userName_data = ProtoField.string("Ranking2CommonData_userName_data", "userName data (String)")
F.Ranking2CommonData_mii_len = ProtoField.uint16("Ranking2CommonData_mii_len", "mii length (Buffer)")
F.Ranking2CommonData_mii_data = ProtoField.bytes("Ranking2CommonData_mii_data", "mii data (Buffer)")
F.Ranking2CommonData_binaryData_len = ProtoField.uint16("Ranking2CommonData_binaryData_len", "binaryData length (Buffer)")
F.Ranking2CommonData_binaryData_data = ProtoField.bytes("Ranking2CommonData_binaryData_data", "binaryData data (Buffer)")
F.UserMessage = ProtoField.bytes("UserMessage", "UserMessage (UserMessage)")
F.UserMessage_m_uiID = ProtoField.uint32("UserMessage_m_uiID", "m_uiID (uint32)")
F.UserMessage_m_uiParentID = ProtoField.uint32("UserMessage_m_uiParentID", "m_uiParentID (uint32)")
F.UserMessage_m_pidSender = ProtoField.uint32("UserMessage_m_pidSender", "m_pidSender (uint32)")
F.UserMessage_m_receptiontime = ProtoField.uint64("UserMessage_m_receptiontime", "m_receptiontime (uint64)")
F.UserMessage_m_uiLifeTime = ProtoField.uint32("UserMessage_m_uiLifeTime", "m_uiLifeTime (uint32)")
F.UserMessage_m_uiFlags = ProtoField.uint32("UserMessage_m_uiFlags", "m_uiFlags (uint32)")
F.UserMessage_m_strSubject_len = ProtoField.uint16("UserMessage_m_strSubject_len", "m_strSubject length (String)")
F.UserMessage_m_strSubject_data = ProtoField.string("UserMessage_m_strSubject_data", "m_strSubject data (String)")
F.UserMessage_m_strSender_len = ProtoField.uint16("UserMessage_m_strSender_len", "m_strSender length (String)")
F.UserMessage_m_strSender_data = ProtoField.string("UserMessage_m_strSender_data", "m_strSender data (String)")
F.DataStorePreparePostParam = ProtoField.bytes("DataStorePreparePostParam", "DataStorePreparePostParam (DataStorePreparePostParam)")
F.DataStorePreparePostParam_size = ProtoField.uint32("DataStorePreparePostParam_size", "size (uint32)")
F.DataStorePreparePostParam_name_len = ProtoField.uint16("DataStorePreparePostParam_name_len", "name length (String)")
F.DataStorePreparePostParam_name_data = ProtoField.string("DataStorePreparePostParam_name_data", "name data (String)")
F.DataStorePreparePostParam_dataType = ProtoField.uint16("DataStorePreparePostParam_dataType", "dataType (uint16)")
F.DataStorePreparePostParam_metaBinary_len = ProtoField.uint16("DataStorePreparePostParam_metaBinary_len", "metaBinary length (Buffer)")
F.DataStorePreparePostParam_metaBinary_data = ProtoField.bytes("DataStorePreparePostParam_metaBinary_data", "metaBinary data (Buffer)")
F.DataStorePreparePostParam_flag = ProtoField.uint32("DataStorePreparePostParam_flag", "flag (uint32)")
F.DataStorePreparePostParam_period = ProtoField.uint16("DataStorePreparePostParam_period", "period (uint16)")
F.DataStorePreparePostParam_referDataId = ProtoField.uint32("DataStorePreparePostParam_referDataId", "referDataId (uint32)")
F.DataStorePreparePostParam_tags_len = ProtoField.uint32("DataStorePreparePostParam_tags_len", "tags length (uint32)")
F.DataStorePreparePostParam_tags_item_len = ProtoField.uint16("DataStorePreparePostParam_tags_item_len", "tags length (String)")
F.DataStorePreparePostParam_tags_item_data = ProtoField.string("DataStorePreparePostParam_tags_item_data", "tags data (String)")
F.DataStorePreparePostParam_ratingInitParams_len = ProtoField.uint32("DataStorePreparePostParam_ratingInitParams_len", "ratingInitParams length (uint32)")
F.DataStorePreparePostParam_extraData_len = ProtoField.uint32("DataStorePreparePostParam_extraData_len", "extraData length (uint32)")
F.DataStorePreparePostParam_extraData_item_len = ProtoField.uint16("DataStorePreparePostParam_extraData_item_len", "extraData length (String)")
F.DataStorePreparePostParam_extraData_item_data = ProtoField.string("DataStorePreparePostParam_extraData_item_data", "extraData data (String)")
F.DataStoreMetaInfo = ProtoField.bytes("DataStoreMetaInfo", "DataStoreMetaInfo (DataStoreMetaInfo)")
F.DataStoreMetaInfo_dataId = ProtoField.uint64("DataStoreMetaInfo_dataId", "dataId (uint64)")
F.DataStoreMetaInfo_ownerId = ProtoField.uint32("DataStoreMetaInfo_ownerId", "ownerId (uint32)")
F.DataStoreMetaInfo_size = ProtoField.uint32("DataStoreMetaInfo_size", "size (uint32)")
F.DataStoreMetaInfo_name_len = ProtoField.uint16("DataStoreMetaInfo_name_len", "name length (String)")
F.DataStoreMetaInfo_name_data = ProtoField.string("DataStoreMetaInfo_name_data", "name data (String)")
F.DataStoreMetaInfo_dataType = ProtoField.uint16("DataStoreMetaInfo_dataType", "dataType (uint16)")
F.DataStoreMetaInfo_metaBinary_len = ProtoField.uint16("DataStoreMetaInfo_metaBinary_len", "metaBinary length (Buffer)")
F.DataStoreMetaInfo_metaBinary_data = ProtoField.bytes("DataStoreMetaInfo_metaBinary_data", "metaBinary data (Buffer)")
F.DataStoreMetaInfo_createdTime = ProtoField.uint64("DataStoreMetaInfo_createdTime", "createdTime (uint64)")
F.DataStoreMetaInfo_updatedTime = ProtoField.uint64("DataStoreMetaInfo_updatedTime", "updatedTime (uint64)")
F.DataStoreMetaInfo_period = ProtoField.uint16("DataStoreMetaInfo_period", "period (uint16)")
F.DataStoreMetaInfo_status = ProtoField.uint8("DataStoreMetaInfo_status", "status (uint8)")
F.DataStoreMetaInfo_referredCnt = ProtoField.uint32("DataStoreMetaInfo_referredCnt", "referredCnt (uint32)")
F.DataStoreMetaInfo_referDataId = ProtoField.uint32("DataStoreMetaInfo_referDataId", "referDataId (uint32)")
F.DataStoreMetaInfo_flag = ProtoField.uint32("DataStoreMetaInfo_flag", "flag (uint32)")
F.DataStoreMetaInfo_referredTime = ProtoField.uint64("DataStoreMetaInfo_referredTime", "referredTime (uint64)")
F.DataStoreMetaInfo_expireTime = ProtoField.uint64("DataStoreMetaInfo_expireTime", "expireTime (uint64)")
F.DataStoreMetaInfo_tags_len = ProtoField.uint32("DataStoreMetaInfo_tags_len", "tags length (uint32)")
F.DataStoreMetaInfo_tags_item_len = ProtoField.uint16("DataStoreMetaInfo_tags_item_len", "tags length (String)")
F.DataStoreMetaInfo_tags_item_data = ProtoField.string("DataStoreMetaInfo_tags_item_data", "tags data (String)")
F.DataStoreMetaInfo_ratings_len = ProtoField.uint32("DataStoreMetaInfo_ratings_len", "ratings length (uint32)")
F.DataStoreReqGetInfo = ProtoField.bytes("DataStoreReqGetInfo", "DataStoreReqGetInfo (DataStoreReqGetInfo)")
F.DataStoreReqGetInfo_url_len = ProtoField.uint16("DataStoreReqGetInfo_url_len", "url length (String)")
F.DataStoreReqGetInfo_url_data = ProtoField.string("DataStoreReqGetInfo_url_data", "url data (String)")
F.DataStoreReqGetInfo_requestHeaders_len = ProtoField.uint32("DataStoreReqGetInfo_requestHeaders_len", "requestHeaders length (uint32)")
F.DataStoreReqGetInfo_size = ProtoField.uint32("DataStoreReqGetInfo_size", "size (uint32)")
F.DataStoreReqGetInfo_rootCaCert_len = ProtoField.uint32("DataStoreReqGetInfo_rootCaCert_len", "rootCaCert length (Buffer)")
F.DataStoreReqGetInfo_rootCaCert_data = ProtoField.bytes("DataStoreReqGetInfo_rootCaCert_data", "rootCaCert data (Buffer)")
F.DataStoreReqGetInfo_dataId = ProtoField.uint64("DataStoreReqGetInfo_dataId", "dataId (uint64)")
F.DataStoreCustomRankingRatingCondition = ProtoField.bytes("DataStoreCustomRankingRatingCondition", "DataStoreCustomRankingRatingCondition (DataStoreCustomRankingRatingCondition)")
F.DataStoreCustomRankingRatingCondition_slot = ProtoField.int8("DataStoreCustomRankingRatingCondition_slot", "slot (uint8)")
F.DataStoreCustomRankingRatingCondition_minValue = ProtoField.int32("DataStoreCustomRankingRatingCondition_minValue", "minValue (uint32)")
F.DataStoreCustomRankingRatingCondition_maxValue = ProtoField.int32("DataStoreCustomRankingRatingCondition_maxValue", "maxValue (uint32)")
F.DataStoreCustomRankingRatingCondition_minCount = ProtoField.uint32("DataStoreCustomRankingRatingCondition_minCount", "minCount (uint32)")
F.DataStoreCustomRankingRatingCondition_maxCount = ProtoField.uint32("DataStoreCustomRankingRatingCondition_maxCount", "maxCount (uint32)")
F.NNAInfo = ProtoField.bytes("NNAInfo", "NNAInfo (NNAInfo)")
F.NNAInfo_Unknown = ProtoField.uint8("NNAInfo_Unknown", "Unknown (uint8)")
F.NNAInfo_Unknown2 = ProtoField.uint8("NNAInfo_Unknown2", "Unknown2 (uint8)")
F.CalicoFesStats = ProtoField.bytes("CalicoFesStats", "CalicoFesStats (CalicoFesStats)")
F.CalicoFesStats_fesId = ProtoField.uint32("CalicoFesStats_fesId", "fesId (uint32)")
F.CalicoFesStats_themeId = ProtoField.uint8("CalicoFesStats_themeId", "themeId (uint8)")
F.CalicoFesStats_fesGrade = ProtoField.int32("CalicoFesStats_fesGrade", "fesGrade (uint32)")
F.CalicoFesStats_fesPoint = ProtoField.int32("CalicoFesStats_fesPoint", "fesPoint (uint32)")
F.CalicoFesStats_fesPower = ProtoField.uint32("CalicoFesStats_fesPower", "fesPower (uint32)")
F.CalicoFesStats_maxFesPower = ProtoField.uint32("CalicoFesStats_maxFesPower", "maxFesPower (uint32)")
F.CalicoFesStats_myEstimateFesPower = ProtoField.int32("CalicoFesStats_myEstimateFesPower", "myEstimateFesPower (uint32)")
F.CalicoFesStats_otherEstimateFesPower = ProtoField.int32("CalicoFesStats_otherEstimateFesPower", "otherEstimateFesPower (uint32)")
F.CalicoGachiStats = ProtoField.bytes("CalicoGachiStats", "CalicoGachiStats (CalicoGachiStats)")
F.CalicoGachiStats_elapsedTime = ProtoField.int32("CalicoGachiStats_elapsedTime", "elapsedTime (uint32)")
F.CalicoGachiStats_myTeamCount = ProtoField.int8("CalicoGachiStats_myTeamCount", "myTeamCount (uint8)")
F.CalicoGachiStats_otherTeamCount = ProtoField.int8("CalicoGachiStats_otherTeamCount", "otherTeamCount (uint8)")
F.CalicoGachiStats_udemae = ProtoField.int32("CalicoGachiStats_udemae", "udemae (uint32)")
F.CalicoGachiStats_estimateGachiPower = ProtoField.int32("CalicoGachiStats_estimateGachiPower", "estimateGachiPower (uint32)")
F.CoconutMeta = ProtoField.bytes("CoconutMeta", "CoconutMeta (CoconutMeta)")
F.CoconutMeta_dataId = ProtoField.uint64("CoconutMeta_dataId", "dataId (uint64)")
F.CoconutMeta_tweetId = ProtoField.uint64("CoconutMeta_tweetId", "tweetId (uint64)")
F.CoconutMeta_region = ProtoField.uint8("CoconutMeta_region", "region (uint8)")
F.CoconutMeta_postType = ProtoField.uint8("CoconutMeta_postType", "postType (uint8)")
F.CoconutMeta_themeId = ProtoField.uint8("CoconutMeta_themeId", "themeId (uint8)")
F.CoconutMeta_festivalId = ProtoField.uint32("CoconutMeta_festivalId", "festivalId (uint32)")
F.CoconutMeta_language_len = ProtoField.uint16("CoconutMeta_language_len", "language length (String)")
F.CoconutMeta_language_data = ProtoField.string("CoconutMeta_language_data", "language data (String)")
F.CoconutMeta_binaryData_len = ProtoField.uint16("CoconutMeta_binaryData_len", "binaryData length (Buffer)")
F.CoconutMeta_binaryData_data = ProtoField.bytes("CoconutMeta_binaryData_data", "binaryData data (Buffer)")
F.PlayLogEntry = ProtoField.bytes("PlayLogEntry", "PlayLogEntry (PlayLogEntry)")
F.PlayLogEntry_User_id = ProtoField.uint32("PlayLogEntry_User_id", "User_id (uint32)")
F.PlayLogEntry_Player_name_len = ProtoField.uint16("PlayLogEntry_Player_name_len", "Player_name length (String)")
F.PlayLogEntry_Player_name_data = ProtoField.string("PlayLogEntry_Player_name_data", "Player_name data (String)")
F.PlayLogEntry_Unknown = ProtoField.uint64("PlayLogEntry_Unknown", "Unknown (uint64)")
F.PlayLogEntry_Properties_len = ProtoField.uint32("PlayLogEntry_Properties_len", "Properties length (uint32)")
F.PlayLogEntry_Properties_key_len = ProtoField.uint16("PlayLogEntry_Properties_key_len", "Properties length (String)")
F.PlayLogEntry_Properties_key_data = ProtoField.string("PlayLogEntry_Properties_key_data", "Properties data (String)")
F.StageTimeAttackInfo = ProtoField.bytes("StageTimeAttackInfo", "StageTimeAttackInfo (StageTimeAttackInfo)")
F.StageTimeAttackInfo_clearWeapons_len = ProtoField.uint32("StageTimeAttackInfo_clearWeapons_len", "clearWeapons length (uint32)")
F.StageTimeAttackInfo_clearWeapons_key = ProtoField.int32("StageTimeAttackInfo_clearWeapons_key", "clearWeapons (uint32)")
F.MatchmakeSession = ProtoField.bytes("MatchmakeSession", "MatchmakeSession (MatchmakeSession)")
F.MatchmakeSession_m_GameMode = ProtoField.uint32("MatchmakeSession_m_GameMode", "m_GameMode (uint32)")
F.MatchmakeSession_m_Attribs_len = ProtoField.uint32("MatchmakeSession_m_Attribs_len", "m_Attribs length (uint32)")
F.MatchmakeSession_m_Attribs_item = ProtoField.uint32("MatchmakeSession_m_Attribs_item", "m_Attribs (uint32)")
F.MatchmakeSession_m_OpenParticipation = ProtoField.bool("MatchmakeSession_m_OpenParticipation", "m_OpenParticipation (bool)")
F.MatchmakeSession_m_MatchmakeSystemType = ProtoField.uint32("MatchmakeSession_m_MatchmakeSystemType", "m_MatchmakeSystemType (uint32)")
F.MatchmakeSession_m_ApplicationBuffer_len = ProtoField.uint32("MatchmakeSession_m_ApplicationBuffer_len", "m_ApplicationBuffer length (Buffer)")
F.MatchmakeSession_m_ApplicationBuffer_data = ProtoField.bytes("MatchmakeSession_m_ApplicationBuffer_data", "m_ApplicationBuffer data (Buffer)")
F.MatchmakeSession_m_ParticipationCount = ProtoField.uint32("MatchmakeSession_m_ParticipationCount", "m_ParticipationCount (uint32)")
F.MatchmakeSession_m_ProgressScore = ProtoField.uint8("MatchmakeSession_m_ProgressScore", "m_ProgressScore (uint8)")
F.MatchmakeSession_m_SessionKey_len = ProtoField.uint32("MatchmakeSession_m_SessionKey_len", "m_SessionKey length (Buffer)")
F.MatchmakeSession_m_SessionKey_data = ProtoField.bytes("MatchmakeSession_m_SessionKey_data", "m_SessionKey data (Buffer)")
F.MatchmakeSession_m_Option0 = ProtoField.uint32("MatchmakeSession_m_Option0", "m_Option0 (uint32)")
F.MatchmakeSession_m_StartedTime = ProtoField.uint64("MatchmakeSession_m_StartedTime", "m_StartedTime (uint64)")
F.MatchmakeSession_m_UserPassword_len = ProtoField.uint16("MatchmakeSession_m_UserPassword_len", "m_UserPassword length (String)")
F.MatchmakeSession_m_UserPassword_data = ProtoField.string("MatchmakeSession_m_UserPassword_data", "m_UserPassword data (String)")
F.MatchmakeSession_m_ReferGid = ProtoField.uint32("MatchmakeSession_m_ReferGid", "m_ReferGid (uint32)")
F.MatchmakeSession_m_UserPasswordEnabled = ProtoField.bool("MatchmakeSession_m_UserPasswordEnabled", "m_UserPasswordEnabled (bool)")
F.MatchmakeSession_m_SystemPasswordEnabled = ProtoField.bool("MatchmakeSession_m_SystemPasswordEnabled", "m_SystemPasswordEnabled (bool)")
F.MatchmakeSession_m_Codeword_len = ProtoField.uint16("MatchmakeSession_m_Codeword_len", "m_Codeword length (String)")
F.MatchmakeSession_m_Codeword_data = ProtoField.string("MatchmakeSession_m_Codeword_data", "m_Codeword data (String)")
F.MatchmakeBlockListParam = ProtoField.bytes("MatchmakeBlockListParam", "MatchmakeBlockListParam (MatchmakeBlockListParam)")
F.MatchmakeBlockListParam_optionFlag = ProtoField.uint32("MatchmakeBlockListParam_optionFlag", "optionFlag (uint32)")
F.MatchmakeSessionSearchCriteria = ProtoField.bytes("MatchmakeSessionSearchCriteria", "MatchmakeSessionSearchCriteria (MatchmakeSessionSearchCriteria)")
F.MatchmakeSessionSearchCriteria_m_Attribs_len = ProtoField.uint32("MatchmakeSessionSearchCriteria_m_Attribs_len", "m_Attribs length (uint32)")
F.MatchmakeSessionSearchCriteria_m_Attribs_item_len = ProtoField.uint16("MatchmakeSessionSearchCriteria_m_Attribs_item_len", "m_Attribs length (String)")
F.MatchmakeSessionSearchCriteria_m_Attribs_item_data = ProtoField.string("MatchmakeSessionSearchCriteria_m_Attribs_item_data", "m_Attribs data (String)")
F.MatchmakeSessionSearchCriteria_m_GameMode_len = ProtoField.uint16("MatchmakeSessionSearchCriteria_m_GameMode_len", "m_GameMode length (String)")
F.MatchmakeSessionSearchCriteria_m_GameMode_data = ProtoField.string("MatchmakeSessionSearchCriteria_m_GameMode_data", "m_GameMode data (String)")
F.MatchmakeSessionSearchCriteria_m_MinParticipants_len = ProtoField.uint16("MatchmakeSessionSearchCriteria_m_MinParticipants_len", "m_MinParticipants length (String)")
F.MatchmakeSessionSearchCriteria_m_MinParticipants_data = ProtoField.string("MatchmakeSessionSearchCriteria_m_MinParticipants_data", "m_MinParticipants data (String)")
F.MatchmakeSessionSearchCriteria_m_MaxParticipants_len = ProtoField.uint16("MatchmakeSessionSearchCriteria_m_MaxParticipants_len", "m_MaxParticipants length (String)")
F.MatchmakeSessionSearchCriteria_m_MaxParticipants_data = ProtoField.string("MatchmakeSessionSearchCriteria_m_MaxParticipants_data", "m_MaxParticipants data (String)")
F.MatchmakeSessionSearchCriteria_m_MatchmakeSystemType_len = ProtoField.uint16("MatchmakeSessionSearchCriteria_m_MatchmakeSystemType_len", "m_MatchmakeSystemType length (String)")
F.MatchmakeSessionSearchCriteria_m_MatchmakeSystemType_data = ProtoField.string("MatchmakeSessionSearchCriteria_m_MatchmakeSystemType_data", "m_MatchmakeSystemType data (String)")
F.MatchmakeSessionSearchCriteria_m_VacantOnly = ProtoField.bool("MatchmakeSessionSearchCriteria_m_VacantOnly", "m_VacantOnly (bool)")
F.MatchmakeSessionSearchCriteria_m_ExcludeLocked = ProtoField.bool("MatchmakeSessionSearchCriteria_m_ExcludeLocked", "m_ExcludeLocked (bool)")
F.MatchmakeSessionSearchCriteria_m_ExcludeNonHostPid = ProtoField.bool("MatchmakeSessionSearchCriteria_m_ExcludeNonHostPid", "m_ExcludeNonHostPid (bool)")
F.MatchmakeSessionSearchCriteria_m_SelectionMethod = ProtoField.uint32("MatchmakeSessionSearchCriteria_m_SelectionMethod", "m_SelectionMethod (uint32)")
F.MatchmakeSessionSearchCriteria_m_VacantParticipants = ProtoField.uint16("MatchmakeSessionSearchCriteria_m_VacantParticipants", "m_VacantParticipants (uint16)")
F.MatchmakeSessionSearchCriteria_m_ExcludeUserPasswordSet = ProtoField.bool("MatchmakeSessionSearchCriteria_m_ExcludeUserPasswordSet", "m_ExcludeUserPasswordSet (bool)")
F.MatchmakeSessionSearchCriteria_m_ExcludeSystemPasswordSet = ProtoField.bool("MatchmakeSessionSearchCriteria_m_ExcludeSystemPasswordSet", "m_ExcludeSystemPasswordSet (bool)")
F.MatchmakeSessionSearchCriteria_m_ReferGid = ProtoField.uint32("MatchmakeSessionSearchCriteria_m_ReferGid", "m_ReferGid (uint32)")
F.MatchmakeSessionSearchCriteria_m_Codeword_len = ProtoField.uint16("MatchmakeSessionSearchCriteria_m_Codeword_len", "m_Codeword length (String)")
F.MatchmakeSessionSearchCriteria_m_Codeword_data = ProtoField.string("MatchmakeSessionSearchCriteria_m_Codeword_data", "m_Codeword data (String)")
F.PlayerStatSortCriteria = ProtoField.bytes("PlayerStatSortCriteria", "PlayerStatSortCriteria (PlayerStatSortCriteria)")
F.PlayerStatSortCriteria_m_sortStatID = ProtoField.uint32("PlayerStatSortCriteria_m_sortStatID", "m_sortStatID (uint32)")
F.PlayerStatSortCriteria_m_sortOrder = ProtoField.uint32("PlayerStatSortCriteria_m_sortOrder", "m_sortOrder (uint32)")
F.PlayerRank = ProtoField.bytes("PlayerRank", "PlayerRank (PlayerRank)")
F.PlayerRank_m_rankStatus = ProtoField.uint32("PlayerRank_m_rankStatus", "m_rankStatus (uint32)")
F.PlayerRank_m_rank = ProtoField.uint32("PlayerRank_m_rank", "m_rank (uint32)")
F.DateRange = ProtoField.bytes("DateRange", "DateRange (DateRange)")
F.DateRange_m_startingDatetime = ProtoField.uint64("DateRange_m_startingDatetime", "m_startingDatetime (uint64)")
F.DateRange_m_endingDatetime = ProtoField.uint64("DateRange_m_endingDatetime", "m_endingDatetime (uint64)")
F.UplayActionPlatform = ProtoField.bytes("UplayActionPlatform", "UplayActionPlatform (UplayActionPlatform)")
F.UplayActionPlatform_m_platformCode_len = ProtoField.uint16("UplayActionPlatform_m_platformCode_len", "m_platformCode length (String)")
F.UplayActionPlatform_m_platformCode_data = ProtoField.string("UplayActionPlatform_m_platformCode_data", "m_platformCode data (String)")
F.UplayActionPlatform_m_completed = ProtoField.bool("UplayActionPlatform_m_completed", "m_completed (bool)")
F.UplayActionPlatform_m_specificKey_len = ProtoField.uint16("UplayActionPlatform_m_specificKey_len", "m_specificKey length (String)")
F.UplayActionPlatform_m_specificKey_data = ProtoField.string("UplayActionPlatform_m_specificKey_data", "m_specificKey data (String)")
F.UplayRewardPlatform = ProtoField.bytes("UplayRewardPlatform", "UplayRewardPlatform (UplayRewardPlatform)")
F.UplayRewardPlatform_m_platformCode_len = ProtoField.uint16("UplayRewardPlatform_m_platformCode_len", "m_platformCode length (String)")
F.UplayRewardPlatform_m_platformCode_data = ProtoField.string("UplayRewardPlatform_m_platformCode_data", "m_platformCode data (String)")
F.UplayRewardPlatform_m_purchased = ProtoField.bool("UplayRewardPlatform_m_purchased", "m_purchased (bool)")
F.UplaySectionContent = ProtoField.bytes("UplaySectionContent", "UplaySectionContent (UplaySectionContent)")
F.UplaySectionContent_m_key_len = ProtoField.uint16("UplaySectionContent_m_key_len", "m_key length (String)")
F.UplaySectionContent_m_key_data = ProtoField.string("UplaySectionContent_m_key_data", "m_key data (String)")
F.UplaySectionContent_m_name_len = ProtoField.uint16("UplaySectionContent_m_name_len", "m_name length (String)")
F.UplaySectionContent_m_name_data = ProtoField.string("UplaySectionContent_m_name_data", "m_name data (String)")
F.UplaySectionContent_m_order = ProtoField.int16("UplaySectionContent_m_order", "m_order (uint16)")
F.UplaySectionContent_m_typeName_len = ProtoField.uint16("UplaySectionContent_m_typeName_len", "m_typeName length (String)")
F.UplaySectionContent_m_typeName_data = ProtoField.string("UplaySectionContent_m_typeName_data", "m_typeName data (String)")
F.DataStorePersistenceTarget = ProtoField.bytes("DataStorePersistenceTarget", "DataStorePersistenceTarget (DataStorePersistenceTarget)")
F.DataStorePersistenceTarget_ownerId = ProtoField.uint32("DataStorePersistenceTarget_ownerId", "ownerId (uint32)")
F.DataStorePersistenceTarget_persistenceSlotId = ProtoField.uint16("DataStorePersistenceTarget_persistenceSlotId", "persistenceSlotId (uint16)")
F.DataStoreChangeMetaCompareParam = ProtoField.bytes("DataStoreChangeMetaCompareParam", "DataStoreChangeMetaCompareParam (DataStoreChangeMetaCompareParam)")
F.DataStoreChangeMetaCompareParam_comparisonFlag = ProtoField.uint32("DataStoreChangeMetaCompareParam_comparisonFlag", "comparisonFlag (uint32)")
F.DataStoreChangeMetaCompareParam_name_len = ProtoField.uint16("DataStoreChangeMetaCompareParam_name_len", "name length (String)")
F.DataStoreChangeMetaCompareParam_name_data = ProtoField.string("DataStoreChangeMetaCompareParam_name_data", "name data (String)")
F.DataStoreChangeMetaCompareParam_period = ProtoField.uint16("DataStoreChangeMetaCompareParam_period", "period (uint16)")
F.DataStoreChangeMetaCompareParam_metaBinary_len = ProtoField.uint16("DataStoreChangeMetaCompareParam_metaBinary_len", "metaBinary length (Buffer)")
F.DataStoreChangeMetaCompareParam_metaBinary_data = ProtoField.bytes("DataStoreChangeMetaCompareParam_metaBinary_data", "metaBinary data (Buffer)")
F.DataStoreChangeMetaCompareParam_tags_len = ProtoField.uint32("DataStoreChangeMetaCompareParam_tags_len", "tags length (uint32)")
F.DataStoreChangeMetaCompareParam_tags_item_len = ProtoField.uint16("DataStoreChangeMetaCompareParam_tags_item_len", "tags length (String)")
F.DataStoreChangeMetaCompareParam_tags_item_data = ProtoField.string("DataStoreChangeMetaCompareParam_tags_item_data", "tags data (String)")
F.DataStoreChangeMetaCompareParam_referredCnt = ProtoField.uint32("DataStoreChangeMetaCompareParam_referredCnt", "referredCnt (uint32)")
F.DataStoreChangeMetaCompareParam_dataType = ProtoField.uint16("DataStoreChangeMetaCompareParam_dataType", "dataType (uint16)")
F.DataStoreChangeMetaCompareParam_status = ProtoField.uint8("DataStoreChangeMetaCompareParam_status", "status (uint8)")
F.UserContentKey = ProtoField.bytes("UserContentKey", "UserContentKey (UserContentKey)")
F.UserContentKey_m_typeID = ProtoField.uint32("UserContentKey_m_typeID", "m_typeID (uint32)")
F.UserContentKey_m_contentID = ProtoField.uint64("UserContentKey_m_contentID", "m_contentID (uint64)")
F.ContentProperty = ProtoField.bytes("ContentProperty", "ContentProperty (ContentProperty)")
F.ContentProperty_m_ID = ProtoField.uint32("ContentProperty_m_ID", "m_ID (uint32)")
F.RankingRankData = ProtoField.bytes("RankingRankData", "RankingRankData (RankingRankData)")
F.RankingRankData_principalId = ProtoField.uint32("RankingRankData_principalId", "principalId (uint32)")
F.RankingRankData_uniqueId = ProtoField.uint64("RankingRankData_uniqueId", "uniqueId (uint64)")
F.RankingRankData_order = ProtoField.uint32("RankingRankData_order", "order (uint32)")
F.RankingRankData_category = ProtoField.uint32("RankingRankData_category", "category (uint32)")
F.RankingRankData_score = ProtoField.uint32("RankingRankData_score", "score (uint32)")
F.RankingRankData_groups_len = ProtoField.uint32("RankingRankData_groups_len", "groups length (uint32)")
F.RankingRankData_groups_item = ProtoField.uint8("RankingRankData_groups_item", "groups (uint8)")
F.RankingRankData_param = ProtoField.uint64("RankingRankData_param", "param (uint64)")
F.RankingRankData_commonData_len = ProtoField.uint32("RankingRankData_commonData_len", "commonData length (Buffer)")
F.RankingRankData_commonData_data = ProtoField.bytes("RankingRankData_commonData_data", "commonData data (Buffer)")
F.NotificationEvent = ProtoField.bytes("NotificationEvent", "NotificationEvent (NotificationEvent)")
F.NotificationEvent_m_pidSource = ProtoField.uint32("NotificationEvent_m_pidSource", "m_pidSource (uint32)")
F.NotificationEvent_m_uiType = ProtoField.uint32("NotificationEvent_m_uiType", "m_uiType (uint32)")
F.NotificationEvent_m_uiParam1 = ProtoField.uint32("NotificationEvent_m_uiParam1", "m_uiParam1 (uint32)")
F.NotificationEvent_m_uiParam2 = ProtoField.uint32("NotificationEvent_m_uiParam2", "m_uiParam2 (uint32)")
F.NotificationEvent_m_strParam_len = ProtoField.uint16("NotificationEvent_m_strParam_len", "m_strParam length (String)")
F.NotificationEvent_m_strParam_data = ProtoField.string("NotificationEvent_m_strParam_data", "m_strParam data (String)")
F.NotificationEvent_m_pidSource2 = ProtoField.uint32("NotificationEvent_m_pidSource2", "m_pidSource2 (uint32)")
F.NotificationEvent_m_uiType2 = ProtoField.uint32("NotificationEvent_m_uiType2", "m_uiType2 (uint32)")
F.NotificationEvent_m_uiParam12 = ProtoField.uint64("NotificationEvent_m_uiParam12", "m_uiParam12 (uint64)")
F.NotificationEvent_m_uiParam22 = ProtoField.uint64("NotificationEvent_m_uiParam22", "m_uiParam22 (uint64)")
F.NotificationEvent_m_strParam2_len = ProtoField.uint16("NotificationEvent_m_strParam2_len", "m_strParam2 length (String)")
F.NotificationEvent_m_strParam2_data = ProtoField.string("NotificationEvent_m_strParam2_data", "m_strParam2 data (String)")
F.NotificationEvent_m_uiParam3 = ProtoField.uint64("NotificationEvent_m_uiParam3", "m_uiParam3 (uint64)")
F.NotificationEvent_m_mapParam_len = ProtoField.uint32("NotificationEvent_m_mapParam_len", "m_mapParam length (uint32)")
F.NotificationEvent_m_mapParam_key_len = ProtoField.uint16("NotificationEvent_m_mapParam_key_len", "m_mapParam length (String)")
F.NotificationEvent_m_mapParam_key_data = ProtoField.string("NotificationEvent_m_mapParam_key_data", "m_mapParam data (String)")
F.LeaguePointInfo = ProtoField.bytes("LeaguePointInfo", "LeaguePointInfo (LeaguePointInfo)")
F.LeaguePointInfo_tagId = ProtoField.uint64("LeaguePointInfo_tagId", "tagId (uint64)")
F.LeaguePointInfo_regionFlag = ProtoField.uint8("LeaguePointInfo_regionFlag", "regionFlag (uint8)")
F.LeaguePointInfo_leagueId_len = ProtoField.uint16("LeaguePointInfo_leagueId_len", "leagueId length (String)")
F.LeaguePointInfo_leagueId_data = ProtoField.string("LeaguePointInfo_leagueId_data", "leagueId data (String)")
F.LeaguePointInfo_point = ProtoField.uint32("LeaguePointInfo_point", "point (uint32)")
F.LeaguePointInfo_tagMembers_len = ProtoField.uint32("LeaguePointInfo_tagMembers_len", "tagMembers length (uint32)")
F.LeaguePointInfo_tagMembers_key = ProtoField.uint64("LeaguePointInfo_tagMembers_key", "tagMembers (uint64)")
F.LeaguePointInfo_applicationBuffer_len = ProtoField.uint16("LeaguePointInfo_applicationBuffer_len", "applicationBuffer length (Buffer)")
F.LeaguePointInfo_applicationBuffer_data = ProtoField.bytes("LeaguePointInfo_applicationBuffer_data", "applicationBuffer data (Buffer)")
F.FriendMii = ProtoField.bytes("FriendMii", "FriendMii (FriendMii)")
F.FriendMii_Unknown = ProtoField.uint32("FriendMii_Unknown", "Unknown (uint32)")
F.FriendMii_Unknown2 = ProtoField.uint64("FriendMii_Unknown2", "Unknown2 (uint64)")
F.MiiList = ProtoField.bytes("MiiList", "MiiList (MiiList)")
F.MiiList_Unknown_len = ProtoField.uint16("MiiList_Unknown_len", "Unknown length (String)")
F.MiiList_Unknown_data = ProtoField.string("MiiList_Unknown_data", "Unknown data (String)")
F.MiiList_Unknown2 = ProtoField.bool("MiiList_Unknown2", "Unknown2 (bool)")
F.MiiList_Unknown3 = ProtoField.uint8("MiiList_Unknown3", "Unknown3 (uint8)")
F.MiiList_Mii_data_list_len = ProtoField.uint32("MiiList_Mii_data_list_len", "Mii_data_list length (uint32)")
F.MiiList_Mii_data_list_item_len = ProtoField.uint32("MiiList_Mii_data_list_item_len", "Mii_data_list length (Buffer)")
F.MiiList_Mii_data_list_item_data = ProtoField.bytes("MiiList_Mii_data_list_item_data", "Mii_data_list data (Buffer)")
F.NintendoPresence = ProtoField.bytes("NintendoPresence", "NintendoPresence (NintendoPresence)")
F.NintendoPresence_m_changedBitFlag = ProtoField.uint32("NintendoPresence_m_changedBitFlag", "m_changedBitFlag (uint32)")
F.NintendoPresence_m_gameModeDescription_len = ProtoField.uint16("NintendoPresence_m_gameModeDescription_len", "m_gameModeDescription length (String)")
F.NintendoPresence_m_gameModeDescription_data = ProtoField.string("NintendoPresence_m_gameModeDescription_data", "m_gameModeDescription data (String)")
F.NintendoPresence_m_joinAvailabilityFlag = ProtoField.uint32("NintendoPresence_m_joinAvailabilityFlag", "m_joinAvailabilityFlag (uint32)")
F.NintendoPresence_m_matchmakeSystemType = ProtoField.uint8("NintendoPresence_m_matchmakeSystemType", "m_matchmakeSystemType (uint8)")
F.NintendoPresence_m_joinGameID = ProtoField.uint32("NintendoPresence_m_joinGameID", "m_joinGameID (uint32)")
F.NintendoPresence_m_joinGameMode = ProtoField.uint32("NintendoPresence_m_joinGameMode", "m_joinGameMode (uint32)")
F.NintendoPresence_m_ownerPrincipalID = ProtoField.uint32("NintendoPresence_m_ownerPrincipalID", "m_ownerPrincipalID (uint32)")
F.NintendoPresence_m_joinGroupID = ProtoField.uint32("NintendoPresence_m_joinGroupID", "m_joinGroupID (uint32)")
F.NintendoPresence_m_applicationArg_len = ProtoField.uint32("NintendoPresence_m_applicationArg_len", "m_applicationArg length (Buffer)")
F.NintendoPresence_m_applicationArg_data = ProtoField.bytes("NintendoPresence_m_applicationArg_data", "m_applicationArg data (Buffer)")
F.CommentPictureReqGetInfoWithoutHeaders = ProtoField.bytes("CommentPictureReqGetInfoWithoutHeaders", "CommentPictureReqGetInfoWithoutHeaders (CommentPictureReqGetInfoWithoutHeaders)")
F.CommentPictureReqGetInfoWithoutHeaders_Url_len = ProtoField.uint16("CommentPictureReqGetInfoWithoutHeaders_Url_len", "Url length (String)")
F.CommentPictureReqGetInfoWithoutHeaders_Url_data = ProtoField.string("CommentPictureReqGetInfoWithoutHeaders_Url_data", "Url data (String)")
F.CommentPictureReqGetInfoWithoutHeaders_Relation_data_type = ProtoField.uint8("CommentPictureReqGetInfoWithoutHeaders_Relation_data_type", "Relation_data_type (uint8)")
F.CommentPictureReqGetInfoWithoutHeaders_Filesize = ProtoField.uint32("CommentPictureReqGetInfoWithoutHeaders_Filesize", "Filesize (uint32)")
F.CommentPictureReqGetInfoWithoutHeaders_Root_ca_cert_len = ProtoField.uint32("CommentPictureReqGetInfoWithoutHeaders_Root_ca_cert_len", "Root_ca_cert length (Buffer)")
F.CommentPictureReqGetInfoWithoutHeaders_Root_ca_cert_data = ProtoField.bytes("CommentPictureReqGetInfoWithoutHeaders_Root_ca_cert_data", "Root_ca_cert data (Buffer)")
F.CommentPictureReqGetInfoWithoutHeaders_Filename_len = ProtoField.uint16("CommentPictureReqGetInfoWithoutHeaders_Filename_len", "Filename length (String)")
F.CommentPictureReqGetInfoWithoutHeaders_Filename_data = ProtoField.string("CommentPictureReqGetInfoWithoutHeaders_Filename_data", "Filename data (String)")
F.PreparePostCourseParam = ProtoField.bytes("PreparePostCourseParam", "PreparePostCourseParam (PreparePostCourseParam)")
F.PreparePostCourseParam_Unknown_len = ProtoField.uint16("PreparePostCourseParam_Unknown_len", "Unknown length (String)")
F.PreparePostCourseParam_Unknown_data = ProtoField.string("PreparePostCourseParam_Unknown_data", "Unknown data (String)")
F.PreparePostCourseParam_Unknown2_len = ProtoField.uint16("PreparePostCourseParam_Unknown2_len", "Unknown2 length (String)")
F.PreparePostCourseParam_Unknown2_data = ProtoField.string("PreparePostCourseParam_Unknown2_data", "Unknown2 data (String)")
F.PreparePostCourseParam_Unknown3 = ProtoField.uint32("PreparePostCourseParam_Unknown3", "Unknown3 (uint32)")
F.PreparePostCourseParam_Unknown4 = ProtoField.bool("PreparePostCourseParam_Unknown4", "Unknown4 (bool)")
F.PreparePostCourseParam_Unknown5 = ProtoField.uint8("PreparePostCourseParam_Unknown5", "Unknown5 (uint8)")
F.PreparePostCourseParam_Unknown6 = ProtoField.uint8("PreparePostCourseParam_Unknown6", "Unknown6 (uint8)")
F.PreparePostCourseParam_Unknown7 = ProtoField.uint32("PreparePostCourseParam_Unknown7", "Unknown7 (uint32)")
F.PreparePostCourseParam_Unknown8 = ProtoField.uint32("PreparePostCourseParam_Unknown8", "Unknown8 (uint32)")
F.PreparePostCourseParam_Unknown9 = ProtoField.uint32("PreparePostCourseParam_Unknown9", "Unknown9 (uint32)")
F.PreparePostCourseParam_Unknown10 = ProtoField.uint32("PreparePostCourseParam_Unknown10", "Unknown10 (uint32)")
F.PreparePostCourseParam_Unknown11_len = ProtoField.uint16("PreparePostCourseParam_Unknown11_len", "Unknown11 length (Buffer)")
F.PreparePostCourseParam_Unknown11_data = ProtoField.bytes("PreparePostCourseParam_Unknown11_data", "Unknown11 data (Buffer)")
F.PreparePostCourseParam_Unknown12 = ProtoField.uint8("PreparePostCourseParam_Unknown12", "Unknown12 (uint8)")
F.PreparePostCourseParam_Unknown13 = ProtoField.uint32("PreparePostCourseParam_Unknown13", "Unknown13 (uint32)")
F.PreparePostCourseParam_Unknown14 = ProtoField.uint16("PreparePostCourseParam_Unknown14", "Unknown14 (uint16)")
F.PreparePostCourseParam_Unknown15 = ProtoField.uint16("PreparePostCourseParam_Unknown15", "Unknown15 (uint16)")
F.PreparePostCourseParam_Unknown16 = ProtoField.bool("PreparePostCourseParam_Unknown16", "Unknown16 (bool)")
F.PreparePostCourseParam_Unknown17 = ProtoField.uint32("PreparePostCourseParam_Unknown17", "Unknown17 (uint32)")
F.PreparePostCourseParam_Unknown18 = ProtoField.uint32("PreparePostCourseParam_Unknown18", "Unknown18 (uint32)")
F.PreparePostCourseParam_Unknown19_len = ProtoField.uint32("PreparePostCourseParam_Unknown19_len", "Unknown19 length (uint32)")
F.PreparePostCourseParam_Unknown19_item_len = ProtoField.uint16("PreparePostCourseParam_Unknown19_item_len", "Unknown19 length (String)")
F.PreparePostCourseParam_Unknown19_item_data = ProtoField.string("PreparePostCourseParam_Unknown19_item_data", "Unknown19 data (String)")
F.UnknownStruct4 = ProtoField.bytes("UnknownStruct4", "UnknownStruct4 (UnknownStruct4)")
F.UnknownStruct4_Unknown = ProtoField.uint8("UnknownStruct4_Unknown", "Unknown (uint8)")
F.UnknownStruct4_Unknown2 = ProtoField.uint8("UnknownStruct4_Unknown2", "Unknown2 (uint8)")
F.UnknownStruct4_Unknown3 = ProtoField.uint32("UnknownStruct4_Unknown3", "Unknown3 (uint32)")
F.UnknownStruct4_Unknown4 = ProtoField.uint64("UnknownStruct4_Unknown4", "Unknown4 (uint64)")
F.UnknownStruct4_Unknown5 = ProtoField.uint64("UnknownStruct4_Unknown5", "Unknown5 (uint64)")
F.UnknownStruct4_Unknown6 = ProtoField.uint8("UnknownStruct4_Unknown6", "Unknown6 (uint8)")
F.UnknownStruct4_Unknown7 = ProtoField.uint8("UnknownStruct4_Unknown7", "Unknown7 (uint8)")
F.UnknownStruct5 = ProtoField.bytes("UnknownStruct5", "UnknownStruct5 (UnknownStruct5)")
F.UnknownStruct5_Unknown = ProtoField.uint8("UnknownStruct5_Unknown", "Unknown (uint8)")
F.UnknownStruct5_Unknown2 = ProtoField.uint32("UnknownStruct5_Unknown2", "Unknown2 (uint32)")
F.RelationObjectReqGetInfo = ProtoField.bytes("RelationObjectReqGetInfo", "RelationObjectReqGetInfo (RelationObjectReqGetInfo)")
F.RelationObjectReqGetInfo_Url_len = ProtoField.uint16("RelationObjectReqGetInfo_Url_len", "Url length (String)")
F.RelationObjectReqGetInfo_Url_data = ProtoField.string("RelationObjectReqGetInfo_Url_data", "Url data (String)")
F.RelationObjectReqGetInfo_Relation_data_type = ProtoField.uint8("RelationObjectReqGetInfo_Relation_data_type", "Relation_data_type (uint8)")
F.RelationObjectReqGetInfo_Filesize = ProtoField.uint32("RelationObjectReqGetInfo_Filesize", "Filesize (uint32)")
F.RelationObjectReqGetInfo_Root_ca_cert_len = ProtoField.uint32("RelationObjectReqGetInfo_Root_ca_cert_len", "Root_ca_cert length (Buffer)")
F.RelationObjectReqGetInfo_Root_ca_cert_data = ProtoField.bytes("RelationObjectReqGetInfo_Root_ca_cert_data", "Root_ca_cert data (Buffer)")
F.RelationObjectReqGetInfo_Filename_len = ProtoField.uint16("RelationObjectReqGetInfo_Filename_len", "Filename length (String)")
F.RelationObjectReqGetInfo_Filename_data = ProtoField.string("RelationObjectReqGetInfo_Filename_data", "Filename data (String)")
F.UnknownStruct1 = ProtoField.bytes("UnknownStruct1", "UnknownStruct1 (UnknownStruct1)")
F.UnknownStruct1_Unknown = ProtoField.uint16("UnknownStruct1_Unknown", "Unknown (uint16)")
F.UnknownStruct1_Unknown2 = ProtoField.uint16("UnknownStruct1_Unknown2", "Unknown2 (uint16)")
F.UnknownStruct1_Unknown3 = ProtoField.uint16("UnknownStruct1_Unknown3", "Unknown3 (uint16)")
F.UnknownStruct1_Unknown4 = ProtoField.uint16("UnknownStruct1_Unknown4", "Unknown4 (uint16)")
F.NintendoPresenceV2 = ProtoField.bytes("NintendoPresenceV2", "NintendoPresenceV2 (NintendoPresenceV2)")
F.NintendoPresenceV2_Changed_flags = ProtoField.uint32("NintendoPresenceV2_Changed_flags", "Changed_flags (uint32)")
F.NintendoPresenceV2_Is_online = ProtoField.bool("NintendoPresenceV2_Is_online", "Is_online (bool)")
F.NintendoPresenceV2_Unknown_1 = ProtoField.uint8("NintendoPresenceV2_Unknown_1", "Unknown_1 (uint8)")
F.NintendoPresenceV2_Message_len = ProtoField.uint16("NintendoPresenceV2_Message_len", "Message length (String)")
F.NintendoPresenceV2_Message_data = ProtoField.string("NintendoPresenceV2_Message_data", "Message data (String)")
F.NintendoPresenceV2_Unknown_2 = ProtoField.uint32("NintendoPresenceV2_Unknown_2", "Unknown_2 (uint32)")
F.NintendoPresenceV2_Unknown_3 = ProtoField.uint8("NintendoPresenceV2_Unknown_3", "Unknown_3 (uint8)")
F.NintendoPresenceV2_Game_server_id = ProtoField.uint32("NintendoPresenceV2_Game_server_id", "Game_server_id (uint32)")
F.NintendoPresenceV2_Unknown_4 = ProtoField.uint32("NintendoPresenceV2_Unknown_4", "Unknown_4 (uint32)")
F.NintendoPresenceV2_Pid = ProtoField.uint32("NintendoPresenceV2_Pid", "Pid (uint32)")
F.NintendoPresenceV2_Gathering_id = ProtoField.uint32("NintendoPresenceV2_Gathering_id", "Gathering_id (uint32)")
F.NintendoPresenceV2_Application_data_len = ProtoField.uint32("NintendoPresenceV2_Application_data_len", "Application_data length (Buffer)")
F.NintendoPresenceV2_Application_data_data = ProtoField.bytes("NintendoPresenceV2_Application_data_data", "Application_data data (Buffer)")
F.NintendoPresenceV2_Unknown_5 = ProtoField.uint8("NintendoPresenceV2_Unknown_5", "Unknown_5 (uint8)")
F.NintendoPresenceV2_Unknown_6 = ProtoField.uint8("NintendoPresenceV2_Unknown_6", "Unknown_6 (uint8)")
F.NintendoPresenceV2_Unknown_7 = ProtoField.uint8("NintendoPresenceV2_Unknown_7", "Unknown_7 (uint8)")
F.Comment = ProtoField.bytes("Comment", "Comment (Comment)")
F.Comment_Unknown = ProtoField.uint8("Comment_Unknown", "Unknown (uint8)")
F.Comment_Status_message_len = ProtoField.uint16("Comment_Status_message_len", "Status_message length (String)")
F.Comment_Status_message_data = ProtoField.string("Comment_Status_message_data", "Status_message data (String)")
F.Comment_Last_changed_on = ProtoField.uint64("Comment_Last_changed_on", "Last_changed_on (uint64)")
F.FriendRequestMessage = ProtoField.bytes("FriendRequestMessage", "FriendRequestMessage (FriendRequestMessage)")
F.FriendRequestMessage_Friend_request_id = ProtoField.uint64("FriendRequestMessage_Friend_request_id", "Friend_request_id (uint64)")
F.FriendRequestMessage_Unknown = ProtoField.uint8("FriendRequestMessage_Unknown", "Unknown (uint8)")
F.FriendRequestMessage_Unknown2 = ProtoField.uint8("FriendRequestMessage_Unknown2", "Unknown2 (uint8)")
F.FriendRequestMessage_Message_len = ProtoField.uint16("FriendRequestMessage_Message_len", "Message length (String)")
F.FriendRequestMessage_Message_data = ProtoField.string("FriendRequestMessage_Message_data", "Message data (String)")
F.FriendRequestMessage_Unknown3 = ProtoField.uint8("FriendRequestMessage_Unknown3", "Unknown3 (uint8)")
F.FriendRequestMessage_Unknown4_len = ProtoField.uint16("FriendRequestMessage_Unknown4_len", "Unknown4 length (String)")
F.FriendRequestMessage_Unknown4_data = ProtoField.string("FriendRequestMessage_Unknown4_data", "Unknown4 data (String)")
F.FriendRequestMessage_Unknown5 = ProtoField.uint64("FriendRequestMessage_Unknown5", "Unknown5 (uint64)")
F.FriendRequestMessage_Expires_on = ProtoField.uint64("FriendRequestMessage_Expires_on", "Expires_on (uint64)")
F.PersistentNotification = ProtoField.bytes("PersistentNotification", "PersistentNotification (PersistentNotification)")
F.PersistentNotification_Unknown = ProtoField.uint64("PersistentNotification_Unknown", "Unknown (uint64)")
F.PersistentNotification_Unknown2 = ProtoField.uint32("PersistentNotification_Unknown2", "Unknown2 (uint32)")
F.PersistentNotification_Unknown3 = ProtoField.uint32("PersistentNotification_Unknown3", "Unknown3 (uint32)")
F.PersistentNotification_Unknown4 = ProtoField.uint32("PersistentNotification_Unknown4", "Unknown4 (uint32)")
F.PersistentNotification_Unknown5_len = ProtoField.uint16("PersistentNotification_Unknown5_len", "Unknown5 length (String)")
F.PersistentNotification_Unknown5_data = ProtoField.string("PersistentNotification_Unknown5_data", "Unknown5 data (String)")
F.Property = ProtoField.bytes("Property", "Property (Property)")
F.Property_ID = ProtoField.uint32("Property_ID", "ID (uint32)")
F.Property_Value = ProtoField.uint32("Property_Value", "Value (uint32)")
F.GameSessionKey = ProtoField.bytes("GameSessionKey", "GameSessionKey (GameSessionKey)")
F.GameSessionKey_m_typeID = ProtoField.uint32("GameSessionKey_m_typeID", "m_typeID (uint32)")
F.GameSessionKey_m_sessionID = ProtoField.uint32("GameSessionKey_m_sessionID", "m_sessionID (uint32)")
F.Ranking2RankData = ProtoField.bytes("Ranking2RankData", "Ranking2RankData (Ranking2RankData)")
F.Ranking2RankData_misc = ProtoField.uint64("Ranking2RankData_misc", "misc (uint64)")
F.Ranking2RankData_nexUniqueId = ProtoField.uint64("Ranking2RankData_nexUniqueId", "nexUniqueId (uint64)")
F.Ranking2RankData_principalId = ProtoField.uint32("Ranking2RankData_principalId", "principalId (uint32)")
F.Ranking2RankData_rank = ProtoField.uint32("Ranking2RankData_rank", "rank (uint32)")
F.Ranking2RankData_score = ProtoField.uint32("Ranking2RankData_score", "score (uint32)")
F.UbiAccountStatus = ProtoField.bytes("UbiAccountStatus", "UbiAccountStatus (UbiAccountStatus)")
F.UbiAccountStatus_m_basicStatus = ProtoField.uint32("UbiAccountStatus_m_basicStatus", "m_basicStatus (uint32)")
F.UbiAccountStatus_m_missingRequiredInformations = ProtoField.bool("UbiAccountStatus_m_missingRequiredInformations", "m_missingRequiredInformations (bool)")
F.UbiAccountStatus_m_recoveringPassword = ProtoField.bool("UbiAccountStatus_m_recoveringPassword", "m_recoveringPassword (bool)")
F.UbiAccountStatus_m_pendingDeactivation = ProtoField.bool("UbiAccountStatus_m_pendingDeactivation", "m_pendingDeactivation (bool)")
F.ExternalAccount = ProtoField.bytes("ExternalAccount", "ExternalAccount (ExternalAccount)")
F.ExternalAccount_m_accountType = ProtoField.uint32("ExternalAccount_m_accountType", "m_accountType (uint32)")
F.ExternalAccount_m_id_len = ProtoField.uint16("ExternalAccount_m_id_len", "m_id length (String)")
F.ExternalAccount_m_id_data = ProtoField.string("ExternalAccount_m_id_data", "m_id data (String)")
F.ExternalAccount_m_username_len = ProtoField.uint16("ExternalAccount_m_username_len", "m_username length (String)")
F.ExternalAccount_m_username_data = ProtoField.string("ExternalAccount_m_username_data", "m_username data (String)")
F.ValidationFailureReason = ProtoField.bytes("ValidationFailureReason", "ValidationFailureReason (ValidationFailureReason)")
F.ValidationFailureReason_m_validationId = ProtoField.uint32("ValidationFailureReason_m_validationId", "m_validationId (uint32)")
F.ValidationFailureReason_m_description_len = ProtoField.uint16("ValidationFailureReason_m_description_len", "m_description length (String)")
F.ValidationFailureReason_m_description_data = ProtoField.string("ValidationFailureReason_m_description_data", "m_description data (String)")
F.DataStoreSearchBalloonResult = ProtoField.bytes("DataStoreSearchBalloonResult", "DataStoreSearchBalloonResult (DataStoreSearchBalloonResult)")
F.DataStoreSearchBalloonResult_dataId = ProtoField.uint64("DataStoreSearchBalloonResult_dataId", "dataId (uint64)")
F.DataStoreSearchBalloonResult_ownerId = ProtoField.uint32("DataStoreSearchBalloonResult_ownerId", "ownerId (uint32)")
F.DataStoreSearchBalloonResult_size = ProtoField.uint32("DataStoreSearchBalloonResult_size", "size (uint32)")
F.DataStoreSearchBalloonResult_name_len = ProtoField.uint16("DataStoreSearchBalloonResult_name_len", "name length (String)")
F.DataStoreSearchBalloonResult_name_data = ProtoField.string("DataStoreSearchBalloonResult_name_data", "name data (String)")
F.DataStoreSearchBalloonResult_dataType = ProtoField.uint16("DataStoreSearchBalloonResult_dataType", "dataType (uint16)")
F.DataStoreSearchBalloonResult_metaBinary_len = ProtoField.uint16("DataStoreSearchBalloonResult_metaBinary_len", "metaBinary length (Buffer)")
F.DataStoreSearchBalloonResult_metaBinary_data = ProtoField.bytes("DataStoreSearchBalloonResult_metaBinary_data", "metaBinary data (Buffer)")
F.DataStoreSearchBalloonResult_createdTime = ProtoField.uint64("DataStoreSearchBalloonResult_createdTime", "createdTime (uint64)")
F.DataStoreSearchBalloonResult_updatedTime = ProtoField.uint64("DataStoreSearchBalloonResult_updatedTime", "updatedTime (uint64)")
F.DataStoreSearchBalloonResult_ownerDataId = ProtoField.uint64("DataStoreSearchBalloonResult_ownerDataId", "ownerDataId (uint64)")
F.DataStoreSearchBalloonResult_ownerName_len = ProtoField.uint16("DataStoreSearchBalloonResult_ownerName_len", "ownerName length (String)")
F.DataStoreSearchBalloonResult_ownerName_data = ProtoField.string("DataStoreSearchBalloonResult_ownerName_data", "ownerName data (String)")
F.DataStoreSearchBalloonResult_isFriendBalloon = ProtoField.bool("DataStoreSearchBalloonResult_isFriendBalloon", "isFriendBalloon (bool)")
F.DataStoreSearchBalloonResult_ratings_len = ProtoField.uint32("DataStoreSearchBalloonResult_ratings_len", "ratings length (uint32)")
F.DataStoreSearchBalloonResult_ratings_key = ProtoField.int8("DataStoreSearchBalloonResult_ratings_key", "ratings (uint8)")
F.DataStoreSearchBalloonResult_ownerRatings_len = ProtoField.uint32("DataStoreSearchBalloonResult_ownerRatings_len", "ownerRatings length (uint32)")
F.DataStoreSearchBalloonResult_ownerRatings_key = ProtoField.int8("DataStoreSearchBalloonResult_ownerRatings_key", "ownerRatings (uint8)")
F.DataStoreFetchMyInfosBalloonResult = ProtoField.bytes("DataStoreFetchMyInfosBalloonResult", "DataStoreFetchMyInfosBalloonResult (DataStoreFetchMyInfosBalloonResult)")
F.DataStoreFetchMyInfosBalloonResult_dataId = ProtoField.uint64("DataStoreFetchMyInfosBalloonResult_dataId", "dataId (uint64)")
F.DataStoreFetchMyInfosBalloonResult_dataType = ProtoField.uint16("DataStoreFetchMyInfosBalloonResult_dataType", "dataType (uint16)")
F.DataStoreFetchMyInfosBalloonResult_metaBinary_len = ProtoField.uint16("DataStoreFetchMyInfosBalloonResult_metaBinary_len", "metaBinary length (Buffer)")
F.DataStoreFetchMyInfosBalloonResult_metaBinary_data = ProtoField.bytes("DataStoreFetchMyInfosBalloonResult_metaBinary_data", "metaBinary data (Buffer)")
F.DataStoreFetchMyInfosBalloonResult_createdTime = ProtoField.uint64("DataStoreFetchMyInfosBalloonResult_createdTime", "createdTime (uint64)")
F.DataStoreFetchMyInfosBalloonResult_updatedTime = ProtoField.uint64("DataStoreFetchMyInfosBalloonResult_updatedTime", "updatedTime (uint64)")
F.DataStoreFetchMyInfosBalloonResult_isCleared = ProtoField.bool("DataStoreFetchMyInfosBalloonResult_isCleared", "isCleared (bool)")
F.DataStoreFetchMyInfosBalloonResult_ratings_len = ProtoField.uint32("DataStoreFetchMyInfosBalloonResult_ratings_len", "ratings length (uint32)")
F.DataStoreFetchMyInfosBalloonResult_ratings_key = ProtoField.int8("DataStoreFetchMyInfosBalloonResult_ratings_key", "ratings (uint8)")
F.DataStoreFetchMyInfosBalloonResult_buffers_len = ProtoField.uint32("DataStoreFetchMyInfosBalloonResult_buffers_len", "buffers length (uint32)")
F.DataStoreFetchMyInfosBalloonResult_buffers_key = ProtoField.int8("DataStoreFetchMyInfosBalloonResult_buffers_key", "buffers (uint8)")
F.DataStoreFetchMyInfosBalloonResult_buffers_value_len = ProtoField.uint32("DataStoreFetchMyInfosBalloonResult_buffers_value_len", "buffers length (uint32)")
F.DataStoreFetchMyInfosBalloonResult_buffers_value_item_len = ProtoField.uint16("DataStoreFetchMyInfosBalloonResult_buffers_value_item_len", "buffers length (Buffer)")
F.DataStoreFetchMyInfosBalloonResult_buffers_value_item_data = ProtoField.bytes("DataStoreFetchMyInfosBalloonResult_buffers_value_item_data", "buffers data (Buffer)")
F.DataStoreFetchMyInfosAchievementResult = ProtoField.bytes("DataStoreFetchMyInfosAchievementResult", "DataStoreFetchMyInfosAchievementResult (DataStoreFetchMyInfosAchievementResult)")
F.DataStoreFetchMyInfosAchievementResult_dataId = ProtoField.uint64("DataStoreFetchMyInfosAchievementResult_dataId", "dataId (uint64)")
F.DataStoreFetchMyInfosAchievementResult_dataType = ProtoField.uint16("DataStoreFetchMyInfosAchievementResult_dataType", "dataType (uint16)")
F.DataStoreFetchMyInfosAchievementResult_metaBinary_len = ProtoField.uint16("DataStoreFetchMyInfosAchievementResult_metaBinary_len", "metaBinary length (Buffer)")
F.DataStoreFetchMyInfosAchievementResult_metaBinary_data = ProtoField.bytes("DataStoreFetchMyInfosAchievementResult_metaBinary_data", "metaBinary data (Buffer)")
F.DataStoreFetchMyInfosAchievementResult_createdTime = ProtoField.uint64("DataStoreFetchMyInfosAchievementResult_createdTime", "createdTime (uint64)")
F.DataStoreFetchMyInfosAchievementResult_ratings_len = ProtoField.uint32("DataStoreFetchMyInfosAchievementResult_ratings_len", "ratings length (uint32)")
F.DataStoreFetchMyInfosAchievementResult_ratings_key = ProtoField.int8("DataStoreFetchMyInfosAchievementResult_ratings_key", "ratings (uint8)")
F.DataStoreFetchMyInfosAchievementResult_buffers_len = ProtoField.uint32("DataStoreFetchMyInfosAchievementResult_buffers_len", "buffers length (uint32)")
F.DataStoreFetchMyInfosAchievementResult_buffers_key = ProtoField.int8("DataStoreFetchMyInfosAchievementResult_buffers_key", "buffers (uint8)")
F.DataStoreFetchMyInfosAchievementResult_buffers_value_len = ProtoField.uint32("DataStoreFetchMyInfosAchievementResult_buffers_value_len", "buffers length (uint32)")
F.DataStoreFetchMyInfosAchievementResult_buffers_value_item_len = ProtoField.uint16("DataStoreFetchMyInfosAchievementResult_buffers_value_item_len", "buffers length (Buffer)")
F.DataStoreFetchMyInfosAchievementResult_buffers_value_item_data = ProtoField.bytes("DataStoreFetchMyInfosAchievementResult_buffers_value_item_data", "buffers data (Buffer)")
F.Privilege = ProtoField.bytes("Privilege", "Privilege (Privilege)")
F.Privilege_m_ID = ProtoField.uint32("Privilege_m_ID", "m_ID (uint32)")
F.Privilege_m_description_len = ProtoField.uint16("Privilege_m_description_len", "m_description length (String)")
F.Privilege_m_description_data = ProtoField.string("Privilege_m_description_data", "m_description data (String)")
F.EndRoundReport = ProtoField.bytes("EndRoundReport", "EndRoundReport (EndRoundReport)")
F.EndRoundReport_Unknown = ProtoField.uint64("EndRoundReport_Unknown", "Unknown (uint64)")
F.EndRoundReport_Unknown2 = ProtoField.uint32("EndRoundReport_Unknown2", "Unknown2 (uint32)")
F.EndRoundReport_Unknown3 = ProtoField.uint32("EndRoundReport_Unknown3", "Unknown3 (uint32)")
F.EndRoundReport_Unknown4 = ProtoField.uint32("EndRoundReport_Unknown4", "Unknown4 (uint32)")
F.EndRoundReport_Unknown5_len = ProtoField.uint16("EndRoundReport_Unknown5_len", "Unknown5 length (Buffer)")
F.EndRoundReport_Unknown5_data = ProtoField.bytes("EndRoundReport_Unknown5_data", "Unknown5 data (Buffer)")
F.EndRoundReport_Unknown6 = ProtoField.uint8("EndRoundReport_Unknown6", "Unknown6 (uint8)")
F.EndRoundReport_Unknown7 = ProtoField.uint32("EndRoundReport_Unknown7", "Unknown7 (uint32)")
F.TrackingInformation = ProtoField.bytes("TrackingInformation", "TrackingInformation (TrackingInformation)")
F.TrackingInformation_ipn = ProtoField.uint32("TrackingInformation_ipn", "ipn (uint32)")
F.TrackingInformation_userID_len = ProtoField.uint16("TrackingInformation_userID_len", "userID length (String)")
F.TrackingInformation_userID_data = ProtoField.string("TrackingInformation_userID_data", "userID data (String)")
F.TrackingInformation_machineID_len = ProtoField.uint16("TrackingInformation_machineID_len", "machineID length (String)")
F.TrackingInformation_machineID_data = ProtoField.string("TrackingInformation_machineID_data", "machineID data (String)")
F.TrackingInformation_visitorID_len = ProtoField.uint16("TrackingInformation_visitorID_len", "visitorID length (String)")
F.TrackingInformation_visitorID_data = ProtoField.string("TrackingInformation_visitorID_data", "visitorID data (String)")
F.TrackingInformation_utsVersion_len = ProtoField.uint16("TrackingInformation_utsVersion_len", "utsVersion length (String)")
F.TrackingInformation_utsVersion_data = ProtoField.string("TrackingInformation_utsVersion_data", "utsVersion data (String)")
F.TrackingTag = ProtoField.bytes("TrackingTag", "TrackingTag (TrackingTag)")
F.TrackingTag_trackingID = ProtoField.uint32("TrackingTag_trackingID", "trackingID (uint32)")
F.TrackingTag_tag_len = ProtoField.uint16("TrackingTag_tag_len", "tag length (String)")
F.TrackingTag_tag_data = ProtoField.string("TrackingTag_tag_data", "tag data (String)")
F.TrackingTag_attributes_len = ProtoField.uint16("TrackingTag_attributes_len", "attributes length (String)")
F.TrackingTag_attributes_data = ProtoField.string("TrackingTag_attributes_data", "attributes data (String)")
F.TrackingTag_deltaTime = ProtoField.uint32("TrackingTag_deltaTime", "deltaTime (uint32)")
F.TrackingTag_newUserId_len = ProtoField.uint16("TrackingTag_newUserId_len", "newUserId length (String)")
F.TrackingTag_newUserId_data = ProtoField.string("TrackingTag_newUserId_data", "newUserId data (String)")
F.TextMessage = ProtoField.bytes("TextMessage", "TextMessage (TextMessage)")
F.TextMessage_m_strTextBody_len = ProtoField.uint16("TextMessage_m_strTextBody_len", "m_strTextBody length (String)")
F.TextMessage_m_strTextBody_data = ProtoField.string("TextMessage_m_strTextBody_data", "m_strTextBody data (String)")
F.BinaryMessage = ProtoField.bytes("BinaryMessage", "BinaryMessage (BinaryMessage)")
F.BinaryMessage_m_binaryBody_len = ProtoField.uint16("BinaryMessage_m_binaryBody_len", "m_binaryBody length (Buffer)")
F.BinaryMessage_m_binaryBody_data = ProtoField.bytes("BinaryMessage_m_binaryBody_data", "m_binaryBody data (Buffer)")
F.BufferQueueParam = ProtoField.bytes("BufferQueueParam", "BufferQueueParam (BufferQueueParam)")
F.BufferQueueParam_dataId = ProtoField.uint64("BufferQueueParam_dataId", "dataId (uint64)")
F.BufferQueueParam_slot = ProtoField.uint32("BufferQueueParam_slot", "slot (uint32)")
F.DataStoreAttachFileParam = ProtoField.bytes("DataStoreAttachFileParam", "DataStoreAttachFileParam (DataStoreAttachFileParam)")
F.DataStoreAttachFileParam_referDataId = ProtoField.uint64("DataStoreAttachFileParam_referDataId", "referDataId (uint64)")
F.DataStoreAttachFileParam_contentType_len = ProtoField.uint16("DataStoreAttachFileParam_contentType_len", "contentType length (String)")
F.DataStoreAttachFileParam_contentType_data = ProtoField.string("DataStoreAttachFileParam_contentType_data", "contentType data (String)")
F.DataStoreChangePlayablePlatformParam = ProtoField.bytes("DataStoreChangePlayablePlatformParam", "DataStoreChangePlayablePlatformParam (DataStoreChangePlayablePlatformParam)")
F.DataStoreChangePlayablePlatformParam_dataId = ProtoField.uint64("DataStoreChangePlayablePlatformParam_dataId", "dataId (uint64)")
F.DataStoreChangePlayablePlatformParam_playablePlatform = ProtoField.uint32("DataStoreChangePlayablePlatformParam_playablePlatform", "playablePlatform (uint32)")
F.DataStoreCustomRankingResult = ProtoField.bytes("DataStoreCustomRankingResult", "DataStoreCustomRankingResult (DataStoreCustomRankingResult)")
F.DataStoreCustomRankingResult_order = ProtoField.uint32("DataStoreCustomRankingResult_order", "order (uint32)")
F.DataStoreCustomRankingResult_score = ProtoField.uint32("DataStoreCustomRankingResult_score", "score (uint32)")
F.DataStoreFileServerObjectInfo = ProtoField.bytes("DataStoreFileServerObjectInfo", "DataStoreFileServerObjectInfo (DataStoreFileServerObjectInfo)")
F.DataStoreFileServerObjectInfo_dataId = ProtoField.uint64("DataStoreFileServerObjectInfo_dataId", "dataId (uint64)")
F.DataStoreGetCourseRecordParam = ProtoField.bytes("DataStoreGetCourseRecordParam", "DataStoreGetCourseRecordParam (DataStoreGetCourseRecordParam)")
F.DataStoreGetCourseRecordParam_dataId = ProtoField.uint64("DataStoreGetCourseRecordParam_dataId", "dataId (uint64)")
F.DataStoreGetCourseRecordParam_slot = ProtoField.uint8("DataStoreGetCourseRecordParam_slot", "slot (uint8)")
F.DataStoreGetCourseRecordResult = ProtoField.bytes("DataStoreGetCourseRecordResult", "DataStoreGetCourseRecordResult (DataStoreGetCourseRecordResult)")
F.DataStoreGetCourseRecordResult_dataId = ProtoField.uint64("DataStoreGetCourseRecordResult_dataId", "dataId (uint64)")
F.DataStoreGetCourseRecordResult_slot = ProtoField.uint8("DataStoreGetCourseRecordResult_slot", "slot (uint8)")
F.DataStoreGetCourseRecordResult_firstPid = ProtoField.uint32("DataStoreGetCourseRecordResult_firstPid", "firstPid (uint32)")
F.DataStoreGetCourseRecordResult_bestPid = ProtoField.uint32("DataStoreGetCourseRecordResult_bestPid", "bestPid (uint32)")
F.DataStoreGetCourseRecordResult_bestScore = ProtoField.int32("DataStoreGetCourseRecordResult_bestScore", "bestScore (uint32)")
F.DataStoreGetCourseRecordResult_createdTime = ProtoField.uint64("DataStoreGetCourseRecordResult_createdTime", "createdTime (uint64)")
F.DataStoreGetCourseRecordResult_updatedTime = ProtoField.uint64("DataStoreGetCourseRecordResult_updatedTime", "updatedTime (uint64)")
F.DataStoreGetCustomRankingByDataIdParam = ProtoField.bytes("DataStoreGetCustomRankingByDataIdParam", "DataStoreGetCustomRankingByDataIdParam (DataStoreGetCustomRankingByDataIdParam)")
F.DataStoreGetCustomRankingByDataIdParam_applicationId = ProtoField.uint32("DataStoreGetCustomRankingByDataIdParam_applicationId", "applicationId (uint32)")
F.DataStoreGetCustomRankingByDataIdParam_dataIdList_len = ProtoField.uint32("DataStoreGetCustomRankingByDataIdParam_dataIdList_len", "dataIdList length (uint32)")
F.DataStoreGetCustomRankingByDataIdParam_dataIdList_item = ProtoField.uint64("DataStoreGetCustomRankingByDataIdParam_dataIdList_item", "dataIdList (uint64)")
F.DataStoreGetCustomRankingByDataIdParam_resultOption = ProtoField.uint8("DataStoreGetCustomRankingByDataIdParam_resultOption", "resultOption (uint8)")
F.DataStoreGetCustomRankingParam = ProtoField.bytes("DataStoreGetCustomRankingParam", "DataStoreGetCustomRankingParam (DataStoreGetCustomRankingParam)")
F.DataStoreGetCustomRankingParam_applicationId = ProtoField.uint32("DataStoreGetCustomRankingParam_applicationId", "applicationId (uint32)")
F.DataStoreGetCustomRankingParam_resultOption = ProtoField.uint8("DataStoreGetCustomRankingParam_resultOption", "resultOption (uint8)")
F.DataStoreGetMetaByOwnerIdParam = ProtoField.bytes("DataStoreGetMetaByOwnerIdParam", "DataStoreGetMetaByOwnerIdParam (DataStoreGetMetaByOwnerIdParam)")
F.DataStoreGetMetaByOwnerIdParam_ownerIds_len = ProtoField.uint32("DataStoreGetMetaByOwnerIdParam_ownerIds_len", "ownerIds length (uint32)")
F.DataStoreGetMetaByOwnerIdParam_ownerIds_item = ProtoField.uint32("DataStoreGetMetaByOwnerIdParam_ownerIds_item", "ownerIds (uint32)")
F.DataStoreGetMetaByOwnerIdParam_dataTypes_len = ProtoField.uint32("DataStoreGetMetaByOwnerIdParam_dataTypes_len", "dataTypes length (uint32)")
F.DataStoreGetMetaByOwnerIdParam_dataTypes_item = ProtoField.uint16("DataStoreGetMetaByOwnerIdParam_dataTypes_item", "dataTypes (uint16)")
F.DataStoreGetMetaByOwnerIdParam_resultOption = ProtoField.uint8("DataStoreGetMetaByOwnerIdParam_resultOption", "resultOption (uint8)")
F.DataStoreRateCustomRankingParam = ProtoField.bytes("DataStoreRateCustomRankingParam", "DataStoreRateCustomRankingParam (DataStoreRateCustomRankingParam)")
F.DataStoreRateCustomRankingParam_dataId = ProtoField.uint64("DataStoreRateCustomRankingParam_dataId", "dataId (uint64)")
F.DataStoreRateCustomRankingParam_applicationId = ProtoField.uint32("DataStoreRateCustomRankingParam_applicationId", "applicationId (uint32)")
F.DataStoreRateCustomRankingParam_score = ProtoField.uint32("DataStoreRateCustomRankingParam_score", "score (uint32)")
F.DataStoreRateCustomRankingParam_period = ProtoField.uint16("DataStoreRateCustomRankingParam_period", "period (uint16)")
F.DataStoreUploadCourseRecordParam = ProtoField.bytes("DataStoreUploadCourseRecordParam", "DataStoreUploadCourseRecordParam (DataStoreUploadCourseRecordParam)")
F.DataStoreUploadCourseRecordParam_dataId = ProtoField.uint64("DataStoreUploadCourseRecordParam_dataId", "dataId (uint64)")
F.DataStoreUploadCourseRecordParam_slot = ProtoField.uint8("DataStoreUploadCourseRecordParam_slot", "slot (uint8)")
F.DataStoreUploadCourseRecordParam_score = ProtoField.int32("DataStoreUploadCourseRecordParam_score", "score (uint32)")
F.SubscriberContent = ProtoField.bytes("SubscriberContent", "SubscriberContent (SubscriberContent)")
F.SubscriberContent_Unknown = ProtoField.uint64("SubscriberContent_Unknown", "Unknown (uint64)")
F.SubscriberContent_Unknown2_len = ProtoField.uint16("SubscriberContent_Unknown2_len", "Unknown2 length (String)")
F.SubscriberContent_Unknown2_data = ProtoField.string("SubscriberContent_Unknown2_data", "Unknown2 data (String)")
F.SubscriberContent_Unknown3_len = ProtoField.uint16("SubscriberContent_Unknown3_len", "Unknown3 length (Buffer)")
F.SubscriberContent_Unknown3_data = ProtoField.bytes("SubscriberContent_Unknown3_data", "Unknown3 data (Buffer)")
F.SubscriberContent_Unknown4 = ProtoField.uint64("SubscriberContent_Unknown4", "Unknown4 (uint64)")
F.SubscriberContent_Unknown5_len = ProtoField.uint32("SubscriberContent_Unknown5_len", "Unknown5 length (uint32)")
F.SubscriberContent_Unknown5_item_len = ProtoField.uint16("SubscriberContent_Unknown5_item_len", "Unknown5 length (String)")
F.SubscriberContent_Unknown5_item_data = ProtoField.string("SubscriberContent_Unknown5_item_data", "Unknown5 data (String)")
F.SubscriberContent_Unknown6 = ProtoField.uint64("SubscriberContent_Unknown6", "Unknown6 (uint64)")
F.SubscriberGetContentParam = ProtoField.bytes("SubscriberGetContentParam", "SubscriberGetContentParam (SubscriberGetContentParam)")
F.SubscriberGetContentParam_Unknown_len = ProtoField.uint16("SubscriberGetContentParam_Unknown_len", "Unknown length (String)")
F.SubscriberGetContentParam_Unknown_data = ProtoField.string("SubscriberGetContentParam_Unknown_data", "Unknown data (String)")
F.SubscriberGetContentParam_Unknown2 = ProtoField.uint32("SubscriberGetContentParam_Unknown2", "Unknown2 (uint32)")
F.SubscriberGetContentParam_Unknown3 = ProtoField.uint32("SubscriberGetContentParam_Unknown3", "Unknown3 (uint32)")
F.SubscriberGetContentParam_Unknown4 = ProtoField.uint64("SubscriberGetContentParam_Unknown4", "Unknown4 (uint64)")
F.SubscriberPostContentParam = ProtoField.bytes("SubscriberPostContentParam", "SubscriberPostContentParam (SubscriberPostContentParam)")
F.SubscriberPostContentParam_Unknown_len = ProtoField.uint32("SubscriberPostContentParam_Unknown_len", "Unknown length (uint32)")
F.SubscriberPostContentParam_Unknown_item_len = ProtoField.uint16("SubscriberPostContentParam_Unknown_item_len", "Unknown length (String)")
F.SubscriberPostContentParam_Unknown_item_data = ProtoField.string("SubscriberPostContentParam_Unknown_item_data", "Unknown data (String)")
F.SubscriberPostContentParam_Unknown2_len = ProtoField.uint16("SubscriberPostContentParam_Unknown2_len", "Unknown2 length (String)")
F.SubscriberPostContentParam_Unknown2_data = ProtoField.string("SubscriberPostContentParam_Unknown2_data", "Unknown2 data (String)")
F.SubscriberPostContentParam_Unknown3_len = ProtoField.uint16("SubscriberPostContentParam_Unknown3_len", "Unknown3 length (Buffer)")
F.SubscriberPostContentParam_Unknown3_data = ProtoField.bytes("SubscriberPostContentParam_Unknown3_data", "Unknown3 data (Buffer)")
F.Unknown = ProtoField.bytes("Unknown", "Unknown (Unknown)")
F.Unknown_Unknown_len = ProtoField.uint16("Unknown_Unknown_len", "Unknown length (Buffer)")
F.Unknown_Unknown_data = ProtoField.bytes("Unknown_Unknown_data", "Unknown data (Buffer)")
F.SubscriberUserStatusInfo = ProtoField.bytes("SubscriberUserStatusInfo", "SubscriberUserStatusInfo (SubscriberUserStatusInfo)")
F.SubscriberUserStatusInfo_User_id = ProtoField.uint32("SubscriberUserStatusInfo_User_id", "User_id (uint32)")
F.SubscriberUserStatusInfo_Unknown_len = ProtoField.uint32("SubscriberUserStatusInfo_Unknown_len", "Unknown length (uint32)")
F.SubscriberUserStatusInfo_Unknown_item_len = ProtoField.uint16("SubscriberUserStatusInfo_Unknown_item_len", "Unknown length (Buffer)")
F.SubscriberUserStatusInfo_Unknown_item_data = ProtoField.bytes("SubscriberUserStatusInfo_Unknown_item_data", "Unknown data (Buffer)")
F.BasicAccountInfo = ProtoField.bytes("BasicAccountInfo", "BasicAccountInfo (BasicAccountInfo)")
F.BasicAccountInfo_m_pidOwner = ProtoField.uint32("BasicAccountInfo_m_pidOwner", "m_pidOwner (uint32)")
F.BasicAccountInfo_m_strName_len = ProtoField.uint16("BasicAccountInfo_m_strName_len", "m_strName length (String)")
F.BasicAccountInfo_m_strName_data = ProtoField.string("BasicAccountInfo_m_strName_data", "m_strName data (String)")
F.AccountData = ProtoField.bytes("AccountData", "AccountData (AccountData)")
F.AccountData_m_pid = ProtoField.uint32("AccountData_m_pid", "m_pid (uint32)")
F.AccountData_m_strName_len = ProtoField.uint16("AccountData_m_strName_len", "m_strName length (String)")
F.AccountData_m_strName_data = ProtoField.string("AccountData_m_strName_data", "m_strName data (String)")
F.AccountData_m_uiGroups = ProtoField.uint32("AccountData_m_uiGroups", "m_uiGroups (uint32)")
F.AccountData_m_strEmail_len = ProtoField.uint16("AccountData_m_strEmail_len", "m_strEmail length (String)")
F.AccountData_m_strEmail_data = ProtoField.string("AccountData_m_strEmail_data", "m_strEmail data (String)")
F.AccountData_m_dtCreationDate = ProtoField.uint64("AccountData_m_dtCreationDate", "m_dtCreationDate (uint64)")
F.AccountData_m_dtEffectiveDate = ProtoField.uint64("AccountData_m_dtEffectiveDate", "m_dtEffectiveDate (uint64)")
F.AccountData_m_strNotEffectiveMsg_len = ProtoField.uint16("AccountData_m_strNotEffectiveMsg_len", "m_strNotEffectiveMsg length (String)")
F.AccountData_m_strNotEffectiveMsg_data = ProtoField.string("AccountData_m_strNotEffectiveMsg_data", "m_strNotEffectiveMsg data (String)")
F.AccountData_m_dtExpiryDate = ProtoField.uint64("AccountData_m_dtExpiryDate", "m_dtExpiryDate (uint64)")
F.AccountData_m_strExpiredMsg_len = ProtoField.uint16("AccountData_m_strExpiredMsg_len", "m_strExpiredMsg length (String)")
F.AccountData_m_strExpiredMsg_data = ProtoField.string("AccountData_m_strExpiredMsg_data", "m_strExpiredMsg data (String)")
F.NintendoCreateAccountData = ProtoField.bytes("NintendoCreateAccountData", "NintendoCreateAccountData (NintendoCreateAccountData)")
F.NintendoCreateAccountData_NEX_token_len = ProtoField.uint16("NintendoCreateAccountData_NEX_token_len", "NEX_token length (String)")
F.NintendoCreateAccountData_NEX_token_data = ProtoField.string("NintendoCreateAccountData_NEX_token_data", "NEX_token data (String)")
F.NintendoCreateAccountData_Birthday = ProtoField.uint64("NintendoCreateAccountData_Birthday", "Birthday (uint64)")
F.NintendoCreateAccountData_Unknown = ProtoField.uint64("NintendoCreateAccountData_Unknown", "Unknown (uint64)")
F.CalicoFesStatsV2 = ProtoField.bytes("CalicoFesStatsV2", "CalicoFesStatsV2 (CalicoFesStatsV2)")
F.CalicoFesStatsV2_otherThemeId = ProtoField.uint8("CalicoFesStatsV2_otherThemeId", "otherThemeId (uint8)")
F.CalicoLeagueStats = ProtoField.bytes("CalicoLeagueStats", "CalicoLeagueStats (CalicoLeagueStats)")
F.CalicoLeagueStats_leagueId_len = ProtoField.uint16("CalicoLeagueStats_leagueId_len", "leagueId length (String)")
F.CalicoLeagueStats_leagueId_data = ProtoField.string("CalicoLeagueStats_leagueId_data", "leagueId data (String)")
F.CalicoLeagueStats_tagId = ProtoField.uint64("CalicoLeagueStats_tagId", "tagId (uint64)")
F.CalicoLeagueStats_leaguePoint = ProtoField.int32("CalicoLeagueStats_leaguePoint", "leaguePoint (uint32)")
F.CalicoLeagueStats_maxLeaguePoint = ProtoField.int32("CalicoLeagueStats_maxLeaguePoint", "maxLeaguePoint (uint32)")
F.CalicoLeagueStats_myEstimateLeaguePoint = ProtoField.int32("CalicoLeagueStats_myEstimateLeaguePoint", "myEstimateLeaguePoint (uint32)")
F.CalicoLeagueStats_otherEstimateLeaguePoint = ProtoField.int32("CalicoLeagueStats_otherEstimateLeaguePoint", "otherEstimateLeaguePoint (uint32)")
F.CoconutGetInfo = ProtoField.bytes("CoconutGetInfo", "CoconutGetInfo (CoconutGetInfo)")
F.CoconutGetParam = ProtoField.bytes("CoconutGetParam", "CoconutGetParam (CoconutGetParam)")
F.CoconutGetParam_uniqueIds_len = ProtoField.uint32("CoconutGetParam_uniqueIds_len", "uniqueIds length (uint32)")
F.CoconutGetParam_uniqueIds_item = ProtoField.uint64("CoconutGetParam_uniqueIds_item", "uniqueIds (uint64)")
F.CoconutGetParam_getType = ProtoField.uint8("CoconutGetParam_getType", "getType (uint8)")
F.CoconutGetParam_region = ProtoField.uint8("CoconutGetParam_region", "region (uint8)")
F.CoconutGetParam_festivalId = ProtoField.uint32("CoconutGetParam_festivalId", "festivalId (uint32)")
F.CoconutViolation = ProtoField.bytes("CoconutViolation", "CoconutViolation (CoconutViolation)")
F.CoconutViolation_dataId = ProtoField.uint64("CoconutViolation_dataId", "dataId (uint64)")
F.CoconutViolation_categoryCode_len = ProtoField.uint16("CoconutViolation_categoryCode_len", "categoryCode length (String)")
F.CoconutViolation_categoryCode_data = ProtoField.string("CoconutViolation_categoryCode_data", "categoryCode data (String)")
F.CoconutViolation_reason_len = ProtoField.uint16("CoconutViolation_reason_len", "reason length (String)")
F.CoconutViolation_reason_data = ProtoField.string("CoconutViolation_reason_data", "reason data (String)")
F.OrderedInfo = ProtoField.bytes("OrderedInfo", "OrderedInfo (OrderedInfo)")
F.OrderedInfo_gearKind = ProtoField.int32("OrderedInfo_gearKind", "gearKind (uint32)")
F.OrderedInfo_gearId = ProtoField.int32("OrderedInfo_gearId", "gearId (uint32)")
F.OrderedInfo_skillId = ProtoField.int32("OrderedInfo_skillId", "skillId (uint32)")
F.OrderedInfo_price = ProtoField.int32("OrderedInfo_price", "price (uint32)")
F.PlayLogPrepareGetParam = ProtoField.bytes("PlayLogPrepareGetParam", "PlayLogPrepareGetParam (PlayLogPrepareGetParam)")
F.PlayLogPrepareGetParam_Unknown = ProtoField.uint64("PlayLogPrepareGetParam_Unknown", "Unknown (uint64)")
F.PlayLogPrepareGetParam_Unknown2 = ProtoField.uint64("PlayLogPrepareGetParam_Unknown2", "Unknown2 (uint64)")
F.PlayLogPrepareGetParam_Unknown3 = ProtoField.uint32("PlayLogPrepareGetParam_Unknown3", "Unknown3 (uint32)")
F.PlayLogPreparePostParam = ProtoField.bytes("PlayLogPreparePostParam", "PlayLogPreparePostParam (PlayLogPreparePostParam)")
F.PlayLogPreparePostParam_Entries_len = ProtoField.uint32("PlayLogPreparePostParam_Entries_len", "Entries length (uint32)")
F.PlayLogPreparePostParam_Play_time = ProtoField.uint64("PlayLogPreparePostParam_Play_time", "Play_time (uint64)")
F.PlayLogPreparePostParam_Stage_id = ProtoField.uint32("PlayLogPreparePostParam_Stage_id", "Stage_id (uint32)")
F.PlayLogPreparePostParam_Unknown = ProtoField.uint32("PlayLogPreparePostParam_Unknown", "Unknown (uint32)")
F.PlayLogPreparePostParam_Properties_len = ProtoField.uint32("PlayLogPreparePostParam_Properties_len", "Properties length (uint32)")
F.PlayLogPreparePostParam_Properties_key_len = ProtoField.uint16("PlayLogPreparePostParam_Properties_key_len", "Properties length (String)")
F.PlayLogPreparePostParam_Properties_key_data = ProtoField.string("PlayLogPreparePostParam_Properties_key_data", "Properties data (String)")
F.TimeAttackInfo = ProtoField.bytes("TimeAttackInfo", "TimeAttackInfo (TimeAttackInfo)")
F.TimeAttackInfo_stageInfos_len = ProtoField.uint32("TimeAttackInfo_stageInfos_len", "stageInfos length (uint32)")
F.TimeAttackInfo_stageInfos_key = ProtoField.int32("TimeAttackInfo_stageInfos_key", "stageInfos (uint32)")
F.PersistentGathering = ProtoField.bytes("PersistentGathering", "PersistentGathering (PersistentGathering)")
F.PersistentGathering_m_CommunityType = ProtoField.uint32("PersistentGathering_m_CommunityType", "m_CommunityType (uint32)")
F.PersistentGathering_m_Password_len = ProtoField.uint16("PersistentGathering_m_Password_len", "m_Password length (String)")
F.PersistentGathering_m_Password_data = ProtoField.string("PersistentGathering_m_Password_data", "m_Password data (String)")
F.PersistentGathering_m_Attribs_len = ProtoField.uint32("PersistentGathering_m_Attribs_len", "m_Attribs length (uint32)")
F.PersistentGathering_m_Attribs_item = ProtoField.uint32("PersistentGathering_m_Attribs_item", "m_Attribs (uint32)")
F.PersistentGathering_m_ApplicationBuffer_len = ProtoField.uint32("PersistentGathering_m_ApplicationBuffer_len", "m_ApplicationBuffer length (Buffer)")
F.PersistentGathering_m_ApplicationBuffer_data = ProtoField.bytes("PersistentGathering_m_ApplicationBuffer_data", "m_ApplicationBuffer data (Buffer)")
F.PersistentGathering_m_ParticipationStartDate = ProtoField.uint64("PersistentGathering_m_ParticipationStartDate", "m_ParticipationStartDate (uint64)")
F.PersistentGathering_m_ParticipationEndDate = ProtoField.uint64("PersistentGathering_m_ParticipationEndDate", "m_ParticipationEndDate (uint64)")
F.PersistentGathering_m_MatchmakeSessionCount = ProtoField.uint32("PersistentGathering_m_MatchmakeSessionCount", "m_MatchmakeSessionCount (uint32)")
F.PersistentGathering_m_ParticipationCount = ProtoField.uint32("PersistentGathering_m_ParticipationCount", "m_ParticipationCount (uint32)")
F.CreateMatchmakeSessionParam = ProtoField.bytes("CreateMatchmakeSessionParam", "CreateMatchmakeSessionParam (CreateMatchmakeSessionParam)")
F.CreateMatchmakeSessionParam_additionalParticipants_len = ProtoField.uint32("CreateMatchmakeSessionParam_additionalParticipants_len", "additionalParticipants length (uint32)")
F.CreateMatchmakeSessionParam_additionalParticipants_item = ProtoField.uint32("CreateMatchmakeSessionParam_additionalParticipants_item", "additionalParticipants (uint32)")
F.CreateMatchmakeSessionParam_gidForParticipationCheck = ProtoField.uint32("CreateMatchmakeSessionParam_gidForParticipationCheck", "gidForParticipationCheck (uint32)")
F.CreateMatchmakeSessionParam_createMatchmakeSessionOption = ProtoField.uint32("CreateMatchmakeSessionParam_createMatchmakeSessionOption", "createMatchmakeSessionOption (uint32)")
F.CreateMatchmakeSessionParam_joinMessage_len = ProtoField.uint16("CreateMatchmakeSessionParam_joinMessage_len", "joinMessage length (String)")
F.CreateMatchmakeSessionParam_joinMessage_data = ProtoField.string("CreateMatchmakeSessionParam_joinMessage_data", "joinMessage data (String)")
F.CreateMatchmakeSessionParam_participationCount = ProtoField.uint16("CreateMatchmakeSessionParam_participationCount", "participationCount (uint16)")
F.JoinMatchmakeSessionParam = ProtoField.bytes("JoinMatchmakeSessionParam", "JoinMatchmakeSessionParam (JoinMatchmakeSessionParam)")
F.JoinMatchmakeSessionParam_gid = ProtoField.uint32("JoinMatchmakeSessionParam_gid", "gid (uint32)")
F.JoinMatchmakeSessionParam_additionalParticipants_len = ProtoField.uint32("JoinMatchmakeSessionParam_additionalParticipants_len", "additionalParticipants length (uint32)")
F.JoinMatchmakeSessionParam_additionalParticipants_item = ProtoField.uint32("JoinMatchmakeSessionParam_additionalParticipants_item", "additionalParticipants (uint32)")
F.JoinMatchmakeSessionParam_gidForParticipationCheck = ProtoField.uint32("JoinMatchmakeSessionParam_gidForParticipationCheck", "gidForParticipationCheck (uint32)")
F.JoinMatchmakeSessionParam_joinMatchmakeSessionOption = ProtoField.uint32("JoinMatchmakeSessionParam_joinMatchmakeSessionOption", "joinMatchmakeSessionOption (uint32)")
F.JoinMatchmakeSessionParam_joinMatchmakeSessionBehavior = ProtoField.uint8("JoinMatchmakeSessionParam_joinMatchmakeSessionBehavior", "joinMatchmakeSessionBehavior (uint8)")
F.JoinMatchmakeSessionParam_strUserPassword_len = ProtoField.uint16("JoinMatchmakeSessionParam_strUserPassword_len", "strUserPassword length (String)")
F.JoinMatchmakeSessionParam_strUserPassword_data = ProtoField.string("JoinMatchmakeSessionParam_strUserPassword_data", "strUserPassword data (String)")
F.JoinMatchmakeSessionParam_strSystemPassword_len = ProtoField.uint16("JoinMatchmakeSessionParam_strSystemPassword_len", "strSystemPassword length (String)")
F.JoinMatchmakeSessionParam_strSystemPassword_data = ProtoField.string("JoinMatchmakeSessionParam_strSystemPassword_data", "strSystemPassword data (String)")
F.JoinMatchmakeSessionParam_joinMessage_len = ProtoField.uint16("JoinMatchmakeSessionParam_joinMessage_len", "joinMessage length (String)")
F.JoinMatchmakeSessionParam_joinMessage_data = ProtoField.string("JoinMatchmakeSessionParam_joinMessage_data", "joinMessage data (String)")
F.JoinMatchmakeSessionParam_participationCount = ProtoField.uint16("JoinMatchmakeSessionParam_participationCount", "participationCount (uint16)")
F.JoinMatchmakeSessionParam_extraParticipants = ProtoField.uint16("JoinMatchmakeSessionParam_extraParticipants", "extraParticipants (uint16)")
F.UpdateMatchmakeSessionParam = ProtoField.bytes("UpdateMatchmakeSessionParam", "UpdateMatchmakeSessionParam (UpdateMatchmakeSessionParam)")
F.UpdateMatchmakeSessionParam_gid = ProtoField.uint32("UpdateMatchmakeSessionParam_gid", "gid (uint32)")
F.UpdateMatchmakeSessionParam_modificationFlag = ProtoField.uint32("UpdateMatchmakeSessionParam_modificationFlag", "modificationFlag (uint32)")
F.UpdateMatchmakeSessionParam_attributes_len = ProtoField.uint32("UpdateMatchmakeSessionParam_attributes_len", "attributes length (uint32)")
F.UpdateMatchmakeSessionParam_attributes_item = ProtoField.uint32("UpdateMatchmakeSessionParam_attributes_item", "attributes (uint32)")
F.UpdateMatchmakeSessionParam_openParticipation = ProtoField.bool("UpdateMatchmakeSessionParam_openParticipation", "openParticipation (bool)")
F.UpdateMatchmakeSessionParam_applicationBuffer_len = ProtoField.uint32("UpdateMatchmakeSessionParam_applicationBuffer_len", "applicationBuffer length (Buffer)")
F.UpdateMatchmakeSessionParam_applicationBuffer_data = ProtoField.bytes("UpdateMatchmakeSessionParam_applicationBuffer_data", "applicationBuffer data (Buffer)")
F.UpdateMatchmakeSessionParam_progressScore = ProtoField.uint8("UpdateMatchmakeSessionParam_progressScore", "progressScore (uint8)")
F.UpdateMatchmakeSessionParam_startedTime = ProtoField.uint64("UpdateMatchmakeSessionParam_startedTime", "startedTime (uint64)")
F.UpdateMatchmakeSessionParam_userPassword_len = ProtoField.uint16("UpdateMatchmakeSessionParam_userPassword_len", "userPassword length (String)")
F.UpdateMatchmakeSessionParam_userPassword_data = ProtoField.string("UpdateMatchmakeSessionParam_userPassword_data", "userPassword data (String)")
F.UpdateMatchmakeSessionParam_gameMode = ProtoField.uint32("UpdateMatchmakeSessionParam_gameMode", "gameMode (uint32)")
F.UpdateMatchmakeSessionParam_description_len = ProtoField.uint16("UpdateMatchmakeSessionParam_description_len", "description length (String)")
F.UpdateMatchmakeSessionParam_description_data = ProtoField.string("UpdateMatchmakeSessionParam_description_data", "description data (String)")
F.UpdateMatchmakeSessionParam_minParticipants = ProtoField.uint16("UpdateMatchmakeSessionParam_minParticipants", "minParticipants (uint16)")
F.UpdateMatchmakeSessionParam_maxParticipants = ProtoField.uint16("UpdateMatchmakeSessionParam_maxParticipants", "maxParticipants (uint16)")
F.UpdateMatchmakeSessionParam_matchmakeSystemType = ProtoField.uint32("UpdateMatchmakeSessionParam_matchmakeSystemType", "matchmakeSystemType (uint32)")
F.UpdateMatchmakeSessionParam_participationPolicy = ProtoField.uint32("UpdateMatchmakeSessionParam_participationPolicy", "participationPolicy (uint32)")
F.UpdateMatchmakeSessionParam_policyArgument = ProtoField.uint32("UpdateMatchmakeSessionParam_policyArgument", "policyArgument (uint32)")
F.UpdateMatchmakeSessionParam_codeword_len = ProtoField.uint16("UpdateMatchmakeSessionParam_codeword_len", "codeword length (String)")
F.UpdateMatchmakeSessionParam_codeword_data = ProtoField.string("UpdateMatchmakeSessionParam_codeword_data", "codeword data (String)")
F.AutoMatchmakeParam = ProtoField.bytes("AutoMatchmakeParam", "AutoMatchmakeParam (AutoMatchmakeParam)")
F.AutoMatchmakeParam_additionalParticipants_len = ProtoField.uint32("AutoMatchmakeParam_additionalParticipants_len", "additionalParticipants length (uint32)")
F.AutoMatchmakeParam_additionalParticipants_item = ProtoField.uint32("AutoMatchmakeParam_additionalParticipants_item", "additionalParticipants (uint32)")
F.AutoMatchmakeParam_gidForParticipationCheck = ProtoField.uint32("AutoMatchmakeParam_gidForParticipationCheck", "gidForParticipationCheck (uint32)")
F.AutoMatchmakeParam_autoMatchmakeOption = ProtoField.uint32("AutoMatchmakeParam_autoMatchmakeOption", "autoMatchmakeOption (uint32)")
F.AutoMatchmakeParam_joinMessage_len = ProtoField.uint16("AutoMatchmakeParam_joinMessage_len", "joinMessage length (String)")
F.AutoMatchmakeParam_joinMessage_data = ProtoField.string("AutoMatchmakeParam_joinMessage_data", "joinMessage data (String)")
F.AutoMatchmakeParam_participationCount = ProtoField.uint16("AutoMatchmakeParam_participationCount", "participationCount (uint16)")
F.AutoMatchmakeParam_lstSearchCriteria_len = ProtoField.uint32("AutoMatchmakeParam_lstSearchCriteria_len", "lstSearchCriteria length (uint32)")
F.AutoMatchmakeParam_targetGids_len = ProtoField.uint32("AutoMatchmakeParam_targetGids_len", "targetGids length (uint32)")
F.AutoMatchmakeParam_targetGids_item = ProtoField.uint32("AutoMatchmakeParam_targetGids_item", "targetGids (uint32)")
F.FindMatchmakeSessionByParticipantParam = ProtoField.bytes("FindMatchmakeSessionByParticipantParam", "FindMatchmakeSessionByParticipantParam (FindMatchmakeSessionByParticipantParam)")
F.FindMatchmakeSessionByParticipantParam_m_principalIdList_len = ProtoField.uint32("FindMatchmakeSessionByParticipantParam_m_principalIdList_len", "m_principalIdList length (uint32)")
F.FindMatchmakeSessionByParticipantParam_m_principalIdList_item = ProtoField.uint32("FindMatchmakeSessionByParticipantParam_m_principalIdList_item", "m_principalIdList (uint32)")
F.FindMatchmakeSessionByParticipantParam_m_resultOptions = ProtoField.uint32("FindMatchmakeSessionByParticipantParam_m_resultOptions", "m_resultOptions (uint32)")
F.FindMatchmakeSessionByParticipantResult = ProtoField.bytes("FindMatchmakeSessionByParticipantResult", "FindMatchmakeSessionByParticipantResult (FindMatchmakeSessionByParticipantResult)")
F.FindMatchmakeSessionByParticipantResult_m_principalId = ProtoField.uint32("FindMatchmakeSessionByParticipantResult_m_principalId", "m_principalId (uint32)")
F.GatheringURLs = ProtoField.bytes("GatheringURLs", "GatheringURLs (GatheringURLs)")
F.GatheringURLs_m_gid = ProtoField.uint32("GatheringURLs_m_gid", "m_gid (uint32)")
F.GatheringURLs_m_lstStationURLs_len = ProtoField.uint32("GatheringURLs_m_lstStationURLs_len", "m_lstStationURLs length (uint32)")
F.GatheringURLs_m_lstStationURLs_item_len = ProtoField.uint16("GatheringURLs_m_lstStationURLs_item_len", "m_lstStationURLs length (String)")
F.GatheringURLs_m_lstStationURLs_item_data = ProtoField.string("GatheringURLs_m_lstStationURLs_item_data", "m_lstStationURLs data (String)")
F.GatheringStats = ProtoField.bytes("GatheringStats", "GatheringStats (GatheringStats)")
F.GatheringStats_m_pidParticipant = ProtoField.uint32("GatheringStats_m_pidParticipant", "m_pidParticipant (uint32)")
F.GatheringStats_m_uiFlags = ProtoField.uint32("GatheringStats_m_uiFlags", "m_uiFlags (uint32)")
F.GatheringStats_m_lstValues_len = ProtoField.uint32("GatheringStats_m_lstValues_len", "m_lstValues length (uint32)")
F.GatheringStats_m_lstValues_item = ProtoField.float("GatheringStats_m_lstValues_item", "m_lstValues (float)")
F.Invitation = ProtoField.bytes("Invitation", "Invitation (Invitation)")
F.Invitation_m_idGathering = ProtoField.uint32("Invitation_m_idGathering", "m_idGathering (uint32)")
F.Invitation_m_idGuest = ProtoField.uint32("Invitation_m_idGuest", "m_idGuest (uint32)")
F.Invitation_m_strMessage_len = ProtoField.uint16("Invitation_m_strMessage_len", "m_strMessage length (String)")
F.Invitation_m_strMessage_data = ProtoField.string("Invitation_m_strMessage_data", "m_strMessage data (String)")
F.ParticipantDetails = ProtoField.bytes("ParticipantDetails", "ParticipantDetails (ParticipantDetails)")
F.ParticipantDetails_m_idParticipant = ProtoField.uint32("ParticipantDetails_m_idParticipant", "m_idParticipant (uint32)")
F.ParticipantDetails_m_strName_len = ProtoField.uint16("ParticipantDetails_m_strName_len", "m_strName length (String)")
F.ParticipantDetails_m_strName_data = ProtoField.string("ParticipantDetails_m_strName_data", "m_strName data (String)")
F.ParticipantDetails_m_strMessage_len = ProtoField.uint16("ParticipantDetails_m_strMessage_len", "m_strMessage length (String)")
F.ParticipantDetails_m_strMessage_data = ProtoField.string("ParticipantDetails_m_strMessage_data", "m_strMessage data (String)")
F.ParticipantDetails_m_uiParticipants = ProtoField.uint16("ParticipantDetails_m_uiParticipants", "m_uiParticipants (uint16)")
F.DeletionEntry = ProtoField.bytes("DeletionEntry", "DeletionEntry (DeletionEntry)")
F.DeletionEntry_m_idGathering = ProtoField.uint32("DeletionEntry_m_idGathering", "m_idGathering (uint32)")
F.DeletionEntry_m_pid = ProtoField.uint32("DeletionEntry_m_pid", "m_pid (uint32)")
F.DeletionEntry_m_uiReason = ProtoField.uint32("DeletionEntry_m_uiReason", "m_uiReason (uint32)")
F.PlayingSession = ProtoField.bytes("PlayingSession", "PlayingSession (PlayingSession)")
F.PlayingSession_m_PrincipalId = ProtoField.uint32("PlayingSession_m_PrincipalId", "m_PrincipalId (uint32)")
F.PlayingSession_m_Gathering_data_bytes = ProtoField.bytes("PlayingSession_m_Gathering_data_bytes", "m_Gathering data bytes (bytes)")
F.PlayingSession_m_Gathering_type_name_len = ProtoField.uint16("PlayingSession_m_Gathering_type_name_len", "m_Gathering_type_name length (String)")
F.PlayingSession_m_Gathering_type_name_data = ProtoField.string("PlayingSession_m_Gathering_type_name_data", "m_Gathering_type_name data (String)")
F.PlayingSession_m_Gathering_len_plus_four = ProtoField.uint32("PlayingSession_m_Gathering_len_plus_four", "m_Gathering_len_plus_four (uint32)")
F.PlayingSession_m_Gathering_data_len = ProtoField.uint32("PlayingSession_m_Gathering_data_len", "m_Gathering_data_len (uint32)")
F.SimplePlayingSession = ProtoField.bytes("SimplePlayingSession", "SimplePlayingSession (SimplePlayingSession)")
F.SimplePlayingSession_m_PrincipalID = ProtoField.uint32("SimplePlayingSession_m_PrincipalID", "m_PrincipalID (uint32)")
F.SimplePlayingSession_m_GatheringID = ProtoField.uint32("SimplePlayingSession_m_GatheringID", "m_GatheringID (uint32)")
F.SimplePlayingSession_m_GameMode = ProtoField.uint32("SimplePlayingSession_m_GameMode", "m_GameMode (uint32)")
F.SimplePlayingSession_m_Attribute_0 = ProtoField.uint32("SimplePlayingSession_m_Attribute_0", "m_Attribute_0 (uint32)")
F.SimpleCommunity = ProtoField.bytes("SimpleCommunity", "SimpleCommunity (SimpleCommunity)")
F.SimpleCommunity_m_GatheringID = ProtoField.uint32("SimpleCommunity_m_GatheringID", "m_GatheringID (uint32)")
F.SimpleCommunity_m_MatchmakeSessionCount = ProtoField.uint32("SimpleCommunity_m_MatchmakeSessionCount", "m_MatchmakeSessionCount (uint32)")
F.PlayerStatUpdate = ProtoField.bytes("PlayerStatUpdate", "PlayerStatUpdate (PlayerStatUpdate)")
F.PlayerStatUpdate_m_boardID = ProtoField.uint32("PlayerStatUpdate_m_boardID", "m_boardID (uint32)")
F.PlayerStatUpdate_m_contextIDs_len = ProtoField.uint32("PlayerStatUpdate_m_contextIDs_len", "m_contextIDs length (uint32)")
F.PlayerStatUpdate_m_contextIDs_item = ProtoField.uint32("PlayerStatUpdate_m_contextIDs_item", "m_contextIDs (uint32)")
F.PlayerStatUpdate_m_stats_len = ProtoField.uint32("PlayerStatUpdate_m_stats_len", "m_stats length (uint32)")
F.StatboardQuery = ProtoField.bytes("StatboardQuery", "StatboardQuery (StatboardQuery)")
F.StatboardQuery_m_boardID = ProtoField.uint32("StatboardQuery_m_boardID", "m_boardID (uint32)")
F.StatboardQuery_m_contextIDs_len = ProtoField.uint32("StatboardQuery_m_contextIDs_len", "m_contextIDs length (uint32)")
F.StatboardQuery_m_contextIDs_item = ProtoField.uint32("StatboardQuery_m_contextIDs_item", "m_contextIDs (uint32)")
F.StatboardQuery_m_resetFrequency = ProtoField.uint32("StatboardQuery_m_resetFrequency", "m_resetFrequency (uint32)")
F.StatboardQuery_m_statIDs_len = ProtoField.uint32("StatboardQuery_m_statIDs_len", "m_statIDs length (uint32)")
F.StatboardQuery_m_statIDs_item = ProtoField.uint32("StatboardQuery_m_statIDs_item", "m_statIDs (uint32)")
F.StatboardQuery_m_sortCriterias_len = ProtoField.uint32("StatboardQuery_m_sortCriterias_len", "m_sortCriterias length (uint32)")
F.LeaderboardQuery = ProtoField.bytes("LeaderboardQuery", "LeaderboardQuery (LeaderboardQuery)")
F.LeaderboardQuery_m_boardID = ProtoField.uint32("LeaderboardQuery_m_boardID", "m_boardID (uint32)")
F.LeaderboardQuery_m_contextID = ProtoField.uint32("LeaderboardQuery_m_contextID", "m_contextID (uint32)")
F.LeaderboardQuery_m_resetFrequency = ProtoField.uint32("LeaderboardQuery_m_resetFrequency", "m_resetFrequency (uint32)")
F.LeaderboardQuery_m_statIDs_len = ProtoField.uint32("LeaderboardQuery_m_statIDs_len", "m_statIDs length (uint32)")
F.LeaderboardQuery_m_statIDs_item = ProtoField.uint32("LeaderboardQuery_m_statIDs_item", "m_statIDs (uint32)")
F.LeaderboardQuery2 = ProtoField.bytes("LeaderboardQuery2", "LeaderboardQuery2 (LeaderboardQuery2)")
F.LeaderboardQuery2_m_boardID = ProtoField.uint32("LeaderboardQuery2_m_boardID", "m_boardID (uint32)")
F.LeaderboardQuery2_m_contextID = ProtoField.uint32("LeaderboardQuery2_m_contextID", "m_contextID (uint32)")
F.LeaderboardQuery2_m_resetFrequency = ProtoField.uint32("LeaderboardQuery2_m_resetFrequency", "m_resetFrequency (uint32)")
F.LeaderboardQuery2_m_statIDs_len = ProtoField.uint32("LeaderboardQuery2_m_statIDs_len", "m_statIDs length (uint32)")
F.LeaderboardQuery2_m_statIDs_item = ProtoField.uint32("LeaderboardQuery2_m_statIDs_item", "m_statIDs (uint32)")
F.LeaderboardQuery2_m_estimatedPIDs_len = ProtoField.uint32("LeaderboardQuery2_m_estimatedPIDs_len", "m_estimatedPIDs length (uint32)")
F.LeaderboardQuery2_m_estimatedPIDs_item = ProtoField.uint32("LeaderboardQuery2_m_estimatedPIDs_item", "m_estimatedPIDs (uint32)")
F.StatboardResult = ProtoField.bytes("StatboardResult", "StatboardResult (StatboardResult)")
F.StatboardResult_m_boardID = ProtoField.uint32("StatboardResult_m_boardID", "m_boardID (uint32)")
F.StatboardResult_m_contextID = ProtoField.uint32("StatboardResult_m_contextID", "m_contextID (uint32)")
F.StatboardResult_m_resetFrequency = ProtoField.uint32("StatboardResult_m_resetFrequency", "m_resetFrequency (uint32)")
F.StatboardResult_m_playerStatSets_len = ProtoField.uint32("StatboardResult_m_playerStatSets_len", "m_playerStatSets length (uint32)")
F.StatboardResult_m_defaultStatValues_len = ProtoField.uint32("StatboardResult_m_defaultStatValues_len", "m_defaultStatValues length (uint32)")
F.LeaderboardResult = ProtoField.bytes("LeaderboardResult", "LeaderboardResult (LeaderboardResult)")
F.LeaderboardResult_m_boardID = ProtoField.uint32("LeaderboardResult_m_boardID", "m_boardID (uint32)")
F.LeaderboardResult_m_contextID = ProtoField.uint32("LeaderboardResult_m_contextID", "m_contextID (uint32)")
F.LeaderboardResult_m_resetFrequency = ProtoField.uint32("LeaderboardResult_m_resetFrequency", "m_resetFrequency (uint32)")
F.LeaderboardResult_m_leaderboardTotalPlayerCount = ProtoField.uint32("LeaderboardResult_m_leaderboardTotalPlayerCount", "m_leaderboardTotalPlayerCount (uint32)")
F.LeaderboardResult_m_playerRanks_len = ProtoField.uint32("LeaderboardResult_m_playerRanks_len", "m_playerRanks length (uint32)")
F.StatboardHistoryQuery = ProtoField.bytes("StatboardHistoryQuery", "StatboardHistoryQuery (StatboardHistoryQuery)")
F.StatboardHistoryQuery_m_playerPIDs_len = ProtoField.uint32("StatboardHistoryQuery_m_playerPIDs_len", "m_playerPIDs length (uint32)")
F.StatboardHistoryQuery_m_playerPIDs_item = ProtoField.uint32("StatboardHistoryQuery_m_playerPIDs_item", "m_playerPIDs (uint32)")
F.StatboardHistoryQuery_m_boardID = ProtoField.uint32("StatboardHistoryQuery_m_boardID", "m_boardID (uint32)")
F.StatboardHistoryQuery_m_contextIDs_len = ProtoField.uint32("StatboardHistoryQuery_m_contextIDs_len", "m_contextIDs length (uint32)")
F.StatboardHistoryQuery_m_contextIDs_item = ProtoField.uint32("StatboardHistoryQuery_m_contextIDs_item", "m_contextIDs (uint32)")
F.StatboardHistoryQuery_m_statIDs_len = ProtoField.uint32("StatboardHistoryQuery_m_statIDs_len", "m_statIDs length (uint32)")
F.StatboardHistoryQuery_m_statIDs_item = ProtoField.uint32("StatboardHistoryQuery_m_statIDs_item", "m_statIDs (uint32)")
F.StatboardHistoryQuery_m_playerStats_len = ProtoField.uint32("StatboardHistoryQuery_m_playerStats_len", "m_playerStats length (uint32)")
F.StatboardHistoryQuery_m_dateRanges_len = ProtoField.uint32("StatboardHistoryQuery_m_dateRanges_len", "m_dateRanges length (uint32)")
F.StatboardHistoryQuery_m_sortCriterias_len = ProtoField.uint32("StatboardHistoryQuery_m_sortCriterias_len", "m_sortCriterias length (uint32)")
F.StatboardHistoryAggregatedQuery = ProtoField.bytes("StatboardHistoryAggregatedQuery", "StatboardHistoryAggregatedQuery (StatboardHistoryAggregatedQuery)")
F.StatboardHistoryAggregatedQuery_m_playerPIDs_len = ProtoField.uint32("StatboardHistoryAggregatedQuery_m_playerPIDs_len", "m_playerPIDs length (uint32)")
F.StatboardHistoryAggregatedQuery_m_playerPIDs_item = ProtoField.uint32("StatboardHistoryAggregatedQuery_m_playerPIDs_item", "m_playerPIDs (uint32)")
F.StatboardHistoryAggregatedQuery_m_boardID = ProtoField.uint32("StatboardHistoryAggregatedQuery_m_boardID", "m_boardID (uint32)")
F.StatboardHistoryAggregatedQuery_m_contextIDs_len = ProtoField.uint32("StatboardHistoryAggregatedQuery_m_contextIDs_len", "m_contextIDs length (uint32)")
F.StatboardHistoryAggregatedQuery_m_contextIDs_item = ProtoField.uint32("StatboardHistoryAggregatedQuery_m_contextIDs_item", "m_contextIDs (uint32)")
F.StatboardHistoryAggregatedQuery_m_statIDs_len = ProtoField.uint32("StatboardHistoryAggregatedQuery_m_statIDs_len", "m_statIDs length (uint32)")
F.StatboardHistoryAggregatedQuery_m_statIDs_item = ProtoField.uint32("StatboardHistoryAggregatedQuery_m_statIDs_item", "m_statIDs (uint32)")
F.StatboardHistoryAggregatedQuery_m_playerStats_len = ProtoField.uint32("StatboardHistoryAggregatedQuery_m_playerStats_len", "m_playerStats length (uint32)")
F.StatboardHistoryAggregatedQuery_m_dateRanges_len = ProtoField.uint32("StatboardHistoryAggregatedQuery_m_dateRanges_len", "m_dateRanges length (uint32)")
F.StatboardHistoryAggregatedQuery_m_sortCriterias_len = ProtoField.uint32("StatboardHistoryAggregatedQuery_m_sortCriterias_len", "m_sortCriterias length (uint32)")
F.StatboardHistoryAggregatedQuery_m_filterOption = ProtoField.uint32("StatboardHistoryAggregatedQuery_m_filterOption", "m_filterOption (uint32)")
F.LeaderboardHistoryQuery = ProtoField.bytes("LeaderboardHistoryQuery", "LeaderboardHistoryQuery (LeaderboardHistoryQuery)")
F.LeaderboardHistoryQuery_m_playerPIDs_len = ProtoField.uint32("LeaderboardHistoryQuery_m_playerPIDs_len", "m_playerPIDs length (uint32)")
F.LeaderboardHistoryQuery_m_playerPIDs_item = ProtoField.uint32("LeaderboardHistoryQuery_m_playerPIDs_item", "m_playerPIDs (uint32)")
F.LeaderboardHistoryQuery_m_boardID = ProtoField.uint32("LeaderboardHistoryQuery_m_boardID", "m_boardID (uint32)")
F.LeaderboardHistoryQuery_m_contextID = ProtoField.uint32("LeaderboardHistoryQuery_m_contextID", "m_contextID (uint32)")
F.LeaderboardHistoryQuery_m_dateRanges_len = ProtoField.uint32("LeaderboardHistoryQuery_m_dateRanges_len", "m_dateRanges length (uint32)")
F.LeaderboardHistoryQuery_m_filterOption = ProtoField.uint32("LeaderboardHistoryQuery_m_filterOption", "m_filterOption (uint32)")
F.PopulationStatQuery = ProtoField.bytes("PopulationStatQuery", "PopulationStatQuery (PopulationStatQuery)")
F.PopulationStatQuery_m_boardID = ProtoField.uint32("PopulationStatQuery_m_boardID", "m_boardID (uint32)")
F.PopulationStatQuery_m_contextID = ProtoField.uint32("PopulationStatQuery_m_contextID", "m_contextID (uint32)")
F.PopulationStatQuery_m_statIDs_len = ProtoField.uint32("PopulationStatQuery_m_statIDs_len", "m_statIDs length (uint32)")
F.PopulationStatQuery_m_statIDs_item = ProtoField.uint32("PopulationStatQuery_m_statIDs_item", "m_statIDs (uint32)")
F.PopulationStatResult = ProtoField.bytes("PopulationStatResult", "PopulationStatResult (PopulationStatResult)")
F.PopulationStatResult_m_boardID = ProtoField.uint32("PopulationStatResult_m_boardID", "m_boardID (uint32)")
F.PopulationStatResult_m_contextID = ProtoField.uint32("PopulationStatResult_m_contextID", "m_contextID (uint32)")
F.PopulationStatResult_m_statID = ProtoField.uint32("PopulationStatResult_m_statID", "m_statID (uint32)")
F.PopulationStatResult_m_sum = ProtoField.double("PopulationStatResult_m_sum", "m_sum (double)")
F.PopulationStatResult_m_average = ProtoField.double("PopulationStatResult_m_average", "m_average (double)")
F.PopulationStatResult_m_standardDeviation = ProtoField.double("PopulationStatResult_m_standardDeviation", "m_standardDeviation (double)")
F.UplayAction = ProtoField.bytes("UplayAction", "UplayAction (UplayAction)")
F.UplayAction_m_code_len = ProtoField.uint16("UplayAction_m_code_len", "m_code length (String)")
F.UplayAction_m_code_data = ProtoField.string("UplayAction_m_code_data", "m_code data (String)")
F.UplayAction_m_name_len = ProtoField.uint16("UplayAction_m_name_len", "m_name length (String)")
F.UplayAction_m_name_data = ProtoField.string("UplayAction_m_name_data", "m_name data (String)")
F.UplayAction_m_description_len = ProtoField.uint16("UplayAction_m_description_len", "m_description length (String)")
F.UplayAction_m_description_data = ProtoField.string("UplayAction_m_description_data", "m_description data (String)")
F.UplayAction_m_value = ProtoField.int32("UplayAction_m_value", "m_value (uint32)")
F.UplayAction_m_gameCode_len = ProtoField.uint16("UplayAction_m_gameCode_len", "m_gameCode length (String)")
F.UplayAction_m_gameCode_data = ProtoField.string("UplayAction_m_gameCode_data", "m_gameCode data (String)")
F.UplayAction_m_platforms_len = ProtoField.uint32("UplayAction_m_platforms_len", "m_platforms length (uint32)")
F.UplayReward = ProtoField.bytes("UplayReward", "UplayReward (UplayReward)")
F.UplayReward_m_code_len = ProtoField.uint16("UplayReward_m_code_len", "m_code length (String)")
F.UplayReward_m_code_data = ProtoField.string("UplayReward_m_code_data", "m_code data (String)")
F.UplayReward_m_name_len = ProtoField.uint16("UplayReward_m_name_len", "m_name length (String)")
F.UplayReward_m_name_data = ProtoField.string("UplayReward_m_name_data", "m_name data (String)")
F.UplayReward_m_description_len = ProtoField.uint16("UplayReward_m_description_len", "m_description length (String)")
F.UplayReward_m_description_data = ProtoField.string("UplayReward_m_description_data", "m_description data (String)")
F.UplayReward_m_value = ProtoField.int32("UplayReward_m_value", "m_value (uint32)")
F.UplayReward_m_rewardTypeName_len = ProtoField.uint16("UplayReward_m_rewardTypeName_len", "m_rewardTypeName length (String)")
F.UplayReward_m_rewardTypeName_data = ProtoField.string("UplayReward_m_rewardTypeName_data", "m_rewardTypeName data (String)")
F.UplayReward_m_gameCode_len = ProtoField.uint16("UplayReward_m_gameCode_len", "m_gameCode length (String)")
F.UplayReward_m_gameCode_data = ProtoField.string("UplayReward_m_gameCode_data", "m_gameCode data (String)")
F.UplayReward_m_platforms_len = ProtoField.uint32("UplayReward_m_platforms_len", "m_platforms length (uint32)")
F.UplaySection = ProtoField.bytes("UplaySection", "UplaySection (UplaySection)")
F.UplaySection_m_key_len = ProtoField.uint16("UplaySection_m_key_len", "m_key length (String)")
F.UplaySection_m_key_data = ProtoField.string("UplaySection_m_key_data", "m_key data (String)")
F.UplaySection_m_name_len = ProtoField.uint16("UplaySection_m_name_len", "m_name length (String)")
F.UplaySection_m_name_data = ProtoField.string("UplaySection_m_name_data", "m_name data (String)")
F.UplaySection_m_typeName_len = ProtoField.uint16("UplaySection_m_typeName_len", "m_typeName length (String)")
F.UplaySection_m_typeName_data = ProtoField.string("UplaySection_m_typeName_data", "m_typeName data (String)")
F.UplaySection_m_menuTypeName_len = ProtoField.uint16("UplaySection_m_menuTypeName_len", "m_menuTypeName length (String)")
F.UplaySection_m_menuTypeName_data = ProtoField.string("UplaySection_m_menuTypeName_data", "m_menuTypeName data (String)")
F.UplaySection_m_contentList_len = ProtoField.uint32("UplaySection_m_contentList_len", "m_contentList length (uint32)")
F.UplaySection_m_gameCode_len = ProtoField.uint16("UplaySection_m_gameCode_len", "m_gameCode length (String)")
F.UplaySection_m_gameCode_data = ProtoField.string("UplaySection_m_gameCode_data", "m_gameCode data (String)")
F.UplaySection_m_platformCode_len = ProtoField.uint16("UplaySection_m_platformCode_len", "m_platformCode length (String)")
F.UplaySection_m_platformCode_data = ProtoField.string("UplaySection_m_platformCode_data", "m_platformCode data (String)")
F.DataStorePrepareGetParamV1 = ProtoField.bytes("DataStorePrepareGetParamV1", "DataStorePrepareGetParamV1 (DataStorePrepareGetParamV1)")
F.DataStorePrepareGetParamV1_dataId = ProtoField.uint32("DataStorePrepareGetParamV1_dataId", "dataId (uint32)")
F.DataStorePrepareGetParamV1_lockId = ProtoField.uint32("DataStorePrepareGetParamV1_lockId", "lockId (uint32)")
F.DataStorePrepareGetParam = ProtoField.bytes("DataStorePrepareGetParam", "DataStorePrepareGetParam (DataStorePrepareGetParam)")
F.DataStorePrepareGetParam_dataId = ProtoField.uint64("DataStorePrepareGetParam_dataId", "dataId (uint64)")
F.DataStorePrepareGetParam_lockId = ProtoField.uint32("DataStorePrepareGetParam_lockId", "lockId (uint32)")
F.DataStorePrepareGetParam_accessPassword = ProtoField.uint64("DataStorePrepareGetParam_accessPassword", "accessPassword (uint64)")
F.DataStorePrepareGetParam_extraData_len = ProtoField.uint32("DataStorePrepareGetParam_extraData_len", "extraData length (uint32)")
F.DataStorePrepareGetParam_extraData_item_len = ProtoField.uint16("DataStorePrepareGetParam_extraData_item_len", "extraData length (String)")
F.DataStorePrepareGetParam_extraData_item_data = ProtoField.string("DataStorePrepareGetParam_extraData_item_data", "extraData data (String)")
F.DataStoreReqGetInfoV1 = ProtoField.bytes("DataStoreReqGetInfoV1", "DataStoreReqGetInfoV1 (DataStoreReqGetInfoV1)")
F.DataStoreReqGetInfoV1_url_len = ProtoField.uint16("DataStoreReqGetInfoV1_url_len", "url length (String)")
F.DataStoreReqGetInfoV1_url_data = ProtoField.string("DataStoreReqGetInfoV1_url_data", "url data (String)")
F.DataStoreReqGetInfoV1_requestHeaders_len = ProtoField.uint32("DataStoreReqGetInfoV1_requestHeaders_len", "requestHeaders length (uint32)")
F.DataStoreReqGetInfoV1_size = ProtoField.uint32("DataStoreReqGetInfoV1_size", "size (uint32)")
F.DataStoreReqGetInfoV1_rootCaCert_len = ProtoField.uint32("DataStoreReqGetInfoV1_rootCaCert_len", "rootCaCert length (Buffer)")
F.DataStoreReqGetInfoV1_rootCaCert_data = ProtoField.bytes("DataStoreReqGetInfoV1_rootCaCert_data", "rootCaCert data (Buffer)")
F.DataStoreReqGetAdditionalMeta = ProtoField.bytes("DataStoreReqGetAdditionalMeta", "DataStoreReqGetAdditionalMeta (DataStoreReqGetAdditionalMeta)")
F.DataStoreReqGetAdditionalMeta_ownerId = ProtoField.uint32("DataStoreReqGetAdditionalMeta_ownerId", "ownerId (uint32)")
F.DataStoreReqGetAdditionalMeta_dataType = ProtoField.uint16("DataStoreReqGetAdditionalMeta_dataType", "dataType (uint16)")
F.DataStoreReqGetAdditionalMeta_version = ProtoField.uint16("DataStoreReqGetAdditionalMeta_version", "version (uint16)")
F.DataStoreReqGetAdditionalMeta_metaBinary_len = ProtoField.uint16("DataStoreReqGetAdditionalMeta_metaBinary_len", "metaBinary length (Buffer)")
F.DataStoreReqGetAdditionalMeta_metaBinary_data = ProtoField.bytes("DataStoreReqGetAdditionalMeta_metaBinary_data", "metaBinary data (Buffer)")
F.DataStorePreparePostParamV1 = ProtoField.bytes("DataStorePreparePostParamV1", "DataStorePreparePostParamV1 (DataStorePreparePostParamV1)")
F.DataStorePreparePostParamV1_size = ProtoField.uint32("DataStorePreparePostParamV1_size", "size (uint32)")
F.DataStorePreparePostParamV1_name_len = ProtoField.uint16("DataStorePreparePostParamV1_name_len", "name length (String)")
F.DataStorePreparePostParamV1_name_data = ProtoField.string("DataStorePreparePostParamV1_name_data", "name data (String)")
F.DataStorePreparePostParamV1_dataType = ProtoField.uint16("DataStorePreparePostParamV1_dataType", "dataType (uint16)")
F.DataStorePreparePostParamV1_metaBinary_len = ProtoField.uint16("DataStorePreparePostParamV1_metaBinary_len", "metaBinary length (Buffer)")
F.DataStorePreparePostParamV1_metaBinary_data = ProtoField.bytes("DataStorePreparePostParamV1_metaBinary_data", "metaBinary data (Buffer)")
F.DataStorePreparePostParamV1_flag = ProtoField.uint32("DataStorePreparePostParamV1_flag", "flag (uint32)")
F.DataStorePreparePostParamV1_period = ProtoField.uint16("DataStorePreparePostParamV1_period", "period (uint16)")
F.DataStorePreparePostParamV1_referDataId = ProtoField.uint32("DataStorePreparePostParamV1_referDataId", "referDataId (uint32)")
F.DataStorePreparePostParamV1_tags_len = ProtoField.uint32("DataStorePreparePostParamV1_tags_len", "tags length (uint32)")
F.DataStorePreparePostParamV1_tags_item_len = ProtoField.uint16("DataStorePreparePostParamV1_tags_item_len", "tags length (String)")
F.DataStorePreparePostParamV1_tags_item_data = ProtoField.string("DataStorePreparePostParamV1_tags_item_data", "tags data (String)")
F.DataStorePreparePostParamV1_ratingInitParams_len = ProtoField.uint32("DataStorePreparePostParamV1_ratingInitParams_len", "ratingInitParams length (uint32)")
F.DataStoreReqPostInfoV1 = ProtoField.bytes("DataStoreReqPostInfoV1", "DataStoreReqPostInfoV1 (DataStoreReqPostInfoV1)")
F.DataStoreReqPostInfoV1_dataId = ProtoField.uint32("DataStoreReqPostInfoV1_dataId", "dataId (uint32)")
F.DataStoreReqPostInfoV1_url_len = ProtoField.uint16("DataStoreReqPostInfoV1_url_len", "url length (String)")
F.DataStoreReqPostInfoV1_url_data = ProtoField.string("DataStoreReqPostInfoV1_url_data", "url data (String)")
F.DataStoreReqPostInfoV1_requestHeaders_len = ProtoField.uint32("DataStoreReqPostInfoV1_requestHeaders_len", "requestHeaders length (uint32)")
F.DataStoreReqPostInfoV1_formFields_len = ProtoField.uint32("DataStoreReqPostInfoV1_formFields_len", "formFields length (uint32)")
F.DataStoreReqPostInfoV1_rootCaCert_len = ProtoField.uint32("DataStoreReqPostInfoV1_rootCaCert_len", "rootCaCert length (Buffer)")
F.DataStoreReqPostInfoV1_rootCaCert_data = ProtoField.bytes("DataStoreReqPostInfoV1_rootCaCert_data", "rootCaCert data (Buffer)")
F.DataStoreReqPostInfo = ProtoField.bytes("DataStoreReqPostInfo", "DataStoreReqPostInfo (DataStoreReqPostInfo)")
F.DataStoreReqPostInfo_dataId = ProtoField.uint64("DataStoreReqPostInfo_dataId", "dataId (uint64)")
F.DataStoreReqPostInfo_url_len = ProtoField.uint16("DataStoreReqPostInfo_url_len", "url length (String)")
F.DataStoreReqPostInfo_url_data = ProtoField.string("DataStoreReqPostInfo_url_data", "url data (String)")
F.DataStoreReqPostInfo_requestHeaders_len = ProtoField.uint32("DataStoreReqPostInfo_requestHeaders_len", "requestHeaders length (uint32)")
F.DataStoreReqPostInfo_formFields_len = ProtoField.uint32("DataStoreReqPostInfo_formFields_len", "formFields length (uint32)")
F.DataStoreReqPostInfo_rootCaCert_len = ProtoField.uint32("DataStoreReqPostInfo_rootCaCert_len", "rootCaCert length (Buffer)")
F.DataStoreReqPostInfo_rootCaCert_data = ProtoField.bytes("DataStoreReqPostInfo_rootCaCert_data", "rootCaCert data (Buffer)")
F.DataStoreCompletePostParamV1 = ProtoField.bytes("DataStoreCompletePostParamV1", "DataStoreCompletePostParamV1 (DataStoreCompletePostParamV1)")
F.DataStoreCompletePostParamV1_dataId = ProtoField.uint32("DataStoreCompletePostParamV1_dataId", "dataId (uint32)")
F.DataStoreCompletePostParamV1_isSuccess = ProtoField.bool("DataStoreCompletePostParamV1_isSuccess", "isSuccess (bool)")
F.DataStoreCompletePostParam = ProtoField.bytes("DataStoreCompletePostParam", "DataStoreCompletePostParam (DataStoreCompletePostParam)")
F.DataStoreCompletePostParam_dataId = ProtoField.uint64("DataStoreCompletePostParam_dataId", "dataId (uint64)")
F.DataStoreCompletePostParam_isSuccess = ProtoField.bool("DataStoreCompletePostParam_isSuccess", "isSuccess (bool)")
F.DataStoreDeleteParam = ProtoField.bytes("DataStoreDeleteParam", "DataStoreDeleteParam (DataStoreDeleteParam)")
F.DataStoreDeleteParam_dataId = ProtoField.uint64("DataStoreDeleteParam_dataId", "dataId (uint64)")
F.DataStoreDeleteParam_updatePassword = ProtoField.uint64("DataStoreDeleteParam_updatePassword", "updatePassword (uint64)")
F.DataStoreChangeMetaParamV1 = ProtoField.bytes("DataStoreChangeMetaParamV1", "DataStoreChangeMetaParamV1 (DataStoreChangeMetaParamV1)")
F.DataStoreChangeMetaParamV1_dataId = ProtoField.uint64("DataStoreChangeMetaParamV1_dataId", "dataId (uint64)")
F.DataStoreChangeMetaParamV1_modifiesFlag = ProtoField.uint32("DataStoreChangeMetaParamV1_modifiesFlag", "modifiesFlag (uint32)")
F.DataStoreChangeMetaParamV1_name_len = ProtoField.uint16("DataStoreChangeMetaParamV1_name_len", "name length (String)")
F.DataStoreChangeMetaParamV1_name_data = ProtoField.string("DataStoreChangeMetaParamV1_name_data", "name data (String)")
F.DataStoreChangeMetaParamV1_period = ProtoField.uint16("DataStoreChangeMetaParamV1_period", "period (uint16)")
F.DataStoreChangeMetaParamV1_metaBinary_len = ProtoField.uint16("DataStoreChangeMetaParamV1_metaBinary_len", "metaBinary length (Buffer)")
F.DataStoreChangeMetaParamV1_metaBinary_data = ProtoField.bytes("DataStoreChangeMetaParamV1_metaBinary_data", "metaBinary data (Buffer)")
F.DataStoreChangeMetaParamV1_tags_len = ProtoField.uint32("DataStoreChangeMetaParamV1_tags_len", "tags length (uint32)")
F.DataStoreChangeMetaParamV1_tags_item_len = ProtoField.uint16("DataStoreChangeMetaParamV1_tags_item_len", "tags length (String)")
F.DataStoreChangeMetaParamV1_tags_item_data = ProtoField.string("DataStoreChangeMetaParamV1_tags_item_data", "tags data (String)")
F.DataStoreChangeMetaParamV1_updatePassword = ProtoField.uint64("DataStoreChangeMetaParamV1_updatePassword", "updatePassword (uint64)")
F.DataStoreChangeMetaParam = ProtoField.bytes("DataStoreChangeMetaParam", "DataStoreChangeMetaParam (DataStoreChangeMetaParam)")
F.DataStoreChangeMetaParam_dataId = ProtoField.uint64("DataStoreChangeMetaParam_dataId", "dataId (uint64)")
F.DataStoreChangeMetaParam_modifiesFlag = ProtoField.uint32("DataStoreChangeMetaParam_modifiesFlag", "modifiesFlag (uint32)")
F.DataStoreChangeMetaParam_name_len = ProtoField.uint16("DataStoreChangeMetaParam_name_len", "name length (String)")
F.DataStoreChangeMetaParam_name_data = ProtoField.string("DataStoreChangeMetaParam_name_data", "name data (String)")
F.DataStoreChangeMetaParam_period = ProtoField.uint16("DataStoreChangeMetaParam_period", "period (uint16)")
F.DataStoreChangeMetaParam_metaBinary_len = ProtoField.uint16("DataStoreChangeMetaParam_metaBinary_len", "metaBinary length (Buffer)")
F.DataStoreChangeMetaParam_metaBinary_data = ProtoField.bytes("DataStoreChangeMetaParam_metaBinary_data", "metaBinary data (Buffer)")
F.DataStoreChangeMetaParam_tags_len = ProtoField.uint32("DataStoreChangeMetaParam_tags_len", "tags length (uint32)")
F.DataStoreChangeMetaParam_tags_item_len = ProtoField.uint16("DataStoreChangeMetaParam_tags_item_len", "tags length (String)")
F.DataStoreChangeMetaParam_tags_item_data = ProtoField.string("DataStoreChangeMetaParam_tags_item_data", "tags data (String)")
F.DataStoreChangeMetaParam_updatePassword = ProtoField.uint64("DataStoreChangeMetaParam_updatePassword", "updatePassword (uint64)")
F.DataStoreChangeMetaParam_referredCnt = ProtoField.uint32("DataStoreChangeMetaParam_referredCnt", "referredCnt (uint32)")
F.DataStoreChangeMetaParam_dataType = ProtoField.uint16("DataStoreChangeMetaParam_dataType", "dataType (uint16)")
F.DataStoreChangeMetaParam_status = ProtoField.uint8("DataStoreChangeMetaParam_status", "status (uint8)")
F.DataStoreGetMetaParam = ProtoField.bytes("DataStoreGetMetaParam", "DataStoreGetMetaParam (DataStoreGetMetaParam)")
F.DataStoreGetMetaParam_dataId = ProtoField.uint64("DataStoreGetMetaParam_dataId", "dataId (uint64)")
F.DataStoreGetMetaParam_resultOption = ProtoField.uint8("DataStoreGetMetaParam_resultOption", "resultOption (uint8)")
F.DataStoreGetMetaParam_accessPassword = ProtoField.uint64("DataStoreGetMetaParam_accessPassword", "accessPassword (uint64)")
F.DataStorePrepareUpdateParam = ProtoField.bytes("DataStorePrepareUpdateParam", "DataStorePrepareUpdateParam (DataStorePrepareUpdateParam)")
F.DataStorePrepareUpdateParam_dataId = ProtoField.uint64("DataStorePrepareUpdateParam_dataId", "dataId (uint64)")
F.DataStorePrepareUpdateParam_size = ProtoField.uint32("DataStorePrepareUpdateParam_size", "size (uint32)")
F.DataStorePrepareUpdateParam_updatePassword = ProtoField.uint64("DataStorePrepareUpdateParam_updatePassword", "updatePassword (uint64)")
F.DataStorePrepareUpdateParam_extraData_len = ProtoField.uint32("DataStorePrepareUpdateParam_extraData_len", "extraData length (uint32)")
F.DataStorePrepareUpdateParam_extraData_item_len = ProtoField.uint16("DataStorePrepareUpdateParam_extraData_item_len", "extraData length (String)")
F.DataStorePrepareUpdateParam_extraData_item_data = ProtoField.string("DataStorePrepareUpdateParam_extraData_item_data", "extraData data (String)")
F.DataStoreReqUpdateInfo = ProtoField.bytes("DataStoreReqUpdateInfo", "DataStoreReqUpdateInfo (DataStoreReqUpdateInfo)")
F.DataStoreReqUpdateInfo_version = ProtoField.uint32("DataStoreReqUpdateInfo_version", "version (uint32)")
F.DataStoreReqUpdateInfo_url_len = ProtoField.uint16("DataStoreReqUpdateInfo_url_len", "url length (String)")
F.DataStoreReqUpdateInfo_url_data = ProtoField.string("DataStoreReqUpdateInfo_url_data", "url data (String)")
F.DataStoreReqUpdateInfo_requestHeaders_len = ProtoField.uint32("DataStoreReqUpdateInfo_requestHeaders_len", "requestHeaders length (uint32)")
F.DataStoreReqUpdateInfo_formFields_len = ProtoField.uint32("DataStoreReqUpdateInfo_formFields_len", "formFields length (uint32)")
F.DataStoreReqUpdateInfo_rootCaCert_len = ProtoField.uint32("DataStoreReqUpdateInfo_rootCaCert_len", "rootCaCert length (Buffer)")
F.DataStoreReqUpdateInfo_rootCaCert_data = ProtoField.bytes("DataStoreReqUpdateInfo_rootCaCert_data", "rootCaCert data (Buffer)")
F.DataStoreCompleteUpdateParam = ProtoField.bytes("DataStoreCompleteUpdateParam", "DataStoreCompleteUpdateParam (DataStoreCompleteUpdateParam)")
F.DataStoreCompleteUpdateParam_dataId = ProtoField.uint64("DataStoreCompleteUpdateParam_dataId", "dataId (uint64)")
F.DataStoreCompleteUpdateParam_version = ProtoField.uint32("DataStoreCompleteUpdateParam_version", "version (uint32)")
F.DataStoreCompleteUpdateParam_isSuccess = ProtoField.bool("DataStoreCompleteUpdateParam_isSuccess", "isSuccess (bool)")
F.DataStoreSearchParam = ProtoField.bytes("DataStoreSearchParam", "DataStoreSearchParam (DataStoreSearchParam)")
F.DataStoreSearchParam_searchTarget = ProtoField.uint8("DataStoreSearchParam_searchTarget", "searchTarget (uint8)")
F.DataStoreSearchParam_ownerIds_len = ProtoField.uint32("DataStoreSearchParam_ownerIds_len", "ownerIds length (uint32)")
F.DataStoreSearchParam_ownerIds_item = ProtoField.uint32("DataStoreSearchParam_ownerIds_item", "ownerIds (uint32)")
F.DataStoreSearchParam_ownerType = ProtoField.uint8("DataStoreSearchParam_ownerType", "ownerType (uint8)")
F.DataStoreSearchParam_destinationIds_len = ProtoField.uint32("DataStoreSearchParam_destinationIds_len", "destinationIds length (uint32)")
F.DataStoreSearchParam_destinationIds_item = ProtoField.uint64("DataStoreSearchParam_destinationIds_item", "destinationIds (uint64)")
F.DataStoreSearchParam_dataType = ProtoField.uint16("DataStoreSearchParam_dataType", "dataType (uint16)")
F.DataStoreSearchParam_createdAfter = ProtoField.uint64("DataStoreSearchParam_createdAfter", "createdAfter (uint64)")
F.DataStoreSearchParam_createdBefore = ProtoField.uint64("DataStoreSearchParam_createdBefore", "createdBefore (uint64)")
F.DataStoreSearchParam_updatedAfter = ProtoField.uint64("DataStoreSearchParam_updatedAfter", "updatedAfter (uint64)")
F.DataStoreSearchParam_updatedBefore = ProtoField.uint64("DataStoreSearchParam_updatedBefore", "updatedBefore (uint64)")
F.DataStoreSearchParam_referDataId = ProtoField.uint32("DataStoreSearchParam_referDataId", "referDataId (uint32)")
F.DataStoreSearchParam_tags_len = ProtoField.uint32("DataStoreSearchParam_tags_len", "tags length (uint32)")
F.DataStoreSearchParam_tags_item_len = ProtoField.uint16("DataStoreSearchParam_tags_item_len", "tags length (String)")
F.DataStoreSearchParam_tags_item_data = ProtoField.string("DataStoreSearchParam_tags_item_data", "tags data (String)")
F.DataStoreSearchParam_resultOrderColumn = ProtoField.uint8("DataStoreSearchParam_resultOrderColumn", "resultOrderColumn (uint8)")
F.DataStoreSearchParam_resultOrder = ProtoField.uint8("DataStoreSearchParam_resultOrder", "resultOrder (uint8)")
F.DataStoreSearchParam_resultOption = ProtoField.uint8("DataStoreSearchParam_resultOption", "resultOption (uint8)")
F.DataStoreSearchParam_minimalRatingFrequency = ProtoField.uint32("DataStoreSearchParam_minimalRatingFrequency", "minimalRatingFrequency (uint32)")
F.DataStoreSearchParam_useCache = ProtoField.bool("DataStoreSearchParam_useCache", "useCache (bool)")
F.DataStoreSearchParam_totalCountEnabled = ProtoField.bool("DataStoreSearchParam_totalCountEnabled", "totalCountEnabled (bool)")
F.DataStoreSearchParam_dataTypes_len = ProtoField.uint32("DataStoreSearchParam_dataTypes_len", "dataTypes length (uint32)")
F.DataStoreSearchParam_dataTypes_item = ProtoField.uint16("DataStoreSearchParam_dataTypes_item", "dataTypes (uint16)")
F.DataStoreSearchResult = ProtoField.bytes("DataStoreSearchResult", "DataStoreSearchResult (DataStoreSearchResult)")
F.DataStoreSearchResult_totalCount = ProtoField.uint32("DataStoreSearchResult_totalCount", "totalCount (uint32)")
F.DataStoreSearchResult_result_len = ProtoField.uint32("DataStoreSearchResult_result_len", "result length (uint32)")
F.DataStoreSearchResult_totalCountType = ProtoField.uint8("DataStoreSearchResult_totalCountType", "totalCountType (uint8)")
F.DataStoreGetNotificationUrlParam = ProtoField.bytes("DataStoreGetNotificationUrlParam", "DataStoreGetNotificationUrlParam (DataStoreGetNotificationUrlParam)")
F.DataStoreGetNotificationUrlParam_previousUrl_len = ProtoField.uint16("DataStoreGetNotificationUrlParam_previousUrl_len", "previousUrl length (String)")
F.DataStoreGetNotificationUrlParam_previousUrl_data = ProtoField.string("DataStoreGetNotificationUrlParam_previousUrl_data", "previousUrl data (String)")
F.DataStoreReqGetNotificationUrlInfo = ProtoField.bytes("DataStoreReqGetNotificationUrlInfo", "DataStoreReqGetNotificationUrlInfo (DataStoreReqGetNotificationUrlInfo)")
F.DataStoreReqGetNotificationUrlInfo_url_len = ProtoField.uint16("DataStoreReqGetNotificationUrlInfo_url_len", "url length (String)")
F.DataStoreReqGetNotificationUrlInfo_url_data = ProtoField.string("DataStoreReqGetNotificationUrlInfo_url_data", "url data (String)")
F.DataStoreReqGetNotificationUrlInfo_key_len = ProtoField.uint16("DataStoreReqGetNotificationUrlInfo_key_len", "key length (String)")
F.DataStoreReqGetNotificationUrlInfo_key_data = ProtoField.string("DataStoreReqGetNotificationUrlInfo_key_data", "key data (String)")
F.DataStoreReqGetNotificationUrlInfo_query_len = ProtoField.uint16("DataStoreReqGetNotificationUrlInfo_query_len", "query length (String)")
F.DataStoreReqGetNotificationUrlInfo_query_data = ProtoField.string("DataStoreReqGetNotificationUrlInfo_query_data", "query data (String)")
F.DataStoreReqGetNotificationUrlInfo_rootCaCert_len = ProtoField.uint32("DataStoreReqGetNotificationUrlInfo_rootCaCert_len", "rootCaCert length (Buffer)")
F.DataStoreReqGetNotificationUrlInfo_rootCaCert_data = ProtoField.bytes("DataStoreReqGetNotificationUrlInfo_rootCaCert_data", "rootCaCert data (Buffer)")
F.DataStoreGetNewArrivedNotificationsParam = ProtoField.bytes("DataStoreGetNewArrivedNotificationsParam", "DataStoreGetNewArrivedNotificationsParam (DataStoreGetNewArrivedNotificationsParam)")
F.DataStoreGetNewArrivedNotificationsParam_lastNotificationId = ProtoField.uint64("DataStoreGetNewArrivedNotificationsParam_lastNotificationId", "lastNotificationId (uint64)")
F.DataStoreGetNewArrivedNotificationsParam_limit = ProtoField.uint16("DataStoreGetNewArrivedNotificationsParam_limit", "limit (uint16)")
F.DataStoreNotificationV1 = ProtoField.bytes("DataStoreNotificationV1", "DataStoreNotificationV1 (DataStoreNotificationV1)")
F.DataStoreNotificationV1_notificationId = ProtoField.uint64("DataStoreNotificationV1_notificationId", "notificationId (uint64)")
F.DataStoreNotificationV1_dataId = ProtoField.uint32("DataStoreNotificationV1_dataId", "dataId (uint32)")
F.DataStoreNotification = ProtoField.bytes("DataStoreNotification", "DataStoreNotification (DataStoreNotification)")
F.DataStoreNotification_notificationId = ProtoField.uint64("DataStoreNotification_notificationId", "notificationId (uint64)")
F.DataStoreNotification_dataId = ProtoField.uint64("DataStoreNotification_dataId", "dataId (uint64)")
F.DataStoreRateObjectParam = ProtoField.bytes("DataStoreRateObjectParam", "DataStoreRateObjectParam (DataStoreRateObjectParam)")
F.DataStoreRateObjectParam_ratingValue = ProtoField.int32("DataStoreRateObjectParam_ratingValue", "ratingValue (uint32)")
F.DataStoreRateObjectParam_accessPassword = ProtoField.uint64("DataStoreRateObjectParam_accessPassword", "accessPassword (uint64)")
F.DataStoreRatingTarget = ProtoField.bytes("DataStoreRatingTarget", "DataStoreRatingTarget (DataStoreRatingTarget)")
F.DataStoreRatingTarget_dataId = ProtoField.uint64("DataStoreRatingTarget_dataId", "dataId (uint64)")
F.DataStoreRatingTarget_slot = ProtoField.int8("DataStoreRatingTarget_slot", "slot (uint8)")
F.DataStoreGetSpecificMetaParamV1 = ProtoField.bytes("DataStoreGetSpecificMetaParamV1", "DataStoreGetSpecificMetaParamV1 (DataStoreGetSpecificMetaParamV1)")
F.DataStoreGetSpecificMetaParamV1_dataIds_len = ProtoField.uint32("DataStoreGetSpecificMetaParamV1_dataIds_len", "dataIds length (uint32)")
F.DataStoreGetSpecificMetaParamV1_dataIds_item = ProtoField.uint32("DataStoreGetSpecificMetaParamV1_dataIds_item", "dataIds (uint32)")
F.DataStoreGetSpecificMetaParam = ProtoField.bytes("DataStoreGetSpecificMetaParam", "DataStoreGetSpecificMetaParam (DataStoreGetSpecificMetaParam)")
F.DataStoreGetSpecificMetaParam_dataIds_len = ProtoField.uint32("DataStoreGetSpecificMetaParam_dataIds_len", "dataIds length (uint32)")
F.DataStoreGetSpecificMetaParam_dataIds_item = ProtoField.uint64("DataStoreGetSpecificMetaParam_dataIds_item", "dataIds (uint64)")
F.DataStoreSpecificMetaInfoV1 = ProtoField.bytes("DataStoreSpecificMetaInfoV1", "DataStoreSpecificMetaInfoV1 (DataStoreSpecificMetaInfoV1)")
F.DataStoreSpecificMetaInfoV1_dataId = ProtoField.uint32("DataStoreSpecificMetaInfoV1_dataId", "dataId (uint32)")
F.DataStoreSpecificMetaInfoV1_ownerId = ProtoField.uint32("DataStoreSpecificMetaInfoV1_ownerId", "ownerId (uint32)")
F.DataStoreSpecificMetaInfoV1_size = ProtoField.uint32("DataStoreSpecificMetaInfoV1_size", "size (uint32)")
F.DataStoreSpecificMetaInfoV1_dataType = ProtoField.uint16("DataStoreSpecificMetaInfoV1_dataType", "dataType (uint16)")
F.DataStoreSpecificMetaInfoV1_version = ProtoField.uint16("DataStoreSpecificMetaInfoV1_version", "version (uint16)")
F.DataStoreSpecificMetaInfo = ProtoField.bytes("DataStoreSpecificMetaInfo", "DataStoreSpecificMetaInfo (DataStoreSpecificMetaInfo)")
F.DataStoreSpecificMetaInfo_dataId = ProtoField.uint64("DataStoreSpecificMetaInfo_dataId", "dataId (uint64)")
F.DataStoreSpecificMetaInfo_ownerId = ProtoField.uint32("DataStoreSpecificMetaInfo_ownerId", "ownerId (uint32)")
F.DataStoreSpecificMetaInfo_size = ProtoField.uint32("DataStoreSpecificMetaInfo_size", "size (uint32)")
F.DataStoreSpecificMetaInfo_dataType = ProtoField.uint16("DataStoreSpecificMetaInfo_dataType", "dataType (uint16)")
F.DataStoreSpecificMetaInfo_version = ProtoField.uint32("DataStoreSpecificMetaInfo_version", "version (uint32)")
F.DataStoreTouchObjectParam = ProtoField.bytes("DataStoreTouchObjectParam", "DataStoreTouchObjectParam (DataStoreTouchObjectParam)")
F.DataStoreTouchObjectParam_dataId = ProtoField.uint64("DataStoreTouchObjectParam_dataId", "dataId (uint64)")
F.DataStoreTouchObjectParam_lockId = ProtoField.uint32("DataStoreTouchObjectParam_lockId", "lockId (uint32)")
F.DataStoreTouchObjectParam_accessPassword = ProtoField.uint64("DataStoreTouchObjectParam_accessPassword", "accessPassword (uint64)")
F.DataStoreRatingLog = ProtoField.bytes("DataStoreRatingLog", "DataStoreRatingLog (DataStoreRatingLog)")
F.DataStoreRatingLog_isRated = ProtoField.bool("DataStoreRatingLog_isRated", "isRated (bool)")
F.DataStoreRatingLog_pid = ProtoField.uint32("DataStoreRatingLog_pid", "pid (uint32)")
F.DataStoreRatingLog_ratingValue = ProtoField.int32("DataStoreRatingLog_ratingValue", "ratingValue (uint32)")
F.DataStoreRatingLog_lockExpirationTime = ProtoField.uint64("DataStoreRatingLog_lockExpirationTime", "lockExpirationTime (uint64)")
F.DataStorePersistenceInfo = ProtoField.bytes("DataStorePersistenceInfo", "DataStorePersistenceInfo (DataStorePersistenceInfo)")
F.DataStorePersistenceInfo_ownerId = ProtoField.uint32("DataStorePersistenceInfo_ownerId", "ownerId (uint32)")
F.DataStorePersistenceInfo_persistenceSlotId = ProtoField.uint16("DataStorePersistenceInfo_persistenceSlotId", "persistenceSlotId (uint16)")
F.DataStorePersistenceInfo_dataId = ProtoField.uint64("DataStorePersistenceInfo_dataId", "dataId (uint64)")
F.DataStorePasswordInfo = ProtoField.bytes("DataStorePasswordInfo", "DataStorePasswordInfo (DataStorePasswordInfo)")
F.DataStorePasswordInfo_dataId = ProtoField.uint64("DataStorePasswordInfo_dataId", "dataId (uint64)")
F.DataStorePasswordInfo_accessPassword = ProtoField.uint64("DataStorePasswordInfo_accessPassword", "accessPassword (uint64)")
F.DataStorePasswordInfo_updatePassword = ProtoField.uint64("DataStorePasswordInfo_updatePassword", "updatePassword (uint64)")
F.UniqueIdInfo = ProtoField.bytes("UniqueIdInfo", "UniqueIdInfo (UniqueIdInfo)")
F.UniqueIdInfo_nexUniqueId = ProtoField.uint64("UniqueIdInfo_nexUniqueId", "nexUniqueId (uint64)")
F.UniqueIdInfo_nexUniqueIdPassword = ProtoField.uint64("UniqueIdInfo_nexUniqueIdPassword", "nexUniqueIdPassword (uint64)")
F.UserContent = ProtoField.bytes("UserContent", "UserContent (UserContent)")
F.UserContent_m_pid = ProtoField.uint32("UserContent_m_pid", "m_pid (uint32)")
F.UserContent_m_properties_len = ProtoField.uint32("UserContent_m_properties_len", "m_properties length (uint32)")
F.UserStorageQuery = ProtoField.bytes("UserStorageQuery", "UserStorageQuery (UserStorageQuery)")
F.UserStorageQuery_m_typeID = ProtoField.uint32("UserStorageQuery_m_typeID", "m_typeID (uint32)")
F.UserStorageQuery_m_queryID = ProtoField.uint32("UserStorageQuery_m_queryID", "m_queryID (uint32)")
F.UserStorageQuery_m_parameters_len = ProtoField.uint32("UserStorageQuery_m_parameters_len", "m_parameters length (uint32)")
F.UserSlotCount = ProtoField.bytes("UserSlotCount", "UserSlotCount (UserSlotCount)")
F.UserSlotCount_m_pid = ProtoField.uint32("UserSlotCount_m_pid", "m_pid (uint32)")
F.UserSlotCount_m_typeID = ProtoField.uint32("UserSlotCount_m_typeID", "m_typeID (uint32)")
F.UserSlotCount_m_usedSlots = ProtoField.uint32("UserSlotCount_m_usedSlots", "m_usedSlots (uint32)")
F.UserSlotCount_m_totalSlots = ProtoField.uint32("UserSlotCount_m_totalSlots", "m_totalSlots (uint32)")
F.UserContentURL = ProtoField.bytes("UserContentURL", "UserContentURL (UserContentURL)")
F.UserContentURL_m_protocol_len = ProtoField.uint16("UserContentURL_m_protocol_len", "m_protocol length (String)")
F.UserContentURL_m_protocol_data = ProtoField.string("UserContentURL_m_protocol_data", "m_protocol data (String)")
F.UserContentURL_m_host_len = ProtoField.uint16("UserContentURL_m_host_len", "m_host length (String)")
F.UserContentURL_m_host_data = ProtoField.string("UserContentURL_m_host_data", "m_host data (String)")
F.UserContentURL_m_path_len = ProtoField.uint16("UserContentURL_m_path_len", "m_path length (String)")
F.UserContentURL_m_path_data = ProtoField.string("UserContentURL_m_path_data", "m_path data (String)")
F.WeightedTag = ProtoField.bytes("WeightedTag", "WeightedTag (WeightedTag)")
F.WeightedTag_m_id = ProtoField.uint32("WeightedTag_m_id", "m_id (uint32)")
F.WeightedTag_m_numberOfOccurences = ProtoField.uint32("WeightedTag_m_numberOfOccurences", "m_numberOfOccurences (uint32)")
F.RankingOrderParam = ProtoField.bytes("RankingOrderParam", "RankingOrderParam (RankingOrderParam)")
F.RankingOrderParam_orderCalculation = ProtoField.uint8("RankingOrderParam_orderCalculation", "orderCalculation (uint8)")
F.RankingOrderParam_groupIndex = ProtoField.uint8("RankingOrderParam_groupIndex", "groupIndex (uint8)")
F.RankingOrderParam_groupNum = ProtoField.uint8("RankingOrderParam_groupNum", "groupNum (uint8)")
F.RankingOrderParam_timeScope = ProtoField.uint8("RankingOrderParam_timeScope", "timeScope (uint8)")
F.RankingOrderParam_offset = ProtoField.uint32("RankingOrderParam_offset", "offset (uint32)")
F.RankingOrderParam_length = ProtoField.uint8("RankingOrderParam_length", "length (uint8)")
F.RankingResult = ProtoField.bytes("RankingResult", "RankingResult (RankingResult)")
F.RankingResult_rankDataList_len = ProtoField.uint32("RankingResult_rankDataList_len", "rankDataList length (uint32)")
F.RankingResult_totalCount = ProtoField.uint32("RankingResult_totalCount", "totalCount (uint32)")
F.RankingResult_sinceTime = ProtoField.uint64("RankingResult_sinceTime", "sinceTime (uint64)")
F.RankingCachedResult = ProtoField.bytes("RankingCachedResult", "RankingCachedResult (RankingCachedResult)")
F.RankingCachedResult_createdTime = ProtoField.uint64("RankingCachedResult_createdTime", "createdTime (uint64)")
F.RankingCachedResult_expiredTime = ProtoField.uint64("RankingCachedResult_expiredTime", "expiredTime (uint64)")
F.RankingCachedResult_maxLength = ProtoField.uint8("RankingCachedResult_maxLength", "maxLength (uint8)")
F.RankingStats = ProtoField.bytes("RankingStats", "RankingStats (RankingStats)")
F.RankingStats_statsList_len = ProtoField.uint32("RankingStats_statsList_len", "statsList length (uint32)")
F.RankingStats_statsList_item = ProtoField.double("RankingStats_statsList_item", "statsList (double)")
F.RankingScoreData = ProtoField.bytes("RankingScoreData", "RankingScoreData (RankingScoreData)")
F.RankingScoreData_category = ProtoField.uint32("RankingScoreData_category", "category (uint32)")
F.RankingScoreData_score = ProtoField.uint32("RankingScoreData_score", "score (uint32)")
F.RankingScoreData_orderBy = ProtoField.uint8("RankingScoreData_orderBy", "orderBy (uint8)")
F.RankingScoreData_updateMode = ProtoField.uint8("RankingScoreData_updateMode", "updateMode (uint8)")
F.RankingScoreData_groups_len = ProtoField.uint32("RankingScoreData_groups_len", "groups length (uint32)")
F.RankingScoreData_groups_item = ProtoField.uint8("RankingScoreData_groups_item", "groups (uint8)")
F.RankingScoreData_param = ProtoField.uint64("RankingScoreData_param", "param (uint64)")
F.RankingChangeAttributesParam = ProtoField.bytes("RankingChangeAttributesParam", "RankingChangeAttributesParam (RankingChangeAttributesParam)")
F.RankingChangeAttributesParam_modificationFlag = ProtoField.uint8("RankingChangeAttributesParam_modificationFlag", "modificationFlag (uint8)")
F.RankingChangeAttributesParam_groups_len = ProtoField.uint32("RankingChangeAttributesParam_groups_len", "groups length (uint32)")
F.RankingChangeAttributesParam_groups_item = ProtoField.uint8("RankingChangeAttributesParam_groups_item", "groups (uint8)")
F.RankingChangeAttributesParam_param = ProtoField.uint64("RankingChangeAttributesParam_param", "param (uint64)")
F.TimedNotification = ProtoField.bytes("TimedNotification", "TimedNotification (TimedNotification)")
F.TimedNotification_timestamp = ProtoField.uint64("TimedNotification_timestamp", "timestamp (uint64)")
F.FriendUserParam = ProtoField.bytes("FriendUserParam", "FriendUserParam (FriendUserParam)")
F.FriendUserParam_name_len = ProtoField.uint16("FriendUserParam_name_len", "name length (String)")
F.FriendUserParam_name_data = ProtoField.string("FriendUserParam_name_data", "name data (String)")
F.FriendUserInfo = ProtoField.bytes("FriendUserInfo", "FriendUserInfo (FriendUserInfo)")
F.FriendUserInfo_pid = ProtoField.uint64("FriendUserInfo_pid", "pid (uint64)")
F.FriendUserInfo_name_len = ProtoField.uint16("FriendUserInfo_name_len", "name length (String)")
F.FriendUserInfo_name_data = ProtoField.string("FriendUserInfo_name_data", "name data (String)")
F.FriendUserInfo_presence = ProtoField.uint32("FriendUserInfo_presence", "presence (uint32)")
F.FestivalResult = ProtoField.bytes("FestivalResult", "FestivalResult (FestivalResult)")
F.FestivalResult_festivalId = ProtoField.uint32("FestivalResult_festivalId", "festivalId (uint32)")
F.FestivalResult_numParticipants = ProtoField.uint32("FestivalResult_numParticipants", "numParticipants (uint32)")
F.FestivalResult_teamParticipants_len = ProtoField.uint32("FestivalResult_teamParticipants_len", "teamParticipants length (uint32)")
F.FestivalResult_teamParticipants_item = ProtoField.uint32("FestivalResult_teamParticipants_item", "teamParticipants (uint32)")
F.FestivalResult_teamScores_len = ProtoField.uint32("FestivalResult_teamScores_len", "teamScores length (uint32)")
F.FestivalResult_teamScores_item = ProtoField.uint32("FestivalResult_teamScores_item", "teamScores (uint32)")
F.FestivalResult_updatedTime = ProtoField.uint64("FestivalResult_updatedTime", "updatedTime (uint64)")
F.FestivalUploadScoreParam = ProtoField.bytes("FestivalUploadScoreParam", "FestivalUploadScoreParam (FestivalUploadScoreParam)")
F.FestivalUploadScoreParam_uniqueId = ProtoField.uint64("FestivalUploadScoreParam_uniqueId", "uniqueId (uint64)")
F.FestivalUploadScoreParam_region = ProtoField.uint8("FestivalUploadScoreParam_region", "region (uint8)")
F.FestivalUploadScoreParam_festivalId = ProtoField.uint32("FestivalUploadScoreParam_festivalId", "festivalId (uint32)")
F.FestivalUploadScoreParam_teamId = ProtoField.uint8("FestivalUploadScoreParam_teamId", "teamId (uint8)")
F.FestivalUploadScoreParam_score = ProtoField.uint32("FestivalUploadScoreParam_score", "score (uint32)")
F.FestivalUploadScoreParam_battleGatheringId = ProtoField.uint32("FestivalUploadScoreParam_battleGatheringId", "battleGatheringId (uint32)")
F.FestivalUploadScoreParam_battleResult = ProtoField.uint32("FestivalUploadScoreParam_battleResult", "battleResult (uint32)")
F.FestivalUploadScoreParam_applicationBuffer_len = ProtoField.uint16("FestivalUploadScoreParam_applicationBuffer_len", "applicationBuffer length (Buffer)")
F.FestivalUploadScoreParam_applicationBuffer_data = ProtoField.bytes("FestivalUploadScoreParam_applicationBuffer_data", "applicationBuffer data (Buffer)")
F.FestivalUploadVoteParam = ProtoField.bytes("FestivalUploadVoteParam", "FestivalUploadVoteParam (FestivalUploadVoteParam)")
F.FestivalUploadVoteParam_festivalId = ProtoField.uint32("FestivalUploadVoteParam_festivalId", "festivalId (uint32)")
F.FestivalUploadVoteParam_themeId = ProtoField.uint8("FestivalUploadVoteParam_themeId", "themeId (uint8)")
F.LeagueResult = ProtoField.bytes("LeagueResult", "LeagueResult (LeagueResult)")
F.LeagueResult_status = ProtoField.uint8("LeagueResult_status", "status (uint8)")
F.LeagueResult_specificRank = ProtoField.uint32("LeagueResult_specificRank", "specificRank (uint32)")
F.LeagueResult_rankRatio = ProtoField.uint8("LeagueResult_rankRatio", "rankRatio (uint8)")
F.LeagueResult_tagNum = ProtoField.uint32("LeagueResult_tagNum", "tagNum (uint32)")
F.LeagueResult_matchCount = ProtoField.uint32("LeagueResult_matchCount", "matchCount (uint32)")
F.response = ProtoField.bytes("response", "response (response)")
F.response_Miis_len = ProtoField.uint32("response_Miis_len", "Miis length (uint32)")
F.FriendMiiList = ProtoField.bytes("FriendMiiList", "FriendMiiList (FriendMiiList)")
F.FriendMiiList_Unknown = ProtoField.uint32("FriendMiiList_Unknown", "Unknown (uint32)")
F.FriendMiiList_Unknown2 = ProtoField.uint64("FriendMiiList_Unknown2", "Unknown2 (uint64)")
F.FriendMiiRequest = ProtoField.bytes("FriendMiiRequest", "FriendMiiRequest (FriendMiiRequest)")
F.FriendMiiRequest_Unknown = ProtoField.uint32("FriendMiiRequest_Unknown", "Unknown (uint32)")
F.FriendMiiRequest_Unknown2 = ProtoField.uint64("FriendMiiRequest_Unknown2", "Unknown2 (uint64)")
F.FriendPersistentInfo = ProtoField.bytes("FriendPersistentInfo", "FriendPersistentInfo (FriendPersistentInfo)")
F.FriendPersistentInfo_User_id = ProtoField.uint32("FriendPersistentInfo_User_id", "User_id (uint32)")
F.FriendPersistentInfo_Region = ProtoField.uint8("FriendPersistentInfo_Region", "Region (uint8)")
F.FriendPersistentInfo_Country = ProtoField.uint8("FriendPersistentInfo_Country", "Country (uint8)")
F.FriendPersistentInfo_Area = ProtoField.uint8("FriendPersistentInfo_Area", "Area (uint8)")
F.FriendPersistentInfo_Language = ProtoField.uint8("FriendPersistentInfo_Language", "Language (uint8)")
F.FriendPersistentInfo_Platform = ProtoField.uint8("FriendPersistentInfo_Platform", "Platform (uint8)")
F.FriendPersistentInfo_Message_len = ProtoField.uint16("FriendPersistentInfo_Message_len", "Message length (String)")
F.FriendPersistentInfo_Message_data = ProtoField.string("FriendPersistentInfo_Message_data", "Message data (String)")
F.FriendPersistentInfo_Message_updated_at = ProtoField.uint64("FriendPersistentInfo_Message_updated_at", "Message_updated_at (uint64)")
F.FriendPersistentInfo_Friended_at = ProtoField.uint64("FriendPersistentInfo_Friended_at", "Friended_at (uint64)")
F.FriendPersistentInfo_Unknown = ProtoField.uint64("FriendPersistentInfo_Unknown", "Unknown (uint64)")
F.FriendPicture = ProtoField.bytes("FriendPicture", "FriendPicture (FriendPicture)")
F.FriendPicture_Unknown = ProtoField.uint32("FriendPicture_Unknown", "Unknown (uint32)")
F.FriendPicture_Data_len = ProtoField.uint32("FriendPicture_Data_len", "Data length (Buffer)")
F.FriendPicture_Data_data = ProtoField.bytes("FriendPicture_Data_data", "Data data (Buffer)")
F.FriendPicture_Date_time = ProtoField.uint64("FriendPicture_Date_time", "Date_time (uint64)")
F.FriendPresence = ProtoField.bytes("FriendPresence", "FriendPresence (FriendPresence)")
F.FriendPresence_Unknown = ProtoField.uint32("FriendPresence_Unknown", "Unknown (uint32)")
F.FriendRelationship = ProtoField.bytes("FriendRelationship", "FriendRelationship (FriendRelationship)")
F.FriendRelationship_Unknown = ProtoField.uint32("FriendRelationship_Unknown", "Unknown (uint32)")
F.FriendRelationship_Unknown2 = ProtoField.uint64("FriendRelationship_Unknown2", "Unknown2 (uint64)")
F.FriendRelationship_Unknown3 = ProtoField.uint8("FriendRelationship_Unknown3", "Unknown3 (uint8)")
F.MyProfile = ProtoField.bytes("MyProfile", "MyProfile (MyProfile)")
F.MyProfile_Region = ProtoField.uint8("MyProfile_Region", "Region (uint8)")
F.MyProfile_Country = ProtoField.uint8("MyProfile_Country", "Country (uint8)")
F.MyProfile_Area = ProtoField.uint8("MyProfile_Area", "Area (uint8)")
F.MyProfile_Language = ProtoField.uint8("MyProfile_Language", "Language (uint8)")
F.MyProfile_Platform = ProtoField.uint8("MyProfile_Platform", "Platform (uint8)")
F.MyProfile_Unknown = ProtoField.uint64("MyProfile_Unknown", "Unknown (uint64)")
F.MyProfile_Unknown2_len = ProtoField.uint16("MyProfile_Unknown2_len", "Unknown2 length (String)")
F.MyProfile_Unknown2_data = ProtoField.string("MyProfile_Unknown2_data", "Unknown2 data (String)")
F.MyProfile_Unknown3_len = ProtoField.uint16("MyProfile_Unknown3_len", "Unknown3 length (String)")
F.MyProfile_Unknown3_data = ProtoField.string("MyProfile_Unknown3_data", "Unknown3 data (String)")
F.PlayedGame = ProtoField.bytes("PlayedGame", "PlayedGame (PlayedGame)")
F.PlayedGame_Date_time = ProtoField.uint64("PlayedGame_Date_time", "Date_time (uint64)")
F.ConnectionData = ProtoField.bytes("ConnectionData", "ConnectionData (ConnectionData)")
F.ConnectionData_m_StationUrl_len = ProtoField.uint16("ConnectionData_m_StationUrl_len", "m_StationUrl length (String)")
F.ConnectionData_m_StationUrl_data = ProtoField.string("ConnectionData_m_StationUrl_data", "m_StationUrl data (String)")
F.ConnectionData_m_ConnectionID = ProtoField.uint32("ConnectionData_m_ConnectionID", "m_ConnectionID (uint32)")
F.NintendoLoginData___AccountExtraInfo = ProtoField.bytes("NintendoLoginData___AccountExtraInfo", "NintendoLoginData___AccountExtraInfo (NintendoLoginData___AccountExtraInfo)")
F.NintendoLoginData___AccountExtraInfo_Token_received_from_the_account_server_len = ProtoField.uint16("NintendoLoginData___AccountExtraInfo_Token_received_from_the_account_server_len", "Token_received_from_the_account_server length (String)")
F.NintendoLoginData___AccountExtraInfo_Token_received_from_the_account_server_data = ProtoField.string("NintendoLoginData___AccountExtraInfo_Token_received_from_the_account_server_data", "Token_received_from_the_account_server data (String)")
F.AuthenticationInfo = ProtoField.bytes("AuthenticationInfo", "AuthenticationInfo (AuthenticationInfo)")
F.AuthenticationInfo_m_authToken_len = ProtoField.uint16("AuthenticationInfo_m_authToken_len", "m_authToken length (String)")
F.AuthenticationInfo_m_authToken_data = ProtoField.string("AuthenticationInfo_m_authToken_data", "m_authToken data (String)")
F.AuthenticationInfo_m_ngsVersion = ProtoField.uint32("AuthenticationInfo_m_ngsVersion", "m_ngsVersion (uint32)")
F.AuthenticationInfo_m_authTokenType = ProtoField.uint8("AuthenticationInfo_m_authTokenType", "m_authTokenType (uint8)")
F.AuthenticationInfo_m_serverVersion = ProtoField.uint32("AuthenticationInfo_m_serverVersion", "m_serverVersion (uint32)")
F.ValidateAndRequestTicketParam = ProtoField.bytes("ValidateAndRequestTicketParam", "ValidateAndRequestTicketParam (ValidateAndRequestTicketParam)")
F.ValidateAndRequestTicketParam_platformType = ProtoField.uint32("ValidateAndRequestTicketParam_platformType", "platformType (uint32)")
F.ValidateAndRequestTicketParam_userName_len = ProtoField.uint16("ValidateAndRequestTicketParam_userName_len", "userName length (String)")
F.ValidateAndRequestTicketParam_userName_data = ProtoField.string("ValidateAndRequestTicketParam_userName_data", "userName data (String)")
F.ValidateAndRequestTicketParam_extraData_data_bytes = ProtoField.bytes("ValidateAndRequestTicketParam_extraData_data_bytes", "extraData data bytes (bytes)")
F.ValidateAndRequestTicketParam_extraData_type_name_len = ProtoField.uint16("ValidateAndRequestTicketParam_extraData_type_name_len", "extraData_type_name length (String)")
F.ValidateAndRequestTicketParam_extraData_type_name_data = ProtoField.string("ValidateAndRequestTicketParam_extraData_type_name_data", "extraData_type_name data (String)")
F.ValidateAndRequestTicketParam_extraData_len_plus_four = ProtoField.uint32("ValidateAndRequestTicketParam_extraData_len_plus_four", "extraData_len_plus_four (uint32)")
F.ValidateAndRequestTicketParam_extraData_data_len = ProtoField.uint32("ValidateAndRequestTicketParam_extraData_data_len", "extraData_data_len (uint32)")
F.ValidateAndRequestTicketParam_ignoreApiVersionCheck = ProtoField.bool("ValidateAndRequestTicketParam_ignoreApiVersionCheck", "ignoreApiVersionCheck (bool)")
F.ValidateAndRequestTicketParam_apiVersionGeneral = ProtoField.uint32("ValidateAndRequestTicketParam_apiVersionGeneral", "apiVersionGeneral (uint32)")
F.ValidateAndRequestTicketParam_apiVersionCustom = ProtoField.uint32("ValidateAndRequestTicketParam_apiVersionCustom", "apiVersionCustom (uint32)")
F.ValidateAndRequestTicketResult = ProtoField.bytes("ValidateAndRequestTicketResult", "ValidateAndRequestTicketResult (ValidateAndRequestTicketResult)")
F.ValidateAndRequestTicketResult_sourcePid = ProtoField.uint32("ValidateAndRequestTicketResult_sourcePid", "sourcePid (uint32)")
F.ValidateAndRequestTicketResult_bufResponse_len = ProtoField.uint32("ValidateAndRequestTicketResult_bufResponse_len", "bufResponse length (Buffer)")
F.ValidateAndRequestTicketResult_bufResponse_data = ProtoField.bytes("ValidateAndRequestTicketResult_bufResponse_data", "bufResponse data (Buffer)")
F.ValidateAndRequestTicketResult_serviceNodeUrl_len = ProtoField.uint16("ValidateAndRequestTicketResult_serviceNodeUrl_len", "serviceNodeUrl length (String)")
F.ValidateAndRequestTicketResult_serviceNodeUrl_data = ProtoField.string("ValidateAndRequestTicketResult_serviceNodeUrl_data", "serviceNodeUrl data (String)")
F.ValidateAndRequestTicketResult_currentUtcTime = ProtoField.uint64("ValidateAndRequestTicketResult_currentUtcTime", "currentUtcTime (uint64)")
F.ValidateAndRequestTicketResult_returnMsg_len = ProtoField.uint16("ValidateAndRequestTicketResult_returnMsg_len", "returnMsg length (String)")
F.ValidateAndRequestTicketResult_returnMsg_data = ProtoField.string("ValidateAndRequestTicketResult_returnMsg_data", "returnMsg data (String)")
F.ValidateAndRequestTicketResult_sourceKey_len = ProtoField.uint16("ValidateAndRequestTicketResult_sourceKey_len", "sourceKey length (String)")
F.ValidateAndRequestTicketResult_sourceKey_data = ProtoField.string("ValidateAndRequestTicketResult_sourceKey_data", "sourceKey data (String)")
F.NintendoNotificationEvent = ProtoField.bytes("NintendoNotificationEvent", "NintendoNotificationEvent (NintendoNotificationEvent)")
F.NintendoNotificationEvent_m_uiType = ProtoField.uint32("NintendoNotificationEvent_m_uiType", "m_uiType (uint32)")
F.NintendoNotificationEvent_m_pidSender = ProtoField.uint32("NintendoNotificationEvent_m_pidSender", "m_pidSender (uint32)")
F.NintendoNotificationEvent_m_dataholder_data_bytes = ProtoField.bytes("NintendoNotificationEvent_m_dataholder_data_bytes", "m_dataholder data bytes (bytes)")
F.NintendoNotificationEvent_m_dataholder_type_name_len = ProtoField.uint16("NintendoNotificationEvent_m_dataholder_type_name_len", "m_dataholder_type_name length (String)")
F.NintendoNotificationEvent_m_dataholder_type_name_data = ProtoField.string("NintendoNotificationEvent_m_dataholder_type_name_data", "m_dataholder_type_name data (String)")
F.NintendoNotificationEvent_m_dataholder_len_plus_four = ProtoField.uint32("NintendoNotificationEvent_m_dataholder_len_plus_four", "m_dataholder_len_plus_four (uint32)")
F.NintendoNotificationEvent_m_dataholder_data_len = ProtoField.uint32("NintendoNotificationEvent_m_dataholder_data_len", "m_dataholder_data_len (uint32)")
F.NintendoNotificationEventGeneral = ProtoField.bytes("NintendoNotificationEventGeneral", "NintendoNotificationEventGeneral (NintendoNotificationEventGeneral)")
F.NintendoNotificationEventGeneral_m_u32Param = ProtoField.uint32("NintendoNotificationEventGeneral_m_u32Param", "m_u32Param (uint32)")
F.NintendoNotificationEventGeneral_m_u64Param1 = ProtoField.uint64("NintendoNotificationEventGeneral_m_u64Param1", "m_u64Param1 (uint64)")
F.NintendoNotificationEventGeneral_m_u64Param2 = ProtoField.uint64("NintendoNotificationEventGeneral_m_u64Param2", "m_u64Param2 (uint64)")
F.NintendoNotificationEventGeneral_m_strParam_len = ProtoField.uint16("NintendoNotificationEventGeneral_m_strParam_len", "m_strParam length (String)")
F.NintendoNotificationEventGeneral_m_strParam_data = ProtoField.string("NintendoNotificationEventGeneral_m_strParam_data", "m_strParam data (String)")
F.NintendoNotificationEventProfile = ProtoField.bytes("NintendoNotificationEventProfile", "NintendoNotificationEventProfile (NintendoNotificationEventProfile)")
F.NintendoNotificationEventProfile_m_region = ProtoField.uint8("NintendoNotificationEventProfile_m_region", "m_region (uint8)")
F.NintendoNotificationEventProfile_m_country = ProtoField.uint8("NintendoNotificationEventProfile_m_country", "m_country (uint8)")
F.NintendoNotificationEventProfile_m_area = ProtoField.uint8("NintendoNotificationEventProfile_m_area", "m_area (uint8)")
F.NintendoNotificationEventProfile_m_language = ProtoField.uint8("NintendoNotificationEventProfile_m_language", "m_language (uint8)")
F.NintendoNotificationEventProfile_m_platform = ProtoField.uint8("NintendoNotificationEventProfile_m_platform", "m_platform (uint8)")
F.ApplicationInfo = ProtoField.bytes("ApplicationInfo", "ApplicationInfo (ApplicationInfo)")
F.ApplicationInfo_Title_id = ProtoField.uint64("ApplicationInfo_Title_id", "Title_id (uint64)")
F.ApplicationInfo_Title_version = ProtoField.uint16("ApplicationInfo_Title_version", "Title_version (uint16)")
F.BadgeInfo = ProtoField.bytes("BadgeInfo", "BadgeInfo (BadgeInfo)")
F.BadgeInfo_Unknown = ProtoField.uint16("BadgeInfo_Unknown", "Unknown (uint16)")
F.BadgeInfo_Unknown2 = ProtoField.uint8("BadgeInfo_Unknown2", "Unknown2 (uint8)")
F.BattleModeRating = ProtoField.bytes("BattleModeRating", "BattleModeRating (BattleModeRating)")
F.BattleModeRating_Unknown = ProtoField.uint32("BattleModeRating_Unknown", "Unknown (uint32)")
F.BattleModeRating_Unknown2 = ProtoField.uint8("BattleModeRating_Unknown2", "Unknown2 (uint8)")
F.CanPostRatingAndCommentParam = ProtoField.bytes("CanPostRatingAndCommentParam", "CanPostRatingAndCommentParam (CanPostRatingAndCommentParam)")
F.CanPostRatingAndCommentParam_Unknown = ProtoField.uint64("CanPostRatingAndCommentParam_Unknown", "Unknown (uint64)")
F.CanPostRatingAndCommentParam_Unknown2 = ProtoField.uint32("CanPostRatingAndCommentParam_Unknown2", "Unknown2 (uint32)")
F.CanPostRatingAndCommentResult = ProtoField.bytes("CanPostRatingAndCommentResult", "CanPostRatingAndCommentResult (CanPostRatingAndCommentResult)")
F.CanPostRatingAndCommentResult_Unknown = ProtoField.uint64("CanPostRatingAndCommentResult_Unknown", "Unknown (uint64)")
F.CanPostRatingAndCommentResult_Unknown2 = ProtoField.bool("CanPostRatingAndCommentResult_Unknown2", "Unknown2 (bool)")
F.CanPostRatingAndCommentResult_Unknown3 = ProtoField.uint32("CanPostRatingAndCommentResult_Unknown3", "Unknown3 (uint32)")
F.CanPostRatingAndCommentResult_Unknown4_len = ProtoField.uint32("CanPostRatingAndCommentResult_Unknown4_len", "Unknown4 length (uint32)")
F.CanPostRatingAndCommentResult_Unknown4_key = ProtoField.uint8("CanPostRatingAndCommentResult_Unknown4_key", "Unknown4 (uint8)")
F.CanPostRatingAndCommentResult_Unknown4_value = ProtoField.uint32("CanPostRatingAndCommentResult_Unknown4_value", "Unknown4 (uint32)")
F.CanPostRatingAndCommentResult_Unknown5 = ProtoField.bool("CanPostRatingAndCommentResult_Unknown5", "Unknown5 (bool)")
F.CanPostRatingAndCommentResult_Unknown6 = ProtoField.uint32("CanPostRatingAndCommentResult_Unknown6", "Unknown6 (uint32)")
F.CanPostRatingAndCommentResult_Unknown7_len = ProtoField.uint32("CanPostRatingAndCommentResult_Unknown7_len", "Unknown7 length (uint32)")
F.CanPostRatingAndCommentResult_Unknown7_key = ProtoField.uint8("CanPostRatingAndCommentResult_Unknown7_key", "Unknown7 (uint8)")
F.CanPostRatingAndCommentResult_Unknown7_value = ProtoField.uint32("CanPostRatingAndCommentResult_Unknown7_value", "Unknown7 (uint32)")
F.CommentInfo = ProtoField.bytes("CommentInfo", "CommentInfo (CommentInfo)")
F.CommentInfo_Unknown = ProtoField.uint64("CommentInfo_Unknown", "Unknown (uint64)")
F.CommentInfo_Unknown2_len = ProtoField.uint16("CommentInfo_Unknown2_len", "Unknown2 length (String)")
F.CommentInfo_Unknown2_data = ProtoField.string("CommentInfo_Unknown2_data", "Unknown2 data (String)")
F.CommentInfo_Unknown3 = ProtoField.uint8("CommentInfo_Unknown3", "Unknown3 (uint8)")
F.CommentInfo_Unknown4 = ProtoField.uint8("CommentInfo_Unknown4", "Unknown4 (uint8)")
F.CommentInfo_Unknown5 = ProtoField.uint64("CommentInfo_Unknown5", "Unknown5 (uint64)")
F.CommentInfo_Unknown6 = ProtoField.uint16("CommentInfo_Unknown6", "Unknown6 (uint16)")
F.CommentInfo_Unknown7 = ProtoField.uint16("CommentInfo_Unknown7", "Unknown7 (uint16)")
F.CommentInfo_Unknown8 = ProtoField.uint8("CommentInfo_Unknown8", "Unknown8 (uint8)")
F.CommentInfo_Unknown9 = ProtoField.uint8("CommentInfo_Unknown9", "Unknown9 (uint8)")
F.CommentInfo_Unknown10 = ProtoField.uint16("CommentInfo_Unknown10", "Unknown10 (uint16)")
F.CommentInfo_Unknown11 = ProtoField.bool("CommentInfo_Unknown11", "Unknown11 (bool)")
F.CommentInfo_Unknown12 = ProtoField.bool("CommentInfo_Unknown12", "Unknown12 (bool)")
F.CommentInfo_Unknown13 = ProtoField.uint64("CommentInfo_Unknown13", "Unknown13 (uint64)")
F.CommentInfo_Unknown14_len = ProtoField.uint16("CommentInfo_Unknown14_len", "Unknown14 length (Buffer)")
F.CommentInfo_Unknown14_data = ProtoField.bytes("CommentInfo_Unknown14_data", "Unknown14 data (Buffer)")
F.CommentInfo_Unknown15_len = ProtoField.uint16("CommentInfo_Unknown15_len", "Unknown15 length (String)")
F.CommentInfo_Unknown15_data = ProtoField.string("CommentInfo_Unknown15_data", "Unknown15 data (String)")
F.CommentInfo_Unknown16 = ProtoField.uint16("CommentInfo_Unknown16", "Unknown16 (uint16)")
F.CommentInfo_Unknown17 = ProtoField.uint8("CommentInfo_Unknown17", "Unknown17 (uint8)")
F.CompletePostObjectsCourseParam = ProtoField.bytes("CompletePostObjectsCourseParam", "CompletePostObjectsCourseParam (CompletePostObjectsCourseParam)")
F.CompletePostObjectsCourseParam_Unknown_len = ProtoField.uint16("CompletePostObjectsCourseParam_Unknown_len", "Unknown length (String)")
F.CompletePostObjectsCourseParam_Unknown_data = ProtoField.string("CompletePostObjectsCourseParam_Unknown_data", "Unknown data (String)")
F.CompletePostObjectsCourseParam_Unknown2_len = ProtoField.uint16("CompletePostObjectsCourseParam_Unknown2_len", "Unknown2 length (String)")
F.CompletePostObjectsCourseParam_Unknown2_data = ProtoField.string("CompletePostObjectsCourseParam_Unknown2_data", "Unknown2 data (String)")
F.CompletePostObjectsCourseParam_Unknown3_len = ProtoField.uint16("CompletePostObjectsCourseParam_Unknown3_len", "Unknown3 length (String)")
F.CompletePostObjectsCourseParam_Unknown3_data = ProtoField.string("CompletePostObjectsCourseParam_Unknown3_data", "Unknown3 data (String)")
F.CompletePostObjectsCourseParam_Unknown4_len = ProtoField.uint16("CompletePostObjectsCourseParam_Unknown4_len", "Unknown4 length (String)")
F.CompletePostObjectsCourseParam_Unknown4_data = ProtoField.string("CompletePostObjectsCourseParam_Unknown4_data", "Unknown4 data (String)")
F.CompletePostObjectsCourseParam_Unknown5_len = ProtoField.uint16("CompletePostObjectsCourseParam_Unknown5_len", "Unknown5 length (String)")
F.CompletePostObjectsCourseParam_Unknown5_data = ProtoField.string("CompletePostObjectsCourseParam_Unknown5_data", "Unknown5 data (String)")
F.CompletePostObjectsCourseParam_Unknown6 = ProtoField.uint64("CompletePostObjectsCourseParam_Unknown6", "Unknown6 (uint64)")
F.CourseTimeStats = ProtoField.bytes("CourseTimeStats", "CourseTimeStats (CourseTimeStats)")
F.CourseTimeStats_User_id_of_first_completion = ProtoField.uint32("CourseTimeStats_User_id_of_first_completion", "User_id_of_first_completion (uint32)")
F.CourseTimeStats_User_id_of_world_record_holder = ProtoField.uint32("CourseTimeStats_User_id_of_world_record_holder", "User_id_of_world_record_holder (uint32)")
F.CourseTimeStats_World_record_milliseconds = ProtoField.uint32("CourseTimeStats_World_record_milliseconds", "World_record_milliseconds (uint32)")
F.CourseTimeStats_Time_of_uploader_milliseconds = ProtoField.uint32("CourseTimeStats_Time_of_uploader_milliseconds", "Time_of_uploader_milliseconds (uint32)")
F.DebugUploadEventCourseGhostParam = ProtoField.bytes("DebugUploadEventCourseGhostParam", "DebugUploadEventCourseGhostParam (DebugUploadEventCourseGhostParam)")
F.DebugUploadEventCourseGhostParam_Unknown = ProtoField.uint64("DebugUploadEventCourseGhostParam_Unknown", "Unknown (uint64)")
F.DebugUploadEventCourseGhostParam_Unknown2 = ProtoField.uint32("DebugUploadEventCourseGhostParam_Unknown2", "Unknown2 (uint32)")
F.DebugUploadEventCourseGhostParam_Unknown3_len = ProtoField.uint16("DebugUploadEventCourseGhostParam_Unknown3_len", "Unknown3 length (String)")
F.DebugUploadEventCourseGhostParam_Unknown3_data = ProtoField.string("DebugUploadEventCourseGhostParam_Unknown3_data", "Unknown3 data (String)")
F.EndlessModeStatus = ProtoField.bytes("EndlessModeStatus", "EndlessModeStatus (EndlessModeStatus)")
F.EndlessModeStatus_Unknown_len = ProtoField.uint32("EndlessModeStatus_Unknown_len", "Unknown length (uint32)")
F.EndlessModeStatus_Unknown_key = ProtoField.uint8("EndlessModeStatus_Unknown_key", "Unknown (uint8)")
F.EndlessModeStatus_Unknown2_len = ProtoField.uint32("EndlessModeStatus_Unknown2_len", "Unknown2 length (uint32)")
F.EndlessModeStatus_Unknown2_key = ProtoField.uint8("EndlessModeStatus_Unknown2_key", "Unknown2 (uint8)")
F.EventCourseGhostInfo = ProtoField.bytes("EventCourseGhostInfo", "EventCourseGhostInfo (EventCourseGhostInfo)")
F.EventCourseGhostInfo_Time_in_milliseconds = ProtoField.uint32("EventCourseGhostInfo_Time_in_milliseconds", "Time_in_milliseconds (uint32)")
F.EventCourseGhostInfo_User_id = ProtoField.uint32("EventCourseGhostInfo_User_id", "User_id (uint32)")
F.EventCourseHistogram = ProtoField.bytes("EventCourseHistogram", "EventCourseHistogram (EventCourseHistogram)")
F.EventCourseHistogram_Data_id = ProtoField.uint64("EventCourseHistogram_Data_id", "Data_id (uint64)")
F.EventCourseHistogram_Unknown = ProtoField.uint32("EventCourseHistogram_Unknown", "Unknown (uint32)")
F.EventCourseHistogram_Unknown2 = ProtoField.uint32("EventCourseHistogram_Unknown2", "Unknown2 (uint32)")
F.EventCourseHistogram_Unknown3 = ProtoField.uint32("EventCourseHistogram_Unknown3", "Unknown3 (uint32)")
F.EventCourseHistogram_Histogram_values_len = ProtoField.uint32("EventCourseHistogram_Histogram_values_len", "Histogram_values length (uint32)")
F.EventCourseHistogram_Histogram_values_item = ProtoField.uint32("EventCourseHistogram_Histogram_values_item", "Histogram_values (uint32)")
F.EventCourseHistogram_Medal_time_len = ProtoField.uint32("EventCourseHistogram_Medal_time_len", "Medal_time length (uint32)")
F.EventCourseHistogram_Medal_time_key = ProtoField.uint8("EventCourseHistogram_Medal_time_key", "Medal_time (uint8)")
F.EventCourseHistogram_Medal_time_value = ProtoField.uint32("EventCourseHistogram_Medal_time_value", "Medal_time (uint32)")
F.EventCourseHistogram_Unknown4 = ProtoField.uint32("EventCourseHistogram_Unknown4", "Unknown4 (uint32)")
F.EventCourseStatusInfo = ProtoField.bytes("EventCourseStatusInfo", "EventCourseStatusInfo (EventCourseStatusInfo)")
F.EventCourseStatusInfo_Unknown = ProtoField.uint64("EventCourseStatusInfo_Unknown", "Unknown (uint64)")
F.EventCourseStatusInfo_Unknown2 = ProtoField.bool("EventCourseStatusInfo_Unknown2", "Unknown2 (bool)")
F.EventCourseStatusInfo_Unknown3 = ProtoField.uint64("EventCourseStatusInfo_Unknown3", "Unknown3 (uint64)")
F.EventCourseThumbnail = ProtoField.bytes("EventCourseThumbnail", "EventCourseThumbnail (EventCourseThumbnail)")
F.EventCourseThumbnail_Url_len = ProtoField.uint16("EventCourseThumbnail_Url_len", "Url length (String)")
F.EventCourseThumbnail_Url_data = ProtoField.string("EventCourseThumbnail_Url_data", "Url data (String)")
F.EventCourseThumbnail_Headers_len = ProtoField.uint32("EventCourseThumbnail_Headers_len", "Headers length (uint32)")
F.EventCourseThumbnail_Filesize = ProtoField.uint32("EventCourseThumbnail_Filesize", "Filesize (uint32)")
F.EventCourseThumbnail_Root_ca_cert_len = ProtoField.uint32("EventCourseThumbnail_Root_ca_cert_len", "Root_ca_cert length (Buffer)")
F.EventCourseThumbnail_Root_ca_cert_data = ProtoField.bytes("EventCourseThumbnail_Root_ca_cert_data", "Root_ca_cert data (Buffer)")
F.EventCourseThumbnail_Filename_len = ProtoField.uint16("EventCourseThumbnail_Filename_len", "Filename length (String)")
F.EventCourseThumbnail_Filename_data = ProtoField.string("EventCourseThumbnail_Filename_data", "Filename data (String)")
F.GetCoursesParam = ProtoField.bytes("GetCoursesParam", "GetCoursesParam (GetCoursesParam)")
F.GetCoursesParam_Data_ids_len = ProtoField.uint32("GetCoursesParam_Data_ids_len", "Data_ids length (uint32)")
F.GetCoursesParam_Data_ids_item = ProtoField.uint64("GetCoursesParam_Data_ids_item", "Data_ids (uint64)")
F.GetCoursesParam_Result_options = ProtoField.uint32("GetCoursesParam_Result_options", "Result_options (uint32)")
F.GetEventCourseGhostParam = ProtoField.bytes("GetEventCourseGhostParam", "GetEventCourseGhostParam (GetEventCourseGhostParam)")
F.GetEventCourseGhostParam_Data_id = ProtoField.uint64("GetEventCourseGhostParam_Data_id", "Data_id (uint64)")
F.GetEventCourseGhostParam_Approximate_time = ProtoField.uint32("GetEventCourseGhostParam_Approximate_time", "Approximate_time (uint32)")
F.GetEventCourseGhostParam_Number_of_ghosts = ProtoField.uint8("GetEventCourseGhostParam_Number_of_ghosts", "Number_of_ghosts (uint8)")
F.GetEventCourseHistogramParam = ProtoField.bytes("GetEventCourseHistogramParam", "GetEventCourseHistogramParam (GetEventCourseHistogramParam)")
F.GetEventCourseHistogramParam_Data_id = ProtoField.uint64("GetEventCourseHistogramParam_Data_id", "Data_id (uint64)")
F.GetUserOrCourseParam = ProtoField.bytes("GetUserOrCourseParam", "GetUserOrCourseParam (GetUserOrCourseParam)")
F.GetUserOrCourseParam_codeString_len = ProtoField.uint16("GetUserOrCourseParam_codeString_len", "codeString length (String)")
F.GetUserOrCourseParam_codeString_data = ProtoField.string("GetUserOrCourseParam_codeString_data", "codeString data (String)")
F.GetUserOrCourseParam_userResultOption = ProtoField.uint32("GetUserOrCourseParam_userResultOption", "userResultOption (uint32)")
F.GetUserOrCourseParam_courseResultOption = ProtoField.uint32("GetUserOrCourseParam_courseResultOption", "courseResultOption (uint32)")
F.GetUsersParam = ProtoField.bytes("GetUsersParam", "GetUsersParam (GetUsersParam)")
F.GetUsersParam_userPIDs_len = ProtoField.uint32("GetUsersParam_userPIDs_len", "userPIDs length (uint32)")
F.GetUsersParam_userPIDs_item = ProtoField.uint32("GetUsersParam_userPIDs_item", "userPIDs (uint32)")
F.GetUsersParam_resultOption = ProtoField.uint32("GetUsersParam_resultOption", "resultOption (uint32)")
F.MiiClothes = ProtoField.bytes("MiiClothes", "MiiClothes (MiiClothes)")
F.MiiClothes_Unknown = ProtoField.uint16("MiiClothes_Unknown", "Unknown (uint16)")
F.MiiClothes_Unknown2 = ProtoField.uint16("MiiClothes_Unknown2", "Unknown2 (uint16)")
F.MiiClothes_Unknown3 = ProtoField.bool("MiiClothes_Unknown3", "Unknown3 (bool)")
F.PreparePostRelationObjectParam = ProtoField.bytes("PreparePostRelationObjectParam", "PreparePostRelationObjectParam (PreparePostRelationObjectParam)")
F.PreparePostRelationObjectParam_Unknown_len = ProtoField.uint16("PreparePostRelationObjectParam_Unknown_len", "Unknown length (String)")
F.PreparePostRelationObjectParam_Unknown_data = ProtoField.string("PreparePostRelationObjectParam_Unknown_data", "Unknown data (String)")
F.PreparePostRelationObjectParam_Unknown2 = ProtoField.uint32("PreparePostRelationObjectParam_Unknown2", "Unknown2 (uint32)")
F.PreparePostRelationObjectParam_Unknown3 = ProtoField.uint32("PreparePostRelationObjectParam_Unknown3", "Unknown3 (uint32)")
F.PreparePostRelationObjectParam_Unknown4 = ProtoField.uint32("PreparePostRelationObjectParam_Unknown4", "Unknown4 (uint32)")
F.PreparePostRelationObjectParam_Unknown5 = ProtoField.uint32("PreparePostRelationObjectParam_Unknown5", "Unknown5 (uint32)")
F.PreparePostRelationObjectParam_Unknown6_len = ProtoField.uint32("PreparePostRelationObjectParam_Unknown6_len", "Unknown6 length (uint32)")
F.PreparePostRelationObjectParam_Unknown6_item_len = ProtoField.uint16("PreparePostRelationObjectParam_Unknown6_item_len", "Unknown6 length (String)")
F.PreparePostRelationObjectParam_Unknown6_item_data = ProtoField.string("PreparePostRelationObjectParam_Unknown6_item_data", "Unknown6 data (String)")
F.ReadEventCourseListParam = ProtoField.bytes("ReadEventCourseListParam", "ReadEventCourseListParam (ReadEventCourseListParam)")
F.ReadEventCourseListParam_Unknown = ProtoField.uint64("ReadEventCourseListParam_Unknown", "Unknown (uint64)")
F.RegisterUserParam = ProtoField.bytes("RegisterUserParam", "RegisterUserParam (RegisterUserParam)")
F.RegisterUserParam_Username_len = ProtoField.uint16("RegisterUserParam_Username_len", "Username length (String)")
F.RegisterUserParam_Username_data = ProtoField.string("RegisterUserParam_Username_data", "Username data (String)")
F.RegisterUserParam_Unknown2_len = ProtoField.uint16("RegisterUserParam_Unknown2_len", "Unknown2 length (Buffer)")
F.RegisterUserParam_Unknown2_data = ProtoField.bytes("RegisterUserParam_Unknown2_data", "Unknown2 data (Buffer)")
F.RegisterUserParam_Region_id = ProtoField.uint8("RegisterUserParam_Region_id", "Region_id (uint8)")
F.RegisterUserParam_Country_code_len = ProtoField.uint16("RegisterUserParam_Country_code_len", "Country_code length (String)")
F.RegisterUserParam_Country_code_data = ProtoField.string("RegisterUserParam_Country_code_data", "Country_code data (String)")
F.RegisterUserParam_Pseudo_device_id_len = ProtoField.uint16("RegisterUserParam_Pseudo_device_id_len", "Pseudo_device_id length (String)")
F.RegisterUserParam_Pseudo_device_id_data = ProtoField.string("RegisterUserParam_Pseudo_device_id_data", "Pseudo_device_id data (String)")
F.RelationObjectReqPostInfo = ProtoField.bytes("RelationObjectReqPostInfo", "RelationObjectReqPostInfo (RelationObjectReqPostInfo)")
F.RelationObjectReqPostInfo_Data_id_len = ProtoField.uint16("RelationObjectReqPostInfo_Data_id_len", "Data_id length (String)")
F.RelationObjectReqPostInfo_Data_id_data = ProtoField.string("RelationObjectReqPostInfo_Data_id_data", "Data_id data (String)")
F.RelationObjectReqPostInfo_Url_len = ProtoField.uint16("RelationObjectReqPostInfo_Url_len", "Url length (String)")
F.RelationObjectReqPostInfo_Url_data = ProtoField.string("RelationObjectReqPostInfo_Url_data", "Url data (String)")
F.RelationObjectReqPostInfo_Headers_len = ProtoField.uint32("RelationObjectReqPostInfo_Headers_len", "Headers length (uint32)")
F.RelationObjectReqPostInfo_Form_fields_len = ProtoField.uint32("RelationObjectReqPostInfo_Form_fields_len", "Form_fields length (uint32)")
F.RelationObjectReqPostInfo_Root_ca_cert_len = ProtoField.uint32("RelationObjectReqPostInfo_Root_ca_cert_len", "Root_ca_cert length (Buffer)")
F.RelationObjectReqPostInfo_Root_ca_cert_data = ProtoField.bytes("RelationObjectReqPostInfo_Root_ca_cert_data", "Root_ca_cert data (Buffer)")
F.ReqGetInfoHeadersInfo = ProtoField.bytes("ReqGetInfoHeadersInfo", "ReqGetInfoHeadersInfo (ReqGetInfoHeadersInfo)")
F.ReqGetInfoHeadersInfo_Headers_len = ProtoField.uint32("ReqGetInfoHeadersInfo_Headers_len", "Headers length (uint32)")
F.ReqGetInfoHeadersInfo_Expiration_seconds = ProtoField.uint32("ReqGetInfoHeadersInfo_Expiration_seconds", "Expiration_seconds (uint32)")
F.SearchCoursesEndlessModeParam = ProtoField.bytes("SearchCoursesEndlessModeParam", "SearchCoursesEndlessModeParam (SearchCoursesEndlessModeParam)")
F.SearchCoursesEndlessModeParam_resultOption = ProtoField.uint32("SearchCoursesEndlessModeParam_resultOption", "resultOption (uint32)")
F.SearchCoursesEndlessModeParam_count = ProtoField.uint32("SearchCoursesEndlessModeParam_count", "count (uint32)")
F.SearchCoursesEndlessModeParam_difficulty = ProtoField.uint8("SearchCoursesEndlessModeParam_difficulty", "difficulty (uint8)")
F.SearchCoursesEventParam = ProtoField.bytes("SearchCoursesEventParam", "SearchCoursesEventParam (SearchCoursesEventParam)")
F.SearchCoursesEventParam_Result_option = ProtoField.uint32("SearchCoursesEventParam_Result_option", "Result_option (uint32)")
F.SearchCoursesLatestParam = ProtoField.bytes("SearchCoursesLatestParam", "SearchCoursesLatestParam (SearchCoursesLatestParam)")
F.SearchCoursesLatestParam_resultOption = ProtoField.uint32("SearchCoursesLatestParam_resultOption", "resultOption (uint32)")
F.SearchCoursesPickUpParam = ProtoField.bytes("SearchCoursesPickUpParam", "SearchCoursesPickUpParam (SearchCoursesPickUpParam)")
F.SearchCoursesPickUpParam_Unknown = ProtoField.uint32("SearchCoursesPickUpParam_Unknown", "Unknown (uint32)")
F.SearchCoursesPickUpParam_Unknown2 = ProtoField.uint32("SearchCoursesPickUpParam_Unknown2", "Unknown2 (uint32)")
F.SearchCoursesPickUpParam_Difficulty = ProtoField.uint8("SearchCoursesPickUpParam_Difficulty", "Difficulty (uint8)")
F.SearchCoursesPointRankingParam = ProtoField.bytes("SearchCoursesPointRankingParam", "SearchCoursesPointRankingParam (SearchCoursesPointRankingParam)")
F.SearchCoursesPointRankingParam_resultOption = ProtoField.uint32("SearchCoursesPointRankingParam_resultOption", "resultOption (uint32)")
F.SearchCoursesPointRankingParam_preferCourseDifficulty = ProtoField.uint8("SearchCoursesPointRankingParam_preferCourseDifficulty", "preferCourseDifficulty (uint8)")
F.SearchCoursesPointRankingParam_rejectRegionIds_len = ProtoField.uint32("SearchCoursesPointRankingParam_rejectRegionIds_len", "rejectRegionIds length (uint32)")
F.SearchCoursesPointRankingParam_rejectRegionIds_item = ProtoField.uint8("SearchCoursesPointRankingParam_rejectRegionIds_item", "rejectRegionIds (uint8)")
F.SearchCoursesPostedByParam = ProtoField.bytes("SearchCoursesPostedByParam", "SearchCoursesPostedByParam (SearchCoursesPostedByParam)")
F.SearchCoursesPostedByParam_Unknown = ProtoField.uint32("SearchCoursesPostedByParam_Unknown", "Unknown (uint32)")
F.SearchCoursesPostedByParam_Unknown2_len = ProtoField.uint32("SearchCoursesPostedByParam_Unknown2_len", "Unknown2 length (uint32)")
F.SearchCoursesPostedByParam_Unknown2_item = ProtoField.uint64("SearchCoursesPostedByParam_Unknown2_item", "Unknown2 (uint64)")
F.SearchUsersBattleModeParam = ProtoField.bytes("SearchUsersBattleModeParam", "SearchUsersBattleModeParam (SearchUsersBattleModeParam)")
F.SearchUsersBattleModeParam_Unknown = ProtoField.uint32("SearchUsersBattleModeParam_Unknown", "Unknown (uint32)")
F.SearchUsersBattleModeParam_Unknown2_len = ProtoField.uint32("SearchUsersBattleModeParam_Unknown2_len", "Unknown2 length (Buffer)")
F.SearchUsersBattleModeParam_Unknown2_data = ProtoField.bytes("SearchUsersBattleModeParam_Unknown2_data", "Unknown2 data (Buffer)")
F.SearchUsersClearedCourseParam = ProtoField.bytes("SearchUsersClearedCourseParam", "SearchUsersClearedCourseParam (SearchUsersClearedCourseParam)")
F.SearchUsersClearedCourseParam_dataId = ProtoField.uint64("SearchUsersClearedCourseParam_dataId", "dataId (uint64)")
F.SearchUsersClearedCourseParam_resultOption = ProtoField.uint32("SearchUsersClearedCourseParam_resultOption", "resultOption (uint32)")
F.SearchUsersClearedCourseParam_count = ProtoField.uint32("SearchUsersClearedCourseParam_count", "count (uint32)")
F.SearchUsersClearRankingParam = ProtoField.bytes("SearchUsersClearRankingParam", "SearchUsersClearRankingParam (SearchUsersClearRankingParam)")
F.SearchUsersClearRankingParam_Unknown = ProtoField.uint8("SearchUsersClearRankingParam_Unknown", "Unknown (uint8)")
F.SearchUsersClearRankingParam_Unknown2 = ProtoField.uint32("SearchUsersClearRankingParam_Unknown2", "Unknown2 (uint32)")
F.SearchUsersClearRankingParam_Unknown3_len = ProtoField.uint32("SearchUsersClearRankingParam_Unknown3_len", "Unknown3 length (Buffer)")
F.SearchUsersClearRankingParam_Unknown3_data = ProtoField.bytes("SearchUsersClearRankingParam_Unknown3_data", "Unknown3 data (Buffer)")
F.SearchUsersEndlessModeParam = ProtoField.bytes("SearchUsersEndlessModeParam", "SearchUsersEndlessModeParam (SearchUsersEndlessModeParam)")
F.SearchUsersEndlessModeParam_Unknown = ProtoField.uint8("SearchUsersEndlessModeParam_Unknown", "Unknown (uint8)")
F.SearchUsersEndlessModeParam_Unknown2 = ProtoField.uint32("SearchUsersEndlessModeParam_Unknown2", "Unknown2 (uint32)")
F.SearchUsersEndlessModeParam_Unknown3_len = ProtoField.uint32("SearchUsersEndlessModeParam_Unknown3_len", "Unknown3 length (Buffer)")
F.SearchUsersEndlessModeParam_Unknown3_data = ProtoField.bytes("SearchUsersEndlessModeParam_Unknown3_data", "Unknown3 data (Buffer)")
F.SearchUsersFolloweeParam = ProtoField.bytes("SearchUsersFolloweeParam", "SearchUsersFolloweeParam (SearchUsersFolloweeParam)")
F.SearchUsersFolloweeParam_resultOption = ProtoField.uint32("SearchUsersFolloweeParam_resultOption", "resultOption (uint32)")
F.SearchUsersPlayedCourseParam = ProtoField.bytes("SearchUsersPlayedCourseParam", "SearchUsersPlayedCourseParam (SearchUsersPlayedCourseParam)")
F.SearchUsersPlayedCourseParam_dataId = ProtoField.uint64("SearchUsersPlayedCourseParam_dataId", "dataId (uint64)")
F.SearchUsersPlayedCourseParam_resultOption = ProtoField.uint32("SearchUsersPlayedCourseParam_resultOption", "resultOption (uint32)")
F.SearchUsersPlayedCourseParam_count = ProtoField.uint32("SearchUsersPlayedCourseParam_count", "count (uint32)")
F.SearchUsersPositiveRatedCourseParam = ProtoField.bytes("SearchUsersPositiveRatedCourseParam", "SearchUsersPositiveRatedCourseParam (SearchUsersPositiveRatedCourseParam)")
F.SearchUsersPositiveRatedCourseParam_dataId = ProtoField.uint64("SearchUsersPositiveRatedCourseParam_dataId", "dataId (uint64)")
F.SearchUsersPositiveRatedCourseParam_resultOption = ProtoField.uint32("SearchUsersPositiveRatedCourseParam_resultOption", "resultOption (uint32)")
F.SearchUsersPositiveRatedCourseParam_count = ProtoField.uint32("SearchUsersPositiveRatedCourseParam_count", "count (uint32)")
F.SearchUsersUserPointParam = ProtoField.bytes("SearchUsersUserPointParam", "SearchUsersUserPointParam (SearchUsersUserPointParam)")
F.SearchUsersUserPointParam_Result_option = ProtoField.uint32("SearchUsersUserPointParam_Result_option", "Result_option (uint32)")
F.SearchUsersUserPointParam_Unknown_len = ProtoField.uint32("SearchUsersUserPointParam_Unknown_len", "Unknown length (Buffer)")
F.SearchUsersUserPointParam_Unknown_data = ProtoField.bytes("SearchUsersUserPointParam_Unknown_data", "Unknown data (Buffer)")
F.SyncUserProfileParam = ProtoField.bytes("SyncUserProfileParam", "SyncUserProfileParam (SyncUserProfileParam)")
F.SyncUserProfileParam_Username_len = ProtoField.uint16("SyncUserProfileParam_Username_len", "Username length (String)")
F.SyncUserProfileParam_Username_data = ProtoField.string("SyncUserProfileParam_Username_data", "Username data (String)")
F.SyncUserProfileParam_Unknown2_len = ProtoField.uint16("SyncUserProfileParam_Unknown2_len", "Unknown2 length (Buffer)")
F.SyncUserProfileParam_Unknown2_data = ProtoField.bytes("SyncUserProfileParam_Unknown2_data", "Unknown2 data (Buffer)")
F.SyncUserProfileParam_Unknown3 = ProtoField.uint8("SyncUserProfileParam_Unknown3", "Unknown3 (uint8)")
F.SyncUserProfileParam_Country_code_len = ProtoField.uint16("SyncUserProfileParam_Country_code_len", "Country_code length (String)")
F.SyncUserProfileParam_Country_code_data = ProtoField.string("SyncUserProfileParam_Country_code_data", "Country_code data (String)")
F.SyncUserProfileParam_Unknown4 = ProtoField.bool("SyncUserProfileParam_Unknown4", "Unknown4 (bool)")
F.SyncUserProfileParam_Unknown5 = ProtoField.bool("SyncUserProfileParam_Unknown5", "Unknown5 (bool)")
F.SyncUserProfileParam_Pseudo_device_id_len = ProtoField.uint16("SyncUserProfileParam_Pseudo_device_id_len", "Pseudo_device_id length (String)")
F.SyncUserProfileParam_Pseudo_device_id_data = ProtoField.string("SyncUserProfileParam_Pseudo_device_id_data", "Pseudo_device_id data (String)")
F.SyncUserProfileParam_Unknown6 = ProtoField.uint32("SyncUserProfileParam_Unknown6", "Unknown6 (uint32)")
F.SyncUserProfileResult = ProtoField.bytes("SyncUserProfileResult", "SyncUserProfileResult (SyncUserProfileResult)")
F.SyncUserProfileResult_User_id = ProtoField.uint32("SyncUserProfileResult_User_id", "User_id (uint32)")
F.SyncUserProfileResult_Username_len = ProtoField.uint16("SyncUserProfileResult_Username_len", "Username length (String)")
F.SyncUserProfileResult_Username_data = ProtoField.string("SyncUserProfileResult_Username_data", "Username data (String)")
F.SyncUserProfileResult_Unknown2_len = ProtoField.uint16("SyncUserProfileResult_Unknown2_len", "Unknown2 length (Buffer)")
F.SyncUserProfileResult_Unknown2_data = ProtoField.bytes("SyncUserProfileResult_Unknown2_data", "Unknown2 data (Buffer)")
F.SyncUserProfileResult_Unknown3 = ProtoField.uint8("SyncUserProfileResult_Unknown3", "Unknown3 (uint8)")
F.SyncUserProfileResult_Country_code_len = ProtoField.uint16("SyncUserProfileResult_Country_code_len", "Country_code length (String)")
F.SyncUserProfileResult_Country_code_data = ProtoField.string("SyncUserProfileResult_Country_code_data", "Country_code data (String)")
F.SyncUserProfileResult_Unknown4 = ProtoField.uint8("SyncUserProfileResult_Unknown4", "Unknown4 (uint8)")
F.SyncUserProfileResult_Unknown5 = ProtoField.bool("SyncUserProfileResult_Unknown5", "Unknown5 (bool)")
F.SyncUserProfileResult_Unknown6 = ProtoField.bool("SyncUserProfileResult_Unknown6", "Unknown6 (bool)")
F.UnknownStruct3 = ProtoField.bytes("UnknownStruct3", "UnknownStruct3 (UnknownStruct3)")
F.UnknownStruct3_Unknown = ProtoField.uint8("UnknownStruct3_Unknown", "Unknown (uint8)")
F.UnknownStruct3_Unknown2 = ProtoField.uint64("UnknownStruct3_Unknown2", "Unknown2 (uint64)")
F.UnknownStruct6 = ProtoField.bytes("UnknownStruct6", "UnknownStruct6 (UnknownStruct6)")
F.UnknownStruct6_Unknown = ProtoField.uint64("UnknownStruct6_Unknown", "Unknown (uint64)")
F.UnknownStruct6_Unknown2 = ProtoField.uint32("UnknownStruct6_Unknown2", "Unknown2 (uint32)")
F.UpdateCourseTagParam = ProtoField.bytes("UpdateCourseTagParam", "UpdateCourseTagParam (UpdateCourseTagParam)")
F.UpdateCourseTagParam_Data_id = ProtoField.uint64("UpdateCourseTagParam_Data_id", "Data_id (uint64)")
F.UpdateCourseTagParam_First_tag = ProtoField.uint8("UpdateCourseTagParam_First_tag", "First_tag (uint8)")
F.UpdateCourseTagParam_Second_tag = ProtoField.uint8("UpdateCourseTagParam_Second_tag", "Second_tag (uint8)")
F.UpdateMiiClothesParam = ProtoField.bytes("UpdateMiiClothesParam", "UpdateMiiClothesParam (UpdateMiiClothesParam)")
F.UpdateMiiClothesParam_Unknown = ProtoField.uint16("UpdateMiiClothesParam_Unknown", "Unknown (uint16)")
F.UpdateMiiClothesParam_Unknown2 = ProtoField.uint16("UpdateMiiClothesParam_Unknown2", "Unknown2 (uint16)")
F.UpdateMiiClothesParam_Unknown3 = ProtoField.bool("UpdateMiiClothesParam_Unknown3", "Unknown3 (bool)")
F.CommonDataList = ProtoField.bytes("CommonDataList", "CommonDataList (CommonDataList)")
F.CommonDataList_Common_data_len = ProtoField.uint32("CommonDataList_Common_data_len", "Common_data length (uint32)")
F.CommonDataList_Common_data_item_len = ProtoField.uint16("CommonDataList_Common_data_item_len", "Common_data length (Buffer)")
F.CommonDataList_Common_data_item_data = ProtoField.bytes("CommonDataList_Common_data_item_data", "Common_data data (Buffer)")
F.CompetitionRankingInfo = ProtoField.bytes("CompetitionRankingInfo", "CompetitionRankingInfo (CompetitionRankingInfo)")
F.CompetitionRankingInfo_Unknown = ProtoField.uint32("CompetitionRankingInfo_Unknown", "Unknown (uint32)")
F.CompetitionRankingInfo_Unknown2 = ProtoField.uint32("CompetitionRankingInfo_Unknown2", "Unknown2 (uint32)")
F.CompetitionRankingInfo_Unknown3_len = ProtoField.uint32("CompetitionRankingInfo_Unknown3_len", "Unknown3 length (uint32)")
F.CompetitionRankingInfo_Unknown3_item = ProtoField.uint32("CompetitionRankingInfo_Unknown3_item", "Unknown3 (uint32)")
F.GetCompetitionInfoParam = ProtoField.bytes("GetCompetitionInfoParam", "GetCompetitionInfoParam (GetCompetitionInfoParam)")
F.GetCompetitionInfoParam_Unknown = ProtoField.uint8("GetCompetitionInfoParam_Unknown", "Unknown (uint8)")
F.BlacklistedPrincipal = ProtoField.bytes("BlacklistedPrincipal", "BlacklistedPrincipal (BlacklistedPrincipal)")
F.BlacklistedPrincipal_Blacklisted_since = ProtoField.uint64("BlacklistedPrincipal_Blacklisted_since", "Blacklisted_since (uint64)")
F.FriendInfo = ProtoField.bytes("FriendInfo", "FriendInfo (FriendInfo)")
F.FriendInfo_Became_friend = ProtoField.uint64("FriendInfo_Became_friend", "Became_friend (uint64)")
F.FriendInfo_Last_online = ProtoField.uint64("FriendInfo_Last_online", "Last_online (uint64)")
F.FriendInfo_Unknown = ProtoField.uint64("FriendInfo_Unknown", "Unknown (uint64)")
F.FriendRequest = ProtoField.bytes("FriendRequest", "FriendRequest (FriendRequest)")
F.FriendRequest_Sent_on = ProtoField.uint64("FriendRequest_Sent_on", "Sent_on (uint64)")
F.PersistentNotificationList = ProtoField.bytes("PersistentNotificationList", "PersistentNotificationList (PersistentNotificationList)")
F.PersistentNotificationList_Notifications_len = ProtoField.uint32("PersistentNotificationList_Notifications_len", "Notifications length (uint32)")
F.PrincipalPreference = ProtoField.bytes("PrincipalPreference", "PrincipalPreference (PrincipalPreference)")
F.PrincipalPreference_Unknown = ProtoField.bool("PrincipalPreference_Unknown", "Unknown (bool)")
F.PrincipalPreference_Unknown2 = ProtoField.bool("PrincipalPreference_Unknown2", "Unknown2 (bool)")
F.PrincipalPreference_Unknown3 = ProtoField.bool("PrincipalPreference_Unknown3", "Unknown3 (bool)")
F.PrincipalRequestBlockSetting = ProtoField.bytes("PrincipalRequestBlockSetting", "PrincipalRequestBlockSetting (PrincipalRequestBlockSetting)")
F.PrincipalRequestBlockSetting_Unknown = ProtoField.uint32("PrincipalRequestBlockSetting_Unknown", "Unknown (uint32)")
F.PrincipalRequestBlockSetting_Unknown2 = ProtoField.bool("PrincipalRequestBlockSetting_Unknown2", "Unknown2 (bool)")
F.GameSession = ProtoField.bytes("GameSession", "GameSession (GameSession)")
F.GameSession_m_typeID = ProtoField.uint32("GameSession_m_typeID", "m_typeID (uint32)")
F.GameSession_m_attributes_len = ProtoField.uint32("GameSession_m_attributes_len", "m_attributes length (uint32)")
F.GameSessionSearchResult = ProtoField.bytes("GameSessionSearchResult", "GameSessionSearchResult (GameSessionSearchResult)")
F.GameSessionSearchResult_m_hostPID = ProtoField.uint32("GameSessionSearchResult_m_hostPID", "m_hostPID (uint32)")
F.GameSessionSearchResult_m_hostURLs_len = ProtoField.uint32("GameSessionSearchResult_m_hostURLs_len", "m_hostURLs length (uint32)")
F.GameSessionSearchResult_m_hostURLs_item_len = ProtoField.uint16("GameSessionSearchResult_m_hostURLs_item_len", "m_hostURLs length (String)")
F.GameSessionSearchResult_m_hostURLs_item_data = ProtoField.string("GameSessionSearchResult_m_hostURLs_item_data", "m_hostURLs data (String)")
F.GameSessionSearchResult_m_attributes_len = ProtoField.uint32("GameSessionSearchResult_m_attributes_len", "m_attributes length (uint32)")
F.GameSessionUpdate = ProtoField.bytes("GameSessionUpdate", "GameSessionUpdate (GameSessionUpdate)")
F.GameSessionUpdate_m_attributes_len = ProtoField.uint32("GameSessionUpdate_m_attributes_len", "m_attributes length (uint32)")
F.GameSessionParticipant = ProtoField.bytes("GameSessionParticipant", "GameSessionParticipant (GameSessionParticipant)")
F.GameSessionParticipant_m_PID = ProtoField.uint32("GameSessionParticipant_m_PID", "m_PID (uint32)")
F.GameSessionParticipant_m_name_len = ProtoField.uint16("GameSessionParticipant_m_name_len", "m_name length (String)")
F.GameSessionParticipant_m_name_data = ProtoField.string("GameSessionParticipant_m_name_data", "m_name data (String)")
F.GameSessionParticipant_m_stationURLs_len = ProtoField.uint32("GameSessionParticipant_m_stationURLs_len", "m_stationURLs length (uint32)")
F.GameSessionParticipant_m_stationURLs_item_len = ProtoField.uint16("GameSessionParticipant_m_stationURLs_item_len", "m_stationURLs length (String)")
F.GameSessionParticipant_m_stationURLs_item_data = ProtoField.string("GameSessionParticipant_m_stationURLs_item_data", "m_stationURLs data (String)")
F.GameSessionInvitation = ProtoField.bytes("GameSessionInvitation", "GameSessionInvitation (GameSessionInvitation)")
F.GameSessionInvitation_m_recipientPIDs_len = ProtoField.uint32("GameSessionInvitation_m_recipientPIDs_len", "m_recipientPIDs length (uint32)")
F.GameSessionInvitation_m_recipientPIDs_item = ProtoField.uint32("GameSessionInvitation_m_recipientPIDs_item", "m_recipientPIDs (uint32)")
F.GameSessionInvitation_m_message_len = ProtoField.uint16("GameSessionInvitation_m_message_len", "m_message length (String)")
F.GameSessionInvitation_m_message_data = ProtoField.string("GameSessionInvitation_m_message_data", "m_message data (String)")
F.GameSessionInvitationSent = ProtoField.bytes("GameSessionInvitationSent", "GameSessionInvitationSent (GameSessionInvitationSent)")
F.GameSessionInvitationSent_m_recipientPID = ProtoField.uint32("GameSessionInvitationSent_m_recipientPID", "m_recipientPID (uint32)")
F.GameSessionInvitationSent_m_message_len = ProtoField.uint16("GameSessionInvitationSent_m_message_len", "m_message length (String)")
F.GameSessionInvitationSent_m_message_data = ProtoField.string("GameSessionInvitationSent_m_message_data", "m_message data (String)")
F.GameSessionInvitationSent_m_creationTime = ProtoField.uint64("GameSessionInvitationSent_m_creationTime", "m_creationTime (uint64)")
F.GameSessionInvitationReceived = ProtoField.bytes("GameSessionInvitationReceived", "GameSessionInvitationReceived (GameSessionInvitationReceived)")
F.GameSessionInvitationReceived_m_senderPID = ProtoField.uint32("GameSessionInvitationReceived_m_senderPID", "m_senderPID (uint32)")
F.GameSessionInvitationReceived_m_message_len = ProtoField.uint16("GameSessionInvitationReceived_m_message_len", "m_message length (String)")
F.GameSessionInvitationReceived_m_message_data = ProtoField.string("GameSessionInvitationReceived_m_message_data", "m_message data (String)")
F.GameSessionInvitationReceived_m_creationTime = ProtoField.uint64("GameSessionInvitationReceived_m_creationTime", "m_creationTime (uint64)")
F.GameSessionQuery = ProtoField.bytes("GameSessionQuery", "GameSessionQuery (GameSessionQuery)")
F.GameSessionQuery_m_typeID = ProtoField.uint32("GameSessionQuery_m_typeID", "m_typeID (uint32)")
F.GameSessionQuery_m_queryID = ProtoField.uint32("GameSessionQuery_m_queryID", "m_queryID (uint32)")
F.GameSessionQuery_m_parameters_len = ProtoField.uint32("GameSessionQuery_m_parameters_len", "m_parameters length (uint32)")
F.GameSessionSocialQuery = ProtoField.bytes("GameSessionSocialQuery", "GameSessionSocialQuery (GameSessionSocialQuery)")
F.GameSessionSocialQuery_m_typeID = ProtoField.uint32("GameSessionSocialQuery_m_typeID", "m_typeID (uint32)")
F.GameSessionSocialQuery_m_queryID = ProtoField.uint32("GameSessionSocialQuery_m_queryID", "m_queryID (uint32)")
F.GameSessionSocialQuery_m_parameters_len = ProtoField.uint32("GameSessionSocialQuery_m_parameters_len", "m_parameters length (uint32)")
F.GameSessionSocialQuery_m_participantIDs_len = ProtoField.uint32("GameSessionSocialQuery_m_participantIDs_len", "m_participantIDs length (uint32)")
F.GameSessionSocialQuery_m_participantIDs_item = ProtoField.uint32("GameSessionSocialQuery_m_participantIDs_item", "m_participantIDs (uint32)")
F.GameSessionMessage = ProtoField.bytes("GameSessionMessage", "GameSessionMessage (GameSessionMessage)")
F.GameSessionMessage_m_message_len = ProtoField.uint16("GameSessionMessage_m_message_len", "m_message length (String)")
F.GameSessionMessage_m_message_data = ProtoField.string("GameSessionMessage_m_message_data", "m_message data (String)")
F.GameSessionSearchWithParticipantsResult = ProtoField.bytes("GameSessionSearchWithParticipantsResult", "GameSessionSearchWithParticipantsResult (GameSessionSearchWithParticipantsResult)")
F.GameSessionSearchWithParticipantsResult_m_participantIDs_len = ProtoField.uint32("GameSessionSearchWithParticipantsResult_m_participantIDs_len", "m_participantIDs length (uint32)")
F.GameSessionSearchWithParticipantsResult_m_participantIDs_item = ProtoField.uint32("GameSessionSearchWithParticipantsResult_m_participantIDs_item", "m_participantIDs (uint32)")
F.GameSessionUnsuccessfulJoinSession = ProtoField.bytes("GameSessionUnsuccessfulJoinSession", "GameSessionUnsuccessfulJoinSession (GameSessionUnsuccessfulJoinSession)")
F.GameSessionUnsuccessfulJoinSession_m_errorCategory = ProtoField.uint32("GameSessionUnsuccessfulJoinSession_m_errorCategory", "m_errorCategory (uint32)")
F.GameSessionUnsuccessfulJoinSession_m_errorCode = ProtoField.int32("GameSessionUnsuccessfulJoinSession_m_errorCode", "m_errorCode (uint32)")
F.Ranking2ScoreData = ProtoField.bytes("Ranking2ScoreData", "Ranking2ScoreData (Ranking2ScoreData)")
F.Ranking2ScoreData_misc = ProtoField.uint64("Ranking2ScoreData_misc", "misc (uint64)")
F.Ranking2ScoreData_category = ProtoField.uint32("Ranking2ScoreData_category", "category (uint32)")
F.Ranking2ScoreData_score = ProtoField.uint32("Ranking2ScoreData_score", "score (uint32)")
F.Ranking2GetParam = ProtoField.bytes("Ranking2GetParam", "Ranking2GetParam (Ranking2GetParam)")
F.Ranking2GetParam_nexUniqueId = ProtoField.uint64("Ranking2GetParam_nexUniqueId", "nexUniqueId (uint64)")
F.Ranking2GetParam_principalId = ProtoField.uint32("Ranking2GetParam_principalId", "principalId (uint32)")
F.Ranking2GetParam_category = ProtoField.uint32("Ranking2GetParam_category", "category (uint32)")
F.Ranking2GetParam_offset = ProtoField.uint32("Ranking2GetParam_offset", "offset (uint32)")
F.Ranking2GetParam_length = ProtoField.uint32("Ranking2GetParam_length", "length (uint32)")
F.Ranking2GetParam_sortFlags = ProtoField.uint32("Ranking2GetParam_sortFlags", "sortFlags (uint32)")
F.Ranking2GetParam_optionFlags = ProtoField.uint32("Ranking2GetParam_optionFlags", "optionFlags (uint32)")
F.Ranking2GetParam_mode = ProtoField.uint8("Ranking2GetParam_mode", "mode (uint8)")
F.Ranking2GetParam_numSeasonsToGoBack = ProtoField.uint8("Ranking2GetParam_numSeasonsToGoBack", "numSeasonsToGoBack (uint8)")
F.Ranking2GetByListParam = ProtoField.bytes("Ranking2GetByListParam", "Ranking2GetByListParam (Ranking2GetByListParam)")
F.Ranking2GetByListParam_category = ProtoField.uint32("Ranking2GetByListParam_category", "category (uint32)")
F.Ranking2GetByListParam_offset = ProtoField.uint32("Ranking2GetByListParam_offset", "offset (uint32)")
F.Ranking2GetByListParam_length = ProtoField.uint32("Ranking2GetByListParam_length", "length (uint32)")
F.Ranking2GetByListParam_sortFlags = ProtoField.uint32("Ranking2GetByListParam_sortFlags", "sortFlags (uint32)")
F.Ranking2GetByListParam_optionFlags = ProtoField.uint32("Ranking2GetByListParam_optionFlags", "optionFlags (uint32)")
F.Ranking2GetByListParam_numSeasonsToGoBack = ProtoField.uint8("Ranking2GetByListParam_numSeasonsToGoBack", "numSeasonsToGoBack (uint8)")
F.Ranking2Info = ProtoField.bytes("Ranking2Info", "Ranking2Info (Ranking2Info)")
F.Ranking2Info_rankDataList_len = ProtoField.uint32("Ranking2Info_rankDataList_len", "rankDataList length (uint32)")
F.Ranking2Info_lowestRank = ProtoField.uint32("Ranking2Info_lowestRank", "lowestRank (uint32)")
F.Ranking2Info_numRankedIn = ProtoField.uint32("Ranking2Info_numRankedIn", "numRankedIn (uint32)")
F.Ranking2Info_season = ProtoField.int32("Ranking2Info_season", "season (uint32)")
F.Ranking2CategorySetting = ProtoField.bytes("Ranking2CategorySetting", "Ranking2CategorySetting (Ranking2CategorySetting)")
F.Ranking2CategorySetting_minScore = ProtoField.uint32("Ranking2CategorySetting_minScore", "minScore (uint32)")
F.Ranking2CategorySetting_maxScore = ProtoField.uint32("Ranking2CategorySetting_maxScore", "maxScore (uint32)")
F.Ranking2CategorySetting_lowestRank = ProtoField.uint32("Ranking2CategorySetting_lowestRank", "lowestRank (uint32)")
F.Ranking2CategorySetting_resetMonth = ProtoField.uint16("Ranking2CategorySetting_resetMonth", "resetMonth (uint16)")
F.Ranking2CategorySetting_resetDay = ProtoField.uint8("Ranking2CategorySetting_resetDay", "resetDay (uint8)")
F.Ranking2CategorySetting_resetHour = ProtoField.uint8("Ranking2CategorySetting_resetHour", "resetHour (uint8)")
F.Ranking2CategorySetting_resetMode = ProtoField.uint8("Ranking2CategorySetting_resetMode", "resetMode (uint8)")
F.Ranking2CategorySetting_maxSeasonsToGoBack = ProtoField.uint8("Ranking2CategorySetting_maxSeasonsToGoBack", "maxSeasonsToGoBack (uint8)")
F.Ranking2CategorySetting_scoreOrder = ProtoField.bool("Ranking2CategorySetting_scoreOrder", "scoreOrder (bool)")
F.Ranking2ChartInfoInput = ProtoField.bytes("Ranking2ChartInfoInput", "Ranking2ChartInfoInput (Ranking2ChartInfoInput)")
F.Ranking2ChartInfoInput_chartIndex = ProtoField.uint32("Ranking2ChartInfoInput_chartIndex", "chartIndex (uint32)")
F.Ranking2ChartInfoInput_numSeasonsToGoBack = ProtoField.uint8("Ranking2ChartInfoInput_numSeasonsToGoBack", "numSeasonsToGoBack (uint8)")
F.Ranking2ChartInfo = ProtoField.bytes("Ranking2ChartInfo", "Ranking2ChartInfo (Ranking2ChartInfo)")
F.Ranking2ChartInfo_createTime = ProtoField.uint64("Ranking2ChartInfo_createTime", "createTime (uint64)")
F.Ranking2ChartInfo_index = ProtoField.uint32("Ranking2ChartInfo_index", "index (uint32)")
F.Ranking2ChartInfo_category = ProtoField.uint32("Ranking2ChartInfo_category", "category (uint32)")
F.Ranking2ChartInfo_season = ProtoField.int32("Ranking2ChartInfo_season", "season (uint32)")
F.Ranking2ChartInfo_binsSize = ProtoField.uint8("Ranking2ChartInfo_binsSize", "binsSize (uint8)")
F.Ranking2ChartInfo_samplingRate = ProtoField.uint8("Ranking2ChartInfo_samplingRate", "samplingRate (uint8)")
F.Ranking2ChartInfo_scoreOrder = ProtoField.bool("Ranking2ChartInfo_scoreOrder", "scoreOrder (bool)")
F.Ranking2ChartInfo_estimateLength = ProtoField.uint32("Ranking2ChartInfo_estimateLength", "estimateLength (uint32)")
F.Ranking2ChartInfo_estimateHighestScore = ProtoField.uint32("Ranking2ChartInfo_estimateHighestScore", "estimateHighestScore (uint32)")
F.Ranking2ChartInfo_estimateLowestScore = ProtoField.uint32("Ranking2ChartInfo_estimateLowestScore", "estimateLowestScore (uint32)")
F.Ranking2ChartInfo_estimateMedianScore = ProtoField.uint32("Ranking2ChartInfo_estimateMedianScore", "estimateMedianScore (uint32)")
F.Ranking2ChartInfo_estimateAverageScore = ProtoField.double("Ranking2ChartInfo_estimateAverageScore", "estimateAverageScore (double)")
F.Ranking2ChartInfo_highestBinsScore = ProtoField.uint32("Ranking2ChartInfo_highestBinsScore", "highestBinsScore (uint32)")
F.Ranking2ChartInfo_lowestBinsScore = ProtoField.uint32("Ranking2ChartInfo_lowestBinsScore", "lowestBinsScore (uint32)")
F.Ranking2ChartInfo_binsWidth = ProtoField.uint32("Ranking2ChartInfo_binsWidth", "binsWidth (uint32)")
F.Ranking2ChartInfo_attribute1 = ProtoField.uint32("Ranking2ChartInfo_attribute1", "attribute1 (uint32)")
F.Ranking2ChartInfo_attribute2 = ProtoField.uint32("Ranking2ChartInfo_attribute2", "attribute2 (uint32)")
F.Ranking2ChartInfo_quantities_len = ProtoField.uint32("Ranking2ChartInfo_quantities_len", "quantities length (uint32)")
F.Ranking2ChartInfo_quantities_item = ProtoField.uint32("Ranking2ChartInfo_quantities_item", "quantities (uint32)")
F.Ranking2EstimateScoreRankInput = ProtoField.bytes("Ranking2EstimateScoreRankInput", "Ranking2EstimateScoreRankInput (Ranking2EstimateScoreRankInput)")
F.Ranking2EstimateScoreRankInput_category = ProtoField.uint32("Ranking2EstimateScoreRankInput_category", "category (uint32)")
F.Ranking2EstimateScoreRankInput_numSeasonsToGoBack = ProtoField.uint8("Ranking2EstimateScoreRankInput_numSeasonsToGoBack", "numSeasonsToGoBack (uint8)")
F.Ranking2EstimateScoreRankInput_score = ProtoField.uint32("Ranking2EstimateScoreRankInput_score", "score (uint32)")
F.Ranking2EstimateScoreRankOutput = ProtoField.bytes("Ranking2EstimateScoreRankOutput", "Ranking2EstimateScoreRankOutput (Ranking2EstimateScoreRankOutput)")
F.Ranking2EstimateScoreRankOutput_rank = ProtoField.uint32("Ranking2EstimateScoreRankOutput_rank", "rank (uint32)")
F.Ranking2EstimateScoreRankOutput_length = ProtoField.uint32("Ranking2EstimateScoreRankOutput_length", "length (uint32)")
F.Ranking2EstimateScoreRankOutput_score = ProtoField.uint32("Ranking2EstimateScoreRankOutput_score", "score (uint32)")
F.Ranking2EstimateScoreRankOutput_category = ProtoField.uint32("Ranking2EstimateScoreRankOutput_category", "category (uint32)")
F.Ranking2EstimateScoreRankOutput_season = ProtoField.int32("Ranking2EstimateScoreRankOutput_season", "season (uint32)")
F.Ranking2EstimateScoreRankOutput_samplingRate = ProtoField.uint8("Ranking2EstimateScoreRankOutput_samplingRate", "samplingRate (uint8)")
F.UbiAccount = ProtoField.bytes("UbiAccount", "UbiAccount (UbiAccount)")
F.UbiAccount_m_ubiAccountId_len = ProtoField.uint16("UbiAccount_m_ubiAccountId_len", "m_ubiAccountId length (String)")
F.UbiAccount_m_ubiAccountId_data = ProtoField.string("UbiAccount_m_ubiAccountId_data", "m_ubiAccountId data (String)")
F.UbiAccount_m_username_len = ProtoField.uint16("UbiAccount_m_username_len", "m_username length (String)")
F.UbiAccount_m_username_data = ProtoField.string("UbiAccount_m_username_data", "m_username data (String)")
F.UbiAccount_m_password_len = ProtoField.uint16("UbiAccount_m_password_len", "m_password length (String)")
F.UbiAccount_m_password_data = ProtoField.string("UbiAccount_m_password_data", "m_password data (String)")
F.UbiAccount_m_email_len = ProtoField.uint16("UbiAccount_m_email_len", "m_email length (String)")
F.UbiAccount_m_email_data = ProtoField.string("UbiAccount_m_email_data", "m_email data (String)")
F.UbiAccount_m_dateOfBirth = ProtoField.uint64("UbiAccount_m_dateOfBirth", "m_dateOfBirth (uint64)")
F.UbiAccount_m_gender = ProtoField.uint32("UbiAccount_m_gender", "m_gender (uint32)")
F.UbiAccount_m_countryCode_len = ProtoField.uint16("UbiAccount_m_countryCode_len", "m_countryCode length (String)")
F.UbiAccount_m_countryCode_data = ProtoField.string("UbiAccount_m_countryCode_data", "m_countryCode data (String)")
F.UbiAccount_m_optIn = ProtoField.bool("UbiAccount_m_optIn", "m_optIn (bool)")
F.UbiAccount_m_thirdPartyOptIn = ProtoField.bool("UbiAccount_m_thirdPartyOptIn", "m_thirdPartyOptIn (bool)")
F.UbiAccount_m_firstName_len = ProtoField.uint16("UbiAccount_m_firstName_len", "m_firstName length (String)")
F.UbiAccount_m_firstName_data = ProtoField.string("UbiAccount_m_firstName_data", "m_firstName data (String)")
F.UbiAccount_m_lastName_len = ProtoField.uint16("UbiAccount_m_lastName_len", "m_lastName length (String)")
F.UbiAccount_m_lastName_data = ProtoField.string("UbiAccount_m_lastName_data", "m_lastName data (String)")
F.UbiAccount_m_preferredLanguage_len = ProtoField.uint16("UbiAccount_m_preferredLanguage_len", "m_preferredLanguage length (String)")
F.UbiAccount_m_preferredLanguage_data = ProtoField.string("UbiAccount_m_preferredLanguage_data", "m_preferredLanguage data (String)")
F.UbiAccount_m_externalAccounts_len = ProtoField.uint32("UbiAccount_m_externalAccounts_len", "m_externalAccounts length (uint32)")
F.TOS = ProtoField.bytes("TOS", "TOS (TOS)")
F.TOS_m_localeCode_len = ProtoField.uint16("TOS_m_localeCode_len", "m_localeCode length (String)")
F.TOS_m_localeCode_data = ProtoField.string("TOS_m_localeCode_data", "m_localeCode data (String)")
F.TOS_m_content_len = ProtoField.uint16("TOS_m_content_len", "m_content length (String)")
F.TOS_m_content_data = ProtoField.string("TOS_m_content_data", "m_content data (String)")
F.TOS_m_storingInfoQuestion_len = ProtoField.uint16("TOS_m_storingInfoQuestion_len", "m_storingInfoQuestion length (String)")
F.TOS_m_storingInfoQuestion_data = ProtoField.string("TOS_m_storingInfoQuestion_data", "m_storingInfoQuestion data (String)")
F.TOSEx = ProtoField.bytes("TOSEx", "TOSEx (TOSEx)")
F.TOSEx_m_localeCode_len = ProtoField.uint16("TOSEx_m_localeCode_len", "m_localeCode length (String)")
F.TOSEx_m_localeCode_data = ProtoField.string("TOSEx_m_localeCode_data", "m_localeCode data (String)")
F.TOSEx_m_contents_len = ProtoField.uint32("TOSEx_m_contents_len", "m_contents length (uint32)")
F.TOSEx_m_contents_item_len = ProtoField.uint16("TOSEx_m_contents_item_len", "m_contents length (String)")
F.TOSEx_m_contents_item_data = ProtoField.string("TOSEx_m_contents_item_data", "m_contents data (String)")
F.TOSEx_m_storingInfoQuestion_len = ProtoField.uint16("TOSEx_m_storingInfoQuestion_len", "m_storingInfoQuestion length (String)")
F.TOSEx_m_storingInfoQuestion_data = ProtoField.string("TOSEx_m_storingInfoQuestion_data", "m_storingInfoQuestion data (String)")
F.UsernameValidation = ProtoField.bytes("UsernameValidation", "UsernameValidation (UsernameValidation)")
F.UsernameValidation_m_suggestions_len = ProtoField.uint32("UsernameValidation_m_suggestions_len", "m_suggestions length (uint32)")
F.UsernameValidation_m_suggestions_item_len = ProtoField.uint16("UsernameValidation_m_suggestions_item_len", "m_suggestions length (String)")
F.UsernameValidation_m_suggestions_item_data = ProtoField.string("UsernameValidation_m_suggestions_item_data", "m_suggestions data (String)")
F.UsernameValidation_m_reasons_len = ProtoField.uint32("UsernameValidation_m_reasons_len", "m_reasons length (uint32)")
F.Country = ProtoField.bytes("Country", "Country (Country)")
F.Country_m_code_len = ProtoField.uint16("Country_m_code_len", "m_code length (String)")
F.Country_m_code_data = ProtoField.string("Country_m_code_data", "m_code data (String)")
F.Country_m_name_len = ProtoField.uint16("Country_m_name_len", "m_name length (String)")
F.Country_m_name_data = ProtoField.string("Country_m_name_data", "m_name data (String)")
F.ApiCall = ProtoField.bytes("ApiCall", "ApiCall (ApiCall)")
F.ApiCall_Method_name_len = ProtoField.uint16("ApiCall_Method_name_len", "Method_name length (String)")
F.ApiCall_Method_name_data = ProtoField.string("ApiCall_Method_name_data", "Method_name data (String)")
F.ApiCall_Call_time = ProtoField.uint64("ApiCall_Call_time", "Call_time (uint64)")
F.ApiCall_User_id = ProtoField.uint32("ApiCall_User_id", "User_id (uint32)")
F.DataStoreSearchBalloonParam = ProtoField.bytes("DataStoreSearchBalloonParam", "DataStoreSearchBalloonParam (DataStoreSearchBalloonParam)")
F.DataStoreSearchBalloonParam_dataType = ProtoField.uint16("DataStoreSearchBalloonParam_dataType", "dataType (uint16)")
F.DataStoreSearchBalloonParam_userRank = ProtoField.uint8("DataStoreSearchBalloonParam_userRank", "userRank (uint8)")
F.DataStoreSearchBalloonParam_resultSetCount = ProtoField.uint8("DataStoreSearchBalloonParam_resultSetCount", "resultSetCount (uint8)")
F.DataStoreSearchBalloonResultSet = ProtoField.bytes("DataStoreSearchBalloonResultSet", "DataStoreSearchBalloonResultSet (DataStoreSearchBalloonResultSet)")
F.DataStoreSearchBalloonResultSet_balloons_len = ProtoField.uint32("DataStoreSearchBalloonResultSet_balloons_len", "balloons length (uint32)")
F.DataStoreFetchMyInfosParam = ProtoField.bytes("DataStoreFetchMyInfosParam", "DataStoreFetchMyInfosParam (DataStoreFetchMyInfosParam)")
F.DataStoreFetchMyInfosParam_balloonDataTypes_len = ProtoField.uint32("DataStoreFetchMyInfosParam_balloonDataTypes_len", "balloonDataTypes length (uint32)")
F.DataStoreFetchMyInfosParam_balloonDataTypes_item = ProtoField.uint16("DataStoreFetchMyInfosParam_balloonDataTypes_item", "balloonDataTypes (uint16)")
F.DataStoreFetchMyInfosParam_additionalOperation = ProtoField.uint16("DataStoreFetchMyInfosParam_additionalOperation", "additionalOperation (uint16)")
F.DataStoreFetchMyInfosResult = ProtoField.bytes("DataStoreFetchMyInfosResult", "DataStoreFetchMyInfosResult (DataStoreFetchMyInfosResult)")
F.DataStoreFetchMyInfosResult_balloons_len = ProtoField.uint32("DataStoreFetchMyInfosResult_balloons_len", "balloons length (uint32)")
F.PrivilegeEx = ProtoField.bytes("PrivilegeEx", "PrivilegeEx (PrivilegeEx)")
F.PrivilegeEx_m_ID = ProtoField.uint32("PrivilegeEx_m_ID", "m_ID (uint32)")
F.PrivilegeEx_m_description_len = ProtoField.uint16("PrivilegeEx_m_description_len", "m_description length (String)")
F.PrivilegeEx_m_description_data = ProtoField.string("PrivilegeEx_m_description_data", "m_description data (String)")
F.PrivilegeEx_m_duration = ProtoField.int32("PrivilegeEx_m_duration", "m_duration (uint32)")
F.PrivilegeGroup = ProtoField.bytes("PrivilegeGroup", "PrivilegeGroup (PrivilegeGroup)")
F.PrivilegeGroup_m_description_len = ProtoField.uint16("PrivilegeGroup_m_description_len", "m_description length (String)")
F.PrivilegeGroup_m_description_data = ProtoField.string("PrivilegeGroup_m_description_data", "m_description data (String)")
F.PrivilegeGroup_m_privileges_len = ProtoField.uint32("PrivilegeGroup_m_privileges_len", "m_privileges length (uint32)")
F.FriendData = ProtoField.bytes("FriendData", "FriendData (FriendData)")
F.FriendData_m_pid = ProtoField.uint32("FriendData_m_pid", "m_pid (uint32)")
F.FriendData_m_strName_len = ProtoField.uint16("FriendData_m_strName_len", "m_strName length (String)")
F.FriendData_m_strName_data = ProtoField.string("FriendData_m_strName_data", "m_strName data (String)")
F.FriendData_m_byRelationship = ProtoField.uint8("FriendData_m_byRelationship", "m_byRelationship (uint8)")
F.FriendData_m_uiDetails = ProtoField.uint32("FriendData_m_uiDetails", "m_uiDetails (uint32)")
F.FriendData_m_strStatus_len = ProtoField.uint16("FriendData_m_strStatus_len", "m_strStatus length (String)")
F.FriendData_m_strStatus_data = ProtoField.string("FriendData_m_strStatus_data", "m_strStatus data (String)")
F.RelationshipData = ProtoField.bytes("RelationshipData", "RelationshipData (RelationshipData)")
F.RelationshipData_m_pid = ProtoField.uint32("RelationshipData_m_pid", "m_pid (uint32)")
F.RelationshipData_m_strName_len = ProtoField.uint16("RelationshipData_m_strName_len", "m_strName length (String)")
F.RelationshipData_m_strName_data = ProtoField.string("RelationshipData_m_strName_data", "m_strName data (String)")
F.RelationshipData_m_byRelationship = ProtoField.uint8("RelationshipData_m_byRelationship", "m_byRelationship (uint8)")
F.RelationshipData_m_uiDetails = ProtoField.uint32("RelationshipData_m_uiDetails", "m_uiDetails (uint32)")
F.RelationshipData_m_byStatus = ProtoField.uint8("RelationshipData_m_byStatus", "m_byStatus (uint8)")
F.MatchmakeRefereeEndRoundParam = ProtoField.bytes("MatchmakeRefereeEndRoundParam", "MatchmakeRefereeEndRoundParam (MatchmakeRefereeEndRoundParam)")
F.MatchmakeRefereeEndRoundParam_Round_id = ProtoField.uint64("MatchmakeRefereeEndRoundParam_Round_id", "Round_id (uint64)")
F.MatchmakeRefereeEndRoundParam_Reports_len = ProtoField.uint32("MatchmakeRefereeEndRoundParam_Reports_len", "Reports length (uint32)")
F.GetStatsParam = ProtoField.bytes("GetStatsParam", "GetStatsParam (GetStatsParam)")
F.GetStatsParam_Unknown = ProtoField.uint32("GetStatsParam_Unknown", "Unknown (uint32)")
F.GetStatsParam_Unknown2 = ProtoField.uint32("GetStatsParam_Unknown2", "Unknown2 (uint32)")
F.GetStatsParam_Unknown3 = ProtoField.uint32("GetStatsParam_Unknown3", "Unknown3 (uint32)")
F.MatchmakeRefereeStartRoundParam = ProtoField.bytes("MatchmakeRefereeStartRoundParam", "MatchmakeRefereeStartRoundParam (MatchmakeRefereeStartRoundParam)")
F.MatchmakeRefereeStartRoundParam_Unknown_X = ProtoField.uint32("MatchmakeRefereeStartRoundParam_Unknown_X", "Unknown_X (uint32)")
F.MatchmakeRefereeStartRoundParam_Gathering_id = ProtoField.uint32("MatchmakeRefereeStartRoundParam_Gathering_id", "Gathering_id (uint32)")
F.MatchmakeRefereeStartRoundParam_Participants_len = ProtoField.uint32("MatchmakeRefereeStartRoundParam_Participants_len", "Participants length (uint32)")
F.MatchmakeRefereeStartRoundParam_Participants_item = ProtoField.uint32("MatchmakeRefereeStartRoundParam_Participants_item", "Participants (uint32)")
F.MatchmakeRefereeStartRoundParam_Unknown_Y = ProtoField.uint8("MatchmakeRefereeStartRoundParam_Unknown_Y", "Unknown_Y (uint8)")
F.MatchmakeRefereeStartRoundParam_Unknown_Z = ProtoField.uint32("MatchmakeRefereeStartRoundParam_Unknown_Z", "Unknown_Z (uint32)")
F.RoundInfo = ProtoField.bytes("RoundInfo", "RoundInfo (RoundInfo)")
F.RoundInfo_Round_id = ProtoField.uint64("RoundInfo_Round_id", "Round_id (uint64)")
F.RoundInfo_Gathering_id = ProtoField.uint32("RoundInfo_Gathering_id", "Gathering_id (uint32)")
F.RoundInfo_Unknown = ProtoField.uint32("RoundInfo_Unknown", "Unknown (uint32)")
F.RoundInfo_Unknown_X = ProtoField.uint32("RoundInfo_Unknown_X", "Unknown_X (uint32)")
F.RoundInfo_Unknown2 = ProtoField.uint32("RoundInfo_Unknown2", "Unknown2 (uint32)")
F.RoundInfo_Unknown_Y = ProtoField.uint8("RoundInfo_Unknown_Y", "Unknown_Y (uint8)")
F.RoundInfo_Unknown_Z = ProtoField.uint32("RoundInfo_Unknown_Z", "Unknown_Z (uint32)")
F.NewsChannel = ProtoField.bytes("NewsChannel", "NewsChannel (NewsChannel)")
F.NewsChannel_m_ID = ProtoField.uint32("NewsChannel_m_ID", "m_ID (uint32)")
F.NewsChannel_m_ownerPID = ProtoField.uint32("NewsChannel_m_ownerPID", "m_ownerPID (uint32)")
F.NewsChannel_m_name_len = ProtoField.uint16("NewsChannel_m_name_len", "m_name length (String)")
F.NewsChannel_m_name_data = ProtoField.string("NewsChannel_m_name_data", "m_name data (String)")
F.NewsChannel_m_description_len = ProtoField.uint16("NewsChannel_m_description_len", "m_description length (String)")
F.NewsChannel_m_description_data = ProtoField.string("NewsChannel_m_description_data", "m_description data (String)")
F.NewsChannel_m_creationTime = ProtoField.uint64("NewsChannel_m_creationTime", "m_creationTime (uint64)")
F.NewsChannel_m_expirationTime = ProtoField.uint64("NewsChannel_m_expirationTime", "m_expirationTime (uint64)")
F.NewsChannel_m_type_len = ProtoField.uint16("NewsChannel_m_type_len", "m_type length (String)")
F.NewsChannel_m_type_data = ProtoField.string("NewsChannel_m_type_data", "m_type data (String)")
F.NewsChannel_m_locale_len = ProtoField.uint16("NewsChannel_m_locale_len", "m_locale length (String)")
F.NewsChannel_m_locale_data = ProtoField.string("NewsChannel_m_locale_data", "m_locale data (String)")
F.NewsChannel_m_subscribable = ProtoField.bool("NewsChannel_m_subscribable", "m_subscribable (bool)")
F.NewsHeader = ProtoField.bytes("NewsHeader", "NewsHeader (NewsHeader)")
F.NewsHeader_m_ID = ProtoField.uint32("NewsHeader_m_ID", "m_ID (uint32)")
F.NewsHeader_m_recipientID = ProtoField.uint32("NewsHeader_m_recipientID", "m_recipientID (uint32)")
F.NewsHeader_m_recipientType = ProtoField.uint32("NewsHeader_m_recipientType", "m_recipientType (uint32)")
F.NewsHeader_m_publisherPID = ProtoField.uint32("NewsHeader_m_publisherPID", "m_publisherPID (uint32)")
F.NewsHeader_m_publisherName_len = ProtoField.uint16("NewsHeader_m_publisherName_len", "m_publisherName length (String)")
F.NewsHeader_m_publisherName_data = ProtoField.string("NewsHeader_m_publisherName_data", "m_publisherName data (String)")
F.NewsHeader_m_publicationTime = ProtoField.uint64("NewsHeader_m_publicationTime", "m_publicationTime (uint64)")
F.NewsHeader_m_displayTime = ProtoField.uint64("NewsHeader_m_displayTime", "m_displayTime (uint64)")
F.NewsHeader_m_expirationTime = ProtoField.uint64("NewsHeader_m_expirationTime", "m_expirationTime (uint64)")
F.NewsHeader_m_title_len = ProtoField.uint16("NewsHeader_m_title_len", "m_title length (String)")
F.NewsHeader_m_title_data = ProtoField.string("NewsHeader_m_title_data", "m_title data (String)")
F.NewsHeader_m_link_len = ProtoField.uint16("NewsHeader_m_link_len", "m_link length (String)")
F.NewsHeader_m_link_data = ProtoField.string("NewsHeader_m_link_data", "m_link data (String)")
F.NewsMessage = ProtoField.bytes("NewsMessage", "NewsMessage (NewsMessage)")
F.NewsMessage_m_body_len = ProtoField.uint16("NewsMessage_m_body_len", "m_body length (String)")
F.NewsMessage_m_body_data = ProtoField.string("NewsMessage_m_body_data", "m_body data (String)")
F.NewsRecipient = ProtoField.bytes("NewsRecipient", "NewsRecipient (NewsRecipient)")
F.NewsRecipient_m_recipientID = ProtoField.uint32("NewsRecipient_m_recipientID", "m_recipientID (uint32)")
F.NewsRecipient_m_recipientType = ProtoField.uint32("NewsRecipient_m_recipientType", "m_recipientType (uint32)")
F.Match_Making_RegisterGathering_anyGathering_data_bytes = ProtoField.bytes("Match_Making_RegisterGathering_anyGathering_data_bytes", "anyGathering data bytes (bytes)")
F.Match_Making_RegisterGathering_anyGathering_type_name_len = ProtoField.uint16("Match_Making_RegisterGathering_anyGathering_type_name_len", "anyGathering_type_name length (String)")
F.Match_Making_RegisterGathering_anyGathering_type_name_data = ProtoField.string("Match_Making_RegisterGathering_anyGathering_type_name_data", "anyGathering_type_name data (String)")
F.Match_Making_RegisterGathering_anyGathering_len_plus_four = ProtoField.uint32("Match_Making_RegisterGathering_anyGathering_len_plus_four", "anyGathering_len_plus_four (uint32)")
F.Match_Making_RegisterGathering_anyGathering_data_len = ProtoField.uint32("Match_Making_RegisterGathering_anyGathering_data_len", "anyGathering_data_len (uint32)")
F.Match_Making_RegisterGathering_retval = ProtoField.uint32("Match_Making_RegisterGathering_retval", "retval (uint32)")
F.Match_Making_UnregisterGathering_idGathering = ProtoField.uint32("Match_Making_UnregisterGathering_idGathering", "idGathering (uint32)")
F.Match_Making_UnregisterGathering_retval = ProtoField.bool("Match_Making_UnregisterGathering_retval", "retval (bool)")
F.Match_Making_UnregisterGatherings_lstGatherings_len = ProtoField.uint32("Match_Making_UnregisterGatherings_lstGatherings_len", "lstGatherings length (uint32)")
F.Match_Making_UnregisterGatherings_lstGatherings_item = ProtoField.uint32("Match_Making_UnregisterGatherings_lstGatherings_item", "lstGatherings (uint32)")
F.Match_Making_UnregisterGatherings_retval = ProtoField.bool("Match_Making_UnregisterGatherings_retval", "retval (bool)")
F.Match_Making_UpdateGathering_anyGathering_data_bytes = ProtoField.bytes("Match_Making_UpdateGathering_anyGathering_data_bytes", "anyGathering data bytes (bytes)")
F.Match_Making_UpdateGathering_anyGathering_type_name_len = ProtoField.uint16("Match_Making_UpdateGathering_anyGathering_type_name_len", "anyGathering_type_name length (String)")
F.Match_Making_UpdateGathering_anyGathering_type_name_data = ProtoField.string("Match_Making_UpdateGathering_anyGathering_type_name_data", "anyGathering_type_name data (String)")
F.Match_Making_UpdateGathering_anyGathering_len_plus_four = ProtoField.uint32("Match_Making_UpdateGathering_anyGathering_len_plus_four", "anyGathering_len_plus_four (uint32)")
F.Match_Making_UpdateGathering_anyGathering_data_len = ProtoField.uint32("Match_Making_UpdateGathering_anyGathering_data_len", "anyGathering_data_len (uint32)")
F.Match_Making_UpdateGathering_retval = ProtoField.bool("Match_Making_UpdateGathering_retval", "retval (bool)")
F.Match_Making_Invite_idGathering = ProtoField.uint32("Match_Making_Invite_idGathering", "idGathering (uint32)")
F.Match_Making_Invite_lstPrincipals_len = ProtoField.uint32("Match_Making_Invite_lstPrincipals_len", "lstPrincipals length (uint32)")
F.Match_Making_Invite_lstPrincipals_item = ProtoField.uint32("Match_Making_Invite_lstPrincipals_item", "lstPrincipals (uint32)")
F.Match_Making_Invite_strMessage_len = ProtoField.uint16("Match_Making_Invite_strMessage_len", "strMessage length (String)")
F.Match_Making_Invite_strMessage_data = ProtoField.string("Match_Making_Invite_strMessage_data", "strMessage data (String)")
F.Match_Making_Invite_retval = ProtoField.bool("Match_Making_Invite_retval", "retval (bool)")
F.Match_Making_AcceptInvitation_idGathering = ProtoField.uint32("Match_Making_AcceptInvitation_idGathering", "idGathering (uint32)")
F.Match_Making_AcceptInvitation_strMessage_len = ProtoField.uint16("Match_Making_AcceptInvitation_strMessage_len", "strMessage length (String)")
F.Match_Making_AcceptInvitation_strMessage_data = ProtoField.string("Match_Making_AcceptInvitation_strMessage_data", "strMessage data (String)")
F.Match_Making_AcceptInvitation_retval = ProtoField.bool("Match_Making_AcceptInvitation_retval", "retval (bool)")
F.Match_Making_DeclineInvitation_idGathering = ProtoField.uint32("Match_Making_DeclineInvitation_idGathering", "idGathering (uint32)")
F.Match_Making_DeclineInvitation_strMessage_len = ProtoField.uint16("Match_Making_DeclineInvitation_strMessage_len", "strMessage length (String)")
F.Match_Making_DeclineInvitation_strMessage_data = ProtoField.string("Match_Making_DeclineInvitation_strMessage_data", "strMessage data (String)")
F.Match_Making_DeclineInvitation_retval = ProtoField.bool("Match_Making_DeclineInvitation_retval", "retval (bool)")
F.Match_Making_CancelInvitation_idGathering = ProtoField.uint32("Match_Making_CancelInvitation_idGathering", "idGathering (uint32)")
F.Match_Making_CancelInvitation_lstPrincipals_len = ProtoField.uint32("Match_Making_CancelInvitation_lstPrincipals_len", "lstPrincipals length (uint32)")
F.Match_Making_CancelInvitation_lstPrincipals_item = ProtoField.uint32("Match_Making_CancelInvitation_lstPrincipals_item", "lstPrincipals (uint32)")
F.Match_Making_CancelInvitation_strMessage_len = ProtoField.uint16("Match_Making_CancelInvitation_strMessage_len", "strMessage length (String)")
F.Match_Making_CancelInvitation_strMessage_data = ProtoField.string("Match_Making_CancelInvitation_strMessage_data", "strMessage data (String)")
F.Match_Making_CancelInvitation_retval = ProtoField.bool("Match_Making_CancelInvitation_retval", "retval (bool)")
F.Match_Making_GetInvitationsSent_idGathering = ProtoField.uint32("Match_Making_GetInvitationsSent_idGathering", "idGathering (uint32)")
F.Match_Making_GetInvitationsSent_lstInvitations_len = ProtoField.uint32("Match_Making_GetInvitationsSent_lstInvitations_len", "lstInvitations length (uint32)")
F.Match_Making_GetInvitationsReceived_lstInvitations_len = ProtoField.uint32("Match_Making_GetInvitationsReceived_lstInvitations_len", "lstInvitations length (uint32)")
F.Match_Making_Participate_idGathering = ProtoField.uint32("Match_Making_Participate_idGathering", "idGathering (uint32)")
F.Match_Making_Participate_strMessage_len = ProtoField.uint16("Match_Making_Participate_strMessage_len", "strMessage length (String)")
F.Match_Making_Participate_strMessage_data = ProtoField.string("Match_Making_Participate_strMessage_data", "strMessage data (String)")
F.Match_Making_Participate_retval = ProtoField.bool("Match_Making_Participate_retval", "retval (bool)")
F.Match_Making_CancelParticipation_idGathering = ProtoField.uint32("Match_Making_CancelParticipation_idGathering", "idGathering (uint32)")
F.Match_Making_CancelParticipation_strMessage_len = ProtoField.uint16("Match_Making_CancelParticipation_strMessage_len", "strMessage length (String)")
F.Match_Making_CancelParticipation_strMessage_data = ProtoField.string("Match_Making_CancelParticipation_strMessage_data", "strMessage data (String)")
F.Match_Making_CancelParticipation_retval = ProtoField.bool("Match_Making_CancelParticipation_retval", "retval (bool)")
F.Match_Making_GetParticipants_idGathering = ProtoField.uint32("Match_Making_GetParticipants_idGathering", "idGathering (uint32)")
F.Match_Making_GetParticipants_lstParticipants_len = ProtoField.uint32("Match_Making_GetParticipants_lstParticipants_len", "lstParticipants length (uint32)")
F.Match_Making_GetParticipants_lstParticipants_item = ProtoField.uint32("Match_Making_GetParticipants_lstParticipants_item", "lstParticipants (uint32)")
F.Match_Making_AddParticipants_idGathering = ProtoField.uint32("Match_Making_AddParticipants_idGathering", "idGathering (uint32)")
F.Match_Making_AddParticipants_lstParticipants_len = ProtoField.uint32("Match_Making_AddParticipants_lstParticipants_len", "lstParticipants length (uint32)")
F.Match_Making_AddParticipants_lstParticipants_item = ProtoField.uint32("Match_Making_AddParticipants_lstParticipants_item", "lstParticipants (uint32)")
F.Match_Making_AddParticipants_strMessage_len = ProtoField.uint16("Match_Making_AddParticipants_strMessage_len", "strMessage length (String)")
F.Match_Making_AddParticipants_strMessage_data = ProtoField.string("Match_Making_AddParticipants_strMessage_data", "strMessage data (String)")
F.Match_Making_AddParticipants_retval = ProtoField.bool("Match_Making_AddParticipants_retval", "retval (bool)")
F.Match_Making_GetDetailedParticipants_idGathering = ProtoField.uint32("Match_Making_GetDetailedParticipants_idGathering", "idGathering (uint32)")
F.Match_Making_GetDetailedParticipants_lstParticipants_len = ProtoField.uint32("Match_Making_GetDetailedParticipants_lstParticipants_len", "lstParticipants length (uint32)")
F.Match_Making_GetParticipantsURLs_idGathering = ProtoField.uint32("Match_Making_GetParticipantsURLs_idGathering", "idGathering (uint32)")
F.Match_Making_GetParticipantsURLs_lstStationURL_len = ProtoField.uint32("Match_Making_GetParticipantsURLs_lstStationURL_len", "lstStationURL length (uint32)")
F.Match_Making_GetParticipantsURLs_lstStationURL_item_len = ProtoField.uint16("Match_Making_GetParticipantsURLs_lstStationURL_item_len", "lstStationURL length (String)")
F.Match_Making_GetParticipantsURLs_lstStationURL_item_data = ProtoField.string("Match_Making_GetParticipantsURLs_lstStationURL_item_data", "lstStationURL data (String)")
F.Match_Making_FindByType_strType_len = ProtoField.uint16("Match_Making_FindByType_strType_len", "strType length (String)")
F.Match_Making_FindByType_strType_data = ProtoField.string("Match_Making_FindByType_strType_data", "strType data (String)")
F.Match_Making_FindByType_lstGathering_len = ProtoField.uint32("Match_Making_FindByType_lstGathering_len", "lstGathering length (uint32)")
F.Match_Making_FindByType_lstGathering_item_data_bytes = ProtoField.bytes("Match_Making_FindByType_lstGathering_item_data_bytes", "lstGathering data bytes (bytes)")
F.Match_Making_FindByType_lstGathering_item_type_name_len = ProtoField.uint16("Match_Making_FindByType_lstGathering_item_type_name_len", "lstGathering_type_name length (String)")
F.Match_Making_FindByType_lstGathering_item_type_name_data = ProtoField.string("Match_Making_FindByType_lstGathering_item_type_name_data", "lstGathering_type_name data (String)")
F.Match_Making_FindByType_lstGathering_item_len_plus_four = ProtoField.uint32("Match_Making_FindByType_lstGathering_item_len_plus_four", "lstGathering_len_plus_four (uint32)")
F.Match_Making_FindByType_lstGathering_item_data_len = ProtoField.uint32("Match_Making_FindByType_lstGathering_item_data_len", "lstGathering_data_len (uint32)")
F.Match_Making_FindByDescription_strDescription_len = ProtoField.uint16("Match_Making_FindByDescription_strDescription_len", "strDescription length (String)")
F.Match_Making_FindByDescription_strDescription_data = ProtoField.string("Match_Making_FindByDescription_strDescription_data", "strDescription data (String)")
F.Match_Making_FindByDescription_lstGathering_len = ProtoField.uint32("Match_Making_FindByDescription_lstGathering_len", "lstGathering length (uint32)")
F.Match_Making_FindByDescription_lstGathering_item_data_bytes = ProtoField.bytes("Match_Making_FindByDescription_lstGathering_item_data_bytes", "lstGathering data bytes (bytes)")
F.Match_Making_FindByDescription_lstGathering_item_type_name_len = ProtoField.uint16("Match_Making_FindByDescription_lstGathering_item_type_name_len", "lstGathering_type_name length (String)")
F.Match_Making_FindByDescription_lstGathering_item_type_name_data = ProtoField.string("Match_Making_FindByDescription_lstGathering_item_type_name_data", "lstGathering_type_name data (String)")
F.Match_Making_FindByDescription_lstGathering_item_len_plus_four = ProtoField.uint32("Match_Making_FindByDescription_lstGathering_item_len_plus_four", "lstGathering_len_plus_four (uint32)")
F.Match_Making_FindByDescription_lstGathering_item_data_len = ProtoField.uint32("Match_Making_FindByDescription_lstGathering_item_data_len", "lstGathering_data_len (uint32)")
F.Match_Making_FindByDescriptionRegex_strDescriptionRegex_len = ProtoField.uint16("Match_Making_FindByDescriptionRegex_strDescriptionRegex_len", "strDescriptionRegex length (String)")
F.Match_Making_FindByDescriptionRegex_strDescriptionRegex_data = ProtoField.string("Match_Making_FindByDescriptionRegex_strDescriptionRegex_data", "strDescriptionRegex data (String)")
F.Match_Making_FindByDescriptionRegex_lstGathering_len = ProtoField.uint32("Match_Making_FindByDescriptionRegex_lstGathering_len", "lstGathering length (uint32)")
F.Match_Making_FindByDescriptionRegex_lstGathering_item_data_bytes = ProtoField.bytes("Match_Making_FindByDescriptionRegex_lstGathering_item_data_bytes", "lstGathering data bytes (bytes)")
F.Match_Making_FindByDescriptionRegex_lstGathering_item_type_name_len = ProtoField.uint16("Match_Making_FindByDescriptionRegex_lstGathering_item_type_name_len", "lstGathering_type_name length (String)")
F.Match_Making_FindByDescriptionRegex_lstGathering_item_type_name_data = ProtoField.string("Match_Making_FindByDescriptionRegex_lstGathering_item_type_name_data", "lstGathering_type_name data (String)")
F.Match_Making_FindByDescriptionRegex_lstGathering_item_len_plus_four = ProtoField.uint32("Match_Making_FindByDescriptionRegex_lstGathering_item_len_plus_four", "lstGathering_len_plus_four (uint32)")
F.Match_Making_FindByDescriptionRegex_lstGathering_item_data_len = ProtoField.uint32("Match_Making_FindByDescriptionRegex_lstGathering_item_data_len", "lstGathering_data_len (uint32)")
F.Match_Making_FindByID_lstID_len = ProtoField.uint32("Match_Making_FindByID_lstID_len", "lstID length (uint32)")
F.Match_Making_FindByID_lstID_item = ProtoField.uint32("Match_Making_FindByID_lstID_item", "lstID (uint32)")
F.Match_Making_FindByID_lstGathering_len = ProtoField.uint32("Match_Making_FindByID_lstGathering_len", "lstGathering length (uint32)")
F.Match_Making_FindByID_lstGathering_item_data_bytes = ProtoField.bytes("Match_Making_FindByID_lstGathering_item_data_bytes", "lstGathering data bytes (bytes)")
F.Match_Making_FindByID_lstGathering_item_type_name_len = ProtoField.uint16("Match_Making_FindByID_lstGathering_item_type_name_len", "lstGathering_type_name length (String)")
F.Match_Making_FindByID_lstGathering_item_type_name_data = ProtoField.string("Match_Making_FindByID_lstGathering_item_type_name_data", "lstGathering_type_name data (String)")
F.Match_Making_FindByID_lstGathering_item_len_plus_four = ProtoField.uint32("Match_Making_FindByID_lstGathering_item_len_plus_four", "lstGathering_len_plus_four (uint32)")
F.Match_Making_FindByID_lstGathering_item_data_len = ProtoField.uint32("Match_Making_FindByID_lstGathering_item_data_len", "lstGathering_data_len (uint32)")
F.Match_Making_FindBySingleID_id = ProtoField.uint32("Match_Making_FindBySingleID_id", "id (uint32)")
F.Match_Making_FindBySingleID_bResult = ProtoField.bool("Match_Making_FindBySingleID_bResult", "bResult (bool)")
F.Match_Making_FindBySingleID_pGathering_data_bytes = ProtoField.bytes("Match_Making_FindBySingleID_pGathering_data_bytes", "pGathering data bytes (bytes)")
F.Match_Making_FindBySingleID_pGathering_type_name_len = ProtoField.uint16("Match_Making_FindBySingleID_pGathering_type_name_len", "pGathering_type_name length (String)")
F.Match_Making_FindBySingleID_pGathering_type_name_data = ProtoField.string("Match_Making_FindBySingleID_pGathering_type_name_data", "pGathering_type_name data (String)")
F.Match_Making_FindBySingleID_pGathering_len_plus_four = ProtoField.uint32("Match_Making_FindBySingleID_pGathering_len_plus_four", "pGathering_len_plus_four (uint32)")
F.Match_Making_FindBySingleID_pGathering_data_len = ProtoField.uint32("Match_Making_FindBySingleID_pGathering_data_len", "pGathering_data_len (uint32)")
F.Match_Making_FindByOwner_id = ProtoField.uint32("Match_Making_FindByOwner_id", "id (uint32)")
F.Match_Making_FindByOwner_lstGathering_len = ProtoField.uint32("Match_Making_FindByOwner_lstGathering_len", "lstGathering length (uint32)")
F.Match_Making_FindByOwner_lstGathering_item_data_bytes = ProtoField.bytes("Match_Making_FindByOwner_lstGathering_item_data_bytes", "lstGathering data bytes (bytes)")
F.Match_Making_FindByOwner_lstGathering_item_type_name_len = ProtoField.uint16("Match_Making_FindByOwner_lstGathering_item_type_name_len", "lstGathering_type_name length (String)")
F.Match_Making_FindByOwner_lstGathering_item_type_name_data = ProtoField.string("Match_Making_FindByOwner_lstGathering_item_type_name_data", "lstGathering_type_name data (String)")
F.Match_Making_FindByOwner_lstGathering_item_len_plus_four = ProtoField.uint32("Match_Making_FindByOwner_lstGathering_item_len_plus_four", "lstGathering_len_plus_four (uint32)")
F.Match_Making_FindByOwner_lstGathering_item_data_len = ProtoField.uint32("Match_Making_FindByOwner_lstGathering_item_data_len", "lstGathering_data_len (uint32)")
F.Match_Making_FindByParticipants_pid_len = ProtoField.uint32("Match_Making_FindByParticipants_pid_len", "pid length (uint32)")
F.Match_Making_FindByParticipants_pid_item = ProtoField.uint32("Match_Making_FindByParticipants_pid_item", "pid (uint32)")
F.Match_Making_FindByParticipants_lstGathering_len = ProtoField.uint32("Match_Making_FindByParticipants_lstGathering_len", "lstGathering length (uint32)")
F.Match_Making_FindByParticipants_lstGathering_item_data_bytes = ProtoField.bytes("Match_Making_FindByParticipants_lstGathering_item_data_bytes", "lstGathering data bytes (bytes)")
F.Match_Making_FindByParticipants_lstGathering_item_type_name_len = ProtoField.uint16("Match_Making_FindByParticipants_lstGathering_item_type_name_len", "lstGathering_type_name length (String)")
F.Match_Making_FindByParticipants_lstGathering_item_type_name_data = ProtoField.string("Match_Making_FindByParticipants_lstGathering_item_type_name_data", "lstGathering_type_name data (String)")
F.Match_Making_FindByParticipants_lstGathering_item_len_plus_four = ProtoField.uint32("Match_Making_FindByParticipants_lstGathering_item_len_plus_four", "lstGathering_len_plus_four (uint32)")
F.Match_Making_FindByParticipants_lstGathering_item_data_len = ProtoField.uint32("Match_Making_FindByParticipants_lstGathering_item_data_len", "lstGathering_data_len (uint32)")
F.Match_Making_FindInvitations_lstGathering_len = ProtoField.uint32("Match_Making_FindInvitations_lstGathering_len", "lstGathering length (uint32)")
F.Match_Making_FindInvitations_lstGathering_item_data_bytes = ProtoField.bytes("Match_Making_FindInvitations_lstGathering_item_data_bytes", "lstGathering data bytes (bytes)")
F.Match_Making_FindInvitations_lstGathering_item_type_name_len = ProtoField.uint16("Match_Making_FindInvitations_lstGathering_item_type_name_len", "lstGathering_type_name length (String)")
F.Match_Making_FindInvitations_lstGathering_item_type_name_data = ProtoField.string("Match_Making_FindInvitations_lstGathering_item_type_name_data", "lstGathering_type_name data (String)")
F.Match_Making_FindInvitations_lstGathering_item_len_plus_four = ProtoField.uint32("Match_Making_FindInvitations_lstGathering_item_len_plus_four", "lstGathering_len_plus_four (uint32)")
F.Match_Making_FindInvitations_lstGathering_item_data_len = ProtoField.uint32("Match_Making_FindInvitations_lstGathering_item_data_len", "lstGathering_data_len (uint32)")
F.Match_Making_FindBySQLQuery_strQuery_len = ProtoField.uint16("Match_Making_FindBySQLQuery_strQuery_len", "strQuery length (String)")
F.Match_Making_FindBySQLQuery_strQuery_data = ProtoField.string("Match_Making_FindBySQLQuery_strQuery_data", "strQuery data (String)")
F.Match_Making_FindBySQLQuery_lstGathering_len = ProtoField.uint32("Match_Making_FindBySQLQuery_lstGathering_len", "lstGathering length (uint32)")
F.Match_Making_FindBySQLQuery_lstGathering_item_data_bytes = ProtoField.bytes("Match_Making_FindBySQLQuery_lstGathering_item_data_bytes", "lstGathering data bytes (bytes)")
F.Match_Making_FindBySQLQuery_lstGathering_item_type_name_len = ProtoField.uint16("Match_Making_FindBySQLQuery_lstGathering_item_type_name_len", "lstGathering_type_name length (String)")
F.Match_Making_FindBySQLQuery_lstGathering_item_type_name_data = ProtoField.string("Match_Making_FindBySQLQuery_lstGathering_item_type_name_data", "lstGathering_type_name data (String)")
F.Match_Making_FindBySQLQuery_lstGathering_item_len_plus_four = ProtoField.uint32("Match_Making_FindBySQLQuery_lstGathering_item_len_plus_four", "lstGathering_len_plus_four (uint32)")
F.Match_Making_FindBySQLQuery_lstGathering_item_data_len = ProtoField.uint32("Match_Making_FindBySQLQuery_lstGathering_item_data_len", "lstGathering_data_len (uint32)")
F.Match_Making_LaunchSession_idGathering = ProtoField.uint32("Match_Making_LaunchSession_idGathering", "idGathering (uint32)")
F.Match_Making_LaunchSession_strURL_len = ProtoField.uint16("Match_Making_LaunchSession_strURL_len", "strURL length (String)")
F.Match_Making_LaunchSession_strURL_data = ProtoField.string("Match_Making_LaunchSession_strURL_data", "strURL data (String)")
F.Match_Making_LaunchSession_retval = ProtoField.bool("Match_Making_LaunchSession_retval", "retval (bool)")
F.Match_Making_UpdateSessionURL_idGathering = ProtoField.uint32("Match_Making_UpdateSessionURL_idGathering", "idGathering (uint32)")
F.Match_Making_UpdateSessionURL_strURL_len = ProtoField.uint16("Match_Making_UpdateSessionURL_strURL_len", "strURL length (String)")
F.Match_Making_UpdateSessionURL_strURL_data = ProtoField.string("Match_Making_UpdateSessionURL_strURL_data", "strURL data (String)")
F.Match_Making_UpdateSessionURL_retval = ProtoField.bool("Match_Making_UpdateSessionURL_retval", "retval (bool)")
F.Match_Making_GetSessionURL_idGathering = ProtoField.uint32("Match_Making_GetSessionURL_idGathering", "idGathering (uint32)")
F.Match_Making_GetSessionURL_retval = ProtoField.bool("Match_Making_GetSessionURL_retval", "retval (bool)")
F.Match_Making_GetSessionURL_strURL_len = ProtoField.uint16("Match_Making_GetSessionURL_strURL_len", "strURL length (String)")
F.Match_Making_GetSessionURL_strURL_data = ProtoField.string("Match_Making_GetSessionURL_strURL_data", "strURL data (String)")
F.Match_Making_GetState_idGathering = ProtoField.uint32("Match_Making_GetState_idGathering", "idGathering (uint32)")
F.Match_Making_GetState_retval = ProtoField.bool("Match_Making_GetState_retval", "retval (bool)")
F.Match_Making_GetState_uiState = ProtoField.uint32("Match_Making_GetState_uiState", "uiState (uint32)")
F.Match_Making_SetState_idGathering = ProtoField.uint32("Match_Making_SetState_idGathering", "idGathering (uint32)")
F.Match_Making_SetState_uiNewState = ProtoField.uint32("Match_Making_SetState_uiNewState", "uiNewState (uint32)")
F.Match_Making_SetState_retval = ProtoField.bool("Match_Making_SetState_retval", "retval (bool)")
F.Match_Making_ReportStats_idGathering = ProtoField.uint32("Match_Making_ReportStats_idGathering", "idGathering (uint32)")
F.Match_Making_ReportStats_lstStats_len = ProtoField.uint32("Match_Making_ReportStats_lstStats_len", "lstStats length (uint32)")
F.Match_Making_ReportStats_retval = ProtoField.bool("Match_Making_ReportStats_retval", "retval (bool)")
F.Match_Making_GetStats_idGathering = ProtoField.uint32("Match_Making_GetStats_idGathering", "idGathering (uint32)")
F.Match_Making_GetStats_lstParticipants_len = ProtoField.uint32("Match_Making_GetStats_lstParticipants_len", "lstParticipants length (uint32)")
F.Match_Making_GetStats_lstParticipants_item = ProtoField.uint32("Match_Making_GetStats_lstParticipants_item", "lstParticipants (uint32)")
F.Match_Making_GetStats_lstColumns_len = ProtoField.uint32("Match_Making_GetStats_lstColumns_len", "lstColumns length (uint32)")
F.Match_Making_GetStats_lstColumns_item = ProtoField.uint8("Match_Making_GetStats_lstColumns_item", "lstColumns (uint8)")
F.Match_Making_GetStats_retval = ProtoField.bool("Match_Making_GetStats_retval", "retval (bool)")
F.Match_Making_GetStats_plstStats_len = ProtoField.uint32("Match_Making_GetStats_plstStats_len", "plstStats length (uint32)")
F.Match_Making_DeleteGathering_gid = ProtoField.uint32("Match_Making_DeleteGathering_gid", "gid (uint32)")
F.Match_Making_DeleteGathering_retval = ProtoField.bool("Match_Making_DeleteGathering_retval", "retval (bool)")
F.Match_Making_GetPendingDeletions_uiReason = ProtoField.uint32("Match_Making_GetPendingDeletions_uiReason", "uiReason (uint32)")
F.Match_Making_GetPendingDeletions_retval = ProtoField.bool("Match_Making_GetPendingDeletions_retval", "retval (bool)")
F.Match_Making_GetPendingDeletions_lstDeletions_len = ProtoField.uint32("Match_Making_GetPendingDeletions_lstDeletions_len", "lstDeletions length (uint32)")
F.Match_Making_DeleteFromDeletions_lstDeletions_len = ProtoField.uint32("Match_Making_DeleteFromDeletions_lstDeletions_len", "lstDeletions length (uint32)")
F.Match_Making_DeleteFromDeletions_lstDeletions_item = ProtoField.uint32("Match_Making_DeleteFromDeletions_lstDeletions_item", "lstDeletions (uint32)")
F.Match_Making_DeleteFromDeletions_retval = ProtoField.bool("Match_Making_DeleteFromDeletions_retval", "retval (bool)")
F.Match_Making_MigrateGatheringOwnershipV1_gid = ProtoField.uint32("Match_Making_MigrateGatheringOwnershipV1_gid", "gid (uint32)")
F.Match_Making_MigrateGatheringOwnershipV1_lstPotentialNewOwnersID_len = ProtoField.uint32("Match_Making_MigrateGatheringOwnershipV1_lstPotentialNewOwnersID_len", "lstPotentialNewOwnersID length (uint32)")
F.Match_Making_MigrateGatheringOwnershipV1_lstPotentialNewOwnersID_item = ProtoField.uint32("Match_Making_MigrateGatheringOwnershipV1_lstPotentialNewOwnersID_item", "lstPotentialNewOwnersID (uint32)")
F.Match_Making_MigrateGatheringOwnershipV1_retval = ProtoField.bool("Match_Making_MigrateGatheringOwnershipV1_retval", "retval (bool)")
F.Match_Making_FindByDescriptionLike_strDescriptionLike_len = ProtoField.uint16("Match_Making_FindByDescriptionLike_strDescriptionLike_len", "strDescriptionLike length (String)")
F.Match_Making_FindByDescriptionLike_strDescriptionLike_data = ProtoField.string("Match_Making_FindByDescriptionLike_strDescriptionLike_data", "strDescriptionLike data (String)")
F.Match_Making_FindByDescriptionLike_lstGathering_len = ProtoField.uint32("Match_Making_FindByDescriptionLike_lstGathering_len", "lstGathering length (uint32)")
F.Match_Making_FindByDescriptionLike_lstGathering_item_data_bytes = ProtoField.bytes("Match_Making_FindByDescriptionLike_lstGathering_item_data_bytes", "lstGathering data bytes (bytes)")
F.Match_Making_FindByDescriptionLike_lstGathering_item_type_name_len = ProtoField.uint16("Match_Making_FindByDescriptionLike_lstGathering_item_type_name_len", "lstGathering_type_name length (String)")
F.Match_Making_FindByDescriptionLike_lstGathering_item_type_name_data = ProtoField.string("Match_Making_FindByDescriptionLike_lstGathering_item_type_name_data", "lstGathering_type_name data (String)")
F.Match_Making_FindByDescriptionLike_lstGathering_item_len_plus_four = ProtoField.uint32("Match_Making_FindByDescriptionLike_lstGathering_item_len_plus_four", "lstGathering_len_plus_four (uint32)")
F.Match_Making_FindByDescriptionLike_lstGathering_item_data_len = ProtoField.uint32("Match_Making_FindByDescriptionLike_lstGathering_item_data_len", "lstGathering_data_len (uint32)")
F.Match_Making_RegisterLocalURL_gid = ProtoField.uint32("Match_Making_RegisterLocalURL_gid", "gid (uint32)")
F.Match_Making_RegisterLocalURL_url_len = ProtoField.uint16("Match_Making_RegisterLocalURL_url_len", "url length (String)")
F.Match_Making_RegisterLocalURL_url_data = ProtoField.string("Match_Making_RegisterLocalURL_url_data", "url data (String)")
F.Match_Making_RegisterLocalURLs_gid = ProtoField.uint32("Match_Making_RegisterLocalURLs_gid", "gid (uint32)")
F.Match_Making_RegisterLocalURLs_lstUrls_len = ProtoField.uint32("Match_Making_RegisterLocalURLs_lstUrls_len", "lstUrls length (uint32)")
F.Match_Making_RegisterLocalURLs_lstUrls_item_len = ProtoField.uint16("Match_Making_RegisterLocalURLs_lstUrls_item_len", "lstUrls length (String)")
F.Match_Making_RegisterLocalURLs_lstUrls_item_data = ProtoField.string("Match_Making_RegisterLocalURLs_lstUrls_item_data", "lstUrls data (String)")
F.Match_Making_UpdateSessionHostV1_gid = ProtoField.uint32("Match_Making_UpdateSessionHostV1_gid", "gid (uint32)")
F.Match_Making_GetSessionURLs_gid = ProtoField.uint32("Match_Making_GetSessionURLs_gid", "gid (uint32)")
F.Match_Making_GetSessionURLs_lstURLs_len = ProtoField.uint32("Match_Making_GetSessionURLs_lstURLs_len", "lstURLs length (uint32)")
F.Match_Making_GetSessionURLs_lstURLs_item_len = ProtoField.uint16("Match_Making_GetSessionURLs_lstURLs_item_len", "lstURLs length (String)")
F.Match_Making_GetSessionURLs_lstURLs_item_data = ProtoField.string("Match_Making_GetSessionURLs_lstURLs_item_data", "lstURLs data (String)")
F.Match_Making_UpdateSessionHost_gid = ProtoField.uint32("Match_Making_UpdateSessionHost_gid", "gid (uint32)")
F.Match_Making_UpdateSessionHost_isMigrateOwner = ProtoField.bool("Match_Making_UpdateSessionHost_isMigrateOwner", "isMigrateOwner (bool)")
F.Match_Making_UpdateGatheringOwnership_gid = ProtoField.uint32("Match_Making_UpdateGatheringOwnership_gid", "gid (uint32)")
F.Match_Making_UpdateGatheringOwnership_participantsOnly = ProtoField.bool("Match_Making_UpdateGatheringOwnership_participantsOnly", "participantsOnly (bool)")
F.Match_Making_UpdateGatheringOwnership_retval = ProtoField.bool("Match_Making_UpdateGatheringOwnership_retval", "retval (bool)")
F.Match_Making_MigrateGatheringOwnership_gid = ProtoField.uint32("Match_Making_MigrateGatheringOwnership_gid", "gid (uint32)")
F.Match_Making_MigrateGatheringOwnership_lstPotentialNewOwnersID_len = ProtoField.uint32("Match_Making_MigrateGatheringOwnership_lstPotentialNewOwnersID_len", "lstPotentialNewOwnersID length (uint32)")
F.Match_Making_MigrateGatheringOwnership_lstPotentialNewOwnersID_item = ProtoField.uint32("Match_Making_MigrateGatheringOwnership_lstPotentialNewOwnersID_item", "lstPotentialNewOwnersID (uint32)")
F.Match_Making_MigrateGatheringOwnership_participantsOnly = ProtoField.bool("Match_Making_MigrateGatheringOwnership_participantsOnly", "participantsOnly (bool)")
F.Tracking_3_SendTag_trackingID = ProtoField.uint32("Tracking_3_SendTag_trackingID", "trackingID (uint32)")
F.Tracking_3_SendTag_tag_len = ProtoField.uint16("Tracking_3_SendTag_tag_len", "tag length (String)")
F.Tracking_3_SendTag_tag_data = ProtoField.string("Tracking_3_SendTag_tag_data", "tag data (String)")
F.Tracking_3_SendTag_attributes_len = ProtoField.uint16("Tracking_3_SendTag_attributes_len", "attributes length (String)")
F.Tracking_3_SendTag_attributes_data = ProtoField.string("Tracking_3_SendTag_attributes_data", "attributes data (String)")
F.Tracking_3_SendTag_deltaTime = ProtoField.uint32("Tracking_3_SendTag_deltaTime", "deltaTime (uint32)")
F.Tracking_3_SendTagAndUpdateUserInfo_trackingID = ProtoField.uint32("Tracking_3_SendTagAndUpdateUserInfo_trackingID", "trackingID (uint32)")
F.Tracking_3_SendTagAndUpdateUserInfo_tag_len = ProtoField.uint16("Tracking_3_SendTagAndUpdateUserInfo_tag_len", "tag length (String)")
F.Tracking_3_SendTagAndUpdateUserInfo_tag_data = ProtoField.string("Tracking_3_SendTagAndUpdateUserInfo_tag_data", "tag data (String)")
F.Tracking_3_SendTagAndUpdateUserInfo_attributes_len = ProtoField.uint16("Tracking_3_SendTagAndUpdateUserInfo_attributes_len", "attributes length (String)")
F.Tracking_3_SendTagAndUpdateUserInfo_attributes_data = ProtoField.string("Tracking_3_SendTagAndUpdateUserInfo_attributes_data", "attributes data (String)")
F.Tracking_3_SendTagAndUpdateUserInfo_deltaTime = ProtoField.uint32("Tracking_3_SendTagAndUpdateUserInfo_deltaTime", "deltaTime (uint32)")
F.Tracking_3_SendTagAndUpdateUserInfo_userID_len = ProtoField.uint16("Tracking_3_SendTagAndUpdateUserInfo_userID_len", "userID length (String)")
F.Tracking_3_SendTagAndUpdateUserInfo_userID_data = ProtoField.string("Tracking_3_SendTagAndUpdateUserInfo_userID_data", "userID data (String)")
F.Tracking_3_SendUserInfo_deltaTime = ProtoField.uint32("Tracking_3_SendUserInfo_deltaTime", "deltaTime (uint32)")
F.Tracking_3_SendUserInfo_trackingID = ProtoField.uint32("Tracking_3_SendUserInfo_trackingID", "trackingID (uint32)")
F.Tracking_3_GetConfiguration_tags_len = ProtoField.uint32("Tracking_3_GetConfiguration_tags_len", "tags length (uint32)")
F.Tracking_3_GetConfiguration_tags_item_len = ProtoField.uint16("Tracking_3_GetConfiguration_tags_item_len", "tags length (String)")
F.Tracking_3_GetConfiguration_tags_item_data = ProtoField.string("Tracking_3_GetConfiguration_tags_item_data", "tags data (String)")
F.Tracking_3_SendTags_tagData_len = ProtoField.uint32("Tracking_3_SendTags_tagData_len", "tagData length (uint32)")
F.Messaging_DeliverMessage_oUserMessage_data_bytes = ProtoField.bytes("Messaging_DeliverMessage_oUserMessage_data_bytes", "oUserMessage data bytes (bytes)")
F.Messaging_DeliverMessage_oUserMessage_type_name_len = ProtoField.uint16("Messaging_DeliverMessage_oUserMessage_type_name_len", "oUserMessage_type_name length (String)")
F.Messaging_DeliverMessage_oUserMessage_type_name_data = ProtoField.string("Messaging_DeliverMessage_oUserMessage_type_name_data", "oUserMessage_type_name data (String)")
F.Messaging_DeliverMessage_oUserMessage_len_plus_four = ProtoField.uint32("Messaging_DeliverMessage_oUserMessage_len_plus_four", "oUserMessage_len_plus_four (uint32)")
F.Messaging_DeliverMessage_oUserMessage_data_len = ProtoField.uint32("Messaging_DeliverMessage_oUserMessage_data_len", "oUserMessage_data_len (uint32)")
F.Messaging_DeliverMessage_oModifiedMessage_data_bytes = ProtoField.bytes("Messaging_DeliverMessage_oModifiedMessage_data_bytes", "oModifiedMessage data bytes (bytes)")
F.Messaging_DeliverMessage_oModifiedMessage_type_name_len = ProtoField.uint16("Messaging_DeliverMessage_oModifiedMessage_type_name_len", "oModifiedMessage_type_name length (String)")
F.Messaging_DeliverMessage_oModifiedMessage_type_name_data = ProtoField.string("Messaging_DeliverMessage_oModifiedMessage_type_name_data", "oModifiedMessage_type_name data (String)")
F.Messaging_DeliverMessage_oModifiedMessage_len_plus_four = ProtoField.uint32("Messaging_DeliverMessage_oModifiedMessage_len_plus_four", "oModifiedMessage_len_plus_four (uint32)")
F.Messaging_DeliverMessage_oModifiedMessage_data_len = ProtoField.uint32("Messaging_DeliverMessage_oModifiedMessage_data_len", "oModifiedMessage_data_len (uint32)")
F.Messaging_DeliverMessage_lstSandboxNodeId_len = ProtoField.uint32("Messaging_DeliverMessage_lstSandboxNodeId_len", "lstSandboxNodeId length (uint32)")
F.Messaging_DeliverMessage_lstSandboxNodeId_item = ProtoField.uint32("Messaging_DeliverMessage_lstSandboxNodeId_item", "lstSandboxNodeId (uint32)")
F.Messaging_DeliverMessage_lstParticipants_len = ProtoField.uint32("Messaging_DeliverMessage_lstParticipants_len", "lstParticipants length (uint32)")
F.Messaging_DeliverMessage_lstParticipants_item = ProtoField.uint32("Messaging_DeliverMessage_lstParticipants_item", "lstParticipants (uint32)")
F.Messaging_GetNumberOfMessages_uiNbMessages = ProtoField.uint32("Messaging_GetNumberOfMessages_uiNbMessages", "uiNbMessages (uint32)")
F.Messaging_GetMessagesHeaders_lstMsgHeaders_len = ProtoField.uint32("Messaging_GetMessagesHeaders_lstMsgHeaders_len", "lstMsgHeaders length (uint32)")
F.Messaging_RetrieveAllMessagesWithinRange_lstMessages_len = ProtoField.uint32("Messaging_RetrieveAllMessagesWithinRange_lstMessages_len", "lstMessages length (uint32)")
F.Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_data_bytes = ProtoField.bytes("Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_data_bytes", "lstMessages data bytes (bytes)")
F.Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_type_name_len = ProtoField.uint16("Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_type_name_len", "lstMessages_type_name length (String)")
F.Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_type_name_data = ProtoField.string("Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_type_name_data", "lstMessages_type_name data (String)")
F.Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_len_plus_four = ProtoField.uint32("Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_len_plus_four", "lstMessages_len_plus_four (uint32)")
F.Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_data_len = ProtoField.uint32("Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_data_len", "lstMessages_data_len (uint32)")
F.Messaging_RetrieveMessages_lstMsgIDs_len = ProtoField.uint32("Messaging_RetrieveMessages_lstMsgIDs_len", "lstMsgIDs length (uint32)")
F.Messaging_RetrieveMessages_lstMsgIDs_item = ProtoField.uint32("Messaging_RetrieveMessages_lstMsgIDs_item", "lstMsgIDs (uint32)")
F.Messaging_RetrieveMessages_bLeaveOnServer = ProtoField.bool("Messaging_RetrieveMessages_bLeaveOnServer", "bLeaveOnServer (bool)")
F.Messaging_RetrieveMessages_lstMessages_len = ProtoField.uint32("Messaging_RetrieveMessages_lstMessages_len", "lstMessages length (uint32)")
F.Messaging_RetrieveMessages_lstMessages_item_data_bytes = ProtoField.bytes("Messaging_RetrieveMessages_lstMessages_item_data_bytes", "lstMessages data bytes (bytes)")
F.Messaging_RetrieveMessages_lstMessages_item_type_name_len = ProtoField.uint16("Messaging_RetrieveMessages_lstMessages_item_type_name_len", "lstMessages_type_name length (String)")
F.Messaging_RetrieveMessages_lstMessages_item_type_name_data = ProtoField.string("Messaging_RetrieveMessages_lstMessages_item_type_name_data", "lstMessages_type_name data (String)")
F.Messaging_RetrieveMessages_lstMessages_item_len_plus_four = ProtoField.uint32("Messaging_RetrieveMessages_lstMessages_item_len_plus_four", "lstMessages_len_plus_four (uint32)")
F.Messaging_RetrieveMessages_lstMessages_item_data_len = ProtoField.uint32("Messaging_RetrieveMessages_lstMessages_item_data_len", "lstMessages_data_len (uint32)")
F.Messaging_DeleteMessages_lstMessagesToDelete_len = ProtoField.uint32("Messaging_DeleteMessages_lstMessagesToDelete_len", "lstMessagesToDelete length (uint32)")
F.Messaging_DeleteMessages_lstMessagesToDelete_item = ProtoField.uint32("Messaging_DeleteMessages_lstMessagesToDelete_item", "lstMessagesToDelete (uint32)")
F.Messaging_DeleteAllMessages_uiNbDeletedMessages = ProtoField.uint32("Messaging_DeleteAllMessages_uiNbDeletedMessages", "uiNbDeletedMessages (uint32)")
F.SMM_GetObjectInfos_dataIds_len = ProtoField.uint32("SMM_GetObjectInfos_dataIds_len", "dataIds length (uint32)")
F.SMM_GetObjectInfos_dataIds_item = ProtoField.uint64("SMM_GetObjectInfos_dataIds_item", "dataIds (uint64)")
F.SMM_GetObjectInfos_pInfos_len = ProtoField.uint32("SMM_GetObjectInfos_pInfos_len", "pInfos length (uint32)")
F.SMM_GetMetaByOwnerId_pMetaInfo_len = ProtoField.uint32("SMM_GetMetaByOwnerId_pMetaInfo_len", "pMetaInfo length (uint32)")
F.SMM_GetMetaByOwnerId_pHasNext = ProtoField.bool("SMM_GetMetaByOwnerId_pHasNext", "pHasNext (bool)")
F.SMM_CustomSearchObject_condition = ProtoField.uint32("SMM_CustomSearchObject_condition", "condition (uint32)")
F.SMM_RateCustomRanking_params_len = ProtoField.uint32("SMM_RateCustomRanking_params_len", "params length (uint32)")
F.SMM_GetCustomRanking_pRankingResult_len = ProtoField.uint32("SMM_GetCustomRanking_pRankingResult_len", "pRankingResult length (uint32)")
F.SMM_GetCustomRanking_pResults_len = ProtoField.uint32("SMM_GetCustomRanking_pResults_len", "pResults length (uint32)")
F.SMM_GetCustomRanking_pResults_item = ProtoField.uint32("SMM_GetCustomRanking_pResults_item", "pResults (uint32)")
F.SMM_GetCustomRankingByDataId_pRankingResult_len = ProtoField.uint32("SMM_GetCustomRankingByDataId_pRankingResult_len", "pRankingResult length (uint32)")
F.SMM_GetCustomRankingByDataId_pResults_len = ProtoField.uint32("SMM_GetCustomRankingByDataId_pResults_len", "pResults length (uint32)")
F.SMM_GetCustomRankingByDataId_pResults_item = ProtoField.uint32("SMM_GetCustomRankingByDataId_pResults_item", "pResults (uint32)")
F.SMM_DeleteCustomRanking_dataIdList_len = ProtoField.uint32("SMM_DeleteCustomRanking_dataIdList_len", "dataIdList length (uint32)")
F.SMM_DeleteCustomRanking_dataIdList_item = ProtoField.uint64("SMM_DeleteCustomRanking_dataIdList_item", "dataIdList (uint64)")
F.SMM_AddToBufferQueue_buffer_len = ProtoField.uint16("SMM_AddToBufferQueue_buffer_len", "buffer length (Buffer)")
F.SMM_AddToBufferQueue_buffer_data = ProtoField.bytes("SMM_AddToBufferQueue_buffer_data", "buffer data (Buffer)")
F.SMM_AddToBufferQueues_params_len = ProtoField.uint32("SMM_AddToBufferQueues_params_len", "params length (uint32)")
F.SMM_AddToBufferQueues_buffers_len = ProtoField.uint32("SMM_AddToBufferQueues_buffers_len", "buffers length (uint32)")
F.SMM_AddToBufferQueues_buffers_item_len = ProtoField.uint16("SMM_AddToBufferQueues_buffers_item_len", "buffers length (Buffer)")
F.SMM_AddToBufferQueues_buffers_item_data = ProtoField.bytes("SMM_AddToBufferQueues_buffers_item_data", "buffers data (Buffer)")
F.SMM_AddToBufferQueues_pResults_len = ProtoField.uint32("SMM_AddToBufferQueues_pResults_len", "pResults length (uint32)")
F.SMM_AddToBufferQueues_pResults_item = ProtoField.uint32("SMM_AddToBufferQueues_pResults_item", "pResults (uint32)")
F.SMM_GetBufferQueue_pBufferQueue_len = ProtoField.uint32("SMM_GetBufferQueue_pBufferQueue_len", "pBufferQueue length (uint32)")
F.SMM_GetBufferQueue_pBufferQueue_item_len = ProtoField.uint16("SMM_GetBufferQueue_pBufferQueue_item_len", "pBufferQueue length (Buffer)")
F.SMM_GetBufferQueue_pBufferQueue_item_data = ProtoField.bytes("SMM_GetBufferQueue_pBufferQueue_item_data", "pBufferQueue data (Buffer)")
F.SMM_GetBufferQueues_params_len = ProtoField.uint32("SMM_GetBufferQueues_params_len", "params length (uint32)")
F.SMM_GetBufferQueues_pBufferQueueLst_len = ProtoField.uint32("SMM_GetBufferQueues_pBufferQueueLst_len", "pBufferQueueLst length (uint32)")
F.SMM_GetBufferQueues_pBufferQueueLst_item_len = ProtoField.uint32("SMM_GetBufferQueues_pBufferQueueLst_item_len", "pBufferQueueLst length (uint32)")
F.SMM_GetBufferQueues_pBufferQueueLst_item_item_len = ProtoField.uint16("SMM_GetBufferQueues_pBufferQueueLst_item_item_len", "pBufferQueueLst length (Buffer)")
F.SMM_GetBufferQueues_pBufferQueueLst_item_item_data = ProtoField.bytes("SMM_GetBufferQueues_pBufferQueueLst_item_item_data", "pBufferQueueLst data (Buffer)")
F.SMM_GetBufferQueues_pResults_len = ProtoField.uint32("SMM_GetBufferQueues_pResults_len", "pResults length (uint32)")
F.SMM_GetBufferQueues_pResults_item = ProtoField.uint32("SMM_GetBufferQueues_pResults_item", "pResults (uint32)")
F.SMM_ClearBufferQueues_params_len = ProtoField.uint32("SMM_ClearBufferQueues_params_len", "params length (uint32)")
F.SMM_ClearBufferQueues_pResults_len = ProtoField.uint32("SMM_ClearBufferQueues_pResults_len", "pResults length (uint32)")
F.SMM_ClearBufferQueues_pResults_item = ProtoField.uint32("SMM_ClearBufferQueues_pResults_item", "pResults (uint32)")
F.SMM_CompleteAttachFile_pUrl_len = ProtoField.uint16("SMM_CompleteAttachFile_pUrl_len", "pUrl length (String)")
F.SMM_CompleteAttachFile_pUrl_data = ProtoField.string("SMM_CompleteAttachFile_pUrl_data", "pUrl data (String)")
F.SMM_CompleteAttachFileV1_pUrl_len = ProtoField.uint16("SMM_CompleteAttachFileV1_pUrl_len", "pUrl length (String)")
F.SMM_CompleteAttachFileV1_pUrl_data = ProtoField.string("SMM_CompleteAttachFileV1_pUrl_data", "pUrl data (String)")
F.SMM_ConditionalSearchObject_condition = ProtoField.uint32("SMM_ConditionalSearchObject_condition", "condition (uint32)")
F.SMM_ConditionalSearchObject_extraData_len = ProtoField.uint32("SMM_ConditionalSearchObject_extraData_len", "extraData length (uint32)")
F.SMM_ConditionalSearchObject_extraData_item_len = ProtoField.uint16("SMM_ConditionalSearchObject_extraData_item_len", "extraData length (String)")
F.SMM_ConditionalSearchObject_extraData_item_data = ProtoField.string("SMM_ConditionalSearchObject_extraData_item_data", "extraData data (String)")
F.SMM_ConditionalSearchObject_pRankingResults_len = ProtoField.uint32("SMM_ConditionalSearchObject_pRankingResults_len", "pRankingResults length (uint32)")
F.SMM_GetApplicationConfig_applicationId = ProtoField.uint32("SMM_GetApplicationConfig_applicationId", "applicationId (uint32)")
F.SMM_GetApplicationConfig_config_len = ProtoField.uint32("SMM_GetApplicationConfig_config_len", "config length (uint32)")
F.SMM_GetApplicationConfig_config_item = ProtoField.int32("SMM_GetApplicationConfig_config_item", "config (uint32)")
F.SMM_SetApplicationConfig_applicationId = ProtoField.uint32("SMM_SetApplicationConfig_applicationId", "applicationId (uint32)")
F.SMM_SetApplicationConfig_key = ProtoField.uint32("SMM_SetApplicationConfig_key", "key (uint32)")
F.SMM_SetApplicationConfig_value = ProtoField.int32("SMM_SetApplicationConfig_value", "value (uint32)")
F.SMM_DeleteApplicationConfig_applicationId = ProtoField.uint32("SMM_DeleteApplicationConfig_applicationId", "applicationId (uint32)")
F.SMM_DeleteApplicationConfig_key = ProtoField.uint32("SMM_DeleteApplicationConfig_key", "key (uint32)")
F.SMM_LatestCourseSearchObject_extraData_len = ProtoField.uint32("SMM_LatestCourseSearchObject_extraData_len", "extraData length (uint32)")
F.SMM_LatestCourseSearchObject_extraData_item_len = ProtoField.uint16("SMM_LatestCourseSearchObject_extraData_item_len", "extraData length (String)")
F.SMM_LatestCourseSearchObject_extraData_item_data = ProtoField.string("SMM_LatestCourseSearchObject_extraData_item_data", "extraData data (String)")
F.SMM_LatestCourseSearchObject_pRankingResults_len = ProtoField.uint32("SMM_LatestCourseSearchObject_pRankingResults_len", "pRankingResults length (uint32)")
F.SMM_FollowingsLatestCourseSearchObject_extraData_len = ProtoField.uint32("SMM_FollowingsLatestCourseSearchObject_extraData_len", "extraData length (uint32)")
F.SMM_FollowingsLatestCourseSearchObject_extraData_item_len = ProtoField.uint16("SMM_FollowingsLatestCourseSearchObject_extraData_item_len", "extraData length (String)")
F.SMM_FollowingsLatestCourseSearchObject_extraData_item_data = ProtoField.string("SMM_FollowingsLatestCourseSearchObject_extraData_item_data", "extraData data (String)")
F.SMM_FollowingsLatestCourseSearchObject_pRankingResults_len = ProtoField.uint32("SMM_FollowingsLatestCourseSearchObject_pRankingResults_len", "pRankingResults length (uint32)")
F.SMM_RecommendedCourseSearchObject_extraData_len = ProtoField.uint32("SMM_RecommendedCourseSearchObject_extraData_len", "extraData length (uint32)")
F.SMM_RecommendedCourseSearchObject_extraData_item_len = ProtoField.uint16("SMM_RecommendedCourseSearchObject_extraData_item_len", "extraData length (String)")
F.SMM_RecommendedCourseSearchObject_extraData_item_data = ProtoField.string("SMM_RecommendedCourseSearchObject_extraData_item_data", "extraData data (String)")
F.SMM_RecommendedCourseSearchObject_pRankingResults_len = ProtoField.uint32("SMM_RecommendedCourseSearchObject_pRankingResults_len", "pRankingResults length (uint32)")
F.SMM_ScoreRangeCascadedSearchObject_extraData_len = ProtoField.uint32("SMM_ScoreRangeCascadedSearchObject_extraData_len", "extraData length (uint32)")
F.SMM_ScoreRangeCascadedSearchObject_extraData_item_len = ProtoField.uint16("SMM_ScoreRangeCascadedSearchObject_extraData_item_len", "extraData length (String)")
F.SMM_ScoreRangeCascadedSearchObject_extraData_item_data = ProtoField.string("SMM_ScoreRangeCascadedSearchObject_extraData_item_data", "extraData data (String)")
F.SMM_ScoreRangeCascadedSearchObject_pRankingResults_len = ProtoField.uint32("SMM_ScoreRangeCascadedSearchObject_pRankingResults_len", "pRankingResults length (uint32)")
F.SMM_SuggestedCourseSearchObject_extraData_len = ProtoField.uint32("SMM_SuggestedCourseSearchObject_extraData_len", "extraData length (uint32)")
F.SMM_SuggestedCourseSearchObject_extraData_item_len = ProtoField.uint16("SMM_SuggestedCourseSearchObject_extraData_item_len", "extraData length (String)")
F.SMM_SuggestedCourseSearchObject_extraData_item_data = ProtoField.string("SMM_SuggestedCourseSearchObject_extraData_item_data", "extraData data (String)")
F.SMM_SuggestedCourseSearchObject_pRankingResults_len = ProtoField.uint32("SMM_SuggestedCourseSearchObject_pRankingResults_len", "pRankingResults length (uint32)")
F.SMM_PreparePostObjectWithOwnerIdAndDataId_ownerId = ProtoField.uint32("SMM_PreparePostObjectWithOwnerIdAndDataId_ownerId", "ownerId (uint32)")
F.SMM_PreparePostObjectWithOwnerIdAndDataId_dataId = ProtoField.uint64("SMM_PreparePostObjectWithOwnerIdAndDataId_dataId", "dataId (uint64)")
F.SMM_CompletePostObjectWithOwnerId_ownerId = ProtoField.uint32("SMM_CompletePostObjectWithOwnerId_ownerId", "ownerId (uint32)")
F.SMM_GetApplicationConfigString_applicationId = ProtoField.uint32("SMM_GetApplicationConfigString_applicationId", "applicationId (uint32)")
F.SMM_GetApplicationConfigString_config_len = ProtoField.uint32("SMM_GetApplicationConfigString_config_len", "config length (uint32)")
F.SMM_GetApplicationConfigString_config_item_len = ProtoField.uint16("SMM_GetApplicationConfigString_config_item_len", "config length (String)")
F.SMM_GetApplicationConfigString_config_item_data = ProtoField.string("SMM_GetApplicationConfigString_config_item_data", "config data (String)")
F.SMM_SetApplicationConfigString_applicationId = ProtoField.uint32("SMM_SetApplicationConfigString_applicationId", "applicationId (uint32)")
F.SMM_SetApplicationConfigString_key = ProtoField.uint32("SMM_SetApplicationConfigString_key", "key (uint32)")
F.SMM_SetApplicationConfigString_value_len = ProtoField.uint16("SMM_SetApplicationConfigString_value_len", "value length (String)")
F.SMM_SetApplicationConfigString_value_data = ProtoField.string("SMM_SetApplicationConfigString_value_data", "value data (String)")
F.SMM_GetDeletionReason_dataIdLst_len = ProtoField.uint32("SMM_GetDeletionReason_dataIdLst_len", "dataIdLst length (uint32)")
F.SMM_GetDeletionReason_dataIdLst_item = ProtoField.uint64("SMM_GetDeletionReason_dataIdLst_item", "dataIdLst (uint64)")
F.SMM_GetDeletionReason_pDeletionReasons_len = ProtoField.uint32("SMM_GetDeletionReason_pDeletionReasons_len", "pDeletionReasons length (uint32)")
F.SMM_GetDeletionReason_pDeletionReasons_item = ProtoField.uint32("SMM_GetDeletionReason_pDeletionReasons_item", "pDeletionReasons (uint32)")
F.SMM_SetDeletionReason_dataIdLst_len = ProtoField.uint32("SMM_SetDeletionReason_dataIdLst_len", "dataIdLst length (uint32)")
F.SMM_SetDeletionReason_dataIdLst_item = ProtoField.uint64("SMM_SetDeletionReason_dataIdLst_item", "dataIdLst (uint64)")
F.SMM_SetDeletionReason_deletionReason = ProtoField.uint32("SMM_SetDeletionReason_deletionReason", "deletionReason (uint32)")
F.SMM_GetMetasWithCourseRecord_params_len = ProtoField.uint32("SMM_GetMetasWithCourseRecord_params_len", "params length (uint32)")
F.SMM_GetMetasWithCourseRecord_pMetaInfo_len = ProtoField.uint32("SMM_GetMetasWithCourseRecord_pMetaInfo_len", "pMetaInfo length (uint32)")
F.SMM_GetMetasWithCourseRecord_pCourseResults_len = ProtoField.uint32("SMM_GetMetasWithCourseRecord_pCourseResults_len", "pCourseResults length (uint32)")
F.SMM_GetMetasWithCourseRecord_pResults_len = ProtoField.uint32("SMM_GetMetasWithCourseRecord_pResults_len", "pResults length (uint32)")
F.SMM_GetMetasWithCourseRecord_pResults_item = ProtoField.uint32("SMM_GetMetasWithCourseRecord_pResults_item", "pResults (uint32)")
F.SMM_CheckRateCustomRankingCounter_applicationId = ProtoField.uint32("SMM_CheckRateCustomRankingCounter_applicationId", "applicationId (uint32)")
F.SMM_CheckRateCustomRankingCounter_isBelowThreshold = ProtoField.bool("SMM_CheckRateCustomRankingCounter_isBelowThreshold", "isBelowThreshold (bool)")
F.SMM_ResetRateCustomRankingCounter_applicationId = ProtoField.uint32("SMM_ResetRateCustomRankingCounter_applicationId", "applicationId (uint32)")
F.SMM_BestScoreRateCourseSearchObject_extraData_len = ProtoField.uint32("SMM_BestScoreRateCourseSearchObject_extraData_len", "extraData length (uint32)")
F.SMM_BestScoreRateCourseSearchObject_extraData_item_len = ProtoField.uint16("SMM_BestScoreRateCourseSearchObject_extraData_item_len", "extraData length (String)")
F.SMM_BestScoreRateCourseSearchObject_extraData_item_data = ProtoField.string("SMM_BestScoreRateCourseSearchObject_extraData_item_data", "extraData data (String)")
F.SMM_BestScoreRateCourseSearchObject_pRankingResults_len = ProtoField.uint32("SMM_BestScoreRateCourseSearchObject_pRankingResults_len", "pRankingResults length (uint32)")
F.SMM_CTRPickUpCourseSearchObject_extraData_len = ProtoField.uint32("SMM_CTRPickUpCourseSearchObject_extraData_len", "extraData length (uint32)")
F.SMM_CTRPickUpCourseSearchObject_extraData_item_len = ProtoField.uint16("SMM_CTRPickUpCourseSearchObject_extraData_item_len", "extraData length (String)")
F.SMM_CTRPickUpCourseSearchObject_extraData_item_data = ProtoField.string("SMM_CTRPickUpCourseSearchObject_extraData_item_data", "extraData data (String)")
F.SMM_CTRPickUpCourseSearchObject_pRankingResults_len = ProtoField.uint32("SMM_CTRPickUpCourseSearchObject_pRankingResults_len", "pRankingResults length (uint32)")
F.SMM_SetCachedRanking_rankingType_len = ProtoField.uint16("SMM_SetCachedRanking_rankingType_len", "rankingType length (String)")
F.SMM_SetCachedRanking_rankingType_data = ProtoField.string("SMM_SetCachedRanking_rankingType_data", "rankingType data (String)")
F.SMM_SetCachedRanking_rankingArgs_len = ProtoField.uint32("SMM_SetCachedRanking_rankingArgs_len", "rankingArgs length (uint32)")
F.SMM_SetCachedRanking_rankingArgs_item_len = ProtoField.uint16("SMM_SetCachedRanking_rankingArgs_item_len", "rankingArgs length (String)")
F.SMM_SetCachedRanking_rankingArgs_item_data = ProtoField.string("SMM_SetCachedRanking_rankingArgs_item_data", "rankingArgs data (String)")
F.SMM_SetCachedRanking_dataIdLst_len = ProtoField.uint32("SMM_SetCachedRanking_dataIdLst_len", "dataIdLst length (uint32)")
F.SMM_SetCachedRanking_dataIdLst_item = ProtoField.uint64("SMM_SetCachedRanking_dataIdLst_item", "dataIdLst (uint64)")
F.SMM_DeleteCachedRanking_rankingType_len = ProtoField.uint16("SMM_DeleteCachedRanking_rankingType_len", "rankingType length (String)")
F.SMM_DeleteCachedRanking_rankingType_data = ProtoField.string("SMM_DeleteCachedRanking_rankingType_data", "rankingType data (String)")
F.SMM_DeleteCachedRanking_rankingArgs_len = ProtoField.uint32("SMM_DeleteCachedRanking_rankingArgs_len", "rankingArgs length (uint32)")
F.SMM_DeleteCachedRanking_rankingArgs_item_len = ProtoField.uint16("SMM_DeleteCachedRanking_rankingArgs_item_len", "rankingArgs length (String)")
F.SMM_DeleteCachedRanking_rankingArgs_item_data = ProtoField.string("SMM_DeleteCachedRanking_rankingArgs_item_data", "rankingArgs data (String)")
F.SMM_ChangePlayablePlatform_params_len = ProtoField.uint32("SMM_ChangePlayablePlatform_params_len", "params length (uint32)")
F.Message_Delivery_DeliverMessage_oUserMessage_data_bytes = ProtoField.bytes("Message_Delivery_DeliverMessage_oUserMessage_data_bytes", "oUserMessage data bytes (bytes)")
F.Message_Delivery_DeliverMessage_oUserMessage_type_name_len = ProtoField.uint16("Message_Delivery_DeliverMessage_oUserMessage_type_name_len", "oUserMessage_type_name length (String)")
F.Message_Delivery_DeliverMessage_oUserMessage_type_name_data = ProtoField.string("Message_Delivery_DeliverMessage_oUserMessage_type_name_data", "oUserMessage_type_name data (String)")
F.Message_Delivery_DeliverMessage_oUserMessage_len_plus_four = ProtoField.uint32("Message_Delivery_DeliverMessage_oUserMessage_len_plus_four", "oUserMessage_len_plus_four (uint32)")
F.Message_Delivery_DeliverMessage_oUserMessage_data_len = ProtoField.uint32("Message_Delivery_DeliverMessage_oUserMessage_data_len", "oUserMessage_data_len (uint32)")
F.Subscriber_Hello_Unknown_len = ProtoField.uint16("Subscriber_Hello_Unknown_len", "Unknown length (String)")
F.Subscriber_Hello_Unknown_data = ProtoField.string("Subscriber_Hello_Unknown_data", "Unknown data (String)")
F.Subscriber_PostContent_Unknown = ProtoField.uint64("Subscriber_PostContent_Unknown", "Unknown (uint64)")
F.Subscriber_GetContent_Content_len = ProtoField.uint32("Subscriber_GetContent_Content_len", "Content length (uint32)")
F.Subscriber_DeleteContent_Unknown_len = ProtoField.uint32("Subscriber_DeleteContent_Unknown_len", "Unknown length (uint32)")
F.Subscriber_DeleteContent_Unknown_item_len = ProtoField.uint16("Subscriber_DeleteContent_Unknown_item_len", "Unknown length (String)")
F.Subscriber_DeleteContent_Unknown_item_data = ProtoField.string("Subscriber_DeleteContent_Unknown_item_data", "Unknown data (String)")
F.Subscriber_DeleteContent_Unknown = ProtoField.uint64("Subscriber_DeleteContent_Unknown", "Unknown (uint64)")
F.Subscriber_GetContentMulti_Param_len = ProtoField.uint32("Subscriber_GetContentMulti_Param_len", "Param length (uint32)")
F.Subscriber_GetContentMulti_Content_len = ProtoField.uint32("Subscriber_GetContentMulti_Content_len", "Content length (uint32)")
F.Subscriber_GetContentMulti_Content_item_len = ProtoField.uint32("Subscriber_GetContentMulti_Content_item_len", "Content length (uint32)")
F.Subscriber_UpdateUserStatus_Unknown_len = ProtoField.uint32("Subscriber_UpdateUserStatus_Unknown_len", "Unknown length (uint32)")
F.Subscriber_UpdateUserStatus_Unknown_len = ProtoField.uint32("Subscriber_UpdateUserStatus_Unknown_len", "Unknown length (uint32)")
F.Subscriber_UpdateUserStatus_Unknown_item = ProtoField.uint8("Subscriber_UpdateUserStatus_Unknown_item", "Unknown (uint8)")
F.Subscriber_GetFriendUserStatuses_Up_to_8_different_integers_between_0_and_7_len = ProtoField.uint32("Subscriber_GetFriendUserStatuses_Up_to_8_different_integers_between_0_and_7_len", "Up to 8 different integers between 0 and 7 length (uint32)")
F.Subscriber_GetFriendUserStatuses_Up_to_8_different_integers_between_0_and_7_item = ProtoField.uint8("Subscriber_GetFriendUserStatuses_Up_to_8_different_integers_between_0_and_7_item", "Up to 8 different integers between 0 and 7 (uint8)")
F.Subscriber_GetFriendUserStatuses_Status_list_len = ProtoField.uint32("Subscriber_GetFriendUserStatuses_Status_list_len", "Status list length (uint32)")
F.Subscriber_GetUserStatuses_User_ids_len = ProtoField.uint32("Subscriber_GetUserStatuses_User_ids_len", "User ids length (uint32)")
F.Subscriber_GetUserStatuses_User_ids_item = ProtoField.uint32("Subscriber_GetUserStatuses_User_ids_item", "User ids (uint32)")
F.Subscriber_GetUserStatuses_Up_to_8_different_integers_between_0_and_7_len = ProtoField.uint32("Subscriber_GetUserStatuses_Up_to_8_different_integers_between_0_and_7_len", "Up to 8 different integers between 0 and 7 length (uint32)")
F.Subscriber_GetUserStatuses_Up_to_8_different_integers_between_0_and_7_item = ProtoField.uint8("Subscriber_GetUserStatuses_Up_to_8_different_integers_between_0_and_7_item", "Up to 8 different integers between 0 and 7 (uint8)")
F.Subscriber_GetUserStatuses_Status_list_len = ProtoField.uint32("Subscriber_GetUserStatuses_Status_list_len", "Status list length (uint32)")
F.Account_Management_CreateAccount_strPrincipalName_len = ProtoField.uint16("Account_Management_CreateAccount_strPrincipalName_len", "strPrincipalName length (String)")
F.Account_Management_CreateAccount_strPrincipalName_data = ProtoField.string("Account_Management_CreateAccount_strPrincipalName_data", "strPrincipalName data (String)")
F.Account_Management_CreateAccount_strKey_len = ProtoField.uint16("Account_Management_CreateAccount_strKey_len", "strKey length (String)")
F.Account_Management_CreateAccount_strKey_data = ProtoField.string("Account_Management_CreateAccount_strKey_data", "strKey data (String)")
F.Account_Management_CreateAccount_uiGroups = ProtoField.uint32("Account_Management_CreateAccount_uiGroups", "uiGroups (uint32)")
F.Account_Management_CreateAccount_strEmail_len = ProtoField.uint16("Account_Management_CreateAccount_strEmail_len", "strEmail length (String)")
F.Account_Management_CreateAccount_strEmail_data = ProtoField.string("Account_Management_CreateAccount_strEmail_data", "strEmail data (String)")
F.Account_Management_CreateAccount_retval = ProtoField.uint32("Account_Management_CreateAccount_retval", "retval (uint32)")
F.Account_Management_DeleteAccount_idPrincipal = ProtoField.uint32("Account_Management_DeleteAccount_idPrincipal", "idPrincipal (uint32)")
F.Account_Management_DisableAccount_idPrincipal = ProtoField.uint32("Account_Management_DisableAccount_idPrincipal", "idPrincipal (uint32)")
F.Account_Management_DisableAccount_dtUntil = ProtoField.uint64("Account_Management_DisableAccount_dtUntil", "dtUntil (uint64)")
F.Account_Management_DisableAccount_strMessage_len = ProtoField.uint16("Account_Management_DisableAccount_strMessage_len", "strMessage length (String)")
F.Account_Management_DisableAccount_strMessage_data = ProtoField.string("Account_Management_DisableAccount_strMessage_data", "strMessage data (String)")
F.Account_Management_DisableAccount_retval = ProtoField.uint32("Account_Management_DisableAccount_retval", "retval (uint32)")
F.Account_Management_ChangePassword_strNewKey_len = ProtoField.uint16("Account_Management_ChangePassword_strNewKey_len", "strNewKey length (String)")
F.Account_Management_ChangePassword_strNewKey_data = ProtoField.string("Account_Management_ChangePassword_strNewKey_data", "strNewKey data (String)")
F.Account_Management_ChangePassword_retval = ProtoField.bool("Account_Management_ChangePassword_retval", "retval (bool)")
F.Account_Management_TestCapability_uiCapability = ProtoField.uint32("Account_Management_TestCapability_uiCapability", "uiCapability (uint32)")
F.Account_Management_TestCapability_retval = ProtoField.bool("Account_Management_TestCapability_retval", "retval (bool)")
F.Account_Management_GetName_idPrincipal = ProtoField.uint32("Account_Management_GetName_idPrincipal", "idPrincipal (uint32)")
F.Account_Management_GetName_strName_len = ProtoField.uint16("Account_Management_GetName_strName_len", "strName length (String)")
F.Account_Management_GetName_strName_data = ProtoField.string("Account_Management_GetName_strName_data", "strName data (String)")
F.Account_Management_GetAccountData_retval = ProtoField.uint32("Account_Management_GetAccountData_retval", "retval (uint32)")
F.Account_Management_GetPrivateData_retval = ProtoField.bool("Account_Management_GetPrivateData_retval", "retval (bool)")
F.Account_Management_GetPrivateData_oData_data_bytes = ProtoField.bytes("Account_Management_GetPrivateData_oData_data_bytes", "oData data bytes (bytes)")
F.Account_Management_GetPrivateData_oData_type_name_len = ProtoField.uint16("Account_Management_GetPrivateData_oData_type_name_len", "oData_type_name length (String)")
F.Account_Management_GetPrivateData_oData_type_name_data = ProtoField.string("Account_Management_GetPrivateData_oData_type_name_data", "oData_type_name data (String)")
F.Account_Management_GetPrivateData_oData_len_plus_four = ProtoField.uint32("Account_Management_GetPrivateData_oData_len_plus_four", "oData_len_plus_four (uint32)")
F.Account_Management_GetPrivateData_oData_data_len = ProtoField.uint32("Account_Management_GetPrivateData_oData_data_len", "oData_data_len (uint32)")
F.Account_Management_GetPublicData_idPrincipal = ProtoField.uint32("Account_Management_GetPublicData_idPrincipal", "idPrincipal (uint32)")
F.Account_Management_GetPublicData_retval = ProtoField.bool("Account_Management_GetPublicData_retval", "retval (bool)")
F.Account_Management_GetPublicData_oData_data_bytes = ProtoField.bytes("Account_Management_GetPublicData_oData_data_bytes", "oData data bytes (bytes)")
F.Account_Management_GetPublicData_oData_type_name_len = ProtoField.uint16("Account_Management_GetPublicData_oData_type_name_len", "oData_type_name length (String)")
F.Account_Management_GetPublicData_oData_type_name_data = ProtoField.string("Account_Management_GetPublicData_oData_type_name_data", "oData_type_name data (String)")
F.Account_Management_GetPublicData_oData_len_plus_four = ProtoField.uint32("Account_Management_GetPublicData_oData_len_plus_four", "oData_len_plus_four (uint32)")
F.Account_Management_GetPublicData_oData_data_len = ProtoField.uint32("Account_Management_GetPublicData_oData_data_len", "oData_data_len (uint32)")
F.Account_Management_GetMultiplePublicData_lstPrincipals_len = ProtoField.uint32("Account_Management_GetMultiplePublicData_lstPrincipals_len", "lstPrincipals length (uint32)")
F.Account_Management_GetMultiplePublicData_lstPrincipals_item = ProtoField.uint32("Account_Management_GetMultiplePublicData_lstPrincipals_item", "lstPrincipals (uint32)")
F.Account_Management_GetMultiplePublicData_retval = ProtoField.bool("Account_Management_GetMultiplePublicData_retval", "retval (bool)")
F.Account_Management_GetMultiplePublicData_oData_len = ProtoField.uint32("Account_Management_GetMultiplePublicData_oData_len", "oData length (uint32)")
F.Account_Management_GetMultiplePublicData_oData_item_data_bytes = ProtoField.bytes("Account_Management_GetMultiplePublicData_oData_item_data_bytes", "oData data bytes (bytes)")
F.Account_Management_GetMultiplePublicData_oData_item_type_name_len = ProtoField.uint16("Account_Management_GetMultiplePublicData_oData_item_type_name_len", "oData_type_name length (String)")
F.Account_Management_GetMultiplePublicData_oData_item_type_name_data = ProtoField.string("Account_Management_GetMultiplePublicData_oData_item_type_name_data", "oData_type_name data (String)")
F.Account_Management_GetMultiplePublicData_oData_item_len_plus_four = ProtoField.uint32("Account_Management_GetMultiplePublicData_oData_item_len_plus_four", "oData_len_plus_four (uint32)")
F.Account_Management_GetMultiplePublicData_oData_item_data_len = ProtoField.uint32("Account_Management_GetMultiplePublicData_oData_item_data_len", "oData_data_len (uint32)")
F.Account_Management_UpdateAccountName_strName_len = ProtoField.uint16("Account_Management_UpdateAccountName_strName_len", "strName length (String)")
F.Account_Management_UpdateAccountName_strName_data = ProtoField.string("Account_Management_UpdateAccountName_strName_data", "strName data (String)")
F.Account_Management_UpdateAccountName_retval = ProtoField.uint32("Account_Management_UpdateAccountName_retval", "retval (uint32)")
F.Account_Management_UpdateAccountEmail_strName_len = ProtoField.uint16("Account_Management_UpdateAccountEmail_strName_len", "strName length (String)")
F.Account_Management_UpdateAccountEmail_strName_data = ProtoField.string("Account_Management_UpdateAccountEmail_strName_data", "strName data (String)")
F.Account_Management_UpdateAccountEmail_retval = ProtoField.uint32("Account_Management_UpdateAccountEmail_retval", "retval (uint32)")
F.Account_Management_UpdateCustomData_oPublicData_data_bytes = ProtoField.bytes("Account_Management_UpdateCustomData_oPublicData_data_bytes", "oPublicData data bytes (bytes)")
F.Account_Management_UpdateCustomData_oPublicData_type_name_len = ProtoField.uint16("Account_Management_UpdateCustomData_oPublicData_type_name_len", "oPublicData_type_name length (String)")
F.Account_Management_UpdateCustomData_oPublicData_type_name_data = ProtoField.string("Account_Management_UpdateCustomData_oPublicData_type_name_data", "oPublicData_type_name data (String)")
F.Account_Management_UpdateCustomData_oPublicData_len_plus_four = ProtoField.uint32("Account_Management_UpdateCustomData_oPublicData_len_plus_four", "oPublicData_len_plus_four (uint32)")
F.Account_Management_UpdateCustomData_oPublicData_data_len = ProtoField.uint32("Account_Management_UpdateCustomData_oPublicData_data_len", "oPublicData_data_len (uint32)")
F.Account_Management_UpdateCustomData_oPrivateData_data_bytes = ProtoField.bytes("Account_Management_UpdateCustomData_oPrivateData_data_bytes", "oPrivateData data bytes (bytes)")
F.Account_Management_UpdateCustomData_oPrivateData_type_name_len = ProtoField.uint16("Account_Management_UpdateCustomData_oPrivateData_type_name_len", "oPrivateData_type_name length (String)")
F.Account_Management_UpdateCustomData_oPrivateData_type_name_data = ProtoField.string("Account_Management_UpdateCustomData_oPrivateData_type_name_data", "oPrivateData_type_name data (String)")
F.Account_Management_UpdateCustomData_oPrivateData_len_plus_four = ProtoField.uint32("Account_Management_UpdateCustomData_oPrivateData_len_plus_four", "oPrivateData_len_plus_four (uint32)")
F.Account_Management_UpdateCustomData_oPrivateData_data_len = ProtoField.uint32("Account_Management_UpdateCustomData_oPrivateData_data_len", "oPrivateData_data_len (uint32)")
F.Account_Management_UpdateCustomData_retval = ProtoField.uint32("Account_Management_UpdateCustomData_retval", "retval (uint32)")
F.Account_Management_FindByNameRegex_uiGroups = ProtoField.uint32("Account_Management_FindByNameRegex_uiGroups", "uiGroups (uint32)")
F.Account_Management_FindByNameRegex_strRegex_len = ProtoField.uint16("Account_Management_FindByNameRegex_strRegex_len", "strRegex length (String)")
F.Account_Management_FindByNameRegex_strRegex_data = ProtoField.string("Account_Management_FindByNameRegex_strRegex_data", "strRegex data (String)")
F.Account_Management_FindByNameRegex_plstAccounts_len = ProtoField.uint32("Account_Management_FindByNameRegex_plstAccounts_len", "plstAccounts length (uint32)")
F.Account_Management_UpdateAccountExpiryDate_idPrincipal = ProtoField.uint32("Account_Management_UpdateAccountExpiryDate_idPrincipal", "idPrincipal (uint32)")
F.Account_Management_UpdateAccountExpiryDate_dtExpiry = ProtoField.uint64("Account_Management_UpdateAccountExpiryDate_dtExpiry", "dtExpiry (uint64)")
F.Account_Management_UpdateAccountExpiryDate_strExpiredMessage_len = ProtoField.uint16("Account_Management_UpdateAccountExpiryDate_strExpiredMessage_len", "strExpiredMessage length (String)")
F.Account_Management_UpdateAccountExpiryDate_strExpiredMessage_data = ProtoField.string("Account_Management_UpdateAccountExpiryDate_strExpiredMessage_data", "strExpiredMessage data (String)")
F.Account_Management_UpdateAccountEffectiveDate_idPrincipal = ProtoField.uint32("Account_Management_UpdateAccountEffectiveDate_idPrincipal", "idPrincipal (uint32)")
F.Account_Management_UpdateAccountEffectiveDate_dtEffectiveFrom = ProtoField.uint64("Account_Management_UpdateAccountEffectiveDate_dtEffectiveFrom", "dtEffectiveFrom (uint64)")
F.Account_Management_UpdateAccountEffectiveDate_strNotEffectiveMessage_len = ProtoField.uint16("Account_Management_UpdateAccountEffectiveDate_strNotEffectiveMessage_len", "strNotEffectiveMessage length (String)")
F.Account_Management_UpdateAccountEffectiveDate_strNotEffectiveMessage_data = ProtoField.string("Account_Management_UpdateAccountEffectiveDate_strNotEffectiveMessage_data", "strNotEffectiveMessage data (String)")
F.Account_Management_UpdateStatus_strStatus_len = ProtoField.uint16("Account_Management_UpdateStatus_strStatus_len", "strStatus length (String)")
F.Account_Management_UpdateStatus_strStatus_data = ProtoField.string("Account_Management_UpdateStatus_strStatus_data", "strStatus data (String)")
F.Account_Management_GetStatus_idPrincipal = ProtoField.uint32("Account_Management_GetStatus_idPrincipal", "idPrincipal (uint32)")
F.Account_Management_GetStatus_strStatus_len = ProtoField.uint16("Account_Management_GetStatus_strStatus_len", "strStatus length (String)")
F.Account_Management_GetStatus_strStatus_data = ProtoField.string("Account_Management_GetStatus_strStatus_data", "strStatus data (String)")
F.Account_Management_GetLastConnectionStats_idPrincipal = ProtoField.uint32("Account_Management_GetLastConnectionStats_idPrincipal", "idPrincipal (uint32)")
F.Account_Management_GetLastConnectionStats_dtLastSessionLogin = ProtoField.uint64("Account_Management_GetLastConnectionStats_dtLastSessionLogin", "dtLastSessionLogin (uint64)")
F.Account_Management_GetLastConnectionStats_dtLastSessionLogout = ProtoField.uint64("Account_Management_GetLastConnectionStats_dtLastSessionLogout", "dtLastSessionLogout (uint64)")
F.Account_Management_GetLastConnectionStats_dtCurrentSessionLogin = ProtoField.uint64("Account_Management_GetLastConnectionStats_dtCurrentSessionLogin", "dtCurrentSessionLogin (uint64)")
F.Account_Management_ResetPassword_retval = ProtoField.bool("Account_Management_ResetPassword_retval", "retval (bool)")
F.Account_Management_CreateAccountWithCustomData_strPrincipalName_len = ProtoField.uint16("Account_Management_CreateAccountWithCustomData_strPrincipalName_len", "strPrincipalName length (String)")
F.Account_Management_CreateAccountWithCustomData_strPrincipalName_data = ProtoField.string("Account_Management_CreateAccountWithCustomData_strPrincipalName_data", "strPrincipalName data (String)")
F.Account_Management_CreateAccountWithCustomData_strKey_len = ProtoField.uint16("Account_Management_CreateAccountWithCustomData_strKey_len", "strKey length (String)")
F.Account_Management_CreateAccountWithCustomData_strKey_data = ProtoField.string("Account_Management_CreateAccountWithCustomData_strKey_data", "strKey data (String)")
F.Account_Management_CreateAccountWithCustomData_uiGroups = ProtoField.uint32("Account_Management_CreateAccountWithCustomData_uiGroups", "uiGroups (uint32)")
F.Account_Management_CreateAccountWithCustomData_strEmail_len = ProtoField.uint16("Account_Management_CreateAccountWithCustomData_strEmail_len", "strEmail length (String)")
F.Account_Management_CreateAccountWithCustomData_strEmail_data = ProtoField.string("Account_Management_CreateAccountWithCustomData_strEmail_data", "strEmail data (String)")
F.Account_Management_CreateAccountWithCustomData_oPublicData_data_bytes = ProtoField.bytes("Account_Management_CreateAccountWithCustomData_oPublicData_data_bytes", "oPublicData data bytes (bytes)")
F.Account_Management_CreateAccountWithCustomData_oPublicData_type_name_len = ProtoField.uint16("Account_Management_CreateAccountWithCustomData_oPublicData_type_name_len", "oPublicData_type_name length (String)")
F.Account_Management_CreateAccountWithCustomData_oPublicData_type_name_data = ProtoField.string("Account_Management_CreateAccountWithCustomData_oPublicData_type_name_data", "oPublicData_type_name data (String)")
F.Account_Management_CreateAccountWithCustomData_oPublicData_len_plus_four = ProtoField.uint32("Account_Management_CreateAccountWithCustomData_oPublicData_len_plus_four", "oPublicData_len_plus_four (uint32)")
F.Account_Management_CreateAccountWithCustomData_oPublicData_data_len = ProtoField.uint32("Account_Management_CreateAccountWithCustomData_oPublicData_data_len", "oPublicData_data_len (uint32)")
F.Account_Management_CreateAccountWithCustomData_oPrivateData_data_bytes = ProtoField.bytes("Account_Management_CreateAccountWithCustomData_oPrivateData_data_bytes", "oPrivateData data bytes (bytes)")
F.Account_Management_CreateAccountWithCustomData_oPrivateData_type_name_len = ProtoField.uint16("Account_Management_CreateAccountWithCustomData_oPrivateData_type_name_len", "oPrivateData_type_name length (String)")
F.Account_Management_CreateAccountWithCustomData_oPrivateData_type_name_data = ProtoField.string("Account_Management_CreateAccountWithCustomData_oPrivateData_type_name_data", "oPrivateData_type_name data (String)")
F.Account_Management_CreateAccountWithCustomData_oPrivateData_len_plus_four = ProtoField.uint32("Account_Management_CreateAccountWithCustomData_oPrivateData_len_plus_four", "oPrivateData_len_plus_four (uint32)")
F.Account_Management_CreateAccountWithCustomData_oPrivateData_data_len = ProtoField.uint32("Account_Management_CreateAccountWithCustomData_oPrivateData_data_len", "oPrivateData_data_len (uint32)")
F.Account_Management_RetrieveAccount_oPublicData_data_bytes = ProtoField.bytes("Account_Management_RetrieveAccount_oPublicData_data_bytes", "oPublicData data bytes (bytes)")
F.Account_Management_RetrieveAccount_oPublicData_type_name_len = ProtoField.uint16("Account_Management_RetrieveAccount_oPublicData_type_name_len", "oPublicData_type_name length (String)")
F.Account_Management_RetrieveAccount_oPublicData_type_name_data = ProtoField.string("Account_Management_RetrieveAccount_oPublicData_type_name_data", "oPublicData_type_name data (String)")
F.Account_Management_RetrieveAccount_oPublicData_len_plus_four = ProtoField.uint32("Account_Management_RetrieveAccount_oPublicData_len_plus_four", "oPublicData_len_plus_four (uint32)")
F.Account_Management_RetrieveAccount_oPublicData_data_len = ProtoField.uint32("Account_Management_RetrieveAccount_oPublicData_data_len", "oPublicData_data_len (uint32)")
F.Account_Management_RetrieveAccount_oPrivateData_data_bytes = ProtoField.bytes("Account_Management_RetrieveAccount_oPrivateData_data_bytes", "oPrivateData data bytes (bytes)")
F.Account_Management_RetrieveAccount_oPrivateData_type_name_len = ProtoField.uint16("Account_Management_RetrieveAccount_oPrivateData_type_name_len", "oPrivateData_type_name length (String)")
F.Account_Management_RetrieveAccount_oPrivateData_type_name_data = ProtoField.string("Account_Management_RetrieveAccount_oPrivateData_type_name_data", "oPrivateData_type_name data (String)")
F.Account_Management_RetrieveAccount_oPrivateData_len_plus_four = ProtoField.uint32("Account_Management_RetrieveAccount_oPrivateData_len_plus_four", "oPrivateData_len_plus_four (uint32)")
F.Account_Management_RetrieveAccount_oPrivateData_data_len = ProtoField.uint32("Account_Management_RetrieveAccount_oPrivateData_data_len", "oPrivateData_data_len (uint32)")
F.Account_Management_UpdateAccount_strKey_len = ProtoField.uint16("Account_Management_UpdateAccount_strKey_len", "strKey length (String)")
F.Account_Management_UpdateAccount_strKey_data = ProtoField.string("Account_Management_UpdateAccount_strKey_data", "strKey data (String)")
F.Account_Management_UpdateAccount_strEmail_len = ProtoField.uint16("Account_Management_UpdateAccount_strEmail_len", "strEmail length (String)")
F.Account_Management_UpdateAccount_strEmail_data = ProtoField.string("Account_Management_UpdateAccount_strEmail_data", "strEmail data (String)")
F.Account_Management_UpdateAccount_oPublicData_data_bytes = ProtoField.bytes("Account_Management_UpdateAccount_oPublicData_data_bytes", "oPublicData data bytes (bytes)")
F.Account_Management_UpdateAccount_oPublicData_type_name_len = ProtoField.uint16("Account_Management_UpdateAccount_oPublicData_type_name_len", "oPublicData_type_name length (String)")
F.Account_Management_UpdateAccount_oPublicData_type_name_data = ProtoField.string("Account_Management_UpdateAccount_oPublicData_type_name_data", "oPublicData_type_name data (String)")
F.Account_Management_UpdateAccount_oPublicData_len_plus_four = ProtoField.uint32("Account_Management_UpdateAccount_oPublicData_len_plus_four", "oPublicData_len_plus_four (uint32)")
F.Account_Management_UpdateAccount_oPublicData_data_len = ProtoField.uint32("Account_Management_UpdateAccount_oPublicData_data_len", "oPublicData_data_len (uint32)")
F.Account_Management_UpdateAccount_oPrivateData_data_bytes = ProtoField.bytes("Account_Management_UpdateAccount_oPrivateData_data_bytes", "oPrivateData data bytes (bytes)")
F.Account_Management_UpdateAccount_oPrivateData_type_name_len = ProtoField.uint16("Account_Management_UpdateAccount_oPrivateData_type_name_len", "oPrivateData_type_name length (String)")
F.Account_Management_UpdateAccount_oPrivateData_type_name_data = ProtoField.string("Account_Management_UpdateAccount_oPrivateData_type_name_data", "oPrivateData_type_name data (String)")
F.Account_Management_UpdateAccount_oPrivateData_len_plus_four = ProtoField.uint32("Account_Management_UpdateAccount_oPrivateData_len_plus_four", "oPrivateData_len_plus_four (uint32)")
F.Account_Management_UpdateAccount_oPrivateData_data_len = ProtoField.uint32("Account_Management_UpdateAccount_oPrivateData_data_len", "oPrivateData_data_len (uint32)")
F.Account_Management_ChangePasswordByGuest_strPrincipalName_len = ProtoField.uint16("Account_Management_ChangePasswordByGuest_strPrincipalName_len", "strPrincipalName length (String)")
F.Account_Management_ChangePasswordByGuest_strPrincipalName_data = ProtoField.string("Account_Management_ChangePasswordByGuest_strPrincipalName_data", "strPrincipalName data (String)")
F.Account_Management_ChangePasswordByGuest_strEmail_len = ProtoField.uint16("Account_Management_ChangePasswordByGuest_strEmail_len", "strEmail length (String)")
F.Account_Management_ChangePasswordByGuest_strEmail_data = ProtoField.string("Account_Management_ChangePasswordByGuest_strEmail_data", "strEmail data (String)")
F.Account_Management_ChangePasswordByGuest_strKey_len = ProtoField.uint16("Account_Management_ChangePasswordByGuest_strKey_len", "strKey length (String)")
F.Account_Management_ChangePasswordByGuest_strKey_data = ProtoField.string("Account_Management_ChangePasswordByGuest_strKey_data", "strKey data (String)")
F.Account_Management_FindByNameLike_uiGroups = ProtoField.uint32("Account_Management_FindByNameLike_uiGroups", "uiGroups (uint32)")
F.Account_Management_FindByNameLike_strLike_len = ProtoField.uint16("Account_Management_FindByNameLike_strLike_len", "strLike length (String)")
F.Account_Management_FindByNameLike_strLike_data = ProtoField.string("Account_Management_FindByNameLike_strLike_data", "strLike data (String)")
F.Account_Management_FindByNameLike_plstAccounts_len = ProtoField.uint32("Account_Management_FindByNameLike_plstAccounts_len", "plstAccounts length (uint32)")
F.Account_Management_CustomCreateAccount_strPrincipalName_len = ProtoField.uint16("Account_Management_CustomCreateAccount_strPrincipalName_len", "strPrincipalName length (String)")
F.Account_Management_CustomCreateAccount_strPrincipalName_data = ProtoField.string("Account_Management_CustomCreateAccount_strPrincipalName_data", "strPrincipalName data (String)")
F.Account_Management_CustomCreateAccount_strKey_len = ProtoField.uint16("Account_Management_CustomCreateAccount_strKey_len", "strKey length (String)")
F.Account_Management_CustomCreateAccount_strKey_data = ProtoField.string("Account_Management_CustomCreateAccount_strKey_data", "strKey data (String)")
F.Account_Management_CustomCreateAccount_uiGroups = ProtoField.uint32("Account_Management_CustomCreateAccount_uiGroups", "uiGroups (uint32)")
F.Account_Management_CustomCreateAccount_strEmail_len = ProtoField.uint16("Account_Management_CustomCreateAccount_strEmail_len", "strEmail length (String)")
F.Account_Management_CustomCreateAccount_strEmail_data = ProtoField.string("Account_Management_CustomCreateAccount_strEmail_data", "strEmail data (String)")
F.Account_Management_CustomCreateAccount_oAuthData_data_bytes = ProtoField.bytes("Account_Management_CustomCreateAccount_oAuthData_data_bytes", "oAuthData data bytes (bytes)")
F.Account_Management_CustomCreateAccount_oAuthData_type_name_len = ProtoField.uint16("Account_Management_CustomCreateAccount_oAuthData_type_name_len", "oAuthData_type_name length (String)")
F.Account_Management_CustomCreateAccount_oAuthData_type_name_data = ProtoField.string("Account_Management_CustomCreateAccount_oAuthData_type_name_data", "oAuthData_type_name data (String)")
F.Account_Management_CustomCreateAccount_oAuthData_len_plus_four = ProtoField.uint32("Account_Management_CustomCreateAccount_oAuthData_len_plus_four", "oAuthData_len_plus_four (uint32)")
F.Account_Management_CustomCreateAccount_oAuthData_data_len = ProtoField.uint32("Account_Management_CustomCreateAccount_oAuthData_data_len", "oAuthData_data_len (uint32)")
F.Account_Management_CustomCreateAccount_pid = ProtoField.uint32("Account_Management_CustomCreateAccount_pid", "pid (uint32)")
F.Account_Management_NintendoCreateAccount_strPrincipalName_len = ProtoField.uint16("Account_Management_NintendoCreateAccount_strPrincipalName_len", "strPrincipalName length (String)")
F.Account_Management_NintendoCreateAccount_strPrincipalName_data = ProtoField.string("Account_Management_NintendoCreateAccount_strPrincipalName_data", "strPrincipalName data (String)")
F.Account_Management_NintendoCreateAccount_strKey_len = ProtoField.uint16("Account_Management_NintendoCreateAccount_strKey_len", "strKey length (String)")
F.Account_Management_NintendoCreateAccount_strKey_data = ProtoField.string("Account_Management_NintendoCreateAccount_strKey_data", "strKey data (String)")
F.Account_Management_NintendoCreateAccount_uiGroups = ProtoField.uint32("Account_Management_NintendoCreateAccount_uiGroups", "uiGroups (uint32)")
F.Account_Management_NintendoCreateAccount_strEmail_len = ProtoField.uint16("Account_Management_NintendoCreateAccount_strEmail_len", "strEmail length (String)")
F.Account_Management_NintendoCreateAccount_strEmail_data = ProtoField.string("Account_Management_NintendoCreateAccount_strEmail_data", "strEmail data (String)")
F.Account_Management_NintendoCreateAccount_oAuthData_data_bytes = ProtoField.bytes("Account_Management_NintendoCreateAccount_oAuthData_data_bytes", "oAuthData data bytes (bytes)")
F.Account_Management_NintendoCreateAccount_oAuthData_type_name_len = ProtoField.uint16("Account_Management_NintendoCreateAccount_oAuthData_type_name_len", "oAuthData_type_name length (String)")
F.Account_Management_NintendoCreateAccount_oAuthData_type_name_data = ProtoField.string("Account_Management_NintendoCreateAccount_oAuthData_type_name_data", "oAuthData_type_name data (String)")
F.Account_Management_NintendoCreateAccount_oAuthData_len_plus_four = ProtoField.uint32("Account_Management_NintendoCreateAccount_oAuthData_len_plus_four", "oAuthData_len_plus_four (uint32)")
F.Account_Management_NintendoCreateAccount_oAuthData_data_len = ProtoField.uint32("Account_Management_NintendoCreateAccount_oAuthData_data_len", "oAuthData_data_len (uint32)")
F.Account_Management_NintendoCreateAccount_pid = ProtoField.uint32("Account_Management_NintendoCreateAccount_pid", "pid (uint32)")
F.Account_Management_NintendoCreateAccount_pidHMAC_len = ProtoField.uint16("Account_Management_NintendoCreateAccount_pidHMAC_len", "pidHMAC length (String)")
F.Account_Management_NintendoCreateAccount_pidHMAC_data = ProtoField.string("Account_Management_NintendoCreateAccount_pidHMAC_data", "pidHMAC data (String)")
F.Account_Management_LookupOrCreateAccount_strPrincipalName_len = ProtoField.uint16("Account_Management_LookupOrCreateAccount_strPrincipalName_len", "strPrincipalName length (String)")
F.Account_Management_LookupOrCreateAccount_strPrincipalName_data = ProtoField.string("Account_Management_LookupOrCreateAccount_strPrincipalName_data", "strPrincipalName data (String)")
F.Account_Management_LookupOrCreateAccount_strKey_len = ProtoField.uint16("Account_Management_LookupOrCreateAccount_strKey_len", "strKey length (String)")
F.Account_Management_LookupOrCreateAccount_strKey_data = ProtoField.string("Account_Management_LookupOrCreateAccount_strKey_data", "strKey data (String)")
F.Account_Management_LookupOrCreateAccount_uiGroups = ProtoField.uint32("Account_Management_LookupOrCreateAccount_uiGroups", "uiGroups (uint32)")
F.Account_Management_LookupOrCreateAccount_strEmail_len = ProtoField.uint16("Account_Management_LookupOrCreateAccount_strEmail_len", "strEmail length (String)")
F.Account_Management_LookupOrCreateAccount_strEmail_data = ProtoField.string("Account_Management_LookupOrCreateAccount_strEmail_data", "strEmail data (String)")
F.Account_Management_LookupOrCreateAccount_oAuthData_data_bytes = ProtoField.bytes("Account_Management_LookupOrCreateAccount_oAuthData_data_bytes", "oAuthData data bytes (bytes)")
F.Account_Management_LookupOrCreateAccount_oAuthData_type_name_len = ProtoField.uint16("Account_Management_LookupOrCreateAccount_oAuthData_type_name_len", "oAuthData_type_name length (String)")
F.Account_Management_LookupOrCreateAccount_oAuthData_type_name_data = ProtoField.string("Account_Management_LookupOrCreateAccount_oAuthData_type_name_data", "oAuthData_type_name data (String)")
F.Account_Management_LookupOrCreateAccount_oAuthData_len_plus_four = ProtoField.uint32("Account_Management_LookupOrCreateAccount_oAuthData_len_plus_four", "oAuthData_len_plus_four (uint32)")
F.Account_Management_LookupOrCreateAccount_oAuthData_data_len = ProtoField.uint32("Account_Management_LookupOrCreateAccount_oAuthData_data_len", "oAuthData_data_len (uint32)")
F.Account_Management_LookupOrCreateAccount_pid = ProtoField.uint32("Account_Management_LookupOrCreateAccount_pid", "pid (uint32)")
F.Account_Management_DisconnectPrincipal_idPrincipal = ProtoField.uint32("Account_Management_DisconnectPrincipal_idPrincipal", "idPrincipal (uint32)")
F.Account_Management_DisconnectPrincipal_retval = ProtoField.bool("Account_Management_DisconnectPrincipal_retval", "retval (bool)")
F.Account_Management_DisconnectAllPrincipals_retval = ProtoField.bool("Account_Management_DisconnectAllPrincipals_retval", "retval (bool)")
F.Splatoon_2_CoconutRegisterMeta_url_len = ProtoField.uint16("Splatoon_2_CoconutRegisterMeta_url_len", "url length (String)")
F.Splatoon_2_CoconutRegisterMeta_url_data = ProtoField.string("Splatoon_2_CoconutRegisterMeta_url_data", "url data (String)")
F.Splatoon_2_CoconutRatePost_dataId = ProtoField.uint64("Splatoon_2_CoconutRatePost_dataId", "dataId (uint64)")
F.Splatoon_2_CoconutGetObjectInfos_pInfos_len = ProtoField.uint32("Splatoon_2_CoconutGetObjectInfos_pInfos_len", "pInfos length (uint32)")
F.Splatoon_2_CoconutGetObjectInfos_pResults_len = ProtoField.uint32("Splatoon_2_CoconutGetObjectInfos_pResults_len", "pResults length (uint32)")
F.Splatoon_2_CoconutGetObjectInfos_pResults_item = ProtoField.uint32("Splatoon_2_CoconutGetObjectInfos_pResults_item", "pResults (uint32)")
F.Splatoon_2_CoconutRegisterMetaByParam_snsName_len = ProtoField.uint16("Splatoon_2_CoconutRegisterMetaByParam_snsName_len", "snsName length (String)")
F.Splatoon_2_CoconutRegisterMetaByParam_snsName_data = ProtoField.string("Splatoon_2_CoconutRegisterMetaByParam_snsName_data", "snsName data (String)")
F.Splatoon_2_CoconutRegisterMetaByParam_postId_len = ProtoField.uint16("Splatoon_2_CoconutRegisterMetaByParam_postId_len", "postId length (String)")
F.Splatoon_2_CoconutRegisterMetaByParam_postId_data = ProtoField.string("Splatoon_2_CoconutRegisterMetaByParam_postId_data", "postId data (String)")
F.Player_Stats_WriteStats_playerStatUpdates_len = ProtoField.uint32("Player_Stats_WriteStats_playerStatUpdates_len", "playerStatUpdates length (uint32)")
F.Player_Stats_ReadStatsByPlayers_playerPIDs_len = ProtoField.uint32("Player_Stats_ReadStatsByPlayers_playerPIDs_len", "playerPIDs length (uint32)")
F.Player_Stats_ReadStatsByPlayers_playerPIDs_item = ProtoField.uint32("Player_Stats_ReadStatsByPlayers_playerPIDs_item", "playerPIDs (uint32)")
F.Player_Stats_ReadStatsByPlayers_queries_len = ProtoField.uint32("Player_Stats_ReadStatsByPlayers_queries_len", "queries length (uint32)")
F.Player_Stats_ReadStatsByPlayers_results_len = ProtoField.uint32("Player_Stats_ReadStatsByPlayers_results_len", "results length (uint32)")
F.Player_Stats_ReadLeaderboardsNearPlayer_playerPID = ProtoField.uint32("Player_Stats_ReadLeaderboardsNearPlayer_playerPID", "playerPID (uint32)")
F.Player_Stats_ReadLeaderboardsNearPlayer_count = ProtoField.uint32("Player_Stats_ReadLeaderboardsNearPlayer_count", "count (uint32)")
F.Player_Stats_ReadLeaderboardsNearPlayer_queries_len = ProtoField.uint32("Player_Stats_ReadLeaderboardsNearPlayer_queries_len", "queries length (uint32)")
F.Player_Stats_ReadLeaderboardsNearPlayer_results_len = ProtoField.uint32("Player_Stats_ReadLeaderboardsNearPlayer_results_len", "results length (uint32)")
F.Player_Stats_ReadLeaderboardsByRank_startingRank = ProtoField.uint32("Player_Stats_ReadLeaderboardsByRank_startingRank", "startingRank (uint32)")
F.Player_Stats_ReadLeaderboardsByRank_count = ProtoField.uint32("Player_Stats_ReadLeaderboardsByRank_count", "count (uint32)")
F.Player_Stats_ReadLeaderboardsByRank_queries_len = ProtoField.uint32("Player_Stats_ReadLeaderboardsByRank_queries_len", "queries length (uint32)")
F.Player_Stats_ReadLeaderboardsByRank_results_len = ProtoField.uint32("Player_Stats_ReadLeaderboardsByRank_results_len", "results length (uint32)")
F.Player_Stats_ReadLeaderboardsByPlayers_playerPIDs_len = ProtoField.uint32("Player_Stats_ReadLeaderboardsByPlayers_playerPIDs_len", "playerPIDs length (uint32)")
F.Player_Stats_ReadLeaderboardsByPlayers_playerPIDs_item = ProtoField.uint32("Player_Stats_ReadLeaderboardsByPlayers_playerPIDs_item", "playerPIDs (uint32)")
F.Player_Stats_ReadLeaderboardsByPlayers_queries_len = ProtoField.uint32("Player_Stats_ReadLeaderboardsByPlayers_queries_len", "queries length (uint32)")
F.Player_Stats_ReadLeaderboardsByPlayers_results_len = ProtoField.uint32("Player_Stats_ReadLeaderboardsByPlayers_results_len", "results length (uint32)")
F.Player_Stats_ReadStatboardHistory_queries_len = ProtoField.uint32("Player_Stats_ReadStatboardHistory_queries_len", "queries length (uint32)")
F.Player_Stats_ReadStatboardHistory_results_len = ProtoField.uint32("Player_Stats_ReadStatboardHistory_results_len", "results length (uint32)")
F.Player_Stats_ReadLeaderboardHistory_queries_len = ProtoField.uint32("Player_Stats_ReadLeaderboardHistory_queries_len", "queries length (uint32)")
F.Player_Stats_ReadLeaderboardHistory_results_len = ProtoField.uint32("Player_Stats_ReadLeaderboardHistory_results_len", "results length (uint32)")
F.Player_Stats_ReadStatboardHistoryAggregated_queries_len = ProtoField.uint32("Player_Stats_ReadStatboardHistoryAggregated_queries_len", "queries length (uint32)")
F.Player_Stats_ReadStatboardHistoryAggregated_results_len = ProtoField.uint32("Player_Stats_ReadStatboardHistoryAggregated_results_len", "results length (uint32)")
F.Player_Stats_GetStatboardNextPurgeDate_boardID = ProtoField.uint32("Player_Stats_GetStatboardNextPurgeDate_boardID", "boardID (uint32)")
F.Player_Stats_GetStatboardNextPurgeDate_resetFrequency = ProtoField.uint32("Player_Stats_GetStatboardNextPurgeDate_resetFrequency", "resetFrequency (uint32)")
F.Player_Stats_GetStatboardNextPurgeDate_purgeDate = ProtoField.uint64("Player_Stats_GetStatboardNextPurgeDate_purgeDate", "purgeDate (uint64)")
F.Player_Stats_ReadLeaderboardsNearPlayer2_playerPID = ProtoField.uint32("Player_Stats_ReadLeaderboardsNearPlayer2_playerPID", "playerPID (uint32)")
F.Player_Stats_ReadLeaderboardsNearPlayer2_count = ProtoField.uint32("Player_Stats_ReadLeaderboardsNearPlayer2_count", "count (uint32)")
F.Player_Stats_ReadLeaderboardsNearPlayer2_queries_len = ProtoField.uint32("Player_Stats_ReadLeaderboardsNearPlayer2_queries_len", "queries length (uint32)")
F.Player_Stats_ReadLeaderboardsNearPlayer2_results_len = ProtoField.uint32("Player_Stats_ReadLeaderboardsNearPlayer2_results_len", "results length (uint32)")
F.Player_Stats_ReadLeaderboardsByRank2_startingRank = ProtoField.uint32("Player_Stats_ReadLeaderboardsByRank2_startingRank", "startingRank (uint32)")
F.Player_Stats_ReadLeaderboardsByRank2_count = ProtoField.uint32("Player_Stats_ReadLeaderboardsByRank2_count", "count (uint32)")
F.Player_Stats_ReadLeaderboardsByRank2_queries_len = ProtoField.uint32("Player_Stats_ReadLeaderboardsByRank2_queries_len", "queries length (uint32)")
F.Player_Stats_ReadLeaderboardsByRank2_results_len = ProtoField.uint32("Player_Stats_ReadLeaderboardsByRank2_results_len", "results length (uint32)")
F.Player_Stats_ReadLeaderboardsByPlayers2_queries_len = ProtoField.uint32("Player_Stats_ReadLeaderboardsByPlayers2_queries_len", "queries length (uint32)")
F.Player_Stats_ReadLeaderboardsByPlayers2_results_len = ProtoField.uint32("Player_Stats_ReadLeaderboardsByPlayers2_results_len", "results length (uint32)")
F.Player_Stats_ReadPopulationStats_queries_len = ProtoField.uint32("Player_Stats_ReadPopulationStats_queries_len", "queries length (uint32)")
F.Player_Stats_ReadPopulationStats_results_len = ProtoField.uint32("Player_Stats_ReadPopulationStats_results_len", "results length (uint32)")
F.Uplay_Win_GetActions_startRowIndex = ProtoField.int32("Uplay_Win_GetActions_startRowIndex", "startRowIndex (uint32)")
F.Uplay_Win_GetActions_maximumRows = ProtoField.int32("Uplay_Win_GetActions_maximumRows", "maximumRows (uint32)")
F.Uplay_Win_GetActions_sortExpression_len = ProtoField.uint16("Uplay_Win_GetActions_sortExpression_len", "sortExpression length (String)")
F.Uplay_Win_GetActions_sortExpression_data = ProtoField.string("Uplay_Win_GetActions_sortExpression_data", "sortExpression data (String)")
F.Uplay_Win_GetActions_cultureName_len = ProtoField.uint16("Uplay_Win_GetActions_cultureName_len", "cultureName length (String)")
F.Uplay_Win_GetActions_cultureName_data = ProtoField.string("Uplay_Win_GetActions_cultureName_data", "cultureName data (String)")
F.Uplay_Win_GetActions_platformCode_len = ProtoField.uint16("Uplay_Win_GetActions_platformCode_len", "platformCode length (String)")
F.Uplay_Win_GetActions_platformCode_data = ProtoField.string("Uplay_Win_GetActions_platformCode_data", "platformCode data (String)")
F.Uplay_Win_GetActions_gameCode_len = ProtoField.uint16("Uplay_Win_GetActions_gameCode_len", "gameCode length (String)")
F.Uplay_Win_GetActions_gameCode_data = ProtoField.string("Uplay_Win_GetActions_gameCode_data", "gameCode data (String)")
F.Uplay_Win_GetActions_actionList_len = ProtoField.uint32("Uplay_Win_GetActions_actionList_len", "actionList length (uint32)")
F.Uplay_Win_GetActionsCompleted_startRowIndex = ProtoField.int32("Uplay_Win_GetActionsCompleted_startRowIndex", "startRowIndex (uint32)")
F.Uplay_Win_GetActionsCompleted_maximumRows = ProtoField.int32("Uplay_Win_GetActionsCompleted_maximumRows", "maximumRows (uint32)")
F.Uplay_Win_GetActionsCompleted_sortExpression_len = ProtoField.uint16("Uplay_Win_GetActionsCompleted_sortExpression_len", "sortExpression length (String)")
F.Uplay_Win_GetActionsCompleted_sortExpression_data = ProtoField.string("Uplay_Win_GetActionsCompleted_sortExpression_data", "sortExpression data (String)")
F.Uplay_Win_GetActionsCompleted_cultureName_len = ProtoField.uint16("Uplay_Win_GetActionsCompleted_cultureName_len", "cultureName length (String)")
F.Uplay_Win_GetActionsCompleted_cultureName_data = ProtoField.string("Uplay_Win_GetActionsCompleted_cultureName_data", "cultureName data (String)")
F.Uplay_Win_GetActionsCompleted_platformCode_len = ProtoField.uint16("Uplay_Win_GetActionsCompleted_platformCode_len", "platformCode length (String)")
F.Uplay_Win_GetActionsCompleted_platformCode_data = ProtoField.string("Uplay_Win_GetActionsCompleted_platformCode_data", "platformCode data (String)")
F.Uplay_Win_GetActionsCompleted_gameCode_len = ProtoField.uint16("Uplay_Win_GetActionsCompleted_gameCode_len", "gameCode length (String)")
F.Uplay_Win_GetActionsCompleted_gameCode_data = ProtoField.string("Uplay_Win_GetActionsCompleted_gameCode_data", "gameCode data (String)")
F.Uplay_Win_GetActionsCompleted_actionList_len = ProtoField.uint32("Uplay_Win_GetActionsCompleted_actionList_len", "actionList length (uint32)")
F.Uplay_Win_GetActionsCount_platformCode_len = ProtoField.uint16("Uplay_Win_GetActionsCount_platformCode_len", "platformCode length (String)")
F.Uplay_Win_GetActionsCount_platformCode_data = ProtoField.string("Uplay_Win_GetActionsCount_platformCode_data", "platformCode data (String)")
F.Uplay_Win_GetActionsCount_gameCode_len = ProtoField.uint16("Uplay_Win_GetActionsCount_gameCode_len", "gameCode length (String)")
F.Uplay_Win_GetActionsCount_gameCode_data = ProtoField.string("Uplay_Win_GetActionsCount_gameCode_data", "gameCode data (String)")
F.Uplay_Win_GetActionsCount_actionsCount = ProtoField.int32("Uplay_Win_GetActionsCount_actionsCount", "actionsCount (uint32)")
F.Uplay_Win_GetActionsCompletedCount_platformCode_len = ProtoField.uint16("Uplay_Win_GetActionsCompletedCount_platformCode_len", "platformCode length (String)")
F.Uplay_Win_GetActionsCompletedCount_platformCode_data = ProtoField.string("Uplay_Win_GetActionsCompletedCount_platformCode_data", "platformCode data (String)")
F.Uplay_Win_GetActionsCompletedCount_gameCode_len = ProtoField.uint16("Uplay_Win_GetActionsCompletedCount_gameCode_len", "gameCode length (String)")
F.Uplay_Win_GetActionsCompletedCount_gameCode_data = ProtoField.string("Uplay_Win_GetActionsCompletedCount_gameCode_data", "gameCode data (String)")
F.Uplay_Win_GetActionsCompletedCount_actionsCount = ProtoField.int32("Uplay_Win_GetActionsCompletedCount_actionsCount", "actionsCount (uint32)")
F.Uplay_Win_GetRewards_startRowIndex = ProtoField.int32("Uplay_Win_GetRewards_startRowIndex", "startRowIndex (uint32)")
F.Uplay_Win_GetRewards_maximumRows = ProtoField.int32("Uplay_Win_GetRewards_maximumRows", "maximumRows (uint32)")
F.Uplay_Win_GetRewards_sortExpression_len = ProtoField.uint16("Uplay_Win_GetRewards_sortExpression_len", "sortExpression length (String)")
F.Uplay_Win_GetRewards_sortExpression_data = ProtoField.string("Uplay_Win_GetRewards_sortExpression_data", "sortExpression data (String)")
F.Uplay_Win_GetRewards_cultureName_len = ProtoField.uint16("Uplay_Win_GetRewards_cultureName_len", "cultureName length (String)")
F.Uplay_Win_GetRewards_cultureName_data = ProtoField.string("Uplay_Win_GetRewards_cultureName_data", "cultureName data (String)")
F.Uplay_Win_GetRewards_platformCode_len = ProtoField.uint16("Uplay_Win_GetRewards_platformCode_len", "platformCode length (String)")
F.Uplay_Win_GetRewards_platformCode_data = ProtoField.string("Uplay_Win_GetRewards_platformCode_data", "platformCode data (String)")
F.Uplay_Win_GetRewards_gameCode_len = ProtoField.uint16("Uplay_Win_GetRewards_gameCode_len", "gameCode length (String)")
F.Uplay_Win_GetRewards_gameCode_data = ProtoField.string("Uplay_Win_GetRewards_gameCode_data", "gameCode data (String)")
F.Uplay_Win_GetRewards_rewardList_len = ProtoField.uint32("Uplay_Win_GetRewards_rewardList_len", "rewardList length (uint32)")
F.Uplay_Win_GetRewardsPurchased_startRowIndex = ProtoField.int32("Uplay_Win_GetRewardsPurchased_startRowIndex", "startRowIndex (uint32)")
F.Uplay_Win_GetRewardsPurchased_maximumRows = ProtoField.int32("Uplay_Win_GetRewardsPurchased_maximumRows", "maximumRows (uint32)")
F.Uplay_Win_GetRewardsPurchased_sortExpression_len = ProtoField.uint16("Uplay_Win_GetRewardsPurchased_sortExpression_len", "sortExpression length (String)")
F.Uplay_Win_GetRewardsPurchased_sortExpression_data = ProtoField.string("Uplay_Win_GetRewardsPurchased_sortExpression_data", "sortExpression data (String)")
F.Uplay_Win_GetRewardsPurchased_cultureName_len = ProtoField.uint16("Uplay_Win_GetRewardsPurchased_cultureName_len", "cultureName length (String)")
F.Uplay_Win_GetRewardsPurchased_cultureName_data = ProtoField.string("Uplay_Win_GetRewardsPurchased_cultureName_data", "cultureName data (String)")
F.Uplay_Win_GetRewardsPurchased_platformCode_len = ProtoField.uint16("Uplay_Win_GetRewardsPurchased_platformCode_len", "platformCode length (String)")
F.Uplay_Win_GetRewardsPurchased_platformCode_data = ProtoField.string("Uplay_Win_GetRewardsPurchased_platformCode_data", "platformCode data (String)")
F.Uplay_Win_GetRewardsPurchased_gameCode_len = ProtoField.uint16("Uplay_Win_GetRewardsPurchased_gameCode_len", "gameCode length (String)")
F.Uplay_Win_GetRewardsPurchased_gameCode_data = ProtoField.string("Uplay_Win_GetRewardsPurchased_gameCode_data", "gameCode data (String)")
F.Uplay_Win_GetRewardsPurchased_rewardList_len = ProtoField.uint32("Uplay_Win_GetRewardsPurchased_rewardList_len", "rewardList length (uint32)")
F.Uplay_Win_UplayWelcome_cultureName_len = ProtoField.uint16("Uplay_Win_UplayWelcome_cultureName_len", "cultureName length (String)")
F.Uplay_Win_UplayWelcome_cultureName_data = ProtoField.string("Uplay_Win_UplayWelcome_cultureName_data", "cultureName data (String)")
F.Uplay_Win_UplayWelcome_platformCode_len = ProtoField.uint16("Uplay_Win_UplayWelcome_platformCode_len", "platformCode length (String)")
F.Uplay_Win_UplayWelcome_platformCode_data = ProtoField.string("Uplay_Win_UplayWelcome_platformCode_data", "platformCode data (String)")
F.Uplay_Win_UplayWelcome_gameCode_len = ProtoField.uint16("Uplay_Win_UplayWelcome_gameCode_len", "gameCode length (String)")
F.Uplay_Win_UplayWelcome_gameCode_data = ProtoField.string("Uplay_Win_UplayWelcome_gameCode_data", "gameCode data (String)")
F.Uplay_Win_UplayWelcome_actionList_len = ProtoField.uint32("Uplay_Win_UplayWelcome_actionList_len", "actionList length (uint32)")
F.Uplay_Win_SetActionCompleted_actionCode_len = ProtoField.uint16("Uplay_Win_SetActionCompleted_actionCode_len", "actionCode length (String)")
F.Uplay_Win_SetActionCompleted_actionCode_data = ProtoField.string("Uplay_Win_SetActionCompleted_actionCode_data", "actionCode data (String)")
F.Uplay_Win_SetActionCompleted_cultureName_len = ProtoField.uint16("Uplay_Win_SetActionCompleted_cultureName_len", "cultureName length (String)")
F.Uplay_Win_SetActionCompleted_cultureName_data = ProtoField.string("Uplay_Win_SetActionCompleted_cultureName_data", "cultureName data (String)")
F.Uplay_Win_SetActionCompleted_platformCode_len = ProtoField.uint16("Uplay_Win_SetActionCompleted_platformCode_len", "platformCode length (String)")
F.Uplay_Win_SetActionCompleted_platformCode_data = ProtoField.string("Uplay_Win_SetActionCompleted_platformCode_data", "platformCode data (String)")
F.Uplay_Win_SetActionCompleted_gameCode_len = ProtoField.uint16("Uplay_Win_SetActionCompleted_gameCode_len", "gameCode length (String)")
F.Uplay_Win_SetActionCompleted_gameCode_data = ProtoField.string("Uplay_Win_SetActionCompleted_gameCode_data", "gameCode data (String)")
F.Uplay_Win_SetActionsCompleted_actionCodeList_len = ProtoField.uint32("Uplay_Win_SetActionsCompleted_actionCodeList_len", "actionCodeList length (uint32)")
F.Uplay_Win_SetActionsCompleted_actionCodeList_item_len = ProtoField.uint16("Uplay_Win_SetActionsCompleted_actionCodeList_item_len", "actionCodeList length (String)")
F.Uplay_Win_SetActionsCompleted_actionCodeList_item_data = ProtoField.string("Uplay_Win_SetActionsCompleted_actionCodeList_item_data", "actionCodeList data (String)")
F.Uplay_Win_SetActionsCompleted_cultureName_len = ProtoField.uint16("Uplay_Win_SetActionsCompleted_cultureName_len", "cultureName length (String)")
F.Uplay_Win_SetActionsCompleted_cultureName_data = ProtoField.string("Uplay_Win_SetActionsCompleted_cultureName_data", "cultureName data (String)")
F.Uplay_Win_SetActionsCompleted_platformCode_len = ProtoField.uint16("Uplay_Win_SetActionsCompleted_platformCode_len", "platformCode length (String)")
F.Uplay_Win_SetActionsCompleted_platformCode_data = ProtoField.string("Uplay_Win_SetActionsCompleted_platformCode_data", "platformCode data (String)")
F.Uplay_Win_SetActionsCompleted_gameCode_len = ProtoField.uint16("Uplay_Win_SetActionsCompleted_gameCode_len", "gameCode length (String)")
F.Uplay_Win_SetActionsCompleted_gameCode_data = ProtoField.string("Uplay_Win_SetActionsCompleted_gameCode_data", "gameCode data (String)")
F.Uplay_Win_SetActionsCompleted_actionList_len = ProtoField.uint32("Uplay_Win_SetActionsCompleted_actionList_len", "actionList length (uint32)")
F.Uplay_Win_GetUserToken_token_len = ProtoField.uint16("Uplay_Win_GetUserToken_token_len", "token length (String)")
F.Uplay_Win_GetUserToken_token_data = ProtoField.string("Uplay_Win_GetUserToken_token_data", "token data (String)")
F.Uplay_Win_GetVirtualCurrencyUserBalance_platformCode_len = ProtoField.uint16("Uplay_Win_GetVirtualCurrencyUserBalance_platformCode_len", "platformCode length (String)")
F.Uplay_Win_GetVirtualCurrencyUserBalance_platformCode_data = ProtoField.string("Uplay_Win_GetVirtualCurrencyUserBalance_platformCode_data", "platformCode data (String)")
F.Uplay_Win_GetVirtualCurrencyUserBalance_virtualCurrencyUserBalance = ProtoField.int32("Uplay_Win_GetVirtualCurrencyUserBalance_virtualCurrencyUserBalance", "virtualCurrencyUserBalance (uint32)")
F.Uplay_Win_GetSectionsByKey_cultureName_len = ProtoField.uint16("Uplay_Win_GetSectionsByKey_cultureName_len", "cultureName length (String)")
F.Uplay_Win_GetSectionsByKey_cultureName_data = ProtoField.string("Uplay_Win_GetSectionsByKey_cultureName_data", "cultureName data (String)")
F.Uplay_Win_GetSectionsByKey_sectionKey_len = ProtoField.uint16("Uplay_Win_GetSectionsByKey_sectionKey_len", "sectionKey length (String)")
F.Uplay_Win_GetSectionsByKey_sectionKey_data = ProtoField.string("Uplay_Win_GetSectionsByKey_sectionKey_data", "sectionKey data (String)")
F.Uplay_Win_GetSectionsByKey_platformCode_len = ProtoField.uint16("Uplay_Win_GetSectionsByKey_platformCode_len", "platformCode length (String)")
F.Uplay_Win_GetSectionsByKey_platformCode_data = ProtoField.string("Uplay_Win_GetSectionsByKey_platformCode_data", "platformCode data (String)")
F.Uplay_Win_GetSectionsByKey_gameCode_len = ProtoField.uint16("Uplay_Win_GetSectionsByKey_gameCode_len", "gameCode length (String)")
F.Uplay_Win_GetSectionsByKey_gameCode_data = ProtoField.string("Uplay_Win_GetSectionsByKey_gameCode_data", "gameCode data (String)")
F.Uplay_Win_GetSectionsByKey_sectionList_len = ProtoField.uint32("Uplay_Win_GetSectionsByKey_sectionList_len", "sectionList length (uint32)")
F.Data_Store_DeleteObjects_params_len = ProtoField.uint32("Data_Store_DeleteObjects_params_len", "params length (uint32)")
F.Data_Store_DeleteObjects_transactional = ProtoField.bool("Data_Store_DeleteObjects_transactional", "transactional (bool)")
F.Data_Store_DeleteObjects_pResults_len = ProtoField.uint32("Data_Store_DeleteObjects_pResults_len", "pResults length (uint32)")
F.Data_Store_DeleteObjects_pResults_item = ProtoField.uint32("Data_Store_DeleteObjects_pResults_item", "pResults (uint32)")
F.Data_Store_ChangeMetasV1_dataIds_len = ProtoField.uint32("Data_Store_ChangeMetasV1_dataIds_len", "dataIds length (uint32)")
F.Data_Store_ChangeMetasV1_dataIds_item = ProtoField.uint64("Data_Store_ChangeMetasV1_dataIds_item", "dataIds (uint64)")
F.Data_Store_ChangeMetasV1_params_len = ProtoField.uint32("Data_Store_ChangeMetasV1_params_len", "params length (uint32)")
F.Data_Store_ChangeMetasV1_transactional = ProtoField.bool("Data_Store_ChangeMetasV1_transactional", "transactional (bool)")
F.Data_Store_ChangeMetasV1_pResults_len = ProtoField.uint32("Data_Store_ChangeMetasV1_pResults_len", "pResults length (uint32)")
F.Data_Store_ChangeMetasV1_pResults_item = ProtoField.uint32("Data_Store_ChangeMetasV1_pResults_item", "pResults (uint32)")
F.Data_Store_GetMetas_dataIds_len = ProtoField.uint32("Data_Store_GetMetas_dataIds_len", "dataIds length (uint32)")
F.Data_Store_GetMetas_dataIds_item = ProtoField.uint64("Data_Store_GetMetas_dataIds_item", "dataIds (uint64)")
F.Data_Store_GetMetas_pMetaInfo_len = ProtoField.uint32("Data_Store_GetMetas_pMetaInfo_len", "pMetaInfo length (uint32)")
F.Data_Store_GetMetas_pResults_len = ProtoField.uint32("Data_Store_GetMetas_pResults_len", "pResults length (uint32)")
F.Data_Store_GetMetas_pResults_item = ProtoField.uint32("Data_Store_GetMetas_pResults_item", "pResults (uint32)")
F.Data_Store_GetNewArrivedNotificationsV1_pResult_len = ProtoField.uint32("Data_Store_GetNewArrivedNotificationsV1_pResult_len", "pResult length (uint32)")
F.Data_Store_GetNewArrivedNotificationsV1_pHasNext = ProtoField.bool("Data_Store_GetNewArrivedNotificationsV1_pHasNext", "pHasNext (bool)")
F.Data_Store_RateObject_fetchRatings = ProtoField.bool("Data_Store_RateObject_fetchRatings", "fetchRatings (bool)")
F.Data_Store_GetRating_accessPassword = ProtoField.uint64("Data_Store_GetRating_accessPassword", "accessPassword (uint64)")
F.Data_Store_GetRatings_dataIds_len = ProtoField.uint32("Data_Store_GetRatings_dataIds_len", "dataIds length (uint32)")
F.Data_Store_GetRatings_dataIds_item = ProtoField.uint64("Data_Store_GetRatings_dataIds_item", "dataIds (uint64)")
F.Data_Store_GetRatings_accessPassword = ProtoField.uint64("Data_Store_GetRatings_accessPassword", "accessPassword (uint64)")
F.Data_Store_GetRatings_pRatings_len = ProtoField.uint32("Data_Store_GetRatings_pRatings_len", "pRatings length (uint32)")
F.Data_Store_GetRatings_pRatings_item_len = ProtoField.uint32("Data_Store_GetRatings_pRatings_item_len", "pRatings length (uint32)")
F.Data_Store_GetRatings_pResults_len = ProtoField.uint32("Data_Store_GetRatings_pResults_len", "pResults length (uint32)")
F.Data_Store_GetRatings_pResults_item = ProtoField.uint32("Data_Store_GetRatings_pResults_item", "pResults (uint32)")
F.Data_Store_ResetRating_updatePassword = ProtoField.uint64("Data_Store_ResetRating_updatePassword", "updatePassword (uint64)")
F.Data_Store_ResetRatings_dataIds_len = ProtoField.uint32("Data_Store_ResetRatings_dataIds_len", "dataIds length (uint32)")
F.Data_Store_ResetRatings_dataIds_item = ProtoField.uint64("Data_Store_ResetRatings_dataIds_item", "dataIds (uint64)")
F.Data_Store_ResetRatings_transactional = ProtoField.bool("Data_Store_ResetRatings_transactional", "transactional (bool)")
F.Data_Store_ResetRatings_pResults_len = ProtoField.uint32("Data_Store_ResetRatings_pResults_len", "pResults length (uint32)")
F.Data_Store_ResetRatings_pResults_item = ProtoField.uint32("Data_Store_ResetRatings_pResults_item", "pResults (uint32)")
F.Data_Store_GetSpecificMetaV1_pMetaInfos_len = ProtoField.uint32("Data_Store_GetSpecificMetaV1_pMetaInfos_len", "pMetaInfos length (uint32)")
F.Data_Store_PostMetaBinary_dataId = ProtoField.uint64("Data_Store_PostMetaBinary_dataId", "dataId (uint64)")
F.Data_Store_GetRatingWithLog_accessPassword = ProtoField.uint64("Data_Store_GetRatingWithLog_accessPassword", "accessPassword (uint64)")
F.Data_Store_GetNewArrivedNotifications_pResult_len = ProtoField.uint32("Data_Store_GetNewArrivedNotifications_pResult_len", "pResult length (uint32)")
F.Data_Store_GetNewArrivedNotifications_pHasNext = ProtoField.bool("Data_Store_GetNewArrivedNotifications_pHasNext", "pHasNext (bool)")
F.Data_Store_GetSpecificMeta_pMetaInfos_len = ProtoField.uint32("Data_Store_GetSpecificMeta_pMetaInfos_len", "pMetaInfos length (uint32)")
F.Data_Store_GetPersistenceInfo_ownerId = ProtoField.uint32("Data_Store_GetPersistenceInfo_ownerId", "ownerId (uint32)")
F.Data_Store_GetPersistenceInfo_persistenceSlotId = ProtoField.uint16("Data_Store_GetPersistenceInfo_persistenceSlotId", "persistenceSlotId (uint16)")
F.Data_Store_GetPersistenceInfos_ownerId = ProtoField.uint32("Data_Store_GetPersistenceInfos_ownerId", "ownerId (uint32)")
F.Data_Store_GetPersistenceInfos_persistenceSlotIds_len = ProtoField.uint32("Data_Store_GetPersistenceInfos_persistenceSlotIds_len", "persistenceSlotIds length (uint32)")
F.Data_Store_GetPersistenceInfos_persistenceSlotIds_item = ProtoField.uint16("Data_Store_GetPersistenceInfos_persistenceSlotIds_item", "persistenceSlotIds (uint16)")
F.Data_Store_GetPersistenceInfos_pPersistenceInfo_len = ProtoField.uint32("Data_Store_GetPersistenceInfos_pPersistenceInfo_len", "pPersistenceInfo length (uint32)")
F.Data_Store_GetPersistenceInfos_pResults_len = ProtoField.uint32("Data_Store_GetPersistenceInfos_pResults_len", "pResults length (uint32)")
F.Data_Store_GetPersistenceInfos_pResults_item = ProtoField.uint32("Data_Store_GetPersistenceInfos_pResults_item", "pResults (uint32)")
F.Data_Store_PerpetuateObject_persistenceSlotId = ProtoField.uint16("Data_Store_PerpetuateObject_persistenceSlotId", "persistenceSlotId (uint16)")
F.Data_Store_PerpetuateObject_dataId = ProtoField.uint64("Data_Store_PerpetuateObject_dataId", "dataId (uint64)")
F.Data_Store_PerpetuateObject_deleteLastObject = ProtoField.bool("Data_Store_PerpetuateObject_deleteLastObject", "deleteLastObject (bool)")
F.Data_Store_UnperpetuateObject_persistenceSlotId = ProtoField.uint16("Data_Store_UnperpetuateObject_persistenceSlotId", "persistenceSlotId (uint16)")
F.Data_Store_UnperpetuateObject_deleteLastObject = ProtoField.bool("Data_Store_UnperpetuateObject_deleteLastObject", "deleteLastObject (bool)")
F.Data_Store_GetPasswordInfo_dataId = ProtoField.uint64("Data_Store_GetPasswordInfo_dataId", "dataId (uint64)")
F.Data_Store_GetPasswordInfos_dataIds_len = ProtoField.uint32("Data_Store_GetPasswordInfos_dataIds_len", "dataIds length (uint32)")
F.Data_Store_GetPasswordInfos_dataIds_item = ProtoField.uint64("Data_Store_GetPasswordInfos_dataIds_item", "dataIds (uint64)")
F.Data_Store_GetPasswordInfos_pPasswordInfos_len = ProtoField.uint32("Data_Store_GetPasswordInfos_pPasswordInfos_len", "pPasswordInfos length (uint32)")
F.Data_Store_GetPasswordInfos_pResults_len = ProtoField.uint32("Data_Store_GetPasswordInfos_pResults_len", "pResults length (uint32)")
F.Data_Store_GetPasswordInfos_pResults_item = ProtoField.uint32("Data_Store_GetPasswordInfos_pResults_item", "pResults (uint32)")
F.Data_Store_GetMetasMultipleParam_params_len = ProtoField.uint32("Data_Store_GetMetasMultipleParam_params_len", "params length (uint32)")
F.Data_Store_GetMetasMultipleParam_pMetaInfo_len = ProtoField.uint32("Data_Store_GetMetasMultipleParam_pMetaInfo_len", "pMetaInfo length (uint32)")
F.Data_Store_GetMetasMultipleParam_pResults_len = ProtoField.uint32("Data_Store_GetMetasMultipleParam_pResults_len", "pResults length (uint32)")
F.Data_Store_GetMetasMultipleParam_pResults_item = ProtoField.uint32("Data_Store_GetMetasMultipleParam_pResults_item", "pResults (uint32)")
F.Data_Store_CompletePostObjects_dataIds_len = ProtoField.uint32("Data_Store_CompletePostObjects_dataIds_len", "dataIds length (uint32)")
F.Data_Store_CompletePostObjects_dataIds_item = ProtoField.uint64("Data_Store_CompletePostObjects_dataIds_item", "dataIds (uint64)")
F.Data_Store_ChangeMetas_dataIds_len = ProtoField.uint32("Data_Store_ChangeMetas_dataIds_len", "dataIds length (uint32)")
F.Data_Store_ChangeMetas_dataIds_item = ProtoField.uint64("Data_Store_ChangeMetas_dataIds_item", "dataIds (uint64)")
F.Data_Store_ChangeMetas_params_len = ProtoField.uint32("Data_Store_ChangeMetas_params_len", "params length (uint32)")
F.Data_Store_ChangeMetas_transactional = ProtoField.bool("Data_Store_ChangeMetas_transactional", "transactional (bool)")
F.Data_Store_ChangeMetas_pResults_len = ProtoField.uint32("Data_Store_ChangeMetas_pResults_len", "pResults length (uint32)")
F.Data_Store_ChangeMetas_pResults_item = ProtoField.uint32("Data_Store_ChangeMetas_pResults_item", "pResults (uint32)")
F.Data_Store_RateObjects_targets_len = ProtoField.uint32("Data_Store_RateObjects_targets_len", "targets length (uint32)")
F.Data_Store_RateObjects_params_len = ProtoField.uint32("Data_Store_RateObjects_params_len", "params length (uint32)")
F.Data_Store_RateObjects_transactional = ProtoField.bool("Data_Store_RateObjects_transactional", "transactional (bool)")
F.Data_Store_RateObjects_fetchRatings = ProtoField.bool("Data_Store_RateObjects_fetchRatings", "fetchRatings (bool)")
F.Data_Store_RateObjects_pRatings_len = ProtoField.uint32("Data_Store_RateObjects_pRatings_len", "pRatings length (uint32)")
F.Data_Store_RateObjects_pResults_len = ProtoField.uint32("Data_Store_RateObjects_pResults_len", "pResults length (uint32)")
F.Data_Store_RateObjects_pResults_item = ProtoField.uint32("Data_Store_RateObjects_pResults_item", "pResults (uint32)")
F.Data_Store_PostMetaBinaryWithDataId_dataId = ProtoField.uint64("Data_Store_PostMetaBinaryWithDataId_dataId", "dataId (uint64)")
F.Data_Store_PostMetaBinariesWithDataId_dataIds_len = ProtoField.uint32("Data_Store_PostMetaBinariesWithDataId_dataIds_len", "dataIds length (uint32)")
F.Data_Store_PostMetaBinariesWithDataId_dataIds_item = ProtoField.uint64("Data_Store_PostMetaBinariesWithDataId_dataIds_item", "dataIds (uint64)")
F.Data_Store_PostMetaBinariesWithDataId_params_len = ProtoField.uint32("Data_Store_PostMetaBinariesWithDataId_params_len", "params length (uint32)")
F.Data_Store_PostMetaBinariesWithDataId_transactional = ProtoField.bool("Data_Store_PostMetaBinariesWithDataId_transactional", "transactional (bool)")
F.Data_Store_PostMetaBinariesWithDataId_pResults_len = ProtoField.uint32("Data_Store_PostMetaBinariesWithDataId_pResults_len", "pResults length (uint32)")
F.Data_Store_PostMetaBinariesWithDataId_pResults_item = ProtoField.uint32("Data_Store_PostMetaBinariesWithDataId_pResults_item", "pResults (uint32)")
F.Data_Store_RateObjectWithPosting_fetchRatings = ProtoField.bool("Data_Store_RateObjectWithPosting_fetchRatings", "fetchRatings (bool)")
F.Data_Store_RateObjectsWithPosting_targets_len = ProtoField.uint32("Data_Store_RateObjectsWithPosting_targets_len", "targets length (uint32)")
F.Data_Store_RateObjectsWithPosting_rateParams_len = ProtoField.uint32("Data_Store_RateObjectsWithPosting_rateParams_len", "rateParams length (uint32)")
F.Data_Store_RateObjectsWithPosting_postParams_len = ProtoField.uint32("Data_Store_RateObjectsWithPosting_postParams_len", "postParams length (uint32)")
F.Data_Store_RateObjectsWithPosting_transactional = ProtoField.bool("Data_Store_RateObjectsWithPosting_transactional", "transactional (bool)")
F.Data_Store_RateObjectsWithPosting_fetchRatings = ProtoField.bool("Data_Store_RateObjectsWithPosting_fetchRatings", "fetchRatings (bool)")
F.Data_Store_RateObjectsWithPosting_pRatings_len = ProtoField.uint32("Data_Store_RateObjectsWithPosting_pRatings_len", "pRatings length (uint32)")
F.Data_Store_RateObjectsWithPosting_pResults_len = ProtoField.uint32("Data_Store_RateObjectsWithPosting_pResults_len", "pResults length (uint32)")
F.Data_Store_RateObjectsWithPosting_pResults_item = ProtoField.uint32("Data_Store_RateObjectsWithPosting_pResults_item", "pResults (uint32)")
F.Data_Store_GetObjectInfos_dataIds_len = ProtoField.uint32("Data_Store_GetObjectInfos_dataIds_len", "dataIds length (uint32)")
F.Data_Store_GetObjectInfos_dataIds_item = ProtoField.uint64("Data_Store_GetObjectInfos_dataIds_item", "dataIds (uint64)")
F.Data_Store_GetObjectInfos_pInfos_len = ProtoField.uint32("Data_Store_GetObjectInfos_pInfos_len", "pInfos length (uint32)")
F.Data_Store_GetObjectInfos_pResults_len = ProtoField.uint32("Data_Store_GetObjectInfos_pResults_len", "pResults length (uint32)")
F.Data_Store_GetObjectInfos_pResults_item = ProtoField.uint32("Data_Store_GetObjectInfos_pResults_item", "pResults (uint32)")
F.Utility_AcquireNexUniqueId_pNexUniqueId = ProtoField.uint64("Utility_AcquireNexUniqueId_pNexUniqueId", "pNexUniqueId (uint64)")
F.Utility_AssociateNexUniqueIdsWithMyPrincipalId_uniqueIdInfo_len = ProtoField.uint32("Utility_AssociateNexUniqueIdsWithMyPrincipalId_uniqueIdInfo_len", "uniqueIdInfo length (uint32)")
F.Utility_GetAssociatedNexUniqueIdsWithMyPrincipalId_pUniqueIdInfo_len = ProtoField.uint32("Utility_GetAssociatedNexUniqueIdsWithMyPrincipalId_pUniqueIdInfo_len", "pUniqueIdInfo length (uint32)")
F.Utility_GetIntegerSettings_integerSettingIndex = ProtoField.uint32("Utility_GetIntegerSettings_integerSettingIndex", "integerSettingIndex (uint32)")
F.Utility_GetIntegerSettings_integerSettings_len = ProtoField.uint32("Utility_GetIntegerSettings_integerSettings_len", "integerSettings length (uint32)")
F.Utility_GetIntegerSettings_integerSettings_key = ProtoField.uint16("Utility_GetIntegerSettings_integerSettings_key", "integerSettings (uint16)")
F.Utility_GetIntegerSettings_integerSettings_value = ProtoField.int32("Utility_GetIntegerSettings_integerSettings_value", "integerSettings (uint32)")
F.Utility_GetStringSettings_stringSettingIndex = ProtoField.uint32("Utility_GetStringSettings_stringSettingIndex", "stringSettingIndex (uint32)")
F.Utility_GetStringSettings_stringSettings_len = ProtoField.uint32("Utility_GetStringSettings_stringSettings_len", "stringSettings length (uint32)")
F.Utility_GetStringSettings_stringSettings_key = ProtoField.uint16("Utility_GetStringSettings_stringSettings_key", "stringSettings (uint16)")
F.Utility_GetStringSettings_stringSettings_value_len = ProtoField.uint16("Utility_GetStringSettings_stringSettings_value_len", "stringSettings length (String)")
F.Utility_GetStringSettings_stringSettings_value_data = ProtoField.string("Utility_GetStringSettings_stringSettings_value_data", "stringSettings data (String)")
F.User_Storage_SearchContents_searchResults_len = ProtoField.uint32("User_Storage_SearchContents_searchResults_len", "searchResults length (uint32)")
F.User_Storage_SearchContentsWithTotal_searchResults_len = ProtoField.uint32("User_Storage_SearchContentsWithTotal_searchResults_len", "searchResults length (uint32)")
F.User_Storage_SearchContentsWithTotal_totalResults = ProtoField.uint32("User_Storage_SearchContentsWithTotal_totalResults", "totalResults (uint32)")
F.User_Storage_SaveMetaData_properties_len = ProtoField.uint32("User_Storage_SaveMetaData_properties_len", "properties length (uint32)")
F.User_Storage_SaveContentDB_properties_len = ProtoField.uint32("User_Storage_SaveContentDB_properties_len", "properties length (uint32)")
F.User_Storage_SaveContentDB_data_len = ProtoField.uint32("User_Storage_SaveContentDB_data_len", "data length (Buffer)")
F.User_Storage_SaveContentDB_data_data = ProtoField.bytes("User_Storage_SaveContentDB_data_data", "data data (Buffer)")
F.User_Storage_SaveContentAndGetUploadInfo_properties_len = ProtoField.uint32("User_Storage_SaveContentAndGetUploadInfo_properties_len", "properties length (uint32)")
F.User_Storage_SaveContentAndGetUploadInfo_size = ProtoField.uint32("User_Storage_SaveContentAndGetUploadInfo_size", "size (uint32)")
F.User_Storage_SaveContentAndGetUploadInfo_pendingID = ProtoField.uint64("User_Storage_SaveContentAndGetUploadInfo_pendingID", "pendingID (uint64)")
F.User_Storage_SaveContentAndGetUploadInfo_headers_len = ProtoField.uint32("User_Storage_SaveContentAndGetUploadInfo_headers_len", "headers length (uint32)")
F.User_Storage_SaveContentAndGetUploadInfo_headers_item_len = ProtoField.uint16("User_Storage_SaveContentAndGetUploadInfo_headers_item_len", "headers length (String)")
F.User_Storage_SaveContentAndGetUploadInfo_headers_item_data = ProtoField.string("User_Storage_SaveContentAndGetUploadInfo_headers_item_data", "headers data (String)")
F.User_Storage_UploadEnd_pendingID = ProtoField.uint64("User_Storage_UploadEnd_pendingID", "pendingID (uint64)")
F.User_Storage_UploadEnd_result = ProtoField.bool("User_Storage_UploadEnd_result", "result (bool)")
F.User_Storage_GetContentDB_data_len = ProtoField.uint32("User_Storage_GetContentDB_data_len", "data length (Buffer)")
F.User_Storage_GetContentDB_data_data = ProtoField.bytes("User_Storage_GetContentDB_data_data", "data data (Buffer)")
F.User_Storage_GetSlotCount_typeID = ProtoField.uint32("User_Storage_GetSlotCount_typeID", "typeID (uint32)")
F.User_Storage_IsLiked_liked = ProtoField.bool("User_Storage_IsLiked_liked", "liked (bool)")
F.User_Storage_GetFavourites_contentTypes_len = ProtoField.uint32("User_Storage_GetFavourites_contentTypes_len", "contentTypes length (uint32)")
F.User_Storage_GetFavourites_contentTypes_item = ProtoField.uint32("User_Storage_GetFavourites_contentTypes_item", "contentTypes (uint32)")
F.User_Storage_GetFavourites_favourites_len = ProtoField.uint32("User_Storage_GetFavourites_favourites_len", "favourites length (uint32)")
F.User_Storage_ReportInappropriate_reason_len = ProtoField.uint16("User_Storage_ReportInappropriate_reason_len", "reason length (String)")
F.User_Storage_ReportInappropriate_reason_data = ProtoField.string("User_Storage_ReportInappropriate_reason_data", "reason data (String)")
F.User_Storage_UpdateCustomStat_statID = ProtoField.uint16("User_Storage_UpdateCustomStat_statID", "statID (uint16)")
F.User_Storage_UpdateCustomStat_incValue = ProtoField.int64("User_Storage_UpdateCustomStat_incValue", "incValue (uint64)")
F.User_Storage_GetOwnContents_typeID = ProtoField.uint32("User_Storage_GetOwnContents_typeID", "typeID (uint32)")
F.User_Storage_GetOwnContents_results_len = ProtoField.uint32("User_Storage_GetOwnContents_results_len", "results length (uint32)")
F.User_Storage_GetMostPopularTags_tags_len = ProtoField.uint32("User_Storage_GetMostPopularTags_tags_len", "tags length (uint32)")
F.User_Storage_GetMostPopularTags_totalNumberOfTaggings = ProtoField.uint32("User_Storage_GetMostPopularTags_totalNumberOfTaggings", "totalNumberOfTaggings (uint32)")
F.User_Storage_GetTags_tagIds_len = ProtoField.uint32("User_Storage_GetTags_tagIds_len", "tagIds length (uint32)")
F.User_Storage_GetTags_tagIds_item = ProtoField.uint32("User_Storage_GetTags_tagIds_item", "tagIds (uint32)")
F.User_Storage_TagContent_newTagIds_len = ProtoField.uint32("User_Storage_TagContent_newTagIds_len", "newTagIds length (uint32)")
F.User_Storage_TagContent_newTagIds_item = ProtoField.uint32("User_Storage_TagContent_newTagIds_item", "newTagIds (uint32)")
F.User_Storage_SearchContentsByPlayers_pids_len = ProtoField.uint32("User_Storage_SearchContentsByPlayers_pids_len", "pids length (uint32)")
F.User_Storage_SearchContentsByPlayers_pids_item = ProtoField.uint32("User_Storage_SearchContentsByPlayers_pids_item", "pids (uint32)")
F.User_Storage_SearchContentsByPlayers_searchResults_len = ProtoField.uint32("User_Storage_SearchContentsByPlayers_searchResults_len", "searchResults length (uint32)")
F.User_Storage_SearchContentsByPlayersWithTotal_pids_len = ProtoField.uint32("User_Storage_SearchContentsByPlayersWithTotal_pids_len", "pids length (uint32)")
F.User_Storage_SearchContentsByPlayersWithTotal_pids_item = ProtoField.uint32("User_Storage_SearchContentsByPlayersWithTotal_pids_item", "pids (uint32)")
F.User_Storage_SearchContentsByPlayersWithTotal_searchResults_len = ProtoField.uint32("User_Storage_SearchContentsByPlayersWithTotal_searchResults_len", "searchResults length (uint32)")
F.User_Storage_SearchContentsByPlayersWithTotal_totalResults = ProtoField.uint32("User_Storage_SearchContentsByPlayersWithTotal_totalResults", "totalResults (uint32)")
F.Ranking_UploadScore_uniqueId = ProtoField.uint64("Ranking_UploadScore_uniqueId", "uniqueId (uint64)")
F.Ranking_DeleteScore_category = ProtoField.uint32("Ranking_DeleteScore_category", "category (uint32)")
F.Ranking_DeleteScore_uniqueId = ProtoField.uint64("Ranking_DeleteScore_uniqueId", "uniqueId (uint64)")
F.Ranking_DeleteAllScores_uniqueId = ProtoField.uint64("Ranking_DeleteAllScores_uniqueId", "uniqueId (uint64)")
F.Ranking_UploadCommonData_commonData_len = ProtoField.uint32("Ranking_UploadCommonData_commonData_len", "commonData length (Buffer)")
F.Ranking_UploadCommonData_commonData_data = ProtoField.bytes("Ranking_UploadCommonData_commonData_data", "commonData data (Buffer)")
F.Ranking_UploadCommonData_uniqueId = ProtoField.uint64("Ranking_UploadCommonData_uniqueId", "uniqueId (uint64)")
F.Ranking_DeleteCommonData_uniqueId = ProtoField.uint64("Ranking_DeleteCommonData_uniqueId", "uniqueId (uint64)")
F.Ranking_GetCommonData_uniqueId = ProtoField.uint64("Ranking_GetCommonData_uniqueId", "uniqueId (uint64)")
F.Ranking_GetCommonData_commonData_len = ProtoField.uint32("Ranking_GetCommonData_commonData_len", "commonData length (Buffer)")
F.Ranking_GetCommonData_commonData_data = ProtoField.bytes("Ranking_GetCommonData_commonData_data", "commonData data (Buffer)")
F.Ranking_ChangeAttributes_category = ProtoField.uint32("Ranking_ChangeAttributes_category", "category (uint32)")
F.Ranking_ChangeAttributes_uniqueId = ProtoField.uint64("Ranking_ChangeAttributes_uniqueId", "uniqueId (uint64)")
F.Ranking_ChangeAllAttributes_uniqueId = ProtoField.uint64("Ranking_ChangeAllAttributes_uniqueId", "uniqueId (uint64)")
F.Ranking_GetRanking_rankingMode = ProtoField.uint8("Ranking_GetRanking_rankingMode", "rankingMode (uint8)")
F.Ranking_GetRanking_category = ProtoField.uint32("Ranking_GetRanking_category", "category (uint32)")
F.Ranking_GetRanking_uniqueId = ProtoField.uint64("Ranking_GetRanking_uniqueId", "uniqueId (uint64)")
F.Ranking_GetRanking_principalId = ProtoField.uint32("Ranking_GetRanking_principalId", "principalId (uint32)")
F.Ranking_GetApproxOrder_category = ProtoField.uint32("Ranking_GetApproxOrder_category", "category (uint32)")
F.Ranking_GetApproxOrder_score = ProtoField.uint32("Ranking_GetApproxOrder_score", "score (uint32)")
F.Ranking_GetApproxOrder_uniqueId = ProtoField.uint64("Ranking_GetApproxOrder_uniqueId", "uniqueId (uint64)")
F.Ranking_GetApproxOrder_principalId = ProtoField.uint32("Ranking_GetApproxOrder_principalId", "principalId (uint32)")
F.Ranking_GetApproxOrder_pOrder = ProtoField.uint32("Ranking_GetApproxOrder_pOrder", "pOrder (uint32)")
F.Ranking_GetStats_category = ProtoField.uint32("Ranking_GetStats_category", "category (uint32)")
F.Ranking_GetStats_flags = ProtoField.uint32("Ranking_GetStats_flags", "flags (uint32)")
F.Ranking_GetRankingByPIDList_principalIdList_len = ProtoField.uint32("Ranking_GetRankingByPIDList_principalIdList_len", "principalIdList length (uint32)")
F.Ranking_GetRankingByPIDList_principalIdList_item = ProtoField.uint32("Ranking_GetRankingByPIDList_principalIdList_item", "principalIdList (uint32)")
F.Ranking_GetRankingByPIDList_rankingMode = ProtoField.uint8("Ranking_GetRankingByPIDList_rankingMode", "rankingMode (uint8)")
F.Ranking_GetRankingByPIDList_category = ProtoField.uint32("Ranking_GetRankingByPIDList_category", "category (uint32)")
F.Ranking_GetRankingByPIDList_uniqueId = ProtoField.uint64("Ranking_GetRankingByPIDList_uniqueId", "uniqueId (uint64)")
F.Ranking_GetRankingByUniqueIdList_nexUniqueIdList_len = ProtoField.uint32("Ranking_GetRankingByUniqueIdList_nexUniqueIdList_len", "nexUniqueIdList length (uint32)")
F.Ranking_GetRankingByUniqueIdList_nexUniqueIdList_item = ProtoField.uint64("Ranking_GetRankingByUniqueIdList_nexUniqueIdList_item", "nexUniqueIdList (uint64)")
F.Ranking_GetRankingByUniqueIdList_rankingMode = ProtoField.uint8("Ranking_GetRankingByUniqueIdList_rankingMode", "rankingMode (uint8)")
F.Ranking_GetRankingByUniqueIdList_category = ProtoField.uint32("Ranking_GetRankingByUniqueIdList_category", "category (uint32)")
F.Ranking_GetRankingByUniqueIdList_uniqueId = ProtoField.uint64("Ranking_GetRankingByUniqueIdList_uniqueId", "uniqueId (uint64)")
F.Ranking_GetCachedTopXRanking_category = ProtoField.uint32("Ranking_GetCachedTopXRanking_category", "category (uint32)")
F.Ranking_GetCachedTopXRankings_categories_len = ProtoField.uint32("Ranking_GetCachedTopXRankings_categories_len", "categories length (uint32)")
F.Ranking_GetCachedTopXRankings_categories_item = ProtoField.uint32("Ranking_GetCachedTopXRankings_categories_item", "categories (uint32)")
F.Ranking_GetCachedTopXRankings_orderParams_len = ProtoField.uint32("Ranking_GetCachedTopXRankings_orderParams_len", "orderParams length (uint32)")
F.Ranking_GetCachedTopXRankings_pResults_len = ProtoField.uint32("Ranking_GetCachedTopXRankings_pResults_len", "pResults length (uint32)")
F.Offline_Game_Notifications_PollNotifications_listNotifications_len = ProtoField.uint32("Offline_Game_Notifications_PollNotifications_listNotifications_len", "listNotifications length (uint32)")
F.Offline_Game_Notifications_PollNotifications_nbRemainingNotifs = ProtoField.uint32("Offline_Game_Notifications_PollNotifications_nbRemainingNotifs", "nbRemainingNotifs (uint32)")
F.Offline_Game_Notifications_PollSpecificOfflineNotifications_majortype_len = ProtoField.uint32("Offline_Game_Notifications_PollSpecificOfflineNotifications_majortype_len", "majortype length (uint32)")
F.Offline_Game_Notifications_PollSpecificOfflineNotifications_majortype_item = ProtoField.uint32("Offline_Game_Notifications_PollSpecificOfflineNotifications_majortype_item", "majortype (uint32)")
F.Offline_Game_Notifications_PollSpecificOfflineNotifications_listTimedNotification_len = ProtoField.uint32("Offline_Game_Notifications_PollSpecificOfflineNotifications_listTimedNotification_len", "listTimedNotification length (uint32)")
F.Offline_Game_Notifications_PollSpecificOfflineNotifications_ret = ProtoField.uint32("Offline_Game_Notifications_PollSpecificOfflineNotifications_ret", "ret (uint32)")
F.Offline_Game_Notifications_PollAnyOfflineNotifications_listTimedNotification_len = ProtoField.uint32("Offline_Game_Notifications_PollAnyOfflineNotifications_listTimedNotification_len", "listTimedNotification length (uint32)")
F.Offline_Game_Notifications_PollAnyOfflineNotifications_nbRemainingNotifs = ProtoField.uint32("Offline_Game_Notifications_PollAnyOfflineNotifications_nbRemainingNotifs", "nbRemainingNotifs (uint32)")
F.Monster_Hunter_XX_GetFriendUserProfiles_pids_len = ProtoField.uint32("Monster_Hunter_XX_GetFriendUserProfiles_pids_len", "pids length (uint32)")
F.Monster_Hunter_XX_GetFriendUserProfiles_pids_item = ProtoField.uint64("Monster_Hunter_XX_GetFriendUserProfiles_pids_item", "pids (uint64)")
F.Monster_Hunter_XX_GetFriendUserProfiles_infos_len = ProtoField.uint32("Monster_Hunter_XX_GetFriendUserProfiles_infos_len", "infos length (uint32)")
F.Monster_Hunter_XX_GetFriends_infos_len = ProtoField.uint32("Monster_Hunter_XX_GetFriends_infos_len", "infos length (uint32)")
F.Monster_Hunter_XX_AddFriends_pids_len = ProtoField.uint32("Monster_Hunter_XX_AddFriends_pids_len", "pids length (uint32)")
F.Monster_Hunter_XX_AddFriends_pids_item = ProtoField.uint64("Monster_Hunter_XX_AddFriends_pids_item", "pids (uint64)")
F.Monster_Hunter_XX_RemoveFriend_pid = ProtoField.uint64("Monster_Hunter_XX_RemoveFriend_pid", "pid (uint64)")
F.Monster_Hunter_XX_FindCommunityByOwner_id = ProtoField.uint64("Monster_Hunter_XX_FindCommunityByOwner_id", "id (uint64)")
F.Monster_Hunter_XX_FindCommunityByOwner_lstCommunity_len = ProtoField.uint32("Monster_Hunter_XX_FindCommunityByOwner_lstCommunity_len", "lstCommunity length (uint32)")
F.Splatoon_2_GetLeagueResult_leagueId_len = ProtoField.uint16("Splatoon_2_GetLeagueResult_leagueId_len", "leagueId length (String)")
F.Splatoon_2_GetLeagueResult_leagueId_data = ProtoField.string("Splatoon_2_GetLeagueResult_leagueId_data", "leagueId data (String)")
F.Splatoon_2_GetLeagueResult_tagId = ProtoField.uint64("Splatoon_2_GetLeagueResult_tagId", "tagId (uint64)")
F.Splatoon_2_GetFestivalResult_festivalId = ProtoField.uint32("Splatoon_2_GetFestivalResult_festivalId", "festivalId (uint32)")
F.Splatoon_2_DeleteFestival_festivalId = ProtoField.uint32("Splatoon_2_DeleteFestival_festivalId", "festivalId (uint32)")
F.Friends_3DS_UpdatePlayedGames_Played_games_len = ProtoField.uint32("Friends_3DS_UpdatePlayedGames_Played_games_len", "Played games length (uint32)")
F.Friends_3DS_UpdatePreference_Unknown = ProtoField.bool("Friends_3DS_UpdatePreference_Unknown", "Unknown (bool)")
F.Friends_3DS_UpdatePreference_Unknown = ProtoField.bool("Friends_3DS_UpdatePreference_Unknown", "Unknown (bool)")
F.Friends_3DS_UpdatePreference_Unknown = ProtoField.bool("Friends_3DS_UpdatePreference_Unknown", "Unknown (bool)")
F.Friends_3DS_GetFriendMii_Friends_len = ProtoField.uint32("Friends_3DS_GetFriendMii_Friends_len", "Friends length (uint32)")
F.Friends_3DS_GetFriendMiiList_Friends_len = ProtoField.uint32("Friends_3DS_GetFriendMiiList_Friends_len", "Friends length (uint32)")
F.Friends_3DS_GetFriendMiiList_Mii_lists_len = ProtoField.uint32("Friends_3DS_GetFriendMiiList_Mii_lists_len", "Mii lists length (uint32)")
F.Friends_3DS_GetFriendRelationships_Unknown_len = ProtoField.uint32("Friends_3DS_GetFriendRelationships_Unknown_len", "Unknown length (uint32)")
F.Friends_3DS_GetFriendRelationships_Unknown_item = ProtoField.uint32("Friends_3DS_GetFriendRelationships_Unknown_item", "Unknown (uint32)")
F.Friends_3DS_GetFriendRelationships_Friend_relationships_len = ProtoField.uint32("Friends_3DS_GetFriendRelationships_Friend_relationships_len", "Friend relationships length (uint32)")
F.Friends_3DS_AddFriendByPrincipalID_Unknown = ProtoField.uint64("Friends_3DS_AddFriendByPrincipalID_Unknown", "Unknown (uint64)")
F.Friends_3DS_AddFriendByPrincipalID_Principal_id = ProtoField.uint32("Friends_3DS_AddFriendByPrincipalID_Principal_id", "Principal id (uint32)")
F.Friends_3DS_GetAllFriends_Friend_relationships_len = ProtoField.uint32("Friends_3DS_GetAllFriends_Friend_relationships_len", "Friend relationships length (uint32)")
F.Friends_3DS_SyncFriend_Unknown = ProtoField.uint64("Friends_3DS_SyncFriend_Unknown", "Unknown (uint64)")
F.Friends_3DS_SyncFriend_Unknown_len = ProtoField.uint32("Friends_3DS_SyncFriend_Unknown_len", "Unknown length (uint32)")
F.Friends_3DS_SyncFriend_Unknown_item = ProtoField.uint32("Friends_3DS_SyncFriend_Unknown_item", "Unknown (uint32)")
F.Friends_3DS_SyncFriend_Unknown_len = ProtoField.uint32("Friends_3DS_SyncFriend_Unknown_len", "Unknown length (uint32)")
F.Friends_3DS_SyncFriend_Unknown_item = ProtoField.uint64("Friends_3DS_SyncFriend_Unknown_item", "Unknown (uint64)")
F.Friends_3DS_SyncFriend_Friend_list_len = ProtoField.uint32("Friends_3DS_SyncFriend_Friend_list_len", "Friend list length (uint32)")
F.Friends_3DS_UpdatePresence_Unknown = ProtoField.bool("Friends_3DS_UpdatePresence_Unknown", "Unknown (bool)")
F.Friends_3DS_UpdateComment_Comment_len = ProtoField.uint16("Friends_3DS_UpdateComment_Comment_len", "Comment length (String)")
F.Friends_3DS_UpdateComment_Comment_data = ProtoField.string("Friends_3DS_UpdateComment_Comment_data", "Comment data (String)")
F.Friends_3DS_GetFriendPresence_Unknown_len = ProtoField.uint32("Friends_3DS_GetFriendPresence_Unknown_len", "Unknown length (uint32)")
F.Friends_3DS_GetFriendPresence_Unknown_item = ProtoField.uint32("Friends_3DS_GetFriendPresence_Unknown_item", "Unknown (uint32)")
F.Friends_3DS_GetFriendPresence_Friend_presence_list_len = ProtoField.uint32("Friends_3DS_GetFriendPresence_Friend_presence_list_len", "Friend presence list length (uint32)")
F.Friends_3DS_GetFriendPicture_Unknown_len = ProtoField.uint32("Friends_3DS_GetFriendPicture_Unknown_len", "Unknown length (uint32)")
F.Friends_3DS_GetFriendPicture_Unknown_item = ProtoField.uint32("Friends_3DS_GetFriendPicture_Unknown_item", "Unknown (uint32)")
F.Friends_3DS_GetFriendPicture_Friend_pictures_len = ProtoField.uint32("Friends_3DS_GetFriendPicture_Friend_pictures_len", "Friend pictures length (uint32)")
F.Friends_3DS_GetFriendPersistentInfo_Unknown_len = ProtoField.uint32("Friends_3DS_GetFriendPersistentInfo_Unknown_len", "Unknown length (uint32)")
F.Friends_3DS_GetFriendPersistentInfo_Unknown_item = ProtoField.uint32("Friends_3DS_GetFriendPersistentInfo_Unknown_item", "Unknown (uint32)")
F.Friends_3DS_GetFriendPersistentInfo_Persistent_info_len = ProtoField.uint32("Friends_3DS_GetFriendPersistentInfo_Persistent_info_len", "Persistent info length (uint32)")
F.Friends_3DS_SendInvitation_Unknown_len = ProtoField.uint32("Friends_3DS_SendInvitation_Unknown_len", "Unknown length (uint32)")
F.Friends_3DS_SendInvitation_Unknown_item = ProtoField.uint32("Friends_3DS_SendInvitation_Unknown_item", "Unknown (uint32)")
F.Localization_GetLocaleCode_localCode_len = ProtoField.uint16("Localization_GetLocaleCode_localCode_len", "localCode length (String)")
F.Localization_GetLocaleCode_localCode_data = ProtoField.string("Localization_GetLocaleCode_localCode_data", "localCode data (String)")
F.Localization_SetLocaleCode_localCode_len = ProtoField.uint16("Localization_SetLocaleCode_localCode_len", "localCode length (String)")
F.Localization_SetLocaleCode_localCode_data = ProtoField.string("Localization_SetLocaleCode_localCode_data", "localCode data (String)")
F.NAT_Traversal_RequestProbeInitiation_urlTargetList_len = ProtoField.uint32("NAT_Traversal_RequestProbeInitiation_urlTargetList_len", "urlTargetList length (uint32)")
F.NAT_Traversal_RequestProbeInitiation_urlTargetList_item_len = ProtoField.uint16("NAT_Traversal_RequestProbeInitiation_urlTargetList_item_len", "urlTargetList length (String)")
F.NAT_Traversal_RequestProbeInitiation_urlTargetList_item_data = ProtoField.string("NAT_Traversal_RequestProbeInitiation_urlTargetList_item_data", "urlTargetList data (String)")
F.NAT_Traversal_InitiateProbe_urlStationToProbe_len = ProtoField.uint16("NAT_Traversal_InitiateProbe_urlStationToProbe_len", "urlStationToProbe length (String)")
F.NAT_Traversal_InitiateProbe_urlStationToProbe_data = ProtoField.string("NAT_Traversal_InitiateProbe_urlStationToProbe_data", "urlStationToProbe data (String)")
F.NAT_Traversal_RequestProbeInitiationExt_urlTargetList_len = ProtoField.uint32("NAT_Traversal_RequestProbeInitiationExt_urlTargetList_len", "urlTargetList length (uint32)")
F.NAT_Traversal_RequestProbeInitiationExt_urlTargetList_item_len = ProtoField.uint16("NAT_Traversal_RequestProbeInitiationExt_urlTargetList_item_len", "urlTargetList length (String)")
F.NAT_Traversal_RequestProbeInitiationExt_urlTargetList_item_data = ProtoField.string("NAT_Traversal_RequestProbeInitiationExt_urlTargetList_item_data", "urlTargetList data (String)")
F.NAT_Traversal_RequestProbeInitiationExt_urlStationToProbe_len = ProtoField.uint16("NAT_Traversal_RequestProbeInitiationExt_urlStationToProbe_len", "urlStationToProbe length (String)")
F.NAT_Traversal_RequestProbeInitiationExt_urlStationToProbe_data = ProtoField.string("NAT_Traversal_RequestProbeInitiationExt_urlStationToProbe_data", "urlStationToProbe data (String)")
F.NAT_Traversal_ReportNATTraversalResult_cid = ProtoField.uint32("NAT_Traversal_ReportNATTraversalResult_cid", "cid (uint32)")
F.NAT_Traversal_ReportNATTraversalResult_result = ProtoField.bool("NAT_Traversal_ReportNATTraversalResult_result", "result (bool)")
F.NAT_Traversal_ReportNATTraversalResult_rtt = ProtoField.uint32("NAT_Traversal_ReportNATTraversalResult_rtt", "rtt (uint32)")
F.NAT_Traversal_ReportNATProperties_natmapping = ProtoField.uint32("NAT_Traversal_ReportNATProperties_natmapping", "natmapping (uint32)")
F.NAT_Traversal_ReportNATProperties_natfiltering = ProtoField.uint32("NAT_Traversal_ReportNATProperties_natfiltering", "natfiltering (uint32)")
F.NAT_Traversal_ReportNATProperties_rtt = ProtoField.uint32("NAT_Traversal_ReportNATProperties_rtt", "rtt (uint32)")
F.NAT_Traversal_GetRelaySignatureKey_relayMode = ProtoField.int32("NAT_Traversal_GetRelaySignatureKey_relayMode", "relayMode (uint32)")
F.NAT_Traversal_GetRelaySignatureKey_currentUTCTime = ProtoField.uint64("NAT_Traversal_GetRelaySignatureKey_currentUTCTime", "currentUTCTime (uint64)")
F.NAT_Traversal_GetRelaySignatureKey_address_len = ProtoField.uint16("NAT_Traversal_GetRelaySignatureKey_address_len", "address length (String)")
F.NAT_Traversal_GetRelaySignatureKey_address_data = ProtoField.string("NAT_Traversal_GetRelaySignatureKey_address_data", "address data (String)")
F.NAT_Traversal_GetRelaySignatureKey_port = ProtoField.uint16("NAT_Traversal_GetRelaySignatureKey_port", "port (uint16)")
F.NAT_Traversal_GetRelaySignatureKey_relayAddressType = ProtoField.int32("NAT_Traversal_GetRelaySignatureKey_relayAddressType", "relayAddressType (uint32)")
F.NAT_Traversal_GetRelaySignatureKey_gameServerID = ProtoField.uint32("NAT_Traversal_GetRelaySignatureKey_gameServerID", "gameServerID (uint32)")
F.NAT_Traversal_ReportNATTraversalResultDetail_cid = ProtoField.uint32("NAT_Traversal_ReportNATTraversalResultDetail_cid", "cid (uint32)")
F.NAT_Traversal_ReportNATTraversalResultDetail_result = ProtoField.bool("NAT_Traversal_ReportNATTraversalResultDetail_result", "result (bool)")
F.NAT_Traversal_ReportNATTraversalResultDetail_detail = ProtoField.int32("NAT_Traversal_ReportNATTraversalResultDetail_detail", "detail (uint32)")
F.NAT_Traversal_ReportNATTraversalResultDetail_rtt = ProtoField.uint32("NAT_Traversal_ReportNATTraversalResultDetail_rtt", "rtt (uint32)")
F.Secure_Connection_Register_vecMyURLs_len = ProtoField.uint32("Secure_Connection_Register_vecMyURLs_len", "vecMyURLs length (uint32)")
F.Secure_Connection_Register_vecMyURLs_item_len = ProtoField.uint16("Secure_Connection_Register_vecMyURLs_item_len", "vecMyURLs length (String)")
F.Secure_Connection_Register_vecMyURLs_item_data = ProtoField.string("Secure_Connection_Register_vecMyURLs_item_data", "vecMyURLs data (String)")
F.Secure_Connection_Register_retval = ProtoField.uint32("Secure_Connection_Register_retval", "retval (uint32)")
F.Secure_Connection_Register_pidConnectionID = ProtoField.uint32("Secure_Connection_Register_pidConnectionID", "pidConnectionID (uint32)")
F.Secure_Connection_Register_urlPublic_len = ProtoField.uint16("Secure_Connection_Register_urlPublic_len", "urlPublic length (String)")
F.Secure_Connection_Register_urlPublic_data = ProtoField.string("Secure_Connection_Register_urlPublic_data", "urlPublic data (String)")
F.Secure_Connection_RequestConnectionData_cidTarget = ProtoField.uint32("Secure_Connection_RequestConnectionData_cidTarget", "cidTarget (uint32)")
F.Secure_Connection_RequestConnectionData_pidTarget = ProtoField.uint32("Secure_Connection_RequestConnectionData_pidTarget", "pidTarget (uint32)")
F.Secure_Connection_RequestConnectionData_retval = ProtoField.bool("Secure_Connection_RequestConnectionData_retval", "retval (bool)")
F.Secure_Connection_RequestConnectionData_pvecConnectionsData_len = ProtoField.uint32("Secure_Connection_RequestConnectionData_pvecConnectionsData_len", "pvecConnectionsData length (uint32)")
F.Secure_Connection_RequestUrls_cidTarget = ProtoField.uint32("Secure_Connection_RequestUrls_cidTarget", "cidTarget (uint32)")
F.Secure_Connection_RequestUrls_pidTarget = ProtoField.uint32("Secure_Connection_RequestUrls_pidTarget", "pidTarget (uint32)")
F.Secure_Connection_RequestUrls_retval = ProtoField.bool("Secure_Connection_RequestUrls_retval", "retval (bool)")
F.Secure_Connection_RequestUrls_plstURLs_len = ProtoField.uint32("Secure_Connection_RequestUrls_plstURLs_len", "plstURLs length (uint32)")
F.Secure_Connection_RequestUrls_plstURLs_item_len = ProtoField.uint16("Secure_Connection_RequestUrls_plstURLs_item_len", "plstURLs length (String)")
F.Secure_Connection_RequestUrls_plstURLs_item_data = ProtoField.string("Secure_Connection_RequestUrls_plstURLs_item_data", "plstURLs data (String)")
F.Secure_Connection_RegisterEx_vecMyURLs_len = ProtoField.uint32("Secure_Connection_RegisterEx_vecMyURLs_len", "vecMyURLs length (uint32)")
F.Secure_Connection_RegisterEx_vecMyURLs_item_len = ProtoField.uint16("Secure_Connection_RegisterEx_vecMyURLs_item_len", "vecMyURLs length (String)")
F.Secure_Connection_RegisterEx_vecMyURLs_item_data = ProtoField.string("Secure_Connection_RegisterEx_vecMyURLs_item_data", "vecMyURLs data (String)")
F.Secure_Connection_RegisterEx_hCustomData_data_bytes = ProtoField.bytes("Secure_Connection_RegisterEx_hCustomData_data_bytes", "hCustomData data bytes (bytes)")
F.Secure_Connection_RegisterEx_hCustomData_type_name_len = ProtoField.uint16("Secure_Connection_RegisterEx_hCustomData_type_name_len", "hCustomData_type_name length (String)")
F.Secure_Connection_RegisterEx_hCustomData_type_name_data = ProtoField.string("Secure_Connection_RegisterEx_hCustomData_type_name_data", "hCustomData_type_name data (String)")
F.Secure_Connection_RegisterEx_hCustomData_len_plus_four = ProtoField.uint32("Secure_Connection_RegisterEx_hCustomData_len_plus_four", "hCustomData_len_plus_four (uint32)")
F.Secure_Connection_RegisterEx_hCustomData_data_len = ProtoField.uint32("Secure_Connection_RegisterEx_hCustomData_data_len", "hCustomData_data_len (uint32)")
F.Secure_Connection_UpdateURLs_vecMyURLs_len = ProtoField.uint32("Secure_Connection_UpdateURLs_vecMyURLs_len", "vecMyURLs length (uint32)")
F.Secure_Connection_UpdateURLs_vecMyURLs_item_len = ProtoField.uint16("Secure_Connection_UpdateURLs_vecMyURLs_item_len", "vecMyURLs length (String)")
F.Secure_Connection_UpdateURLs_vecMyURLs_item_data = ProtoField.string("Secure_Connection_UpdateURLs_vecMyURLs_item_data", "vecMyURLs data (String)")
F.Secure_Connection_ReplaceURL_target_len = ProtoField.uint16("Secure_Connection_ReplaceURL_target_len", "target length (String)")
F.Secure_Connection_ReplaceURL_target_data = ProtoField.string("Secure_Connection_ReplaceURL_target_data", "target data (String)")
F.Secure_Connection_ReplaceURL_url_len = ProtoField.uint16("Secure_Connection_ReplaceURL_url_len", "url length (String)")
F.Secure_Connection_ReplaceURL_url_data = ProtoField.string("Secure_Connection_ReplaceURL_url_data", "url data (String)")
F.Secure_Connection_SendReport_reportId = ProtoField.uint32("Secure_Connection_SendReport_reportId", "reportId (uint32)")
F.Secure_Connection_SendReport_reportData_len = ProtoField.uint16("Secure_Connection_SendReport_reportData_len", "reportData length (Buffer)")
F.Secure_Connection_SendReport_reportData_data = ProtoField.bytes("Secure_Connection_SendReport_reportData_data", "reportData data (Buffer)")
F.Matchmake_Extension_CloseParticipation_gid = ProtoField.uint32("Matchmake_Extension_CloseParticipation_gid", "gid (uint32)")
F.Matchmake_Extension_OpenParticipation_gid = ProtoField.uint32("Matchmake_Extension_OpenParticipation_gid", "gid (uint32)")
F.Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_data_bytes = ProtoField.bytes("Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_data_bytes", "anyGathering data bytes (bytes)")
F.Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_type_name_len = ProtoField.uint16("Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_type_name_len", "anyGathering_type_name length (String)")
F.Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_type_name_data = ProtoField.string("Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_type_name_data", "anyGathering_type_name data (String)")
F.Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_len_plus_four = ProtoField.uint32("Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_len_plus_four", "anyGathering_len_plus_four (uint32)")
F.Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_data_len = ProtoField.uint32("Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_data_len", "anyGathering_data_len (uint32)")
F.Matchmake_Extension_AutoMatchmake_Postpone_strMessage_len = ProtoField.uint16("Matchmake_Extension_AutoMatchmake_Postpone_strMessage_len", "strMessage length (String)")
F.Matchmake_Extension_AutoMatchmake_Postpone_strMessage_data = ProtoField.string("Matchmake_Extension_AutoMatchmake_Postpone_strMessage_data", "strMessage data (String)")
F.Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_data_bytes = ProtoField.bytes("Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_data_bytes", "joinedGathering data bytes (bytes)")
F.Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_type_name_len = ProtoField.uint16("Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_type_name_len", "joinedGathering_type_name length (String)")
F.Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_type_name_data = ProtoField.string("Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_type_name_data", "joinedGathering_type_name data (String)")
F.Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_len_plus_four = ProtoField.uint32("Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_len_plus_four", "joinedGathering_len_plus_four (uint32)")
F.Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_data_len = ProtoField.uint32("Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_data_len", "joinedGathering_data_len (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSession_lstGathering_len = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSession_lstGathering_len", "lstGathering length (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_data_bytes = ProtoField.bytes("Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_data_bytes", "lstGathering data bytes (bytes)")
F.Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_type_name_len = ProtoField.uint16("Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_type_name_len", "lstGathering_type_name length (String)")
F.Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_type_name_data = ProtoField.string("Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_type_name_data", "lstGathering_type_name data (String)")
F.Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_len_plus_four = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_len_plus_four", "lstGathering_len_plus_four (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_data_len = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_data_len", "lstGathering_data_len (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_len = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_len", "lstGathering length (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_data_bytes = ProtoField.bytes("Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_data_bytes", "lstGathering data bytes (bytes)")
F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_type_name_len = ProtoField.uint16("Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_type_name_len", "lstGathering_type_name length (String)")
F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_type_name_data = ProtoField.string("Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_type_name_data", "lstGathering_type_name data (String)")
F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_len_plus_four = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_len_plus_four", "lstGathering_len_plus_four (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_data_len = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_data_len", "lstGathering_data_len (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGatheringUrls_len = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGatheringUrls_len", "lstGatheringUrls length (uint32)")
F.Matchmake_Extension_CreateMatchmakeSession_anyGathering_data_bytes = ProtoField.bytes("Matchmake_Extension_CreateMatchmakeSession_anyGathering_data_bytes", "anyGathering data bytes (bytes)")
F.Matchmake_Extension_CreateMatchmakeSession_anyGathering_type_name_len = ProtoField.uint16("Matchmake_Extension_CreateMatchmakeSession_anyGathering_type_name_len", "anyGathering_type_name length (String)")
F.Matchmake_Extension_CreateMatchmakeSession_anyGathering_type_name_data = ProtoField.string("Matchmake_Extension_CreateMatchmakeSession_anyGathering_type_name_data", "anyGathering_type_name data (String)")
F.Matchmake_Extension_CreateMatchmakeSession_anyGathering_len_plus_four = ProtoField.uint32("Matchmake_Extension_CreateMatchmakeSession_anyGathering_len_plus_four", "anyGathering_len_plus_four (uint32)")
F.Matchmake_Extension_CreateMatchmakeSession_anyGathering_data_len = ProtoField.uint32("Matchmake_Extension_CreateMatchmakeSession_anyGathering_data_len", "anyGathering_data_len (uint32)")
F.Matchmake_Extension_CreateMatchmakeSession_strMessage_len = ProtoField.uint16("Matchmake_Extension_CreateMatchmakeSession_strMessage_len", "strMessage length (String)")
F.Matchmake_Extension_CreateMatchmakeSession_strMessage_data = ProtoField.string("Matchmake_Extension_CreateMatchmakeSession_strMessage_data", "strMessage data (String)")
F.Matchmake_Extension_CreateMatchmakeSession_participationCount = ProtoField.uint16("Matchmake_Extension_CreateMatchmakeSession_participationCount", "participationCount (uint16)")
F.Matchmake_Extension_CreateMatchmakeSession_gid = ProtoField.uint32("Matchmake_Extension_CreateMatchmakeSession_gid", "gid (uint32)")
F.Matchmake_Extension_CreateMatchmakeSession_sessionKey_len = ProtoField.uint32("Matchmake_Extension_CreateMatchmakeSession_sessionKey_len", "sessionKey length (Buffer)")
F.Matchmake_Extension_CreateMatchmakeSession_sessionKey_data = ProtoField.bytes("Matchmake_Extension_CreateMatchmakeSession_sessionKey_data", "sessionKey data (Buffer)")
F.Matchmake_Extension_JoinMatchmakeSession_gid = ProtoField.uint32("Matchmake_Extension_JoinMatchmakeSession_gid", "gid (uint32)")
F.Matchmake_Extension_JoinMatchmakeSession_strMessage_len = ProtoField.uint16("Matchmake_Extension_JoinMatchmakeSession_strMessage_len", "strMessage length (String)")
F.Matchmake_Extension_JoinMatchmakeSession_strMessage_data = ProtoField.string("Matchmake_Extension_JoinMatchmakeSession_strMessage_data", "strMessage data (String)")
F.Matchmake_Extension_JoinMatchmakeSession_sessionKey_len = ProtoField.uint32("Matchmake_Extension_JoinMatchmakeSession_sessionKey_len", "sessionKey length (Buffer)")
F.Matchmake_Extension_JoinMatchmakeSession_sessionKey_data = ProtoField.bytes("Matchmake_Extension_JoinMatchmakeSession_sessionKey_data", "sessionKey data (Buffer)")
F.Matchmake_Extension_ModifyCurrentGameAttribute_gid = ProtoField.uint32("Matchmake_Extension_ModifyCurrentGameAttribute_gid", "gid (uint32)")
F.Matchmake_Extension_ModifyCurrentGameAttribute_attribIndex = ProtoField.uint32("Matchmake_Extension_ModifyCurrentGameAttribute_attribIndex", "attribIndex (uint32)")
F.Matchmake_Extension_ModifyCurrentGameAttribute_newValue = ProtoField.uint32("Matchmake_Extension_ModifyCurrentGameAttribute_newValue", "newValue (uint32)")
F.Matchmake_Extension_UpdateNotificationData_uiType = ProtoField.uint32("Matchmake_Extension_UpdateNotificationData_uiType", "uiType (uint32)")
F.Matchmake_Extension_UpdateNotificationData_uiParam1 = ProtoField.uint32("Matchmake_Extension_UpdateNotificationData_uiParam1", "uiParam1 (uint32)")
F.Matchmake_Extension_UpdateNotificationData_uiParam2 = ProtoField.uint32("Matchmake_Extension_UpdateNotificationData_uiParam2", "uiParam2 (uint32)")
F.Matchmake_Extension_UpdateNotificationData_strParam_len = ProtoField.uint16("Matchmake_Extension_UpdateNotificationData_strParam_len", "strParam length (String)")
F.Matchmake_Extension_UpdateNotificationData_strParam_data = ProtoField.string("Matchmake_Extension_UpdateNotificationData_strParam_data", "strParam data (String)")
F.Matchmake_Extension_UpdateNotificationData_uiType = ProtoField.uint32("Matchmake_Extension_UpdateNotificationData_uiType", "uiType (uint32)")
F.Matchmake_Extension_UpdateNotificationData_uiParam1 = ProtoField.uint64("Matchmake_Extension_UpdateNotificationData_uiParam1", "uiParam1 (uint64)")
F.Matchmake_Extension_UpdateNotificationData_uiParam2 = ProtoField.uint64("Matchmake_Extension_UpdateNotificationData_uiParam2", "uiParam2 (uint64)")
F.Matchmake_Extension_UpdateNotificationData_strParam_len = ProtoField.uint16("Matchmake_Extension_UpdateNotificationData_strParam_len", "strParam length (String)")
F.Matchmake_Extension_UpdateNotificationData_strParam_data = ProtoField.string("Matchmake_Extension_UpdateNotificationData_strParam_data", "strParam data (String)")
F.Matchmake_Extension_GetFriendNotificationData_uiType = ProtoField.int32("Matchmake_Extension_GetFriendNotificationData_uiType", "uiType (uint32)")
F.Matchmake_Extension_GetFriendNotificationData_dataList_len = ProtoField.uint32("Matchmake_Extension_GetFriendNotificationData_dataList_len", "dataList length (uint32)")
F.Matchmake_Extension_UpdateApplicationBuffer_gid = ProtoField.uint32("Matchmake_Extension_UpdateApplicationBuffer_gid", "gid (uint32)")
F.Matchmake_Extension_UpdateApplicationBuffer_applicationBuffer_len = ProtoField.uint32("Matchmake_Extension_UpdateApplicationBuffer_applicationBuffer_len", "applicationBuffer length (Buffer)")
F.Matchmake_Extension_UpdateApplicationBuffer_applicationBuffer_data = ProtoField.bytes("Matchmake_Extension_UpdateApplicationBuffer_applicationBuffer_data", "applicationBuffer data (Buffer)")
F.Matchmake_Extension_UpdateMatchmakeSessionAttribute_gid = ProtoField.uint32("Matchmake_Extension_UpdateMatchmakeSessionAttribute_gid", "gid (uint32)")
F.Matchmake_Extension_UpdateMatchmakeSessionAttribute_attribs_len = ProtoField.uint32("Matchmake_Extension_UpdateMatchmakeSessionAttribute_attribs_len", "attribs length (uint32)")
F.Matchmake_Extension_UpdateMatchmakeSessionAttribute_attribs_item = ProtoField.uint32("Matchmake_Extension_UpdateMatchmakeSessionAttribute_attribs_item", "attribs (uint32)")
F.Matchmake_Extension_GetlstFriendNotificationData_lstTypes_len = ProtoField.uint32("Matchmake_Extension_GetlstFriendNotificationData_lstTypes_len", "lstTypes length (uint32)")
F.Matchmake_Extension_GetlstFriendNotificationData_lstTypes_item = ProtoField.uint32("Matchmake_Extension_GetlstFriendNotificationData_lstTypes_item", "lstTypes (uint32)")
F.Matchmake_Extension_GetlstFriendNotificationData_dataList_len = ProtoField.uint32("Matchmake_Extension_GetlstFriendNotificationData_dataList_len", "dataList length (uint32)")
F.Matchmake_Extension_UpdateMatchmakeSession_anyGathering_data_bytes = ProtoField.bytes("Matchmake_Extension_UpdateMatchmakeSession_anyGathering_data_bytes", "anyGathering data bytes (bytes)")
F.Matchmake_Extension_UpdateMatchmakeSession_anyGathering_type_name_len = ProtoField.uint16("Matchmake_Extension_UpdateMatchmakeSession_anyGathering_type_name_len", "anyGathering_type_name length (String)")
F.Matchmake_Extension_UpdateMatchmakeSession_anyGathering_type_name_data = ProtoField.string("Matchmake_Extension_UpdateMatchmakeSession_anyGathering_type_name_data", "anyGathering_type_name data (String)")
F.Matchmake_Extension_UpdateMatchmakeSession_anyGathering_len_plus_four = ProtoField.uint32("Matchmake_Extension_UpdateMatchmakeSession_anyGathering_len_plus_four", "anyGathering_len_plus_four (uint32)")
F.Matchmake_Extension_UpdateMatchmakeSession_anyGathering_data_len = ProtoField.uint32("Matchmake_Extension_UpdateMatchmakeSession_anyGathering_data_len", "anyGathering_data_len (uint32)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_lstSearchCriteria_len = ProtoField.uint32("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_lstSearchCriteria_len", "lstSearchCriteria length (uint32)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_data_bytes = ProtoField.bytes("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_data_bytes", "anyGathering data bytes (bytes)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_type_name_len = ProtoField.uint16("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_type_name_len", "anyGathering_type_name length (String)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_type_name_data = ProtoField.string("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_type_name_data", "anyGathering_type_name data (String)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_len_plus_four = ProtoField.uint32("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_len_plus_four", "anyGathering_len_plus_four (uint32)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_data_len = ProtoField.uint32("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_data_len", "anyGathering_data_len (uint32)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_strMessage_len = ProtoField.uint16("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_strMessage_len", "strMessage length (String)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_strMessage_data = ProtoField.string("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_strMessage_data", "strMessage data (String)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_data_bytes = ProtoField.bytes("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_data_bytes", "joinedGathering data bytes (bytes)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_type_name_len = ProtoField.uint16("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_type_name_len", "joinedGathering_type_name length (String)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_type_name_data = ProtoField.string("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_type_name_data", "joinedGathering_type_name data (String)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_len_plus_four = ProtoField.uint32("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_len_plus_four", "joinedGathering_len_plus_four (uint32)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_data_len = ProtoField.uint32("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_data_len", "joinedGathering_data_len (uint32)")
F.Matchmake_Extension_GetPlayingSession_lstPid_len = ProtoField.uint32("Matchmake_Extension_GetPlayingSession_lstPid_len", "lstPid length (uint32)")
F.Matchmake_Extension_GetPlayingSession_lstPid_item = ProtoField.uint32("Matchmake_Extension_GetPlayingSession_lstPid_item", "lstPid (uint32)")
F.Matchmake_Extension_GetPlayingSession_lstPlayingSession_len = ProtoField.uint32("Matchmake_Extension_GetPlayingSession_lstPlayingSession_len", "lstPlayingSession length (uint32)")
F.Matchmake_Extension_CreateCommunity_strMessage_len = ProtoField.uint16("Matchmake_Extension_CreateCommunity_strMessage_len", "strMessage length (String)")
F.Matchmake_Extension_CreateCommunity_strMessage_data = ProtoField.string("Matchmake_Extension_CreateCommunity_strMessage_data", "strMessage data (String)")
F.Matchmake_Extension_CreateCommunity_gid = ProtoField.uint32("Matchmake_Extension_CreateCommunity_gid", "gid (uint32)")
F.Matchmake_Extension_JoinCommunity_gid = ProtoField.uint32("Matchmake_Extension_JoinCommunity_gid", "gid (uint32)")
F.Matchmake_Extension_JoinCommunity_strMessage_len = ProtoField.uint16("Matchmake_Extension_JoinCommunity_strMessage_len", "strMessage length (String)")
F.Matchmake_Extension_JoinCommunity_strMessage_data = ProtoField.string("Matchmake_Extension_JoinCommunity_strMessage_data", "strMessage data (String)")
F.Matchmake_Extension_JoinCommunity_strPassword_len = ProtoField.uint16("Matchmake_Extension_JoinCommunity_strPassword_len", "strPassword length (String)")
F.Matchmake_Extension_JoinCommunity_strPassword_data = ProtoField.string("Matchmake_Extension_JoinCommunity_strPassword_data", "strPassword data (String)")
F.Matchmake_Extension_FindCommunityByGatheringId_lstGid_len = ProtoField.uint32("Matchmake_Extension_FindCommunityByGatheringId_lstGid_len", "lstGid length (uint32)")
F.Matchmake_Extension_FindCommunityByGatheringId_lstGid_item = ProtoField.uint32("Matchmake_Extension_FindCommunityByGatheringId_lstGid_item", "lstGid (uint32)")
F.Matchmake_Extension_FindCommunityByGatheringId_lstCommunity_len = ProtoField.uint32("Matchmake_Extension_FindCommunityByGatheringId_lstCommunity_len", "lstCommunity length (uint32)")
F.Matchmake_Extension_FindOfficialCommunity_isAvailableOnly = ProtoField.bool("Matchmake_Extension_FindOfficialCommunity_isAvailableOnly", "isAvailableOnly (bool)")
F.Matchmake_Extension_FindOfficialCommunity_lstCommunity_len = ProtoField.uint32("Matchmake_Extension_FindOfficialCommunity_lstCommunity_len", "lstCommunity length (uint32)")
F.Matchmake_Extension_FindCommunityByParticipant_pid = ProtoField.uint32("Matchmake_Extension_FindCommunityByParticipant_pid", "pid (uint32)")
F.Matchmake_Extension_FindCommunityByParticipant_lstCommunity_len = ProtoField.uint32("Matchmake_Extension_FindCommunityByParticipant_lstCommunity_len", "lstCommunity length (uint32)")
F.Matchmake_Extension_UpdatePrivacySetting_onlineStatus = ProtoField.bool("Matchmake_Extension_UpdatePrivacySetting_onlineStatus", "onlineStatus (bool)")
F.Matchmake_Extension_UpdatePrivacySetting_participationCommunity = ProtoField.bool("Matchmake_Extension_UpdatePrivacySetting_participationCommunity", "participationCommunity (bool)")
F.Matchmake_Extension_GetMyBlockList_lstPrincipalId_len = ProtoField.uint32("Matchmake_Extension_GetMyBlockList_lstPrincipalId_len", "lstPrincipalId length (uint32)")
F.Matchmake_Extension_GetMyBlockList_lstPrincipalId_item = ProtoField.uint32("Matchmake_Extension_GetMyBlockList_lstPrincipalId_item", "lstPrincipalId (uint32)")
F.Matchmake_Extension_AddToBlockList_lstPrincipalId_len = ProtoField.uint32("Matchmake_Extension_AddToBlockList_lstPrincipalId_len", "lstPrincipalId length (uint32)")
F.Matchmake_Extension_AddToBlockList_lstPrincipalId_item = ProtoField.uint32("Matchmake_Extension_AddToBlockList_lstPrincipalId_item", "lstPrincipalId (uint32)")
F.Matchmake_Extension_RemoveFromBlockList_lstPrincipalId_len = ProtoField.uint32("Matchmake_Extension_RemoveFromBlockList_lstPrincipalId_len", "lstPrincipalId length (uint32)")
F.Matchmake_Extension_RemoveFromBlockList_lstPrincipalId_item = ProtoField.uint32("Matchmake_Extension_RemoveFromBlockList_lstPrincipalId_item", "lstPrincipalId (uint32)")
F.Matchmake_Extension_ReportViolation_pid = ProtoField.uint32("Matchmake_Extension_ReportViolation_pid", "pid (uint32)")
F.Matchmake_Extension_ReportViolation_userName_len = ProtoField.uint16("Matchmake_Extension_ReportViolation_userName_len", "userName length (String)")
F.Matchmake_Extension_ReportViolation_userName_data = ProtoField.string("Matchmake_Extension_ReportViolation_userName_data", "userName data (String)")
F.Matchmake_Extension_ReportViolation_violationCode = ProtoField.uint32("Matchmake_Extension_ReportViolation_violationCode", "violationCode (uint32)")
F.Matchmake_Extension_IsViolationUser_flag = ProtoField.bool("Matchmake_Extension_IsViolationUser_flag", "flag (bool)")
F.Matchmake_Extension_IsViolationUser_score = ProtoField.uint32("Matchmake_Extension_IsViolationUser_score", "score (uint32)")
F.Matchmake_Extension_JoinMatchmakeSessionEx_gid = ProtoField.uint32("Matchmake_Extension_JoinMatchmakeSessionEx_gid", "gid (uint32)")
F.Matchmake_Extension_JoinMatchmakeSessionEx_strMessage_len = ProtoField.uint16("Matchmake_Extension_JoinMatchmakeSessionEx_strMessage_len", "strMessage length (String)")
F.Matchmake_Extension_JoinMatchmakeSessionEx_strMessage_data = ProtoField.string("Matchmake_Extension_JoinMatchmakeSessionEx_strMessage_data", "strMessage data (String)")
F.Matchmake_Extension_JoinMatchmakeSessionEx_dontCareMyBlockList = ProtoField.bool("Matchmake_Extension_JoinMatchmakeSessionEx_dontCareMyBlockList", "dontCareMyBlockList (bool)")
F.Matchmake_Extension_JoinMatchmakeSessionEx_participationCount = ProtoField.uint16("Matchmake_Extension_JoinMatchmakeSessionEx_participationCount", "participationCount (uint16)")
F.Matchmake_Extension_JoinMatchmakeSessionEx_sessionKey_len = ProtoField.uint32("Matchmake_Extension_JoinMatchmakeSessionEx_sessionKey_len", "sessionKey length (Buffer)")
F.Matchmake_Extension_JoinMatchmakeSessionEx_sessionKey_data = ProtoField.bytes("Matchmake_Extension_JoinMatchmakeSessionEx_sessionKey_data", "sessionKey data (Buffer)")
F.Matchmake_Extension_GetSimplePlayingSession_lstPrincipalId_len = ProtoField.uint32("Matchmake_Extension_GetSimplePlayingSession_lstPrincipalId_len", "lstPrincipalId length (uint32)")
F.Matchmake_Extension_GetSimplePlayingSession_lstPrincipalId_item = ProtoField.uint32("Matchmake_Extension_GetSimplePlayingSession_lstPrincipalId_item", "lstPrincipalId (uint32)")
F.Matchmake_Extension_GetSimplePlayingSession_includeLoginUser = ProtoField.bool("Matchmake_Extension_GetSimplePlayingSession_includeLoginUser", "includeLoginUser (bool)")
F.Matchmake_Extension_GetSimplePlayingSession_lstSimplePlayingSession_len = ProtoField.uint32("Matchmake_Extension_GetSimplePlayingSession_lstSimplePlayingSession_len", "lstSimplePlayingSession length (uint32)")
F.Matchmake_Extension_GetSimpleCommunity_gatheringIdList_len = ProtoField.uint32("Matchmake_Extension_GetSimpleCommunity_gatheringIdList_len", "gatheringIdList length (uint32)")
F.Matchmake_Extension_GetSimpleCommunity_gatheringIdList_item = ProtoField.uint32("Matchmake_Extension_GetSimpleCommunity_gatheringIdList_item", "gatheringIdList (uint32)")
F.Matchmake_Extension_GetSimpleCommunity_lstSimpleCommunityList_len = ProtoField.uint32("Matchmake_Extension_GetSimpleCommunity_lstSimpleCommunityList_len", "lstSimpleCommunityList length (uint32)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_lstGid_len = ProtoField.uint32("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_lstGid_len", "lstGid length (uint32)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_lstGid_item = ProtoField.uint32("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_lstGid_item", "lstGid (uint32)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_data_bytes = ProtoField.bytes("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_data_bytes", "anyGathering data bytes (bytes)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_type_name_len = ProtoField.uint16("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_type_name_len", "anyGathering_type_name length (String)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_type_name_data = ProtoField.string("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_type_name_data", "anyGathering_type_name data (String)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_len_plus_four = ProtoField.uint32("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_len_plus_four", "anyGathering_len_plus_four (uint32)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_data_len = ProtoField.uint32("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_data_len", "anyGathering_data_len (uint32)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_strMessage_len = ProtoField.uint16("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_strMessage_len", "strMessage length (String)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_strMessage_data = ProtoField.string("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_strMessage_data", "strMessage data (String)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_data_bytes = ProtoField.bytes("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_data_bytes", "joinedGathering data bytes (bytes)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_type_name_len = ProtoField.uint16("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_type_name_len", "joinedGathering_type_name length (String)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_type_name_data = ProtoField.string("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_type_name_data", "joinedGathering_type_name data (String)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_len_plus_four = ProtoField.uint32("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_len_plus_four", "joinedGathering_len_plus_four (uint32)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_data_len = ProtoField.uint32("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_data_len", "joinedGathering_data_len (uint32)")
F.Matchmake_Extension_UpdateProgressScore_gid = ProtoField.uint32("Matchmake_Extension_UpdateProgressScore_gid", "gid (uint32)")
F.Matchmake_Extension_UpdateProgressScore_progressScore = ProtoField.uint8("Matchmake_Extension_UpdateProgressScore_progressScore", "progressScore (uint8)")
F.Matchmake_Extension_DebugNotifyEvent_pid = ProtoField.uint32("Matchmake_Extension_DebugNotifyEvent_pid", "pid (uint32)")
F.Matchmake_Extension_DebugNotifyEvent_mainType = ProtoField.uint32("Matchmake_Extension_DebugNotifyEvent_mainType", "mainType (uint32)")
F.Matchmake_Extension_DebugNotifyEvent_subType = ProtoField.uint32("Matchmake_Extension_DebugNotifyEvent_subType", "subType (uint32)")
F.Matchmake_Extension_DebugNotifyEvent_param1 = ProtoField.uint64("Matchmake_Extension_DebugNotifyEvent_param1", "param1 (uint64)")
F.Matchmake_Extension_DebugNotifyEvent_param2 = ProtoField.uint64("Matchmake_Extension_DebugNotifyEvent_param2", "param2 (uint64)")
F.Matchmake_Extension_DebugNotifyEvent_stringParam_len = ProtoField.uint16("Matchmake_Extension_DebugNotifyEvent_stringParam_len", "stringParam length (String)")
F.Matchmake_Extension_DebugNotifyEvent_stringParam_data = ProtoField.string("Matchmake_Extension_DebugNotifyEvent_stringParam_data", "stringParam data (String)")
F.Matchmake_Extension_GenerateMatchmakeSessionSystemPassword_gid = ProtoField.uint32("Matchmake_Extension_GenerateMatchmakeSessionSystemPassword_gid", "gid (uint32)")
F.Matchmake_Extension_GenerateMatchmakeSessionSystemPassword_password_len = ProtoField.uint16("Matchmake_Extension_GenerateMatchmakeSessionSystemPassword_password_len", "password length (String)")
F.Matchmake_Extension_GenerateMatchmakeSessionSystemPassword_password_data = ProtoField.string("Matchmake_Extension_GenerateMatchmakeSessionSystemPassword_password_data", "password data (String)")
F.Matchmake_Extension_ClearMatchmakeSessionSystemPassword_gid = ProtoField.uint32("Matchmake_Extension_ClearMatchmakeSessionSystemPassword_gid", "gid (uint32)")
F.Matchmake_Extension_FindMatchmakeSessionByGatheringIdDetail_gid = ProtoField.uint32("Matchmake_Extension_FindMatchmakeSessionByGatheringIdDetail_gid", "gid (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSessionNoHolder_lstMatchmakeSession_len = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSessionNoHolder_lstMatchmakeSession_len", "lstMatchmakeSession length (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_lstMatchmakeSession_len = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_lstMatchmakeSession_len", "lstMatchmakeSession length (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_lstGatheringUrls_len = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_lstGatheringUrls_len", "lstGatheringUrls length (uint32)")
F.Matchmake_Extension_RequestMatchmaking_requestId = ProtoField.uint64("Matchmake_Extension_RequestMatchmaking_requestId", "requestId (uint64)")
F.Matchmake_Extension_WithdrawMatchmaking_requestId = ProtoField.uint64("Matchmake_Extension_WithdrawMatchmaking_requestId", "requestId (uint64)")
F.Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstGid_len = ProtoField.uint32("Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstGid_len", "lstGid length (uint32)")
F.Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstGid_item = ProtoField.uint32("Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstGid_item", "lstGid (uint32)")
F.Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstMatchmakeSession_len = ProtoField.uint32("Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstMatchmakeSession_len", "lstMatchmakeSession length (uint32)")
F.Matchmake_Extension_FindMatchmakeSessionBySingleGatheringId_gid = ProtoField.uint32("Matchmake_Extension_FindMatchmakeSessionBySingleGatheringId_gid", "gid (uint32)")
F.Matchmake_Extension_FindMatchmakeSessionByOwner_id = ProtoField.uint32("Matchmake_Extension_FindMatchmakeSessionByOwner_id", "id (uint32)")
F.Matchmake_Extension_FindMatchmakeSessionByOwner_lstMatchmakeSession_len = ProtoField.uint32("Matchmake_Extension_FindMatchmakeSessionByOwner_lstMatchmakeSession_len", "lstMatchmakeSession length (uint32)")
F.Matchmake_Extension_FindMatchmakeSessionByParticipant_lstSession_len = ProtoField.uint32("Matchmake_Extension_FindMatchmakeSessionByParticipant_lstSession_len", "lstSession length (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSessionNoHolderNoResultRange_lstMatchmakeSession_len = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSessionNoHolderNoResultRange_lstMatchmakeSession_len", "lstMatchmakeSession length (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_lstMatchmakeSession_len = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_lstMatchmakeSession_len", "lstMatchmakeSession length (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_lstGatheringUrls_len = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_lstGatheringUrls_len", "lstGatheringUrls length (uint32)")
F.Persistent_Store_FindByGroup_uiGroup = ProtoField.uint32("Persistent_Store_FindByGroup_uiGroup", "uiGroup (uint32)")
F.Persistent_Store_FindByGroup_lstTags_len = ProtoField.uint32("Persistent_Store_FindByGroup_lstTags_len", "lstTags length (uint32)")
F.Persistent_Store_FindByGroup_lstTags_item_len = ProtoField.uint16("Persistent_Store_FindByGroup_lstTags_item_len", "lstTags length (String)")
F.Persistent_Store_FindByGroup_lstTags_item_data = ProtoField.string("Persistent_Store_FindByGroup_lstTags_item_data", "lstTags data (String)")
F.Persistent_Store_InsertItem_uiGroup = ProtoField.uint32("Persistent_Store_InsertItem_uiGroup", "uiGroup (uint32)")
F.Persistent_Store_InsertItem_strTag_len = ProtoField.uint16("Persistent_Store_InsertItem_strTag_len", "strTag length (String)")
F.Persistent_Store_InsertItem_strTag_data = ProtoField.string("Persistent_Store_InsertItem_strTag_data", "strTag data (String)")
F.Persistent_Store_InsertItem_bufData_len = ProtoField.uint32("Persistent_Store_InsertItem_bufData_len", "bufData length (Buffer)")
F.Persistent_Store_InsertItem_bufData_data = ProtoField.bytes("Persistent_Store_InsertItem_bufData_data", "bufData data (Buffer)")
F.Persistent_Store_InsertItem_bReplace = ProtoField.bool("Persistent_Store_InsertItem_bReplace", "bReplace (bool)")
F.Persistent_Store_InsertItem_bResult = ProtoField.bool("Persistent_Store_InsertItem_bResult", "bResult (bool)")
F.Persistent_Store_RemoveItem_uiGroup = ProtoField.uint32("Persistent_Store_RemoveItem_uiGroup", "uiGroup (uint32)")
F.Persistent_Store_RemoveItem_strTag_len = ProtoField.uint16("Persistent_Store_RemoveItem_strTag_len", "strTag length (String)")
F.Persistent_Store_RemoveItem_strTag_data = ProtoField.string("Persistent_Store_RemoveItem_strTag_data", "strTag data (String)")
F.Persistent_Store_RemoveItem_bResult = ProtoField.bool("Persistent_Store_RemoveItem_bResult", "bResult (bool)")
F.Persistent_Store_GetItem_uiGroup = ProtoField.uint32("Persistent_Store_GetItem_uiGroup", "uiGroup (uint32)")
F.Persistent_Store_GetItem_strTag_len = ProtoField.uint16("Persistent_Store_GetItem_strTag_len", "strTag length (String)")
F.Persistent_Store_GetItem_strTag_data = ProtoField.string("Persistent_Store_GetItem_strTag_data", "strTag data (String)")
F.Persistent_Store_GetItem_bufData_len = ProtoField.uint32("Persistent_Store_GetItem_bufData_len", "bufData length (Buffer)")
F.Persistent_Store_GetItem_bufData_data = ProtoField.bytes("Persistent_Store_GetItem_bufData_data", "bufData data (Buffer)")
F.Persistent_Store_GetItem_bResult = ProtoField.bool("Persistent_Store_GetItem_bResult", "bResult (bool)")
F.Persistent_Store_InsertCustomItem_uiGroup = ProtoField.uint32("Persistent_Store_InsertCustomItem_uiGroup", "uiGroup (uint32)")
F.Persistent_Store_InsertCustomItem_strTag_len = ProtoField.uint16("Persistent_Store_InsertCustomItem_strTag_len", "strTag length (String)")
F.Persistent_Store_InsertCustomItem_strTag_data = ProtoField.string("Persistent_Store_InsertCustomItem_strTag_data", "strTag data (String)")
F.Persistent_Store_InsertCustomItem_hData_data_bytes = ProtoField.bytes("Persistent_Store_InsertCustomItem_hData_data_bytes", "hData data bytes (bytes)")
F.Persistent_Store_InsertCustomItem_hData_type_name_len = ProtoField.uint16("Persistent_Store_InsertCustomItem_hData_type_name_len", "hData_type_name length (String)")
F.Persistent_Store_InsertCustomItem_hData_type_name_data = ProtoField.string("Persistent_Store_InsertCustomItem_hData_type_name_data", "hData_type_name data (String)")
F.Persistent_Store_InsertCustomItem_hData_len_plus_four = ProtoField.uint32("Persistent_Store_InsertCustomItem_hData_len_plus_four", "hData_len_plus_four (uint32)")
F.Persistent_Store_InsertCustomItem_hData_data_len = ProtoField.uint32("Persistent_Store_InsertCustomItem_hData_data_len", "hData_data_len (uint32)")
F.Persistent_Store_InsertCustomItem_bReplace = ProtoField.bool("Persistent_Store_InsertCustomItem_bReplace", "bReplace (bool)")
F.Persistent_Store_GetCustomItem_uiGroup = ProtoField.uint32("Persistent_Store_GetCustomItem_uiGroup", "uiGroup (uint32)")
F.Persistent_Store_GetCustomItem_strTag_len = ProtoField.uint16("Persistent_Store_GetCustomItem_strTag_len", "strTag length (String)")
F.Persistent_Store_GetCustomItem_strTag_data = ProtoField.string("Persistent_Store_GetCustomItem_strTag_data", "strTag data (String)")
F.Persistent_Store_GetCustomItem_hData_data_bytes = ProtoField.bytes("Persistent_Store_GetCustomItem_hData_data_bytes", "hData data bytes (bytes)")
F.Persistent_Store_GetCustomItem_hData_type_name_len = ProtoField.uint16("Persistent_Store_GetCustomItem_hData_type_name_len", "hData_type_name length (String)")
F.Persistent_Store_GetCustomItem_hData_type_name_data = ProtoField.string("Persistent_Store_GetCustomItem_hData_type_name_data", "hData_type_name data (String)")
F.Persistent_Store_GetCustomItem_hData_len_plus_four = ProtoField.uint32("Persistent_Store_GetCustomItem_hData_len_plus_four", "hData_len_plus_four (uint32)")
F.Persistent_Store_GetCustomItem_hData_data_len = ProtoField.uint32("Persistent_Store_GetCustomItem_hData_data_len", "hData_data_len (uint32)")
F.Persistent_Store_FindItemsBySQLQuery_uiGroup = ProtoField.uint32("Persistent_Store_FindItemsBySQLQuery_uiGroup", "uiGroup (uint32)")
F.Persistent_Store_FindItemsBySQLQuery_strTag_len = ProtoField.uint16("Persistent_Store_FindItemsBySQLQuery_strTag_len", "strTag length (String)")
F.Persistent_Store_FindItemsBySQLQuery_strTag_data = ProtoField.string("Persistent_Store_FindItemsBySQLQuery_strTag_data", "strTag data (String)")
F.Persistent_Store_FindItemsBySQLQuery_strQuery_len = ProtoField.uint16("Persistent_Store_FindItemsBySQLQuery_strQuery_len", "strQuery length (String)")
F.Persistent_Store_FindItemsBySQLQuery_strQuery_data = ProtoField.string("Persistent_Store_FindItemsBySQLQuery_strQuery_data", "strQuery data (String)")
F.Persistent_Store_FindItemsBySQLQuery_lstData_len = ProtoField.uint32("Persistent_Store_FindItemsBySQLQuery_lstData_len", "lstData length (uint32)")
F.Persistent_Store_FindItemsBySQLQuery_lstData_item_data_bytes = ProtoField.bytes("Persistent_Store_FindItemsBySQLQuery_lstData_item_data_bytes", "lstData data bytes (bytes)")
F.Persistent_Store_FindItemsBySQLQuery_lstData_item_type_name_len = ProtoField.uint16("Persistent_Store_FindItemsBySQLQuery_lstData_item_type_name_len", "lstData_type_name length (String)")
F.Persistent_Store_FindItemsBySQLQuery_lstData_item_type_name_data = ProtoField.string("Persistent_Store_FindItemsBySQLQuery_lstData_item_type_name_data", "lstData_type_name data (String)")
F.Persistent_Store_FindItemsBySQLQuery_lstData_item_len_plus_four = ProtoField.uint32("Persistent_Store_FindItemsBySQLQuery_lstData_item_len_plus_four", "lstData_len_plus_four (uint32)")
F.Persistent_Store_FindItemsBySQLQuery_lstData_item_data_len = ProtoField.uint32("Persistent_Store_FindItemsBySQLQuery_lstData_item_data_len", "lstData_data_len (uint32)")
F.Ticket_Granting_Login_strUserName_len = ProtoField.uint16("Ticket_Granting_Login_strUserName_len", "strUserName length (String)")
F.Ticket_Granting_Login_strUserName_data = ProtoField.string("Ticket_Granting_Login_strUserName_data", "strUserName data (String)")
F.Ticket_Granting_Login_retval = ProtoField.uint32("Ticket_Granting_Login_retval", "retval (uint32)")
F.Ticket_Granting_Login_pidPrincipal = ProtoField.uint32("Ticket_Granting_Login_pidPrincipal", "pidPrincipal (uint32)")
F.Ticket_Granting_Login_pbufResponse_len = ProtoField.uint32("Ticket_Granting_Login_pbufResponse_len", "pbufResponse length (Buffer)")
F.Ticket_Granting_Login_pbufResponse_data = ProtoField.bytes("Ticket_Granting_Login_pbufResponse_data", "pbufResponse data (Buffer)")
F.Ticket_Granting_Login_strReturnMsg_len = ProtoField.uint16("Ticket_Granting_Login_strReturnMsg_len", "strReturnMsg length (String)")
F.Ticket_Granting_Login_strReturnMsg_data = ProtoField.string("Ticket_Granting_Login_strReturnMsg_data", "strReturnMsg data (String)")
F.Ticket_Granting_LoginEx_strUserName_len = ProtoField.uint16("Ticket_Granting_LoginEx_strUserName_len", "strUserName length (String)")
F.Ticket_Granting_LoginEx_strUserName_data = ProtoField.string("Ticket_Granting_LoginEx_strUserName_data", "strUserName data (String)")
F.Ticket_Granting_LoginEx_oExtraData_data_bytes = ProtoField.bytes("Ticket_Granting_LoginEx_oExtraData_data_bytes", "oExtraData data bytes (bytes)")
F.Ticket_Granting_LoginEx_oExtraData_type_name_len = ProtoField.uint16("Ticket_Granting_LoginEx_oExtraData_type_name_len", "oExtraData_type_name length (String)")
F.Ticket_Granting_LoginEx_oExtraData_type_name_data = ProtoField.string("Ticket_Granting_LoginEx_oExtraData_type_name_data", "oExtraData_type_name data (String)")
F.Ticket_Granting_LoginEx_oExtraData_len_plus_four = ProtoField.uint32("Ticket_Granting_LoginEx_oExtraData_len_plus_four", "oExtraData_len_plus_four (uint32)")
F.Ticket_Granting_LoginEx_oExtraData_data_len = ProtoField.uint32("Ticket_Granting_LoginEx_oExtraData_data_len", "oExtraData_data_len (uint32)")
F.Ticket_Granting_LoginEx_retval = ProtoField.uint32("Ticket_Granting_LoginEx_retval", "retval (uint32)")
F.Ticket_Granting_LoginEx_pidPrincipal = ProtoField.uint32("Ticket_Granting_LoginEx_pidPrincipal", "pidPrincipal (uint32)")
F.Ticket_Granting_LoginEx_pbufResponse_len = ProtoField.uint32("Ticket_Granting_LoginEx_pbufResponse_len", "pbufResponse length (Buffer)")
F.Ticket_Granting_LoginEx_pbufResponse_data = ProtoField.bytes("Ticket_Granting_LoginEx_pbufResponse_data", "pbufResponse data (Buffer)")
F.Ticket_Granting_LoginEx_strReturnMsg_len = ProtoField.uint16("Ticket_Granting_LoginEx_strReturnMsg_len", "strReturnMsg length (String)")
F.Ticket_Granting_LoginEx_strReturnMsg_data = ProtoField.string("Ticket_Granting_LoginEx_strReturnMsg_data", "strReturnMsg data (String)")
F.Ticket_Granting_RequestTicket_idSource = ProtoField.uint32("Ticket_Granting_RequestTicket_idSource", "idSource (uint32)")
F.Ticket_Granting_RequestTicket_idTarget = ProtoField.uint32("Ticket_Granting_RequestTicket_idTarget", "idTarget (uint32)")
F.Ticket_Granting_RequestTicket_retval = ProtoField.uint32("Ticket_Granting_RequestTicket_retval", "retval (uint32)")
F.Ticket_Granting_RequestTicket_bufResponse_len = ProtoField.uint32("Ticket_Granting_RequestTicket_bufResponse_len", "bufResponse length (Buffer)")
F.Ticket_Granting_RequestTicket_bufResponse_data = ProtoField.bytes("Ticket_Granting_RequestTicket_bufResponse_data", "bufResponse data (Buffer)")
F.Ticket_Granting_GetPID_strUserName_len = ProtoField.uint16("Ticket_Granting_GetPID_strUserName_len", "strUserName length (String)")
F.Ticket_Granting_GetPID_strUserName_data = ProtoField.string("Ticket_Granting_GetPID_strUserName_data", "strUserName data (String)")
F.Ticket_Granting_GetPID_retval = ProtoField.uint32("Ticket_Granting_GetPID_retval", "retval (uint32)")
F.Ticket_Granting_GetName_id = ProtoField.uint32("Ticket_Granting_GetName_id", "id (uint32)")
F.Ticket_Granting_GetName_retval_len = ProtoField.uint16("Ticket_Granting_GetName_retval_len", "retval length (String)")
F.Ticket_Granting_GetName_retval_data = ProtoField.string("Ticket_Granting_GetName_retval_data", "retval data (String)")
F.Ticket_Granting_LoginWithContext_loginData_data_bytes = ProtoField.bytes("Ticket_Granting_LoginWithContext_loginData_data_bytes", "loginData data bytes (bytes)")
F.Ticket_Granting_LoginWithContext_loginData_type_name_len = ProtoField.uint16("Ticket_Granting_LoginWithContext_loginData_type_name_len", "loginData_type_name length (String)")
F.Ticket_Granting_LoginWithContext_loginData_type_name_data = ProtoField.string("Ticket_Granting_LoginWithContext_loginData_type_name_data", "loginData_type_name data (String)")
F.Ticket_Granting_LoginWithContext_loginData_len_plus_four = ProtoField.uint32("Ticket_Granting_LoginWithContext_loginData_len_plus_four", "loginData_len_plus_four (uint32)")
F.Ticket_Granting_LoginWithContext_loginData_data_len = ProtoField.uint32("Ticket_Granting_LoginWithContext_loginData_data_len", "loginData_data_len (uint32)")
F.Ticket_Granting_LoginWithContext_retval = ProtoField.uint32("Ticket_Granting_LoginWithContext_retval", "retval (uint32)")
F.Ticket_Granting_LoginWithContext_pidPrincipal = ProtoField.uint32("Ticket_Granting_LoginWithContext_pidPrincipal", "pidPrincipal (uint32)")
F.Ticket_Granting_LoginWithContext_pbufResponse_len = ProtoField.uint32("Ticket_Granting_LoginWithContext_pbufResponse_len", "pbufResponse length (Buffer)")
F.Ticket_Granting_LoginWithContext_pbufResponse_data = ProtoField.bytes("Ticket_Granting_LoginWithContext_pbufResponse_data", "pbufResponse data (Buffer)")
F.AA_User_RegisterApplication_Title_id = ProtoField.uint64("AA_User_RegisterApplication_Title_id", "Title id (uint64)")
F.AA_User_UnregisterApplication_Title_id = ProtoField.uint64("AA_User_UnregisterApplication_Title_id", "Title id (uint64)")
F.AA_User_SetApplicationInfo_Application_info_len = ProtoField.uint32("AA_User_SetApplicationInfo_Application_info_len", "Application info length (uint32)")
F.AA_User_GetApplicationInfo_Application_info_len = ProtoField.uint32("AA_User_GetApplicationInfo_Application_info_len", "Application info length (uint32)")
F.SMM_2_GetUsers_Result_codes_len = ProtoField.uint32("SMM_2_GetUsers_Result_codes_len", "Result codes length (uint32)")
F.SMM_2_GetUsers_Result_codes_item = ProtoField.uint32("SMM_2_GetUsers_Result_codes_item", "Result codes (uint32)")
F.SMM_2_SearchUsersUserPoint_Ranks_len = ProtoField.uint32("SMM_2_SearchUsersUserPoint_Ranks_len", "Ranks length (uint32)")
F.SMM_2_SearchUsersUserPoint_Ranks_item = ProtoField.uint32("SMM_2_SearchUsersUserPoint_Ranks_item", "Ranks (uint32)")
F.SMM_2_SearchUsersUserPoint_Result = ProtoField.bool("SMM_2_SearchUsersUserPoint_Result", "Result (bool)")
F.SMM_2_SearchUsersEndlessMode_Unknown_len = ProtoField.uint32("SMM_2_SearchUsersEndlessMode_Unknown_len", "Unknown length (uint32)")
F.SMM_2_SearchUsersEndlessMode_Unknown_item = ProtoField.uint32("SMM_2_SearchUsersEndlessMode_Unknown_item", "Unknown (uint32)")
F.SMM_2_SearchUsersEndlessMode_Unknown = ProtoField.bool("SMM_2_SearchUsersEndlessMode_Unknown", "Unknown (bool)")
F.SMM_2_SearchUsersBattleMode_Unknown_len = ProtoField.uint32("SMM_2_SearchUsersBattleMode_Unknown_len", "Unknown length (uint32)")
F.SMM_2_SearchUsersBattleMode_Unknown_item = ProtoField.uint32("SMM_2_SearchUsersBattleMode_Unknown_item", "Unknown (uint32)")
F.SMM_2_SearchUsersBattleMode_Unknown = ProtoField.bool("SMM_2_SearchUsersBattleMode_Unknown", "Unknown (bool)")
F.SMM_2_SearchUsersFollowee_Unknown = ProtoField.bool("SMM_2_SearchUsersFollowee_Unknown", "Unknown (bool)")
F.SMM_2_SearchUsersClearRanking_Unknown_len = ProtoField.uint32("SMM_2_SearchUsersClearRanking_Unknown_len", "Unknown length (uint32)")
F.SMM_2_SearchUsersClearRanking_Unknown_item = ProtoField.uint32("SMM_2_SearchUsersClearRanking_Unknown_item", "Unknown (uint32)")
F.SMM_2_SearchUsersClearRanking_Unknown = ProtoField.bool("SMM_2_SearchUsersClearRanking_Unknown", "Unknown (bool)")
F.SMM_2_CanPostCourse_Unknown = ProtoField.bool("SMM_2_CanPostCourse_Unknown", "Unknown (bool)")
F.SMM_2_CanPostCourse_Unknown = ProtoField.uint32("SMM_2_CanPostCourse_Unknown", "Unknown (uint32)")
F.SMM_2_UpdateMiiClothes_Param_len = ProtoField.uint32("SMM_2_UpdateMiiClothes_Param_len", "Param length (uint32)")
F.SMM_2_GetMiiClothes_Mii_clothes_len = ProtoField.uint32("SMM_2_GetMiiClothes_Mii_clothes_len", "Mii clothes length (uint32)")
F.SMM_2_GetUserNameNgType_Type = ProtoField.uint8("SMM_2_GetUserNameNgType_Type", "Type (uint8)")
F.SMM_2_GetCourses_Result_codes_len = ProtoField.uint32("SMM_2_GetCourses_Result_codes_len", "Result codes length (uint32)")
F.SMM_2_GetCourses_Result_codes_item = ProtoField.uint32("SMM_2_GetCourses_Result_codes_item", "Result codes (uint32)")
F.SMM_2_SearchCoursesPointRanking_Ranks_len = ProtoField.uint32("SMM_2_SearchCoursesPointRanking_Ranks_len", "Ranks length (uint32)")
F.SMM_2_SearchCoursesPointRanking_Ranks_item = ProtoField.uint32("SMM_2_SearchCoursesPointRanking_Ranks_item", "Ranks (uint32)")
F.SMM_2_SearchCoursesPointRanking_Result = ProtoField.bool("SMM_2_SearchCoursesPointRanking_Result", "Result (bool)")
F.SMM_2_SearchCoursesLatest_Result = ProtoField.bool("SMM_2_SearchCoursesLatest_Result", "Result (bool)")
F.SMM_2_SearchCoursesPostedBy_Result = ProtoField.bool("SMM_2_SearchCoursesPostedBy_Result", "Result (bool)")
F.SMM_2_GetCoursesEvent_Results_len = ProtoField.uint32("SMM_2_GetCoursesEvent_Results_len", "Results length (uint32)")
F.SMM_2_GetCoursesEvent_Results_item = ProtoField.uint32("SMM_2_GetCoursesEvent_Results_item", "Results (uint32)")
F.SMM_2_SearchComments_Data_id = ProtoField.uint64("SMM_2_SearchComments_Data_id", "Data id (uint64)")
F.SMM_2_SearchComments_Comments_len = ProtoField.uint32("SMM_2_SearchComments_Comments_len", "Comments length (uint32)")
F.SMM_2_GetBattleModeRating_Unknown = ProtoField.bool("SMM_2_GetBattleModeRating_Unknown", "Unknown (bool)")
F.SMM_2_GetReqGetInfoHeadersInfo_Data_type = ProtoField.uint8("SMM_2_GetReqGetInfoHeadersInfo_Data_type", "Data type (uint8)")
F.SMM_2_GetEventCourseStamp_Stamps = ProtoField.uint32("SMM_2_GetEventCourseStamp_Stamps", "Stamps (uint32)")
F.SMM_2_ReadEventCourseResult_Unknown = ProtoField.uint64("SMM_2_ReadEventCourseResult_Unknown", "Unknown (uint64)")
F.SMM_2_GetEventCourseGhost_Ghosts_len = ProtoField.uint32("SMM_2_GetEventCourseGhost_Ghosts_len", "Ghosts length (uint32)")
F.MK8_Deluxe_GetCommonDataByPIDList_Pids_len = ProtoField.uint32("MK8_Deluxe_GetCommonDataByPIDList_Pids_len", "Pids length (uint32)")
F.MK8_Deluxe_GetCommonDataByPIDList_Pids_item = ProtoField.uint32("MK8_Deluxe_GetCommonDataByPIDList_Pids_item", "Pids (uint32)")
F.Friends_Wii_U_UpdateAndGetAllInformation_Birthday = ProtoField.uint64("Friends_Wii_U_UpdateAndGetAllInformation_Birthday", "Birthday (uint64)")
F.Friends_Wii_U_UpdateAndGetAllInformation_Friend_list_len = ProtoField.uint32("Friends_Wii_U_UpdateAndGetAllInformation_Friend_list_len", "Friend list length (uint32)")
F.Friends_Wii_U_UpdateAndGetAllInformation_Sent_friend_requests_len = ProtoField.uint32("Friends_Wii_U_UpdateAndGetAllInformation_Sent_friend_requests_len", "Sent friend requests length (uint32)")
F.Friends_Wii_U_UpdateAndGetAllInformation_Received_friend_requests_len = ProtoField.uint32("Friends_Wii_U_UpdateAndGetAllInformation_Received_friend_requests_len", "Received friend requests length (uint32)")
F.Friends_Wii_U_UpdateAndGetAllInformation_Blacklist_len = ProtoField.uint32("Friends_Wii_U_UpdateAndGetAllInformation_Blacklist_len", "Blacklist length (uint32)")
F.Friends_Wii_U_UpdateAndGetAllInformation_Unknown = ProtoField.bool("Friends_Wii_U_UpdateAndGetAllInformation_Unknown", "Unknown (bool)")
F.Friends_Wii_U_UpdateAndGetAllInformation_Notifications_len = ProtoField.uint32("Friends_Wii_U_UpdateAndGetAllInformation_Notifications_len", "Notifications length (uint32)")
F.Friends_Wii_U_UpdateAndGetAllInformation_Unknown = ProtoField.bool("Friends_Wii_U_UpdateAndGetAllInformation_Unknown", "Unknown (bool)")
F.Friends_Wii_U_AddFriend_Pid = ProtoField.uint32("Friends_Wii_U_AddFriend_Pid", "Pid (uint32)")
F.Friends_Wii_U_AddFriendByName_Name_len = ProtoField.uint16("Friends_Wii_U_AddFriendByName_Name_len", "Name length (String)")
F.Friends_Wii_U_AddFriendByName_Name_data = ProtoField.string("Friends_Wii_U_AddFriendByName_Name_data", "Name data (String)")
F.Friends_Wii_U_RemoveFriend_Pid = ProtoField.uint32("Friends_Wii_U_RemoveFriend_Pid", "Pid (uint32)")
F.Friends_Wii_U_AddFriendRequest_Unknown = ProtoField.uint32("Friends_Wii_U_AddFriendRequest_Unknown", "Unknown (uint32)")
F.Friends_Wii_U_AddFriendRequest_Unknown = ProtoField.uint8("Friends_Wii_U_AddFriendRequest_Unknown", "Unknown (uint8)")
F.Friends_Wii_U_AddFriendRequest_Unknown_len = ProtoField.uint16("Friends_Wii_U_AddFriendRequest_Unknown_len", "Unknown length (String)")
F.Friends_Wii_U_AddFriendRequest_Unknown_data = ProtoField.string("Friends_Wii_U_AddFriendRequest_Unknown_data", "Unknown data (String)")
F.Friends_Wii_U_AddFriendRequest_Unknown = ProtoField.uint8("Friends_Wii_U_AddFriendRequest_Unknown", "Unknown (uint8)")
F.Friends_Wii_U_AddFriendRequest_Unknown_len = ProtoField.uint16("Friends_Wii_U_AddFriendRequest_Unknown_len", "Unknown length (String)")
F.Friends_Wii_U_AddFriendRequest_Unknown_data = ProtoField.string("Friends_Wii_U_AddFriendRequest_Unknown_data", "Unknown data (String)")
F.Friends_Wii_U_AddFriendRequest_Unknown = ProtoField.uint64("Friends_Wii_U_AddFriendRequest_Unknown", "Unknown (uint64)")
F.Friends_Wii_U_CancelFriendRequest_Id = ProtoField.uint64("Friends_Wii_U_CancelFriendRequest_Id", "Id (uint64)")
F.Friends_Wii_U_AcceptFriendRequest_Id = ProtoField.uint64("Friends_Wii_U_AcceptFriendRequest_Id", "Id (uint64)")
F.Friends_Wii_U_DeleteFriendRequest_Id = ProtoField.uint64("Friends_Wii_U_DeleteFriendRequest_Id", "Id (uint64)")
F.Friends_Wii_U_DenyFriendRequest_Id = ProtoField.uint64("Friends_Wii_U_DenyFriendRequest_Id", "Id (uint64)")
F.Friends_Wii_U_MarkFriendRequestsAsReceived_Friend_requests_len = ProtoField.uint32("Friends_Wii_U_MarkFriendRequestsAsReceived_Friend_requests_len", "Friend requests length (uint32)")
F.Friends_Wii_U_MarkFriendRequestsAsReceived_Friend_requests_item = ProtoField.uint64("Friends_Wii_U_MarkFriendRequestsAsReceived_Friend_requests_item", "Friend requests (uint64)")
F.Friends_Wii_U_RemoveBlackList_Pid = ProtoField.uint32("Friends_Wii_U_RemoveBlackList_Pid", "Pid (uint32)")
F.Friends_Wii_U_UpdateMii_Unknown = ProtoField.uint64("Friends_Wii_U_UpdateMii_Unknown", "Unknown (uint64)")
F.Friends_Wii_U_UpdateComment_Unknown = ProtoField.uint64("Friends_Wii_U_UpdateComment_Unknown", "Unknown (uint64)")
F.Friends_Wii_U_GetBasicInfo_Pids_len = ProtoField.uint32("Friends_Wii_U_GetBasicInfo_Pids_len", "Pids length (uint32)")
F.Friends_Wii_U_GetBasicInfo_Pids_item = ProtoField.uint32("Friends_Wii_U_GetBasicInfo_Pids_item", "Pids (uint32)")
F.Friends_Wii_U_GetBasicInfo_Infos_len = ProtoField.uint32("Friends_Wii_U_GetBasicInfo_Infos_len", "Infos length (uint32)")
F.Friends_Wii_U_DeletePersistentNotification_Notifications_len = ProtoField.uint32("Friends_Wii_U_DeletePersistentNotification_Notifications_len", "Notifications length (uint32)")
F.Friends_Wii_U_CheckSettingStatus_Unknown = ProtoField.uint8("Friends_Wii_U_CheckSettingStatus_Unknown", "Unknown (uint8)")
F.Friends_Wii_U_GetRequestBlockSettings_Unknown_len = ProtoField.uint32("Friends_Wii_U_GetRequestBlockSettings_Unknown_len", "Unknown length (uint32)")
F.Friends_Wii_U_GetRequestBlockSettings_Unknown_item = ProtoField.uint32("Friends_Wii_U_GetRequestBlockSettings_Unknown_item", "Unknown (uint32)")
F.Friends_Wii_U_GetRequestBlockSettings_Settings_len = ProtoField.uint32("Friends_Wii_U_GetRequestBlockSettings_Settings_len", "Settings length (uint32)")
F.Simple_Authentication_Authenticate_strUserName_len = ProtoField.uint16("Simple_Authentication_Authenticate_strUserName_len", "strUserName length (String)")
F.Simple_Authentication_Authenticate_strUserName_data = ProtoField.string("Simple_Authentication_Authenticate_strUserName_data", "strUserName data (String)")
F.Simple_Authentication_Authenticate_retval = ProtoField.uint32("Simple_Authentication_Authenticate_retval", "retval (uint32)")
F.Simple_Authentication_Authenticate_pidPrincipal = ProtoField.uint32("Simple_Authentication_Authenticate_pidPrincipal", "pidPrincipal (uint32)")
F.Simple_Authentication_Authenticate_strReturnMsg_len = ProtoField.uint16("Simple_Authentication_Authenticate_strReturnMsg_len", "strReturnMsg length (String)")
F.Simple_Authentication_Authenticate_strReturnMsg_data = ProtoField.string("Simple_Authentication_Authenticate_strReturnMsg_data", "strReturnMsg data (String)")
F.Simple_Authentication_LoginWithToken_strToken_len = ProtoField.uint16("Simple_Authentication_LoginWithToken_strToken_len", "strToken length (String)")
F.Simple_Authentication_LoginWithToken_strToken_data = ProtoField.string("Simple_Authentication_LoginWithToken_strToken_data", "strToken data (String)")
F.Simple_Authentication_LoginWithToken_retval = ProtoField.uint32("Simple_Authentication_LoginWithToken_retval", "retval (uint32)")
F.Simple_Authentication_LoginWithToken_pidPrincipal = ProtoField.uint32("Simple_Authentication_LoginWithToken_pidPrincipal", "pidPrincipal (uint32)")
F.Simple_Authentication_LoginWithToken_strReturnMsg_len = ProtoField.uint16("Simple_Authentication_LoginWithToken_strReturnMsg_len", "strReturnMsg length (String)")
F.Simple_Authentication_LoginWithToken_strReturnMsg_data = ProtoField.string("Simple_Authentication_LoginWithToken_strReturnMsg_data", "strReturnMsg data (String)")
F.Simple_Authentication_LoginWithTokenEx_strToken_len = ProtoField.uint16("Simple_Authentication_LoginWithTokenEx_strToken_len", "strToken length (String)")
F.Simple_Authentication_LoginWithTokenEx_strToken_data = ProtoField.string("Simple_Authentication_LoginWithTokenEx_strToken_data", "strToken data (String)")
F.Simple_Authentication_LoginWithTokenEx_oAnyData_data_bytes = ProtoField.bytes("Simple_Authentication_LoginWithTokenEx_oAnyData_data_bytes", "oAnyData data bytes (bytes)")
F.Simple_Authentication_LoginWithTokenEx_oAnyData_type_name_len = ProtoField.uint16("Simple_Authentication_LoginWithTokenEx_oAnyData_type_name_len", "oAnyData_type_name length (String)")
F.Simple_Authentication_LoginWithTokenEx_oAnyData_type_name_data = ProtoField.string("Simple_Authentication_LoginWithTokenEx_oAnyData_type_name_data", "oAnyData_type_name data (String)")
F.Simple_Authentication_LoginWithTokenEx_oAnyData_len_plus_four = ProtoField.uint32("Simple_Authentication_LoginWithTokenEx_oAnyData_len_plus_four", "oAnyData_len_plus_four (uint32)")
F.Simple_Authentication_LoginWithTokenEx_oAnyData_data_len = ProtoField.uint32("Simple_Authentication_LoginWithTokenEx_oAnyData_data_len", "oAnyData_data_len (uint32)")
F.Simple_Authentication_LoginWithTokenEx_retval = ProtoField.uint32("Simple_Authentication_LoginWithTokenEx_retval", "retval (uint32)")
F.Simple_Authentication_LoginWithTokenEx_pidPrincipal = ProtoField.uint32("Simple_Authentication_LoginWithTokenEx_pidPrincipal", "pidPrincipal (uint32)")
F.Simple_Authentication_LoginWithTokenEx_strReturnMsg_len = ProtoField.uint16("Simple_Authentication_LoginWithTokenEx_strReturnMsg_len", "strReturnMsg length (String)")
F.Simple_Authentication_LoginWithTokenEx_strReturnMsg_data = ProtoField.string("Simple_Authentication_LoginWithTokenEx_strReturnMsg_data", "strReturnMsg data (String)")
F.Simple_Authentication_Login_strUsername_len = ProtoField.uint16("Simple_Authentication_Login_strUsername_len", "strUsername length (String)")
F.Simple_Authentication_Login_strUsername_data = ProtoField.string("Simple_Authentication_Login_strUsername_data", "strUsername data (String)")
F.Simple_Authentication_Login_strPassword_len = ProtoField.uint16("Simple_Authentication_Login_strPassword_len", "strPassword length (String)")
F.Simple_Authentication_Login_strPassword_data = ProtoField.string("Simple_Authentication_Login_strPassword_data", "strPassword data (String)")
F.Simple_Authentication_Login_retval = ProtoField.uint32("Simple_Authentication_Login_retval", "retval (uint32)")
F.Simple_Authentication_Login_pidPrincipal = ProtoField.uint32("Simple_Authentication_Login_pidPrincipal", "pidPrincipal (uint32)")
F.Simple_Authentication_Login_strReturnMsg_len = ProtoField.uint16("Simple_Authentication_Login_strReturnMsg_len", "strReturnMsg length (String)")
F.Simple_Authentication_Login_strReturnMsg_data = ProtoField.string("Simple_Authentication_Login_strReturnMsg_data", "strReturnMsg data (String)")
F.Simple_Authentication_LoginWithSubAccount_loginData_data_bytes = ProtoField.bytes("Simple_Authentication_LoginWithSubAccount_loginData_data_bytes", "loginData data bytes (bytes)")
F.Simple_Authentication_LoginWithSubAccount_loginData_type_name_len = ProtoField.uint16("Simple_Authentication_LoginWithSubAccount_loginData_type_name_len", "loginData_type_name length (String)")
F.Simple_Authentication_LoginWithSubAccount_loginData_type_name_data = ProtoField.string("Simple_Authentication_LoginWithSubAccount_loginData_type_name_data", "loginData_type_name data (String)")
F.Simple_Authentication_LoginWithSubAccount_loginData_len_plus_four = ProtoField.uint32("Simple_Authentication_LoginWithSubAccount_loginData_len_plus_four", "loginData_len_plus_four (uint32)")
F.Simple_Authentication_LoginWithSubAccount_loginData_data_len = ProtoField.uint32("Simple_Authentication_LoginWithSubAccount_loginData_data_len", "loginData_data_len (uint32)")
F.Simple_Authentication_LoginWithSubAccount_retval = ProtoField.uint32("Simple_Authentication_LoginWithSubAccount_retval", "retval (uint32)")
F.Simple_Authentication_LoginWithSubAccount_pidPrincipal = ProtoField.uint32("Simple_Authentication_LoginWithSubAccount_pidPrincipal", "pidPrincipal (uint32)")
F.Simple_Authentication_LoginWithSubAccount_strReturnMsg_len = ProtoField.uint16("Simple_Authentication_LoginWithSubAccount_strReturnMsg_len", "strReturnMsg length (String)")
F.Simple_Authentication_LoginWithSubAccount_strReturnMsg_data = ProtoField.string("Simple_Authentication_LoginWithSubAccount_strReturnMsg_data", "strReturnMsg data (String)")
F.Simple_Authentication_Register_vecMyURLs_len = ProtoField.uint32("Simple_Authentication_Register_vecMyURLs_len", "vecMyURLs length (uint32)")
F.Simple_Authentication_Register_vecMyURLs_item_len = ProtoField.uint16("Simple_Authentication_Register_vecMyURLs_item_len", "vecMyURLs length (String)")
F.Simple_Authentication_Register_vecMyURLs_item_data = ProtoField.string("Simple_Authentication_Register_vecMyURLs_item_data", "vecMyURLs data (String)")
F.Simple_Authentication_Register_retval = ProtoField.uint32("Simple_Authentication_Register_retval", "retval (uint32)")
F.Simple_Authentication_Register_pidConnectionID = ProtoField.uint32("Simple_Authentication_Register_pidConnectionID", "pidConnectionID (uint32)")
F.Simple_Authentication_Register_urlPublic_len = ProtoField.uint16("Simple_Authentication_Register_urlPublic_len", "urlPublic length (String)")
F.Simple_Authentication_Register_urlPublic_data = ProtoField.string("Simple_Authentication_Register_urlPublic_data", "urlPublic data (String)")
F.Simple_Authentication_RegisterEx_vecMyURLs_len = ProtoField.uint32("Simple_Authentication_RegisterEx_vecMyURLs_len", "vecMyURLs length (uint32)")
F.Simple_Authentication_RegisterEx_vecMyURLs_item_len = ProtoField.uint16("Simple_Authentication_RegisterEx_vecMyURLs_item_len", "vecMyURLs length (String)")
F.Simple_Authentication_RegisterEx_vecMyURLs_item_data = ProtoField.string("Simple_Authentication_RegisterEx_vecMyURLs_item_data", "vecMyURLs data (String)")
F.Simple_Authentication_RegisterEx_hCustomData_data_bytes = ProtoField.bytes("Simple_Authentication_RegisterEx_hCustomData_data_bytes", "hCustomData data bytes (bytes)")
F.Simple_Authentication_RegisterEx_hCustomData_type_name_len = ProtoField.uint16("Simple_Authentication_RegisterEx_hCustomData_type_name_len", "hCustomData_type_name length (String)")
F.Simple_Authentication_RegisterEx_hCustomData_type_name_data = ProtoField.string("Simple_Authentication_RegisterEx_hCustomData_type_name_data", "hCustomData_type_name data (String)")
F.Simple_Authentication_RegisterEx_hCustomData_len_plus_four = ProtoField.uint32("Simple_Authentication_RegisterEx_hCustomData_len_plus_four", "hCustomData_len_plus_four (uint32)")
F.Simple_Authentication_RegisterEx_hCustomData_data_len = ProtoField.uint32("Simple_Authentication_RegisterEx_hCustomData_data_len", "hCustomData_data_len (uint32)")
F.Simple_Authentication_RegisterEx_retval = ProtoField.uint32("Simple_Authentication_RegisterEx_retval", "retval (uint32)")
F.Simple_Authentication_RegisterEx_pidConnectionID = ProtoField.uint32("Simple_Authentication_RegisterEx_pidConnectionID", "pidConnectionID (uint32)")
F.Simple_Authentication_RegisterEx_urlPublic_len = ProtoField.uint16("Simple_Authentication_RegisterEx_urlPublic_len", "urlPublic length (String)")
F.Simple_Authentication_RegisterEx_urlPublic_data = ProtoField.string("Simple_Authentication_RegisterEx_urlPublic_data", "urlPublic data (String)")
F.Simple_Authentication_LoginWithTokenCafe_strNintendoToken_len = ProtoField.uint16("Simple_Authentication_LoginWithTokenCafe_strNintendoToken_len", "strNintendoToken length (String)")
F.Simple_Authentication_LoginWithTokenCafe_strNintendoToken_data = ProtoField.string("Simple_Authentication_LoginWithTokenCafe_strNintendoToken_data", "strNintendoToken data (String)")
F.Simple_Authentication_LoginWithTokenCafe_retval = ProtoField.uint32("Simple_Authentication_LoginWithTokenCafe_retval", "retval (uint32)")
F.Simple_Authentication_LoginWithTokenCafe_pidPrincipal = ProtoField.uint32("Simple_Authentication_LoginWithTokenCafe_pidPrincipal", "pidPrincipal (uint32)")
F.Simple_Authentication_LoginWithTokenCafe_strReturnMsg_len = ProtoField.uint16("Simple_Authentication_LoginWithTokenCafe_strReturnMsg_len", "strReturnMsg length (String)")
F.Simple_Authentication_LoginWithTokenCafe_strReturnMsg_data = ProtoField.string("Simple_Authentication_LoginWithTokenCafe_strReturnMsg_data", "strReturnMsg data (String)")
F.Simple_Authentication_LoginWithTokenCafeEx_strNintendoToken_len = ProtoField.uint16("Simple_Authentication_LoginWithTokenCafeEx_strNintendoToken_len", "strNintendoToken length (String)")
F.Simple_Authentication_LoginWithTokenCafeEx_strNintendoToken_data = ProtoField.string("Simple_Authentication_LoginWithTokenCafeEx_strNintendoToken_data", "strNintendoToken data (String)")
F.Simple_Authentication_LoginWithTokenCafeEx_oAnyData_data_bytes = ProtoField.bytes("Simple_Authentication_LoginWithTokenCafeEx_oAnyData_data_bytes", "oAnyData data bytes (bytes)")
F.Simple_Authentication_LoginWithTokenCafeEx_oAnyData_type_name_len = ProtoField.uint16("Simple_Authentication_LoginWithTokenCafeEx_oAnyData_type_name_len", "oAnyData_type_name length (String)")
F.Simple_Authentication_LoginWithTokenCafeEx_oAnyData_type_name_data = ProtoField.string("Simple_Authentication_LoginWithTokenCafeEx_oAnyData_type_name_data", "oAnyData_type_name data (String)")
F.Simple_Authentication_LoginWithTokenCafeEx_oAnyData_len_plus_four = ProtoField.uint32("Simple_Authentication_LoginWithTokenCafeEx_oAnyData_len_plus_four", "oAnyData_len_plus_four (uint32)")
F.Simple_Authentication_LoginWithTokenCafeEx_oAnyData_data_len = ProtoField.uint32("Simple_Authentication_LoginWithTokenCafeEx_oAnyData_data_len", "oAnyData_data_len (uint32)")
F.Simple_Authentication_LoginWithTokenCafeEx_retval = ProtoField.uint32("Simple_Authentication_LoginWithTokenCafeEx_retval", "retval (uint32)")
F.Simple_Authentication_LoginWithTokenCafeEx_pidPrincipal = ProtoField.uint32("Simple_Authentication_LoginWithTokenCafeEx_pidPrincipal", "pidPrincipal (uint32)")
F.Simple_Authentication_LoginWithTokenCafeEx_strReturnMsg_len = ProtoField.uint16("Simple_Authentication_LoginWithTokenCafeEx_strReturnMsg_len", "strReturnMsg length (String)")
F.Simple_Authentication_LoginWithTokenCafeEx_strReturnMsg_data = ProtoField.string("Simple_Authentication_LoginWithTokenCafeEx_strReturnMsg_data", "strReturnMsg data (String)")
F.Game_Session_SearchSessions_searchResults_len = ProtoField.uint32("Game_Session_SearchSessions_searchResults_len", "searchResults length (uint32)")
F.Game_Session_AddParticipants_publicParticipantIDs_len = ProtoField.uint32("Game_Session_AddParticipants_publicParticipantIDs_len", "publicParticipantIDs length (uint32)")
F.Game_Session_AddParticipants_publicParticipantIDs_item = ProtoField.uint32("Game_Session_AddParticipants_publicParticipantIDs_item", "publicParticipantIDs (uint32)")
F.Game_Session_AddParticipants_privateParticipantIDs_len = ProtoField.uint32("Game_Session_AddParticipants_privateParticipantIDs_len", "privateParticipantIDs length (uint32)")
F.Game_Session_AddParticipants_privateParticipantIDs_item = ProtoField.uint32("Game_Session_AddParticipants_privateParticipantIDs_item", "privateParticipantIDs (uint32)")
F.Game_Session_RemoveParticipants_participantIDs_len = ProtoField.uint32("Game_Session_RemoveParticipants_participantIDs_len", "participantIDs length (uint32)")
F.Game_Session_RemoveParticipants_participantIDs_item = ProtoField.uint32("Game_Session_RemoveParticipants_participantIDs_item", "participantIDs (uint32)")
F.Game_Session_GetParticipantCount_count = ProtoField.uint32("Game_Session_GetParticipantCount_count", "count (uint32)")
F.Game_Session_GetParticipants_participants_len = ProtoField.uint32("Game_Session_GetParticipants_participants_len", "participants length (uint32)")
F.Game_Session_GetInvitationReceivedCount_gameSessionTypeID = ProtoField.uint32("Game_Session_GetInvitationReceivedCount_gameSessionTypeID", "gameSessionTypeID (uint32)")
F.Game_Session_GetInvitationReceivedCount_count = ProtoField.uint32("Game_Session_GetInvitationReceivedCount_count", "count (uint32)")
F.Game_Session_GetInvitationsReceived_gameSessionTypeID = ProtoField.uint32("Game_Session_GetInvitationsReceived_gameSessionTypeID", "gameSessionTypeID (uint32)")
F.Game_Session_GetInvitationsReceived_invitations_len = ProtoField.uint32("Game_Session_GetInvitationsReceived_invitations_len", "invitations length (uint32)")
F.Game_Session_GetInvitationSentCount_gameSessionTypeID = ProtoField.uint32("Game_Session_GetInvitationSentCount_gameSessionTypeID", "gameSessionTypeID (uint32)")
F.Game_Session_GetInvitationSentCount_count = ProtoField.uint32("Game_Session_GetInvitationSentCount_count", "count (uint32)")
F.Game_Session_GetInvitationsSent_gameSessionTypeID = ProtoField.uint32("Game_Session_GetInvitationsSent_gameSessionTypeID", "gameSessionTypeID (uint32)")
F.Game_Session_GetInvitationsSent_invitations_len = ProtoField.uint32("Game_Session_GetInvitationsSent_invitations_len", "invitations length (uint32)")
F.Game_Session_RegisterURLs_stationURLs_len = ProtoField.uint32("Game_Session_RegisterURLs_stationURLs_len", "stationURLs length (uint32)")
F.Game_Session_RegisterURLs_stationURLs_item_len = ProtoField.uint16("Game_Session_RegisterURLs_stationURLs_item_len", "stationURLs length (String)")
F.Game_Session_RegisterURLs_stationURLs_item_data = ProtoField.string("Game_Session_RegisterURLs_stationURLs_item_data", "stationURLs data (String)")
F.Game_Session_SearchSessionsWithParticipants_gameSessionTypeID = ProtoField.uint32("Game_Session_SearchSessionsWithParticipants_gameSessionTypeID", "gameSessionTypeID (uint32)")
F.Game_Session_SearchSessionsWithParticipants_participantIDs_len = ProtoField.uint32("Game_Session_SearchSessionsWithParticipants_participantIDs_len", "participantIDs length (uint32)")
F.Game_Session_SearchSessionsWithParticipants_participantIDs_item = ProtoField.uint32("Game_Session_SearchSessionsWithParticipants_participantIDs_item", "participantIDs (uint32)")
F.Game_Session_SearchSessionsWithParticipants_searchResults_len = ProtoField.uint32("Game_Session_SearchSessionsWithParticipants_searchResults_len", "searchResults length (uint32)")
F.Game_Session_GetSessions_gameSessionKeys_len = ProtoField.uint32("Game_Session_GetSessions_gameSessionKeys_len", "gameSessionKeys length (uint32)")
F.Game_Session_GetSessions_searchResults_len = ProtoField.uint32("Game_Session_GetSessions_searchResults_len", "searchResults length (uint32)")
F.Game_Session_GetParticipantsURLs_participantIDs_len = ProtoField.uint32("Game_Session_GetParticipantsURLs_participantIDs_len", "participantIDs length (uint32)")
F.Game_Session_GetParticipantsURLs_participantIDs_item = ProtoField.uint32("Game_Session_GetParticipantsURLs_participantIDs_item", "participantIDs (uint32)")
F.Game_Session_GetParticipantsURLs_participants_len = ProtoField.uint32("Game_Session_GetParticipantsURLs_participants_len", "participants length (uint32)")
F.Game_Session_SearchSocialSessions_searchResults_len = ProtoField.uint32("Game_Session_SearchSocialSessions_searchResults_len", "searchResults length (uint32)")
F.Game_Session_ReportUnsuccessfulJoinSessions_unsuccessfulJoinSessions_len = ProtoField.uint32("Game_Session_ReportUnsuccessfulJoinSessions_unsuccessfulJoinSessions_len", "unsuccessfulJoinSessions length (uint32)")
F.Ranking_2_PutScore_scoreDataList_len = ProtoField.uint32("Ranking_2_PutScore_scoreDataList_len", "scoreDataList length (uint32)")
F.Ranking_2_PutScore_nexUniqueId = ProtoField.uint64("Ranking_2_PutScore_nexUniqueId", "nexUniqueId (uint64)")
F.Ranking_2_GetCommonData_optionFlags = ProtoField.uint32("Ranking_2_GetCommonData_optionFlags", "optionFlags (uint32)")
F.Ranking_2_GetCommonData_principalId = ProtoField.uint32("Ranking_2_GetCommonData_principalId", "principalId (uint32)")
F.Ranking_2_GetCommonData_nexUniqueId = ProtoField.uint64("Ranking_2_GetCommonData_nexUniqueId", "nexUniqueId (uint64)")
F.Ranking_2_PutCommonData_nexUniqueId = ProtoField.uint64("Ranking_2_PutCommonData_nexUniqueId", "nexUniqueId (uint64)")
F.Ranking_2_DeleteCommonData_nexUniqueId = ProtoField.uint64("Ranking_2_DeleteCommonData_nexUniqueId", "nexUniqueId (uint64)")
F.Ranking_2_GetRankingByPrincipalId_principalIdList_len = ProtoField.uint32("Ranking_2_GetRankingByPrincipalId_principalIdList_len", "principalIdList length (uint32)")
F.Ranking_2_GetRankingByPrincipalId_principalIdList_item = ProtoField.uint32("Ranking_2_GetRankingByPrincipalId_principalIdList_item", "principalIdList (uint32)")
F.Ranking_2_GetCategorySetting_category = ProtoField.uint32("Ranking_2_GetCategorySetting_category", "category (uint32)")
F.Ranking_2_GetRankingCharts_infoArray_len = ProtoField.uint32("Ranking_2_GetRankingCharts_infoArray_len", "infoArray length (uint32)")
F.Ranking_2_GetRankingCharts_chartArray_len = ProtoField.uint32("Ranking_2_GetRankingCharts_chartArray_len", "chartArray length (uint32)")
F.Ubi_Account_Management_CreateAccount_failedReasons_len = ProtoField.uint32("Ubi_Account_Management_CreateAccount_failedReasons_len", "failedReasons length (uint32)")
F.Ubi_Account_Management_UpdateAccount_failedReasons_len = ProtoField.uint32("Ubi_Account_Management_UpdateAccount_failedReasons_len", "failedReasons length (uint32)")
F.Ubi_Account_Management_GetAccount_exists = ProtoField.bool("Ubi_Account_Management_GetAccount_exists", "exists (bool)")
F.Ubi_Account_Management_LinkAccount_ubiAccountUsername_len = ProtoField.uint16("Ubi_Account_Management_LinkAccount_ubiAccountUsername_len", "ubiAccountUsername length (String)")
F.Ubi_Account_Management_LinkAccount_ubiAccountUsername_data = ProtoField.string("Ubi_Account_Management_LinkAccount_ubiAccountUsername_data", "ubiAccountUsername data (String)")
F.Ubi_Account_Management_LinkAccount_ubiAccountPassword_len = ProtoField.uint16("Ubi_Account_Management_LinkAccount_ubiAccountPassword_len", "ubiAccountPassword length (String)")
F.Ubi_Account_Management_LinkAccount_ubiAccountPassword_data = ProtoField.string("Ubi_Account_Management_LinkAccount_ubiAccountPassword_data", "ubiAccountPassword data (String)")
F.Ubi_Account_Management_GetTOS_countryCode_len = ProtoField.uint16("Ubi_Account_Management_GetTOS_countryCode_len", "countryCode length (String)")
F.Ubi_Account_Management_GetTOS_countryCode_data = ProtoField.string("Ubi_Account_Management_GetTOS_countryCode_data", "countryCode data (String)")
F.Ubi_Account_Management_GetTOS_languageCode_len = ProtoField.uint16("Ubi_Account_Management_GetTOS_languageCode_len", "languageCode length (String)")
F.Ubi_Account_Management_GetTOS_languageCode_data = ProtoField.string("Ubi_Account_Management_GetTOS_languageCode_data", "languageCode data (String)")
F.Ubi_Account_Management_GetTOS_htmlVersion = ProtoField.bool("Ubi_Account_Management_GetTOS_htmlVersion", "htmlVersion (bool)")
F.Ubi_Account_Management_ValidateUsername_username_len = ProtoField.uint16("Ubi_Account_Management_ValidateUsername_username_len", "username length (String)")
F.Ubi_Account_Management_ValidateUsername_username_data = ProtoField.string("Ubi_Account_Management_ValidateUsername_username_data", "username data (String)")
F.Ubi_Account_Management_ValidatePassword_password_len = ProtoField.uint16("Ubi_Account_Management_ValidatePassword_password_len", "password length (String)")
F.Ubi_Account_Management_ValidatePassword_password_data = ProtoField.string("Ubi_Account_Management_ValidatePassword_password_data", "password data (String)")
F.Ubi_Account_Management_ValidatePassword_username_len = ProtoField.uint16("Ubi_Account_Management_ValidatePassword_username_len", "username length (String)")
F.Ubi_Account_Management_ValidatePassword_username_data = ProtoField.string("Ubi_Account_Management_ValidatePassword_username_data", "username data (String)")
F.Ubi_Account_Management_ValidatePassword_failedReasons_len = ProtoField.uint32("Ubi_Account_Management_ValidatePassword_failedReasons_len", "failedReasons length (uint32)")
F.Ubi_Account_Management_ValidateEmail_email_len = ProtoField.uint16("Ubi_Account_Management_ValidateEmail_email_len", "email length (String)")
F.Ubi_Account_Management_ValidateEmail_email_data = ProtoField.string("Ubi_Account_Management_ValidateEmail_email_data", "email data (String)")
F.Ubi_Account_Management_ValidateEmail_failedReasons_len = ProtoField.uint32("Ubi_Account_Management_ValidateEmail_failedReasons_len", "failedReasons length (uint32)")
F.Ubi_Account_Management_GetCountryList_languageCode_len = ProtoField.uint16("Ubi_Account_Management_GetCountryList_languageCode_len", "languageCode length (String)")
F.Ubi_Account_Management_GetCountryList_languageCode_data = ProtoField.string("Ubi_Account_Management_GetCountryList_languageCode_data", "languageCode data (String)")
F.Ubi_Account_Management_GetCountryList_countries_len = ProtoField.uint32("Ubi_Account_Management_GetCountryList_countries_len", "countries length (uint32)")
F.Ubi_Account_Management_ForgetPassword_usernameOrEmail_len = ProtoField.uint16("Ubi_Account_Management_ForgetPassword_usernameOrEmail_len", "usernameOrEmail length (String)")
F.Ubi_Account_Management_ForgetPassword_usernameOrEmail_data = ProtoField.string("Ubi_Account_Management_ForgetPassword_usernameOrEmail_data", "usernameOrEmail data (String)")
F.Ubi_Account_Management_LookupPrincipalIds_ubiAccountIds_len = ProtoField.uint32("Ubi_Account_Management_LookupPrincipalIds_ubiAccountIds_len", "ubiAccountIds length (uint32)")
F.Ubi_Account_Management_LookupPrincipalIds_ubiAccountIds_item_len = ProtoField.uint16("Ubi_Account_Management_LookupPrincipalIds_ubiAccountIds_item_len", "ubiAccountIds length (String)")
F.Ubi_Account_Management_LookupPrincipalIds_ubiAccountIds_item_data = ProtoField.string("Ubi_Account_Management_LookupPrincipalIds_ubiAccountIds_item_data", "ubiAccountIds data (String)")
F.Ubi_Account_Management_LookupPrincipalIds_pids_len = ProtoField.uint32("Ubi_Account_Management_LookupPrincipalIds_pids_len", "pids length (uint32)")
F.Ubi_Account_Management_LookupPrincipalIds_pids_key_len = ProtoField.uint16("Ubi_Account_Management_LookupPrincipalIds_pids_key_len", "pids length (String)")
F.Ubi_Account_Management_LookupPrincipalIds_pids_key_data = ProtoField.string("Ubi_Account_Management_LookupPrincipalIds_pids_key_data", "pids data (String)")
F.Ubi_Account_Management_LookupPrincipalIds_pids_value = ProtoField.uint32("Ubi_Account_Management_LookupPrincipalIds_pids_value", "pids (uint32)")
F.Ubi_Account_Management_LookupUbiAccountIDsByPids_pids_len = ProtoField.uint32("Ubi_Account_Management_LookupUbiAccountIDsByPids_pids_len", "pids length (uint32)")
F.Ubi_Account_Management_LookupUbiAccountIDsByPids_pids_item = ProtoField.uint32("Ubi_Account_Management_LookupUbiAccountIDsByPids_pids_item", "pids (uint32)")
F.Ubi_Account_Management_LookupUbiAccountIDsByPids_ubiaccountIDs_len = ProtoField.uint32("Ubi_Account_Management_LookupUbiAccountIDsByPids_ubiaccountIDs_len", "ubiaccountIDs length (uint32)")
F.Ubi_Account_Management_LookupUbiAccountIDsByPids_ubiaccountIDs_key = ProtoField.uint32("Ubi_Account_Management_LookupUbiAccountIDsByPids_ubiaccountIDs_key", "ubiaccountIDs (uint32)")
F.Ubi_Account_Management_LookupUbiAccountIDsByPids_ubiaccountIDs_value_len = ProtoField.uint16("Ubi_Account_Management_LookupUbiAccountIDsByPids_ubiaccountIDs_value_len", "ubiaccountIDs length (String)")
F.Ubi_Account_Management_LookupUbiAccountIDsByPids_ubiaccountIDs_value_data = ProtoField.string("Ubi_Account_Management_LookupUbiAccountIDsByPids_ubiaccountIDs_value_data", "ubiaccountIDs data (String)")
F.Ubi_Account_Management_LookupUbiAccountIDsByUsernames_Usernames_len = ProtoField.uint32("Ubi_Account_Management_LookupUbiAccountIDsByUsernames_Usernames_len", "Usernames length (uint32)")
F.Ubi_Account_Management_LookupUbiAccountIDsByUsernames_Usernames_item_len = ProtoField.uint16("Ubi_Account_Management_LookupUbiAccountIDsByUsernames_Usernames_item_len", "Usernames length (String)")
F.Ubi_Account_Management_LookupUbiAccountIDsByUsernames_Usernames_item_data = ProtoField.string("Ubi_Account_Management_LookupUbiAccountIDsByUsernames_Usernames_item_data", "Usernames data (String)")
F.Ubi_Account_Management_LookupUbiAccountIDsByUsernames_UbiAccountIDs_len = ProtoField.uint32("Ubi_Account_Management_LookupUbiAccountIDsByUsernames_UbiAccountIDs_len", "UbiAccountIDs length (uint32)")
F.Ubi_Account_Management_LookupUbiAccountIDsByUsernames_UbiAccountIDs_key_len = ProtoField.uint16("Ubi_Account_Management_LookupUbiAccountIDsByUsernames_UbiAccountIDs_key_len", "UbiAccountIDs length (String)")
F.Ubi_Account_Management_LookupUbiAccountIDsByUsernames_UbiAccountIDs_key_data = ProtoField.string("Ubi_Account_Management_LookupUbiAccountIDsByUsernames_UbiAccountIDs_key_data", "UbiAccountIDs data (String)")
F.Ubi_Account_Management_LookupUbiAccountIDsByUsernames_UbiAccountIDs_value_len = ProtoField.uint16("Ubi_Account_Management_LookupUbiAccountIDsByUsernames_UbiAccountIDs_value_len", "UbiAccountIDs length (String)")
F.Ubi_Account_Management_LookupUbiAccountIDsByUsernames_UbiAccountIDs_value_data = ProtoField.string("Ubi_Account_Management_LookupUbiAccountIDsByUsernames_UbiAccountIDs_value_data", "UbiAccountIDs data (String)")
F.Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_UbiAccountIds_len = ProtoField.uint32("Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_UbiAccountIds_len", "UbiAccountIds length (uint32)")
F.Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_UbiAccountIds_item_len = ProtoField.uint16("Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_UbiAccountIds_item_len", "UbiAccountIds length (String)")
F.Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_UbiAccountIds_item_data = ProtoField.string("Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_UbiAccountIds_item_data", "UbiAccountIds data (String)")
F.Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_Usernames_len = ProtoField.uint32("Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_Usernames_len", "Usernames length (uint32)")
F.Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_Usernames_key_len = ProtoField.uint16("Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_Usernames_key_len", "Usernames length (String)")
F.Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_Usernames_key_data = ProtoField.string("Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_Usernames_key_data", "Usernames data (String)")
F.Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_Usernames_value_len = ProtoField.uint16("Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_Usernames_value_len", "Usernames length (String)")
F.Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_Usernames_value_data = ProtoField.string("Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_Usernames_value_data", "Usernames data (String)")
F.Ubi_Account_Management_LookupUbiAccountIDsByUsernameSubString_UsernameSubString_len = ProtoField.uint16("Ubi_Account_Management_LookupUbiAccountIDsByUsernameSubString_UsernameSubString_len", "UsernameSubString length (String)")
F.Ubi_Account_Management_LookupUbiAccountIDsByUsernameSubString_UsernameSubString_data = ProtoField.string("Ubi_Account_Management_LookupUbiAccountIDsByUsernameSubString_UsernameSubString_data", "UsernameSubString data (String)")
F.Ubi_Account_Management_LookupUbiAccountIDsByUsernameSubString_UbiAccountIDs_len = ProtoField.uint32("Ubi_Account_Management_LookupUbiAccountIDsByUsernameSubString_UbiAccountIDs_len", "UbiAccountIDs length (uint32)")
F.Ubi_Account_Management_LookupUbiAccountIDsByUsernameSubString_UbiAccountIDs_key_len = ProtoField.uint16("Ubi_Account_Management_LookupUbiAccountIDsByUsernameSubString_UbiAccountIDs_key_len", "UbiAccountIDs length (String)")
F.Ubi_Account_Management_LookupUbiAccountIDsByUsernameSubString_UbiAccountIDs_key_data = ProtoField.string("Ubi_Account_Management_LookupUbiAccountIDsByUsernameSubString_UbiAccountIDs_key_data", "UbiAccountIDs data (String)")
F.Ubi_Account_Management_LookupUbiAccountIDsByUsernameSubString_UbiAccountIDs_value_len = ProtoField.uint16("Ubi_Account_Management_LookupUbiAccountIDsByUsernameSubString_UbiAccountIDs_value_len", "UbiAccountIDs length (String)")
F.Ubi_Account_Management_LookupUbiAccountIDsByUsernameSubString_UbiAccountIDs_value_data = ProtoField.string("Ubi_Account_Management_LookupUbiAccountIDsByUsernameSubString_UbiAccountIDs_value_data", "UbiAccountIDs data (String)")
F.Ubi_Account_Management_UserHasPlayed_UbiAccountIDs_len = ProtoField.uint32("Ubi_Account_Management_UserHasPlayed_UbiAccountIDs_len", "UbiAccountIDs length (uint32)")
F.Ubi_Account_Management_UserHasPlayed_UbiAccountIDs_item_len = ProtoField.uint16("Ubi_Account_Management_UserHasPlayed_UbiAccountIDs_item_len", "UbiAccountIDs length (String)")
F.Ubi_Account_Management_UserHasPlayed_UbiAccountIDs_item_data = ProtoField.string("Ubi_Account_Management_UserHasPlayed_UbiAccountIDs_item_data", "UbiAccountIDs data (String)")
F.Ubi_Account_Management_UserHasPlayed_UserPresence_len = ProtoField.uint32("Ubi_Account_Management_UserHasPlayed_UserPresence_len", "UserPresence length (uint32)")
F.Ubi_Account_Management_UserHasPlayed_UserPresence_key_len = ProtoField.uint16("Ubi_Account_Management_UserHasPlayed_UserPresence_key_len", "UserPresence length (String)")
F.Ubi_Account_Management_UserHasPlayed_UserPresence_key_data = ProtoField.string("Ubi_Account_Management_UserHasPlayed_UserPresence_key_data", "UserPresence data (String)")
F.Ubi_Account_Management_UserHasPlayed_UserPresence_value = ProtoField.bool("Ubi_Account_Management_UserHasPlayed_UserPresence_value", "UserPresence (bool)")
F.Ubi_Account_Management_IsUserPlaying_UbiAccountIDs_len = ProtoField.uint32("Ubi_Account_Management_IsUserPlaying_UbiAccountIDs_len", "UbiAccountIDs length (uint32)")
F.Ubi_Account_Management_IsUserPlaying_UbiAccountIDs_item_len = ProtoField.uint16("Ubi_Account_Management_IsUserPlaying_UbiAccountIDs_item_len", "UbiAccountIDs length (String)")
F.Ubi_Account_Management_IsUserPlaying_UbiAccountIDs_item_data = ProtoField.string("Ubi_Account_Management_IsUserPlaying_UbiAccountIDs_item_data", "UbiAccountIDs data (String)")
F.Ubi_Account_Management_IsUserPlaying_UserPresence_len = ProtoField.uint32("Ubi_Account_Management_IsUserPlaying_UserPresence_len", "UserPresence length (uint32)")
F.Ubi_Account_Management_IsUserPlaying_UserPresence_key_len = ProtoField.uint16("Ubi_Account_Management_IsUserPlaying_UserPresence_key_len", "UserPresence length (String)")
F.Ubi_Account_Management_IsUserPlaying_UserPresence_key_data = ProtoField.string("Ubi_Account_Management_IsUserPlaying_UserPresence_key_data", "UserPresence data (String)")
F.Ubi_Account_Management_IsUserPlaying_UserPresence_value = ProtoField.bool("Ubi_Account_Management_IsUserPlaying_UserPresence_value", "UserPresence (bool)")
F.Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_Usernames_len = ProtoField.uint32("Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_Usernames_len", "Usernames length (uint32)")
F.Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_Usernames_item_len = ProtoField.uint16("Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_Usernames_item_len", "Usernames length (String)")
F.Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_Usernames_item_data = ProtoField.string("Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_Usernames_item_data", "Usernames data (String)")
F.Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_UbiAccountIDs_len = ProtoField.uint32("Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_UbiAccountIDs_len", "UbiAccountIDs length (uint32)")
F.Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_UbiAccountIDs_key_len = ProtoField.uint16("Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_UbiAccountIDs_key_len", "UbiAccountIDs length (String)")
F.Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_UbiAccountIDs_key_data = ProtoField.string("Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_UbiAccountIDs_key_data", "UbiAccountIDs data (String)")
F.Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_UbiAccountIDs_value_len = ProtoField.uint16("Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_UbiAccountIDs_value_len", "UbiAccountIDs length (String)")
F.Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_UbiAccountIDs_value_data = ProtoField.string("Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_UbiAccountIDs_value_data", "UbiAccountIDs data (String)")
F.Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_Emails_len = ProtoField.uint32("Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_Emails_len", "Emails length (uint32)")
F.Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_Emails_item_len = ProtoField.uint16("Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_Emails_item_len", "Emails length (String)")
F.Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_Emails_item_data = ProtoField.string("Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_Emails_item_data", "Emails data (String)")
F.Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_UbiAccountIDs_len = ProtoField.uint32("Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_UbiAccountIDs_len", "UbiAccountIDs length (uint32)")
F.Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_UbiAccountIDs_key_len = ProtoField.uint16("Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_UbiAccountIDs_key_len", "UbiAccountIDs length (String)")
F.Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_UbiAccountIDs_key_data = ProtoField.string("Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_UbiAccountIDs_key_data", "UbiAccountIDs data (String)")
F.Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_UbiAccountIDs_value_len = ProtoField.uint16("Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_UbiAccountIDs_value_len", "UbiAccountIDs length (String)")
F.Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_UbiAccountIDs_value_data = ProtoField.string("Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_UbiAccountIDs_value_data", "UbiAccountIDs data (String)")
F.Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_UbiAccountIds_len = ProtoField.uint32("Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_UbiAccountIds_len", "UbiAccountIds length (uint32)")
F.Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_UbiAccountIds_item_len = ProtoField.uint16("Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_UbiAccountIds_item_len", "UbiAccountIds length (String)")
F.Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_UbiAccountIds_item_data = ProtoField.string("Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_UbiAccountIds_item_data", "UbiAccountIds data (String)")
F.Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_Usernames_len = ProtoField.uint32("Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_Usernames_len", "Usernames length (uint32)")
F.Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_Usernames_key_len = ProtoField.uint16("Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_Usernames_key_len", "Usernames length (String)")
F.Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_Usernames_key_data = ProtoField.string("Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_Usernames_key_data", "Usernames data (String)")
F.Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_Usernames_value_len = ProtoField.uint16("Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_Usernames_value_len", "Usernames length (String)")
F.Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_Usernames_value_data = ProtoField.string("Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_Usernames_value_data", "Usernames data (String)")
F.Ubi_Account_Management_GetTOSEx_countryCode_len = ProtoField.uint16("Ubi_Account_Management_GetTOSEx_countryCode_len", "countryCode length (String)")
F.Ubi_Account_Management_GetTOSEx_countryCode_data = ProtoField.string("Ubi_Account_Management_GetTOSEx_countryCode_data", "countryCode data (String)")
F.Ubi_Account_Management_GetTOSEx_languageCode_len = ProtoField.uint16("Ubi_Account_Management_GetTOSEx_languageCode_len", "languageCode length (String)")
F.Ubi_Account_Management_GetTOSEx_languageCode_data = ProtoField.string("Ubi_Account_Management_GetTOSEx_languageCode_data", "languageCode data (String)")
F.Ubi_Account_Management_GetTOSEx_htmlVersion = ProtoField.bool("Ubi_Account_Management_GetTOSEx_htmlVersion", "htmlVersion (bool)")
F.Ubi_Account_Management_HasAcceptedLatestTOS_hasAccepted = ProtoField.bool("Ubi_Account_Management_HasAcceptedLatestTOS_hasAccepted", "hasAccepted (bool)")
F.Ubi_Account_Management_HasAcceptedLatestTOS_failedReasons_len = ProtoField.uint32("Ubi_Account_Management_HasAcceptedLatestTOS_failedReasons_len", "failedReasons length (uint32)")
F.Ubi_Account_Management_AcceptLatestTOS_failedReasons_len = ProtoField.uint32("Ubi_Account_Management_AcceptLatestTOS_failedReasons_len", "failedReasons length (uint32)")
F.Match_Making_Ext_EndParticipation_idGathering = ProtoField.uint32("Match_Making_Ext_EndParticipation_idGathering", "idGathering (uint32)")
F.Match_Making_Ext_EndParticipation_strMessage_len = ProtoField.uint16("Match_Making_Ext_EndParticipation_strMessage_len", "strMessage length (String)")
F.Match_Making_Ext_EndParticipation_strMessage_data = ProtoField.string("Match_Making_Ext_EndParticipation_strMessage_data", "strMessage data (String)")
F.Match_Making_Ext_EndParticipation_retval = ProtoField.bool("Match_Making_Ext_EndParticipation_retval", "retval (bool)")
F.Match_Making_Ext_GetParticipants_idGathering = ProtoField.uint32("Match_Making_Ext_GetParticipants_idGathering", "idGathering (uint32)")
F.Match_Making_Ext_GetParticipants_bOnlyActive = ProtoField.bool("Match_Making_Ext_GetParticipants_bOnlyActive", "bOnlyActive (bool)")
F.Match_Making_Ext_GetParticipants_lstParticipants_len = ProtoField.uint32("Match_Making_Ext_GetParticipants_lstParticipants_len", "lstParticipants length (uint32)")
F.Match_Making_Ext_GetParticipants_lstParticipants_item = ProtoField.uint32("Match_Making_Ext_GetParticipants_lstParticipants_item", "lstParticipants (uint32)")
F.Match_Making_Ext_GetDetailedParticipants_idGathering = ProtoField.uint32("Match_Making_Ext_GetDetailedParticipants_idGathering", "idGathering (uint32)")
F.Match_Making_Ext_GetDetailedParticipants_bOnlyActiv = ProtoField.bool("Match_Making_Ext_GetDetailedParticipants_bOnlyActiv", "bOnlyActiv (bool)")
F.Match_Making_Ext_GetDetailedParticipants_lstParticipants_len = ProtoField.uint32("Match_Making_Ext_GetDetailedParticipants_lstParticipants_len", "lstParticipants length (uint32)")
F.Match_Making_Ext_GetParticipantsURLs_lstGatherings_len = ProtoField.uint32("Match_Making_Ext_GetParticipantsURLs_lstGatherings_len", "lstGatherings length (uint32)")
F.Match_Making_Ext_GetParticipantsURLs_lstGatherings_item = ProtoField.uint32("Match_Making_Ext_GetParticipantsURLs_lstGatherings_item", "lstGatherings (uint32)")
F.Match_Making_Ext_GetParticipantsURLs_lstGatheringURLs_len = ProtoField.uint32("Match_Making_Ext_GetParticipantsURLs_lstGatheringURLs_len", "lstGatheringURLs length (uint32)")
F.Match_Making_Ext_GetGatheringRelations_id = ProtoField.uint32("Match_Making_Ext_GetGatheringRelations_id", "id (uint32)")
F.Match_Making_Ext_GetGatheringRelations_descr_len = ProtoField.uint16("Match_Making_Ext_GetGatheringRelations_descr_len", "descr length (String)")
F.Match_Making_Ext_GetGatheringRelations_descr_data = ProtoField.string("Match_Making_Ext_GetGatheringRelations_descr_data", "descr data (String)")
F.Match_Making_Ext_GetGatheringRelations_retval_len = ProtoField.uint16("Match_Making_Ext_GetGatheringRelations_retval_len", "retval length (String)")
F.Match_Making_Ext_GetGatheringRelations_retval_data = ProtoField.string("Match_Making_Ext_GetGatheringRelations_retval_data", "retval data (String)")
F.Match_Making_Ext_DeleteFromDeletions_lstDeletions_len = ProtoField.uint32("Match_Making_Ext_DeleteFromDeletions_lstDeletions_len", "lstDeletions length (uint32)")
F.Match_Making_Ext_DeleteFromDeletions_lstDeletions_item = ProtoField.uint32("Match_Making_Ext_DeleteFromDeletions_lstDeletions_item", "lstDeletions (uint32)")
F.Match_Making_Ext_DeleteFromDeletions_pid = ProtoField.uint32("Match_Making_Ext_DeleteFromDeletions_pid", "pid (uint32)")
F.Monitoring_PingDaemon_retval = ProtoField.bool("Monitoring_PingDaemon_retval", "retval (bool)")
F.Monitoring_GetClusterMembers_strValues_len = ProtoField.uint32("Monitoring_GetClusterMembers_strValues_len", "strValues length (uint32)")
F.Monitoring_GetClusterMembers_strValues_item_len = ProtoField.uint16("Monitoring_GetClusterMembers_strValues_item_len", "strValues length (String)")
F.Monitoring_GetClusterMembers_strValues_item_data = ProtoField.string("Monitoring_GetClusterMembers_strValues_item_data", "strValues data (String)")
F.Debug_IsApiRecorderEnabled_True_if_the_api_recorder_is_enabled = ProtoField.bool("Debug_IsApiRecorderEnabled_True_if_the_api_recorder_is_enabled", "True if the api recorder is enabled (bool)")
F.Debug_GetApiCalls_Pids_len = ProtoField.uint32("Debug_GetApiCalls_Pids_len", "Pids length (uint32)")
F.Debug_GetApiCalls_Pids_item = ProtoField.uint32("Debug_GetApiCalls_Pids_item", "Pids (uint32)")
F.Debug_GetApiCalls_Unknown = ProtoField.uint64("Debug_GetApiCalls_Unknown", "Unknown (uint64)")
F.Debug_GetApiCalls_Unknown = ProtoField.uint64("Debug_GetApiCalls_Unknown", "Unknown (uint64)")
F.Debug_GetApiCalls_Api_calls_len = ProtoField.uint32("Debug_GetApiCalls_Api_calls_len", "Api calls length (uint32)")
F.Splatoon_2_AcquireTagId_nexUniqueIds_len = ProtoField.uint32("Splatoon_2_AcquireTagId_nexUniqueIds_len", "nexUniqueIds length (uint32)")
F.Splatoon_2_AcquireTagId_nexUniqueIds_item = ProtoField.uint64("Splatoon_2_AcquireTagId_nexUniqueIds_item", "nexUniqueIds (uint64)")
F.Splatoon_2_AcquireTagId_pTagId = ProtoField.uint64("Splatoon_2_AcquireTagId_pTagId", "pTagId (uint64)")
F.SMO_AddToBufferQueue_buffer_len = ProtoField.uint16("SMO_AddToBufferQueue_buffer_len", "buffer length (Buffer)")
F.SMO_AddToBufferQueue_buffer_data = ProtoField.bytes("SMO_AddToBufferQueue_buffer_data", "buffer data (Buffer)")
F.SMO_AddToBufferQueues_params_len = ProtoField.uint32("SMO_AddToBufferQueues_params_len", "params length (uint32)")
F.SMO_AddToBufferQueues_buffers_len = ProtoField.uint32("SMO_AddToBufferQueues_buffers_len", "buffers length (uint32)")
F.SMO_AddToBufferQueues_buffers_item_len = ProtoField.uint16("SMO_AddToBufferQueues_buffers_item_len", "buffers length (Buffer)")
F.SMO_AddToBufferQueues_buffers_item_data = ProtoField.bytes("SMO_AddToBufferQueues_buffers_item_data", "buffers data (Buffer)")
F.SMO_AddToBufferQueues_pResults_len = ProtoField.uint32("SMO_AddToBufferQueues_pResults_len", "pResults length (uint32)")
F.SMO_AddToBufferQueues_pResults_item = ProtoField.uint32("SMO_AddToBufferQueues_pResults_item", "pResults (uint32)")
F.SMO_GetBufferQueue_pBufferQueue_len = ProtoField.uint32("SMO_GetBufferQueue_pBufferQueue_len", "pBufferQueue length (uint32)")
F.SMO_GetBufferQueue_pBufferQueue_item_len = ProtoField.uint16("SMO_GetBufferQueue_pBufferQueue_item_len", "pBufferQueue length (Buffer)")
F.SMO_GetBufferQueue_pBufferQueue_item_data = ProtoField.bytes("SMO_GetBufferQueue_pBufferQueue_item_data", "pBufferQueue data (Buffer)")
F.SMO_GetBufferQueues_params_len = ProtoField.uint32("SMO_GetBufferQueues_params_len", "params length (uint32)")
F.SMO_GetBufferQueues_pBufferQueueLst_len = ProtoField.uint32("SMO_GetBufferQueues_pBufferQueueLst_len", "pBufferQueueLst length (uint32)")
F.SMO_GetBufferQueues_pBufferQueueLst_item_len = ProtoField.uint32("SMO_GetBufferQueues_pBufferQueueLst_item_len", "pBufferQueueLst length (uint32)")
F.SMO_GetBufferQueues_pBufferQueueLst_item_item_len = ProtoField.uint16("SMO_GetBufferQueues_pBufferQueueLst_item_item_len", "pBufferQueueLst length (Buffer)")
F.SMO_GetBufferQueues_pBufferQueueLst_item_item_data = ProtoField.bytes("SMO_GetBufferQueues_pBufferQueueLst_item_item_data", "pBufferQueueLst data (Buffer)")
F.SMO_GetBufferQueues_pResults_len = ProtoField.uint32("SMO_GetBufferQueues_pResults_len", "pResults length (uint32)")
F.SMO_GetBufferQueues_pResults_item = ProtoField.uint32("SMO_GetBufferQueues_pResults_item", "pResults (uint32)")
F.SMO_ClearBufferQueues_params_len = ProtoField.uint32("SMO_ClearBufferQueues_params_len", "params length (uint32)")
F.SMO_ClearBufferQueues_pResults_len = ProtoField.uint32("SMO_ClearBufferQueues_pResults_len", "pResults length (uint32)")
F.SMO_ClearBufferQueues_pResults_item = ProtoField.uint32("SMO_ClearBufferQueues_pResults_item", "pResults (uint32)")
F.SMO_SearchBalloon_pResults_len = ProtoField.uint32("SMO_SearchBalloon_pResults_len", "pResults length (uint32)")
F.Remote_Log_Device_Log_Message_len = ProtoField.uint16("Remote_Log_Device_Log_Message_len", "Message length (String)")
F.Remote_Log_Device_Log_Message_data = ProtoField.string("Remote_Log_Device_Log_Message_data", "Message data (String)")
F.Privileges_GetPrivileges_localeCode_len = ProtoField.uint16("Privileges_GetPrivileges_localeCode_len", "localeCode length (String)")
F.Privileges_GetPrivileges_localeCode_data = ProtoField.string("Privileges_GetPrivileges_localeCode_data", "localeCode data (String)")
F.Privileges_GetPrivileges_privileges_len = ProtoField.uint32("Privileges_GetPrivileges_privileges_len", "privileges length (uint32)")
F.Privileges_GetPrivileges_privileges_key = ProtoField.uint32("Privileges_GetPrivileges_privileges_key", "privileges (uint32)")
F.Privileges_ActivateKey_uniqueKey_len = ProtoField.uint16("Privileges_ActivateKey_uniqueKey_len", "uniqueKey length (String)")
F.Privileges_ActivateKey_uniqueKey_data = ProtoField.string("Privileges_ActivateKey_uniqueKey_data", "uniqueKey data (String)")
F.Privileges_ActivateKey_languageCode_len = ProtoField.uint16("Privileges_ActivateKey_languageCode_len", "languageCode length (String)")
F.Privileges_ActivateKey_languageCode_data = ProtoField.string("Privileges_ActivateKey_languageCode_data", "languageCode data (String)")
F.Privileges_ActivateKeyWithExpectedPrivileges_uniqueKey_len = ProtoField.uint16("Privileges_ActivateKeyWithExpectedPrivileges_uniqueKey_len", "uniqueKey length (String)")
F.Privileges_ActivateKeyWithExpectedPrivileges_uniqueKey_data = ProtoField.string("Privileges_ActivateKeyWithExpectedPrivileges_uniqueKey_data", "uniqueKey data (String)")
F.Privileges_ActivateKeyWithExpectedPrivileges_languageCode_len = ProtoField.uint16("Privileges_ActivateKeyWithExpectedPrivileges_languageCode_len", "languageCode length (String)")
F.Privileges_ActivateKeyWithExpectedPrivileges_languageCode_data = ProtoField.string("Privileges_ActivateKeyWithExpectedPrivileges_languageCode_data", "languageCode data (String)")
F.Privileges_ActivateKeyWithExpectedPrivileges_expectedPrivilegeIDs_len = ProtoField.uint32("Privileges_ActivateKeyWithExpectedPrivileges_expectedPrivilegeIDs_len", "expectedPrivilegeIDs length (uint32)")
F.Privileges_ActivateKeyWithExpectedPrivileges_expectedPrivilegeIDs_item = ProtoField.uint32("Privileges_ActivateKeyWithExpectedPrivileges_expectedPrivilegeIDs_item", "expectedPrivilegeIDs (uint32)")
F.Privileges_GetPrivilegeRemainDuration_privilegeID = ProtoField.uint32("Privileges_GetPrivilegeRemainDuration_privilegeID", "privilegeID (uint32)")
F.Privileges_GetPrivilegeRemainDuration_seconds = ProtoField.int32("Privileges_GetPrivilegeRemainDuration_seconds", "seconds (uint32)")
F.Privileges_GetExpiredPrivileges_expiredPrivileges_len = ProtoField.uint32("Privileges_GetExpiredPrivileges_expiredPrivileges_len", "expiredPrivileges length (uint32)")
F.Privileges_GetPrivilegesEx_localeCode_len = ProtoField.uint16("Privileges_GetPrivilegesEx_localeCode_len", "localeCode length (String)")
F.Privileges_GetPrivilegesEx_localeCode_data = ProtoField.string("Privileges_GetPrivilegesEx_localeCode_data", "localeCode data (String)")
F.Privileges_GetPrivilegesEx_privilegesEx_len = ProtoField.uint32("Privileges_GetPrivilegesEx_privilegesEx_len", "privilegesEx length (uint32)")
F.Friends_AddFriend_uiPlayer = ProtoField.uint32("Friends_AddFriend_uiPlayer", "uiPlayer (uint32)")
F.Friends_AddFriend_uiDetails = ProtoField.uint32("Friends_AddFriend_uiDetails", "uiDetails (uint32)")
F.Friends_AddFriend_strMessage_len = ProtoField.uint16("Friends_AddFriend_strMessage_len", "strMessage length (String)")
F.Friends_AddFriend_strMessage_data = ProtoField.string("Friends_AddFriend_strMessage_data", "strMessage data (String)")
F.Friends_AddFriend_retval = ProtoField.bool("Friends_AddFriend_retval", "retval (bool)")
F.Friends_AddFriendByName_strPlayerName_len = ProtoField.uint16("Friends_AddFriendByName_strPlayerName_len", "strPlayerName length (String)")
F.Friends_AddFriendByName_strPlayerName_data = ProtoField.string("Friends_AddFriendByName_strPlayerName_data", "strPlayerName data (String)")
F.Friends_AddFriendByName_uiDetails = ProtoField.uint32("Friends_AddFriendByName_uiDetails", "uiDetails (uint32)")
F.Friends_AddFriendByName_strMessage_len = ProtoField.uint16("Friends_AddFriendByName_strMessage_len", "strMessage length (String)")
F.Friends_AddFriendByName_strMessage_data = ProtoField.string("Friends_AddFriendByName_strMessage_data", "strMessage data (String)")
F.Friends_AddFriendByName_retval = ProtoField.bool("Friends_AddFriendByName_retval", "retval (bool)")
F.Friends_AddFriendWithDetails_uiPlayer = ProtoField.uint32("Friends_AddFriendWithDetails_uiPlayer", "uiPlayer (uint32)")
F.Friends_AddFriendWithDetails_uiDetails = ProtoField.uint32("Friends_AddFriendWithDetails_uiDetails", "uiDetails (uint32)")
F.Friends_AddFriendWithDetails_strMessage_len = ProtoField.uint16("Friends_AddFriendWithDetails_strMessage_len", "strMessage length (String)")
F.Friends_AddFriendWithDetails_strMessage_data = ProtoField.string("Friends_AddFriendWithDetails_strMessage_data", "strMessage data (String)")
F.Friends_AddFriendByNameWithDetails_uiPlayer = ProtoField.uint32("Friends_AddFriendByNameWithDetails_uiPlayer", "uiPlayer (uint32)")
F.Friends_AddFriendByNameWithDetails_uiDetails = ProtoField.uint32("Friends_AddFriendByNameWithDetails_uiDetails", "uiDetails (uint32)")
F.Friends_AddFriendByNameWithDetails_strMessage_len = ProtoField.uint16("Friends_AddFriendByNameWithDetails_strMessage_len", "strMessage length (String)")
F.Friends_AddFriendByNameWithDetails_strMessage_data = ProtoField.string("Friends_AddFriendByNameWithDetails_strMessage_data", "strMessage data (String)")
F.Friends_AcceptFriendship_uiPlayer = ProtoField.uint32("Friends_AcceptFriendship_uiPlayer", "uiPlayer (uint32)")
F.Friends_AcceptFriendship_retval = ProtoField.bool("Friends_AcceptFriendship_retval", "retval (bool)")
F.Friends_DeclineFriendship_uiPlayer = ProtoField.uint32("Friends_DeclineFriendship_uiPlayer", "uiPlayer (uint32)")
F.Friends_DeclineFriendship_retval = ProtoField.bool("Friends_DeclineFriendship_retval", "retval (bool)")
F.Friends_BlackList_uiPlayer = ProtoField.uint32("Friends_BlackList_uiPlayer", "uiPlayer (uint32)")
F.Friends_BlackList_uiDetails = ProtoField.uint32("Friends_BlackList_uiDetails", "uiDetails (uint32)")
F.Friends_BlackList_retval = ProtoField.bool("Friends_BlackList_retval", "retval (bool)")
F.Friends_BlackListByName_strPlayerName_len = ProtoField.uint16("Friends_BlackListByName_strPlayerName_len", "strPlayerName length (String)")
F.Friends_BlackListByName_strPlayerName_data = ProtoField.string("Friends_BlackListByName_strPlayerName_data", "strPlayerName data (String)")
F.Friends_BlackListByName_uiDetails = ProtoField.uint32("Friends_BlackListByName_uiDetails", "uiDetails (uint32)")
F.Friends_BlackListByName_retval = ProtoField.bool("Friends_BlackListByName_retval", "retval (bool)")
F.Friends_ClearRelationship_uiPlayer = ProtoField.uint32("Friends_ClearRelationship_uiPlayer", "uiPlayer (uint32)")
F.Friends_ClearRelationship_retval = ProtoField.bool("Friends_ClearRelationship_retval", "retval (bool)")
F.Friends_UpdateDetails_uiPlayer = ProtoField.uint32("Friends_UpdateDetails_uiPlayer", "uiPlayer (uint32)")
F.Friends_UpdateDetails_uiDetails = ProtoField.uint32("Friends_UpdateDetails_uiDetails", "uiDetails (uint32)")
F.Friends_UpdateDetails_retval = ProtoField.bool("Friends_UpdateDetails_retval", "retval (bool)")
F.Friends_GetList_byRelationship = ProtoField.uint8("Friends_GetList_byRelationship", "byRelationship (uint8)")
F.Friends_GetList_bReversed = ProtoField.bool("Friends_GetList_bReversed", "bReversed (bool)")
F.Friends_GetList_lstFriendsList_len = ProtoField.uint32("Friends_GetList_lstFriendsList_len", "lstFriendsList length (uint32)")
F.Friends_GetList_lstFriendsList_item = ProtoField.uint32("Friends_GetList_lstFriendsList_item", "lstFriendsList (uint32)")
F.Friends_GetDetailedList_byRelationship = ProtoField.uint8("Friends_GetDetailedList_byRelationship", "byRelationship (uint8)")
F.Friends_GetDetailedList_bReversed = ProtoField.bool("Friends_GetDetailedList_bReversed", "bReversed (bool)")
F.Friends_GetDetailedList_lstFriendsList_len = ProtoField.uint32("Friends_GetDetailedList_lstFriendsList_len", "lstFriendsList length (uint32)")
F.Friends_GetRelationships_uiTotalCount = ProtoField.uint32("Friends_GetRelationships_uiTotalCount", "uiTotalCount (uint32)")
F.Friends_GetRelationships_lstRelationshipsList_len = ProtoField.uint32("Friends_GetRelationships_lstRelationshipsList_len", "lstRelationshipsList length (uint32)")
F.User_Account_Management_LookupSceNpIds_pids_len = ProtoField.uint32("User_Account_Management_LookupSceNpIds_pids_len", "pids length (uint32)")
F.User_Account_Management_LookupSceNpIds_pids_item = ProtoField.uint32("User_Account_Management_LookupSceNpIds_pids_item", "pids (uint32)")
F.User_Account_Management_LookupSceNpIds_npids_len = ProtoField.uint32("User_Account_Management_LookupSceNpIds_npids_len", "npids length (uint32)")
F.User_Account_Management_LookupSceNpIds_npids_key = ProtoField.uint32("User_Account_Management_LookupSceNpIds_npids_key", "npids (uint32)")
F.User_Account_Management_LookupSceNpIds_npids_value_len = ProtoField.uint16("User_Account_Management_LookupSceNpIds_npids_value_len", "npids length (Buffer)")
F.User_Account_Management_LookupSceNpIds_npids_value_data = ProtoField.bytes("User_Account_Management_LookupSceNpIds_npids_value_data", "npids data (Buffer)")
F.User_Account_Management_LookupPrincipalIDs_firstPartyIds_len = ProtoField.uint32("User_Account_Management_LookupPrincipalIDs_firstPartyIds_len", "firstPartyIds length (uint32)")
F.User_Account_Management_LookupPrincipalIDs_firstPartyIds_item_len = ProtoField.uint16("User_Account_Management_LookupPrincipalIDs_firstPartyIds_item_len", "firstPartyIds length (String)")
F.User_Account_Management_LookupPrincipalIDs_firstPartyIds_item_data = ProtoField.string("User_Account_Management_LookupPrincipalIDs_firstPartyIds_item_data", "firstPartyIds data (String)")
F.User_Account_Management_LookupPrincipalIDs_platformId = ProtoField.uint32("User_Account_Management_LookupPrincipalIDs_platformId", "platformId (uint32)")
F.User_Account_Management_LookupPrincipalIDs_pids_len = ProtoField.uint32("User_Account_Management_LookupPrincipalIDs_pids_len", "pids length (uint32)")
F.User_Account_Management_LookupPrincipalIDs_pids_key_len = ProtoField.uint16("User_Account_Management_LookupPrincipalIDs_pids_key_len", "pids length (String)")
F.User_Account_Management_LookupPrincipalIDs_pids_key_data = ProtoField.string("User_Account_Management_LookupPrincipalIDs_pids_key_data", "pids data (String)")
F.User_Account_Management_LookupPrincipalIDs_pids_value = ProtoField.uint32("User_Account_Management_LookupPrincipalIDs_pids_value", "pids (uint32)")
F.User_Account_Management_LookupFirstPartyIds_pids_len = ProtoField.uint32("User_Account_Management_LookupFirstPartyIds_pids_len", "pids length (uint32)")
F.User_Account_Management_LookupFirstPartyIds_pids_item = ProtoField.uint32("User_Account_Management_LookupFirstPartyIds_pids_item", "pids (uint32)")
F.User_Account_Management_LookupFirstPartyIds_platformId = ProtoField.uint32("User_Account_Management_LookupFirstPartyIds_platformId", "platformId (uint32)")
F.User_Account_Management_LookupFirstPartyIds_firstPartyIds_len = ProtoField.uint32("User_Account_Management_LookupFirstPartyIds_firstPartyIds_len", "firstPartyIds length (uint32)")
F.User_Account_Management_LookupFirstPartyIds_firstPartyIds_key = ProtoField.uint32("User_Account_Management_LookupFirstPartyIds_firstPartyIds_key", "firstPartyIds (uint32)")
F.User_Account_Management_LookupFirstPartyIds_firstPartyIds_value_len = ProtoField.uint16("User_Account_Management_LookupFirstPartyIds_firstPartyIds_value_len", "firstPartyIds length (String)")
F.User_Account_Management_LookupFirstPartyIds_firstPartyIds_value_data = ProtoField.string("User_Account_Management_LookupFirstPartyIds_firstPartyIds_value_data", "firstPartyIds data (String)")
F.User_Account_Management_UserHasPlayed_FirstPartyIds_len = ProtoField.uint32("User_Account_Management_UserHasPlayed_FirstPartyIds_len", "FirstPartyIds length (uint32)")
F.User_Account_Management_UserHasPlayed_FirstPartyIds_item_len = ProtoField.uint16("User_Account_Management_UserHasPlayed_FirstPartyIds_item_len", "FirstPartyIds length (String)")
F.User_Account_Management_UserHasPlayed_FirstPartyIds_item_data = ProtoField.string("User_Account_Management_UserHasPlayed_FirstPartyIds_item_data", "FirstPartyIds data (String)")
F.User_Account_Management_UserHasPlayed_platformId = ProtoField.uint32("User_Account_Management_UserHasPlayed_platformId", "platformId (uint32)")
F.User_Account_Management_UserHasPlayed_UserPresence_len = ProtoField.uint32("User_Account_Management_UserHasPlayed_UserPresence_len", "UserPresence length (uint32)")
F.User_Account_Management_UserHasPlayed_UserPresence_key_len = ProtoField.uint16("User_Account_Management_UserHasPlayed_UserPresence_key_len", "UserPresence length (String)")
F.User_Account_Management_UserHasPlayed_UserPresence_key_data = ProtoField.string("User_Account_Management_UserHasPlayed_UserPresence_key_data", "UserPresence data (String)")
F.User_Account_Management_UserHasPlayed_UserPresence_value = ProtoField.bool("User_Account_Management_UserHasPlayed_UserPresence_value", "UserPresence (bool)")
F.User_Account_Management_IsUserPlaying_firstPartyIds_len = ProtoField.uint32("User_Account_Management_IsUserPlaying_firstPartyIds_len", "firstPartyIds length (uint32)")
F.User_Account_Management_IsUserPlaying_firstPartyIds_item_len = ProtoField.uint16("User_Account_Management_IsUserPlaying_firstPartyIds_item_len", "firstPartyIds length (String)")
F.User_Account_Management_IsUserPlaying_firstPartyIds_item_data = ProtoField.string("User_Account_Management_IsUserPlaying_firstPartyIds_item_data", "firstPartyIds data (String)")
F.User_Account_Management_IsUserPlaying_platformId = ProtoField.uint32("User_Account_Management_IsUserPlaying_platformId", "platformId (uint32)")
F.User_Account_Management_IsUserPlaying_UserPresence_len = ProtoField.uint32("User_Account_Management_IsUserPlaying_UserPresence_len", "UserPresence length (uint32)")
F.User_Account_Management_IsUserPlaying_UserPresence_key_len = ProtoField.uint16("User_Account_Management_IsUserPlaying_UserPresence_key_len", "UserPresence length (String)")
F.User_Account_Management_IsUserPlaying_UserPresence_key_data = ProtoField.string("User_Account_Management_IsUserPlaying_UserPresence_key_data", "UserPresence data (String)")
F.User_Account_Management_IsUserPlaying_UserPresence_value = ProtoField.bool("User_Account_Management_IsUserPlaying_UserPresence_value", "UserPresence (bool)")
F.User_Account_Management_updateSonyAccountInfo_ticketData_len = ProtoField.uint16("User_Account_Management_updateSonyAccountInfo_ticketData_len", "ticketData length (Buffer)")
F.User_Account_Management_updateSonyAccountInfo_ticketData_data = ProtoField.bytes("User_Account_Management_updateSonyAccountInfo_ticketData_data", "ticketData data (Buffer)")
F.User_Account_Management_updateSonyAccountInfo_ticketSize = ProtoField.uint32("User_Account_Management_updateSonyAccountInfo_ticketSize", "ticketSize (uint32)")
F.User_Account_Management_LookupUsernames_pids_len = ProtoField.uint32("User_Account_Management_LookupUsernames_pids_len", "pids length (uint32)")
F.User_Account_Management_LookupUsernames_pids_item = ProtoField.uint32("User_Account_Management_LookupUsernames_pids_item", "pids (uint32)")
F.User_Account_Management_LookupUsernames_platformId = ProtoField.uint32("User_Account_Management_LookupUsernames_platformId", "platformId (uint32)")
F.User_Account_Management_LookupUsernames_UserNames_len = ProtoField.uint32("User_Account_Management_LookupUsernames_UserNames_len", "UserNames length (uint32)")
F.User_Account_Management_LookupUsernames_UserNames_key = ProtoField.uint32("User_Account_Management_LookupUsernames_UserNames_key", "UserNames (uint32)")
F.User_Account_Management_LookupUsernames_UserNames_value_len = ProtoField.uint16("User_Account_Management_LookupUsernames_UserNames_value_len", "UserNames length (String)")
F.User_Account_Management_LookupUsernames_UserNames_value_data = ProtoField.string("User_Account_Management_LookupUsernames_UserNames_value_data", "UserNames data (String)")
F.Matchmake_Referee_StartRound_Round_id = ProtoField.uint64("Matchmake_Referee_StartRound_Round_id", "Round id (uint64)")
F.Matchmake_Referee_GetStartRoundParam_Round_id = ProtoField.uint64("Matchmake_Referee_GetStartRoundParam_Round_id", "Round id (uint64)")
F.Matchmake_Referee_EndRoundWithoutReport_Round_id = ProtoField.uint64("Matchmake_Referee_EndRoundWithoutReport_Round_id", "Round id (uint64)")
F.Matchmake_Referee_GetRoundParticipants_Round_id = ProtoField.uint64("Matchmake_Referee_GetRoundParticipants_Round_id", "Round id (uint64)")
F.Matchmake_Referee_GetRoundParticipants_Participants_len = ProtoField.uint32("Matchmake_Referee_GetRoundParticipants_Participants_len", "Participants length (uint32)")
F.Matchmake_Referee_GetRoundParticipants_Participants_item = ProtoField.uint32("Matchmake_Referee_GetRoundParticipants_Participants_item", "Participants (uint32)")
F.Matchmake_Referee_GetNotSummarizedRound_Rounds_in_which_you_are_participating_len = ProtoField.uint32("Matchmake_Referee_GetNotSummarizedRound_Rounds_in_which_you_are_participating_len", "Rounds in which you are participating length (uint32)")
F.Matchmake_Referee_GetRound_Round_id = ProtoField.uint64("Matchmake_Referee_GetRound_Round_id", "Round id (uint64)")
F.News_GetChannels_channels_len = ProtoField.uint32("News_GetChannels_channels_len", "channels length (uint32)")
F.News_GetChannelsByTypes_newsChannelTypes_len = ProtoField.uint32("News_GetChannelsByTypes_newsChannelTypes_len", "newsChannelTypes length (uint32)")
F.News_GetChannelsByTypes_newsChannelTypes_item_len = ProtoField.uint16("News_GetChannelsByTypes_newsChannelTypes_item_len", "newsChannelTypes length (String)")
F.News_GetChannelsByTypes_newsChannelTypes_item_data = ProtoField.string("News_GetChannelsByTypes_newsChannelTypes_item_data", "newsChannelTypes data (String)")
F.News_GetChannelsByTypes_channels_len = ProtoField.uint32("News_GetChannelsByTypes_channels_len", "channels length (uint32)")
F.News_GetSubscribableChannels_channels_len = ProtoField.uint32("News_GetSubscribableChannels_channels_len", "channels length (uint32)")
F.News_GetChannelsByIDs_newsChannelIDs_len = ProtoField.uint32("News_GetChannelsByIDs_newsChannelIDs_len", "newsChannelIDs length (uint32)")
F.News_GetChannelsByIDs_newsChannelIDs_item = ProtoField.uint32("News_GetChannelsByIDs_newsChannelIDs_item", "newsChannelIDs (uint32)")
F.News_GetChannelsByIDs_channels_len = ProtoField.uint32("News_GetChannelsByIDs_channels_len", "channels length (uint32)")
F.News_GetSubscribedChannels_channels_len = ProtoField.uint32("News_GetSubscribedChannels_channels_len", "channels length (uint32)")
F.News_SubscribeChannel_newsChannelID = ProtoField.uint32("News_SubscribeChannel_newsChannelID", "newsChannelID (uint32)")
F.News_UnsubscribeChannel_newsChannelID = ProtoField.uint32("News_UnsubscribeChannel_newsChannelID", "newsChannelID (uint32)")
F.News_GetNewsHeaders_newsHeaders_len = ProtoField.uint32("News_GetNewsHeaders_newsHeaders_len", "newsHeaders length (uint32)")
F.News_GetNewsMessages_newsMessageIDs_len = ProtoField.uint32("News_GetNewsMessages_newsMessageIDs_len", "newsMessageIDs length (uint32)")
F.News_GetNewsMessages_newsMessageIDs_item = ProtoField.uint32("News_GetNewsMessages_newsMessageIDs_item", "newsMessageIDs (uint32)")
F.News_GetNewsMessages_newsMessages_len = ProtoField.uint32("News_GetNewsMessages_newsMessages_len", "newsMessages length (uint32)")
F.News_GetNumberOfNews_numberOfNews = ProtoField.uint32("News_GetNumberOfNews_numberOfNews", "numberOfNews (uint32)")
F.News_GetChannelByType_newsChannelType_len = ProtoField.uint16("News_GetChannelByType_newsChannelType_len", "newsChannelType length (String)")
F.News_GetChannelByType_newsChannelType_data = ProtoField.string("News_GetChannelByType_newsChannelType_data", "newsChannelType data (String)")
F.News_GetNewsHeadersByType_newsChannelType_len = ProtoField.uint16("News_GetNewsHeadersByType_newsChannelType_len", "newsChannelType length (String)")
F.News_GetNewsHeadersByType_newsChannelType_data = ProtoField.string("News_GetNewsHeadersByType_newsChannelType_data", "newsChannelType data (String)")
F.News_GetNewsHeadersByType_newsHeaders_len = ProtoField.uint32("News_GetNewsHeadersByType_newsHeaders_len", "newsHeaders length (uint32)")
F.News_GetNewsMessagesByType_newsChannelType_len = ProtoField.uint16("News_GetNewsMessagesByType_newsChannelType_len", "newsChannelType length (String)")
F.News_GetNewsMessagesByType_newsChannelType_data = ProtoField.string("News_GetNewsMessagesByType_newsChannelType_data", "newsChannelType data (String)")
F.News_GetNewsMessagesByType_newsMessages_len = ProtoField.uint32("News_GetNewsMessagesByType_newsMessages_len", "newsMessages length (uint32)")
F.MK8_Deluxe_CustomGetSimplePlayingSession_Pids_len = ProtoField.uint32("MK8_Deluxe_CustomGetSimplePlayingSession_Pids_len", "Pids length (uint32)")
F.MK8_Deluxe_CustomGetSimplePlayingSession_Pids_item = ProtoField.uint32("MK8_Deluxe_CustomGetSimplePlayingSession_Pids_item", "Pids (uint32)")
F.MK8_Deluxe_CustomGetSimplePlayingSession_Unknown = ProtoField.uint8("MK8_Deluxe_CustomGetSimplePlayingSession_Unknown", "Unknown (uint8)")
F.MK8_Deluxe_CustomGetSimplePlayingSession_Unknown = ProtoField.uint8("MK8_Deluxe_CustomGetSimplePlayingSession_Unknown", "Unknown (uint8)")
F.MK8_Deluxe_CustomGetSimplePlayingSession_Playing_sessions_len = ProtoField.uint32("MK8_Deluxe_CustomGetSimplePlayingSession_Playing_sessions_len", "Playing sessions length (uint32)")
function do_Sint8(conn, tree, tvb, off, field_unique_name, field_name)
tree:add_le(F[field_unique_name], tvb(off,1))return off + 1, tvb(off,1):le_int()
end
function do_Sint16(conn, tree, tvb, off, field_unique_name, field_name)
tree:add_le(F[field_unique_name], tvb(off,2))return off + 2, tvb(off,2):le_int()
end
function do_Sint32(conn, tree, tvb, off, field_unique_name, field_name)
tree:add_le(F[field_unique_name], tvb(off,4))return off + 4, tvb(off,4):le_int()
end
function do_Sint64(conn, tree, tvb, off, field_unique_name, field_name)
tree:add_le(F[field_unique_name], tvb(off,8))return off + 8
end
function do_Int32(conn, tree, tvb, off, field_unique_name, field_name)
tree:add_le(F[field_unique_name], tvb(off,4))return off + 4, tvb(off,4):le_int()
end
function do_byte(conn, tree, tvb, off, field_unique_name, field_name)
tree:add_le(F[field_unique_name], tvb(off,1))return off + 1, tvb(off,1):le_uint()
end
function do_Uint8(conn, tree, tvb, off, field_unique_name, field_name)
tree:add_le(F[field_unique_name], tvb(off,1))return off + 1, tvb(off,1):le_uint()
end
function do_Uint16(conn, tree, tvb, off, field_unique_name, field_name)
tree:add_le(F[field_unique_name], tvb(off,2))return off + 2, tvb(off,2):le_uint()
end
function do_Uint32(conn, tree, tvb, off, field_unique_name, field_name)
tree:add_le(F[field_unique_name], tvb(off,4))return off + 4, tvb(off,4):le_uint()
end
function do_Uint64(conn, tree, tvb, off, field_unique_name, field_name)
tree:add_le(F[field_unique_name], tvb(off,8))return off + 8
end
function do_PID(conn, tree, tvb, off, field_unique_name, field_name)
tree:add_le(F[field_unique_name], tvb(off,4))return off + 4, tvb(off,4):le_uint()
end
function do_Result(conn, tree, tvb, off, field_unique_name, field_name)
tree:add_le(F[field_unique_name], tvb(off,4))return off + 4, tvb(off,4):le_uint()
end
function do_DateTime(conn, tree, tvb, off, field_unique_name, field_name)
tree:add_le(F[field_unique_name], tvb(off,8))return off + 8
end
function do_Buffer(conn, tree, tvb, off, field_unique_name, field_name)
local Buffer_len = tvb(off,4):le_uint()
	tree:add_le(F[field_unique_name.."_len"], tvb(off, 4))
	if Buffer_len ~= 0 then
		tree:add(F[field_unique_name.."_data"], tvb(off+4, Buffer_len))
		return off + 4 + Buffer_len, tvb(off+4, Buffer_len)
	else
		return off + 4
	end
	
end
function do_qBuffer(conn, tree, tvb, off, field_unique_name, field_name)
local qBuffer_len = tvb(off,2):le_uint()
	tree:add_le(F[field_unique_name.."_len"], tvb(off, 2))
	if qBuffer_len ~= 0 then
		tree:add(F[field_unique_name.."_data"], tvb(off+2, qBuffer_len))
		return off + 2 + qBuffer_len, tvb(off+2, qBuffer_len)
	else
		return off + 2
	end
	
end
function do_String(conn, tree, tvb, off, field_unique_name, field_name)
local String_len = tvb(off,2):le_uint()
	tree:add_le(F[field_unique_name.. "_len"], tvb(off, 2))
	tree:add(F[field_unique_name.. "_data"], tvb(off+2, String_len))
	return off + 2 + String_len, tvb(off+2, String_len-1):string()
end
function do_StationURL(conn, tree, tvb, off, field_unique_name, field_name)
local StationURL_len = tvb(off,2):le_uint()
	tree:add_le(F[field_unique_name.. "_len"], tvb(off, 2))
	tree:add(F[field_unique_name.. "_data"], tvb(off+2, StationURL_len))
	return off + 2 + StationURL_len, tvb(off+2, StationURL_len-1):string()
end
function do_Bool(conn, tree, tvb, off, field_unique_name, field_name)
tree:add(F[field_unique_name], tvb(off,1))
	return off + 1, (tvb(off,1)~= 0)
end
function do_Float(conn, tree, tvb, off, field_unique_name, field_name)
tree:add_le(F[field_unique_name], tvb(off,4))
	return off + 4, tvb(off,4):le_float()
end
function do_Double(conn, tree, tvb, off, field_unique_name, field_name)
tree:add_le(F[field_unique_name], tvb(off,8))
	return off + 8, tvb(off,8):le_float()
end
function do_Data(conn, tree, tvb, off, field_unique_name, field_name)
local Data_container = tree:add(F.Data, tvb(off, 0))
	Data_container:set_text(field_name .. " (Data):")
	
return off
end
 function do_Variant(conn, tree, tvb, off, field_unique_name, field_name)
			local variant = tvb(off, 1):le_uint()
			off = off + 1

			-- TODO implement length properly, maybe harder for String but doable
			local len = 0

			if variant == 0 then
				len = 0
			elseif variant == 1 or variant == 2 or variant == 5 or variant == 6 then
				len = 8
			elseif variant == 3 then
				len = 1
			elseif variant == 4 then
				len = tvb(off, 2):le_uint() + 2
			end

			local Variant_container = tree:add(F.Variant, tvb(off, len))

			if variant == 0 then
				Variant_container:set_text(field_name .. " (none)")
			elseif variant == 1 then
				Variant_container:set_text(field_name .. " (Sint64)")
				off, value = do_Sint64(conn, Variant_container, tvb, off, "Variant_Sint64", field_name)
			elseif variant == 2 then
				Variant_container:set_text(field_name .. " (Double)")
				off, value = do_Double(conn, Variant_container, tvb, off, "Variant_Double", field_name)	
			elseif variant == 3 then
				Variant_container:set_text(field_name .. " (Bool)")
				off, value = do_Bool(conn, Variant_container, tvb, off, "Variant_Bool", field_name)
			elseif variant == 4 then
				Variant_container:set_text(field_name .. " (String)")
				off, value = do_String(conn, Variant_container, tvb, off, "Variant_String", field_name)
			elseif variant == 5 then
				Variant_container:set_text(field_name .. " (DateTime)")
				off, value = do_DateTime(conn, Variant_container, tvb, off, "Variant_DateTime", field_name)
			elseif variant == 6 then
				Variant_container:set_text(field_name .. " (Uint64)")
				off, value = do_Uint64(conn, Variant_container, tvb, off, "Variant_Uint64", field_name)
			end

			return off, value
		end
	
			function do_Structure(conn, tree, tvb, off, field_name)
				local Structure_container = tree:add(F.Structure, tvb(off, 0))
				Structure_container:set_text("Structure")
				if conn['has_struct_headers'] then
					off, a = do_Uint8(conn, Structure_container, tvb, off, 'Structure_Version')
					off, b = do_Uint32(conn, Structure_container, tvb, off, 'Structure_Length')
				end
				return off
			end
		function do_DataHeader(conn, tree, tvb, off, field_unique_name, field_name)
local DataHeader_container = tree:add(F.DataHeader, tvb(off, 0))
	DataHeader_container:set_text(field_name .. " (DataHeader):")
	off = do_Structure(conn, DataHeader_container, tvb, off, 'DataHeader_Base', 'Base')

return off
end
function do_RVConnectionData(conn, tree, tvb, off, field_name)
local RVConnectionData_container = tree:add(F.RVConnectionData, tvb(off, 0))
	RVConnectionData_container:set_text("RVConnectionData")
	off = do_Structure(conn, RVConnectionData_container, tvb, off, 'RVConnectionData_Base')
off, RVConnectionData_m_urlRegularProtocols = do_StationURL(conn, RVConnectionData_container, tvb, off, 'RVConnectionData_m_urlRegularProtocols')
	local RVConnectionData_m_lstSpecialProtocols_len = tvb(off, 4):le_uint()
	subRVConnectionData_container = RVConnectionData_container:add_le(F.RVConnectionData_m_lstSpecialProtocols_len, tvb(off,4))
	off = off + 4
	for i=1,RVConnectionData_m_lstSpecialProtocols_len do
	off, RVConnectionData_m_lstSpecialProtocols_item = do_byte(conn, subRVConnectionData_container, tvb, off, 'RVConnectionData_m_lstSpecialProtocols_item')

	end
	
	off, RVConnectionData_m_urlSpecialProtocols = do_StationURL(conn, RVConnectionData_container, tvb, off, 'RVConnectionData_m_urlSpecialProtocols')
	
	if conn['prudp_version'] == 1 then
		off = off + 8 -- skip date
	end

return off
end
function do_ResultRange(conn, tree, tvb, off, field_unique_name, field_name)
local ResultRange_container = tree:add(F.ResultRange, tvb(off, 0))
	ResultRange_container:set_text(field_name .. " (ResultRange):")
	off, ResultRange_m_uiOffset = do_Uint32(conn, ResultRange_container, tvb, off, 'ResultRange_m_uiOffset', 'm_uiOffset')
off, ResultRange_m_uiSize = do_Uint32(conn, ResultRange_container, tvb, off, 'ResultRange_m_uiSize', 'm_uiSize')

return off
end
function do_CalicoPlayerSimple(conn, tree, tvb, off, field_unique_name, field_name)
local CalicoPlayerSimple_container = tree:add(F.CalicoPlayerSimple, tvb(off, 0))
	CalicoPlayerSimple_container:set_text(field_name .. " (CalicoPlayerSimple):")
	off = do_Structure(conn, CalicoPlayerSimple_container, tvb, off, 'CalicoPlayerSimple_Base', 'Base')
off, CalicoPlayerSimple_principalId = do_PID(conn, CalicoPlayerSimple_container, tvb, off, 'CalicoPlayerSimple_principalId', 'principalId')
off, CalicoPlayerSimple_name = do_String(conn, CalicoPlayerSimple_container, tvb, off, 'CalicoPlayerSimple_name', 'name')
off, CalicoPlayerSimple_playerType = do_Uint8(conn, CalicoPlayerSimple_container, tvb, off, 'CalicoPlayerSimple_playerType', 'playerType')
off, CalicoPlayerSimple_udemae = do_Sint32(conn, CalicoPlayerSimple_container, tvb, off, 'CalicoPlayerSimple_udemae', 'udemae')
off, CalicoPlayerSimple_playerRank = do_Sint32(conn, CalicoPlayerSimple_container, tvb, off, 'CalicoPlayerSimple_playerRank', 'playerRank')
off, CalicoPlayerSimple_starRank = do_Sint32(conn, CalicoPlayerSimple_container, tvb, off, 'CalicoPlayerSimple_starRank', 'starRank')
off, CalicoPlayerSimple_fesGrade = do_Sint32(conn, CalicoPlayerSimple_container, tvb, off, 'CalicoPlayerSimple_fesGrade', 'fesGrade')
off, CalicoPlayerSimple_weaponId = do_Sint32(conn, CalicoPlayerSimple_container, tvb, off, 'CalicoPlayerSimple_weaponId', 'weaponId')
off, CalicoPlayerSimple_headId = do_Sint32(conn, CalicoPlayerSimple_container, tvb, off, 'CalicoPlayerSimple_headId', 'headId')
local CalicoPlayerSimple_headSkillIds_len = tvb(off, 4):le_uint()
	subCalicoPlayerSimple_container = CalicoPlayerSimple_container:add_le(F.CalicoPlayerSimple_headSkillIds_len, tvb(off,4))
	off = off + 4
	for i=1,CalicoPlayerSimple_headSkillIds_len do
	off, CalicoPlayerSimple_headSkillIds_item = do_Sint32(conn, subCalicoPlayerSimple_container, tvb, off, 'CalicoPlayerSimple_headSkillIds_item', 'headSkillIds')

	end
	
off, CalicoPlayerSimple_clothesId = do_Sint32(conn, CalicoPlayerSimple_container, tvb, off, 'CalicoPlayerSimple_clothesId', 'clothesId')
local CalicoPlayerSimple_clothesSkillIds_len = tvb(off, 4):le_uint()
	subCalicoPlayerSimple_container = CalicoPlayerSimple_container:add_le(F.CalicoPlayerSimple_clothesSkillIds_len, tvb(off,4))
	off = off + 4
	for i=1,CalicoPlayerSimple_clothesSkillIds_len do
	off, CalicoPlayerSimple_clothesSkillIds_item = do_Sint32(conn, subCalicoPlayerSimple_container, tvb, off, 'CalicoPlayerSimple_clothesSkillIds_item', 'clothesSkillIds')

	end
	
off, CalicoPlayerSimple_shoesId = do_Sint32(conn, CalicoPlayerSimple_container, tvb, off, 'CalicoPlayerSimple_shoesId', 'shoesId')
local CalicoPlayerSimple_shoesSkillIds_len = tvb(off, 4):le_uint()
	subCalicoPlayerSimple_container = CalicoPlayerSimple_container:add_le(F.CalicoPlayerSimple_shoesSkillIds_len, tvb(off,4))
	off = off + 4
	for i=1,CalicoPlayerSimple_shoesSkillIds_len do
	off, CalicoPlayerSimple_shoesSkillIds_item = do_Sint32(conn, subCalicoPlayerSimple_container, tvb, off, 'CalicoPlayerSimple_shoesSkillIds_item', 'shoesSkillIds')

	end
	

return off
end
function do_CalicoPlayerResult(conn, tree, tvb, off, field_unique_name, field_name)
local CalicoPlayerResult_container = tree:add(F.CalicoPlayerResult, tvb(off, 0))
	CalicoPlayerResult_container:set_text(field_name .. " (CalicoPlayerResult):")
	off = do_Structure(conn, CalicoPlayerResult_container, tvb, off, 'CalicoPlayerResult_Base', 'Base')
off = do_CalicoPlayerSimple(conn, CalicoPlayerResult_container, tvb, off, 'CalicoPlayerResult_playerSimple', 'playerSimple')
off, CalicoPlayerResult_killCount = do_Sint32(conn, CalicoPlayerResult_container, tvb, off, 'CalicoPlayerResult_killCount', 'killCount')
off, CalicoPlayerResult_assistCount = do_Sint32(conn, CalicoPlayerResult_container, tvb, off, 'CalicoPlayerResult_assistCount', 'assistCount')
off, CalicoPlayerResult_deathCount = do_Sint32(conn, CalicoPlayerResult_container, tvb, off, 'CalicoPlayerResult_deathCount', 'deathCount')
off, CalicoPlayerResult_specialCount = do_Sint32(conn, CalicoPlayerResult_container, tvb, off, 'CalicoPlayerResult_specialCount', 'specialCount')
off, CalicoPlayerResult_gamePaintPoint = do_Sint32(conn, CalicoPlayerResult_container, tvb, off, 'CalicoPlayerResult_gamePaintPoint', 'gamePaintPoint')
off, CalicoPlayerResult_sortScore = do_Sint32(conn, CalicoPlayerResult_container, tvb, off, 'CalicoPlayerResult_sortScore', 'sortScore')

return off
end
function do_DataStoreRatingInitParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreRatingInitParam_container = tree:add(F.DataStoreRatingInitParam, tvb(off, 0))
	DataStoreRatingInitParam_container:set_text(field_name .. " (DataStoreRatingInitParam):")
	off = do_Structure(conn, DataStoreRatingInitParam_container, tvb, off, 'DataStoreRatingInitParam_Base', 'Base')
off, DataStoreRatingInitParam_flag = do_Uint8(conn, DataStoreRatingInitParam_container, tvb, off, 'DataStoreRatingInitParam_flag', 'flag')
off, DataStoreRatingInitParam_internalFlag = do_Uint8(conn, DataStoreRatingInitParam_container, tvb, off, 'DataStoreRatingInitParam_internalFlag', 'internalFlag')
off, DataStoreRatingInitParam_lockType = do_Uint8(conn, DataStoreRatingInitParam_container, tvb, off, 'DataStoreRatingInitParam_lockType', 'lockType')
off, DataStoreRatingInitParam_initialValue = do_Sint64(conn, DataStoreRatingInitParam_container, tvb, off, 'DataStoreRatingInitParam_initialValue', 'initialValue')
off, DataStoreRatingInitParam_rangeMin = do_Sint32(conn, DataStoreRatingInitParam_container, tvb, off, 'DataStoreRatingInitParam_rangeMin', 'rangeMin')
off, DataStoreRatingInitParam_rangeMax = do_Sint32(conn, DataStoreRatingInitParam_container, tvb, off, 'DataStoreRatingInitParam_rangeMax', 'rangeMax')
off, DataStoreRatingInitParam_periodHour = do_Sint8(conn, DataStoreRatingInitParam_container, tvb, off, 'DataStoreRatingInitParam_periodHour', 'periodHour')
off, DataStoreRatingInitParam_periodDuration = do_Sint16(conn, DataStoreRatingInitParam_container, tvb, off, 'DataStoreRatingInitParam_periodDuration', 'periodDuration')

return off
end
function do_DataStoreRatingInfo(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreRatingInfo_container = tree:add(F.DataStoreRatingInfo, tvb(off, 0))
	DataStoreRatingInfo_container:set_text(field_name .. " (DataStoreRatingInfo):")
	off = do_Structure(conn, DataStoreRatingInfo_container, tvb, off, 'DataStoreRatingInfo_Base', 'Base')
off, DataStoreRatingInfo_totalValue = do_Sint64(conn, DataStoreRatingInfo_container, tvb, off, 'DataStoreRatingInfo_totalValue', 'totalValue')
off, DataStoreRatingInfo_count = do_Uint32(conn, DataStoreRatingInfo_container, tvb, off, 'DataStoreRatingInfo_count', 'count')
off, DataStoreRatingInfo_initialValue = do_Sint64(conn, DataStoreRatingInfo_container, tvb, off, 'DataStoreRatingInfo_initialValue', 'initialValue')

return off
end
function do_MiiV2(conn, tree, tvb, off, field_unique_name, field_name)
local MiiV2_container = tree:add(F.MiiV2, tvb(off, 0))
	MiiV2_container:set_text(field_name .. " (MiiV2):")
	off, MiiV2_Name = do_String(conn, MiiV2_container, tvb, off, 'MiiV2_Name', 'Name')
off, MiiV2_Unknown = do_Uint8(conn, MiiV2_container, tvb, off, 'MiiV2_Unknown', 'Unknown')
off, MiiV2_Unknown2 = do_Uint8(conn, MiiV2_container, tvb, off, 'MiiV2_Unknown2', 'Unknown2')
off, MiiV2_Mii_data_FFLStoreData = do_Buffer(conn, MiiV2_container, tvb, off, 'MiiV2_Mii_data_FFLStoreData', 'Mii_data_FFLStoreData')
off, MiiV2_Unknown3 = do_DateTime(conn, MiiV2_container, tvb, off, 'MiiV2_Unknown3', 'Unknown3')

return off
end
function do_CalicoStatsBase(conn, tree, tvb, off, field_unique_name, field_name)
local CalicoStatsBase_container = tree:add(F.CalicoStatsBase, tvb(off, 0))
	CalicoStatsBase_container:set_text(field_name .. " (CalicoStatsBase):")
	off = do_Structure(conn, CalicoStatsBase_container, tvb, off, 'CalicoStatsBase_Base', 'Base')
off, CalicoStatsBase_gameMode = do_Uint32(conn, CalicoStatsBase_container, tvb, off, 'CalicoStatsBase_gameMode', 'gameMode')
off, CalicoStatsBase_rule = do_Sint32(conn, CalicoStatsBase_container, tvb, off, 'CalicoStatsBase_rule', 'rule')
off, CalicoStatsBase_result = do_Uint8(conn, CalicoStatsBase_container, tvb, off, 'CalicoStatsBase_result', 'result')
off, CalicoStatsBase_stage = do_Sint32(conn, CalicoStatsBase_container, tvb, off, 'CalicoStatsBase_stage', 'stage')
off = do_CalicoPlayerResult(conn, CalicoStatsBase_container, tvb, off, 'CalicoStatsBase_playerResult', 'playerResult')
local CalicoStatsBase_myTeamMembers_len = tvb(off, 4):le_uint()
	subCalicoStatsBase_container = CalicoStatsBase_container:add_le(F.CalicoStatsBase_myTeamMembers_len, tvb(off,4))
	off = off + 4
	for i=1,CalicoStatsBase_myTeamMembers_len do
	off = do_CalicoPlayerResult(conn, subCalicoStatsBase_container, tvb, off, 'CalicoStatsBase_myTeamMembers_item', 'myTeamMembers')

	end
	
local CalicoStatsBase_otherTeamMembers_len = tvb(off, 4):le_uint()
	subCalicoStatsBase_container = CalicoStatsBase_container:add_le(F.CalicoStatsBase_otherTeamMembers_len, tvb(off,4))
	off = off + 4
	for i=1,CalicoStatsBase_otherTeamMembers_len do
	off = do_CalicoPlayerResult(conn, subCalicoStatsBase_container, tvb, off, 'CalicoStatsBase_otherTeamMembers_item', 'otherTeamMembers')

	end
	
off, CalicoStatsBase_weaponPaintPoint = do_Sint32(conn, CalicoStatsBase_container, tvb, off, 'CalicoStatsBase_weaponPaintPoint', 'weaponPaintPoint')
off, CalicoStatsBase_startTime = do_DateTime(conn, CalicoStatsBase_container, tvb, off, 'CalicoStatsBase_startTime', 'startTime')
off, CalicoStatsBase_battleNum = do_Uint64(conn, CalicoStatsBase_container, tvb, off, 'CalicoStatsBase_battleNum', 'battleNum')
off, CalicoStatsBase_playerRank = do_Sint32(conn, CalicoStatsBase_container, tvb, off, 'CalicoStatsBase_playerRank', 'playerRank')
off, CalicoStatsBase_starRank = do_Sint32(conn, CalicoStatsBase_container, tvb, off, 'CalicoStatsBase_starRank', 'starRank')

return off
end
function do_PropertyVariant(conn, tree, tvb, off, field_unique_name, field_name)
local PropertyVariant_container = tree:add(F.PropertyVariant, tvb(off, 0))
	PropertyVariant_container:set_text(field_name .. " (PropertyVariant):")
	off = do_Structure(conn, PropertyVariant_container, tvb, off, 'PropertyVariant_Base', 'Base')
off, PropertyVariant_ID = do_Uint32(conn, PropertyVariant_container, tvb, off, 'PropertyVariant_ID', 'ID')
off = do_Variant(conn, PropertyVariant_container, tvb, off, 'PropertyVariant_Value', 'Value')

return off
end
function do_MessageRecipient(conn, tree, tvb, off, field_unique_name, field_name)
local MessageRecipient_container = tree:add(F.MessageRecipient, tvb(off, 0))
	MessageRecipient_container:set_text(field_name .. " (MessageRecipient):")
	off = do_Structure(conn, MessageRecipient_container, tvb, off, 'MessageRecipient_Base', 'Base')
off, MessageRecipient_m_uiRecipientType = do_Uint32(conn, MessageRecipient_container, tvb, off, 'MessageRecipient_m_uiRecipientType', 'm_uiRecipientType')
off, MessageRecipient_m_principalId = do_PID(conn, MessageRecipient_container, tvb, off, 'MessageRecipient_m_principalId', 'm_principalId')
off, MessageRecipient_m_gatheringId = do_Uint32(conn, MessageRecipient_container, tvb, off, 'MessageRecipient_m_gatheringId', 'm_gatheringId')

return off
end
function do_DataStorePermission(conn, tree, tvb, off, field_unique_name, field_name)
local DataStorePermission_container = tree:add(F.DataStorePermission, tvb(off, 0))
	DataStorePermission_container:set_text(field_name .. " (DataStorePermission):")
	off = do_Structure(conn, DataStorePermission_container, tvb, off, 'DataStorePermission_Base', 'Base')
off, DataStorePermission_permission = do_Uint8(conn, DataStorePermission_container, tvb, off, 'DataStorePermission_permission', 'permission')
local DataStorePermission_recipientIds_len = tvb(off, 4):le_uint()
	subDataStorePermission_container = DataStorePermission_container:add_le(F.DataStorePermission_recipientIds_len, tvb(off,4))
	off = off + 4
	for i=1,DataStorePermission_recipientIds_len do
	off, DataStorePermission_recipientIds_item = do_PID(conn, subDataStorePermission_container, tvb, off, 'DataStorePermission_recipientIds_item', 'recipientIds')

	end
	

return off
end
function do_DataStoreRatingInitParamWithSlot(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreRatingInitParamWithSlot_container = tree:add(F.DataStoreRatingInitParamWithSlot, tvb(off, 0))
	DataStoreRatingInitParamWithSlot_container:set_text(field_name .. " (DataStoreRatingInitParamWithSlot):")
	off = do_Structure(conn, DataStoreRatingInitParamWithSlot_container, tvb, off, 'DataStoreRatingInitParamWithSlot_Base', 'Base')
off, DataStoreRatingInitParamWithSlot_slot = do_Sint8(conn, DataStoreRatingInitParamWithSlot_container, tvb, off, 'DataStoreRatingInitParamWithSlot_slot', 'slot')
off = do_DataStoreRatingInitParam(conn, DataStoreRatingInitParamWithSlot_container, tvb, off, 'DataStoreRatingInitParamWithSlot_param', 'param')

return off
end
function do_DataStorePersistenceInitParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStorePersistenceInitParam_container = tree:add(F.DataStorePersistenceInitParam, tvb(off, 0))
	DataStorePersistenceInitParam_container:set_text(field_name .. " (DataStorePersistenceInitParam):")
	off = do_Structure(conn, DataStorePersistenceInitParam_container, tvb, off, 'DataStorePersistenceInitParam_Base', 'Base')
off, DataStorePersistenceInitParam_persistenceSlotId = do_Uint16(conn, DataStorePersistenceInitParam_container, tvb, off, 'DataStorePersistenceInitParam_persistenceSlotId', 'persistenceSlotId')
off, DataStorePersistenceInitParam_deleteLastObject = do_Bool(conn, DataStorePersistenceInitParam_container, tvb, off, 'DataStorePersistenceInitParam_deleteLastObject', 'deleteLastObject')

return off
end
function do_DataStoreRatingInfoWithSlot(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreRatingInfoWithSlot_container = tree:add(F.DataStoreRatingInfoWithSlot, tvb(off, 0))
	DataStoreRatingInfoWithSlot_container:set_text(field_name .. " (DataStoreRatingInfoWithSlot):")
	off = do_Structure(conn, DataStoreRatingInfoWithSlot_container, tvb, off, 'DataStoreRatingInfoWithSlot_Base', 'Base')
off, DataStoreRatingInfoWithSlot_slot = do_Sint8(conn, DataStoreRatingInfoWithSlot_container, tvb, off, 'DataStoreRatingInfoWithSlot_slot', 'slot')
off = do_DataStoreRatingInfo(conn, DataStoreRatingInfoWithSlot_container, tvb, off, 'DataStoreRatingInfoWithSlot_rating', 'rating')

return off
end
function do_DataStoreKeyValue(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreKeyValue_container = tree:add(F.DataStoreKeyValue, tvb(off, 0))
	DataStoreKeyValue_container:set_text(field_name .. " (DataStoreKeyValue):")
	off = do_Structure(conn, DataStoreKeyValue_container, tvb, off, 'DataStoreKeyValue_Base', 'Base')
off, DataStoreKeyValue_key = do_String(conn, DataStoreKeyValue_container, tvb, off, 'DataStoreKeyValue_key', 'key')
off, DataStoreKeyValue_value = do_String(conn, DataStoreKeyValue_container, tvb, off, 'DataStoreKeyValue_value', 'value')

return off
end
function do_PrincipalBasicInfo(conn, tree, tvb, off, field_unique_name, field_name)
local PrincipalBasicInfo_container = tree:add(F.PrincipalBasicInfo, tvb(off, 0))
	PrincipalBasicInfo_container:set_text(field_name .. " (PrincipalBasicInfo):")
	off, PrincipalBasicInfo_Pid = do_PID(conn, PrincipalBasicInfo_container, tvb, off, 'PrincipalBasicInfo_Pid', 'Pid')
off, PrincipalBasicInfo_NNID = do_String(conn, PrincipalBasicInfo_container, tvb, off, 'PrincipalBasicInfo_NNID', 'NNID')
off = do_MiiV2(conn, PrincipalBasicInfo_container, tvb, off, 'PrincipalBasicInfo_Mii', 'Mii')
off, PrincipalBasicInfo_Unknown = do_Uint8(conn, PrincipalBasicInfo_container, tvb, off, 'PrincipalBasicInfo_Unknown', 'Unknown')

return off
end
function do_CalicoRegularStats(conn, tree, tvb, off, field_unique_name, field_name)
local CalicoRegularStats_container = tree:add(F.CalicoRegularStats, tvb(off, 0))
	CalicoRegularStats_container:set_text(field_name .. " (CalicoRegularStats):")
	off = do_CalicoStatsBase(conn, CalicoRegularStats_container, tvb, off, 'CalicoRegularStats_Base2', 'Base2')
off = do_Structure(conn, CalicoRegularStats_container, tvb, off, 'CalicoRegularStats_Base', 'Base')
off, CalicoRegularStats_myTeamPercentage = do_Sint32(conn, CalicoRegularStats_container, tvb, off, 'CalicoRegularStats_myTeamPercentage', 'myTeamPercentage')
off, CalicoRegularStats_otherTeamPercentage = do_Sint32(conn, CalicoRegularStats_container, tvb, off, 'CalicoRegularStats_otherTeamPercentage', 'otherTeamPercentage')
off, CalicoRegularStats_winMeter = do_Sint32(conn, CalicoRegularStats_container, tvb, off, 'CalicoRegularStats_winMeter', 'winMeter')

return off
end
function do_StageTimeAttackWeapon(conn, tree, tvb, off, field_unique_name, field_name)
local StageTimeAttackWeapon_container = tree:add(F.StageTimeAttackWeapon, tvb(off, 0))
	StageTimeAttackWeapon_container:set_text(field_name .. " (StageTimeAttackWeapon):")
	off = do_Structure(conn, StageTimeAttackWeapon_container, tvb, off, 'StageTimeAttackWeapon_Base', 'Base')
off, StageTimeAttackWeapon_weaponLevel = do_Sint32(conn, StageTimeAttackWeapon_container, tvb, off, 'StageTimeAttackWeapon_weaponLevel', 'weaponLevel')
off, StageTimeAttackWeapon_clearTime = do_Sint32(conn, StageTimeAttackWeapon_container, tvb, off, 'StageTimeAttackWeapon_clearTime', 'clearTime')

return off
end
function do_Gathering(conn, tree, tvb, off, field_unique_name, field_name)
local Gathering_container = tree:add(F.Gathering, tvb(off, 0))
	Gathering_container:set_text(field_name .. " (Gathering):")
	off = do_Structure(conn, Gathering_container, tvb, off, 'Gathering_Base', 'Base')
off, Gathering_m_idMyself = do_Uint32(conn, Gathering_container, tvb, off, 'Gathering_m_idMyself', 'm_idMyself')
off, Gathering_m_pidOwner = do_PID(conn, Gathering_container, tvb, off, 'Gathering_m_pidOwner', 'm_pidOwner')
off, Gathering_m_pidHost = do_PID(conn, Gathering_container, tvb, off, 'Gathering_m_pidHost', 'm_pidHost')
off, Gathering_m_uiMinParticipants = do_Uint16(conn, Gathering_container, tvb, off, 'Gathering_m_uiMinParticipants', 'm_uiMinParticipants')
off, Gathering_m_uiMaxParticipants = do_Uint16(conn, Gathering_container, tvb, off, 'Gathering_m_uiMaxParticipants', 'm_uiMaxParticipants')
off, Gathering_m_uiParticipationPolicy = do_Uint32(conn, Gathering_container, tvb, off, 'Gathering_m_uiParticipationPolicy', 'm_uiParticipationPolicy')
off, Gathering_m_uiPolicyArgument = do_Uint32(conn, Gathering_container, tvb, off, 'Gathering_m_uiPolicyArgument', 'm_uiPolicyArgument')
off, Gathering_m_uiFlags = do_Uint32(conn, Gathering_container, tvb, off, 'Gathering_m_uiFlags', 'm_uiFlags')
off, Gathering_m_uiState = do_Uint32(conn, Gathering_container, tvb, off, 'Gathering_m_uiState', 'm_uiState')
off, Gathering_m_strDescription = do_String(conn, Gathering_container, tvb, off, 'Gathering_m_strDescription', 'm_strDescription')

return off
end
function do_MatchmakeParam(conn, tree, tvb, off, field_unique_name, field_name)
local MatchmakeParam_container = tree:add(F.MatchmakeParam, tvb(off, 0))
	MatchmakeParam_container:set_text(field_name .. " (MatchmakeParam):")
	off = do_Structure(conn, MatchmakeParam_container, tvb, off, 'MatchmakeParam_Base', 'Base')
local MatchmakeParam_m_Params_len = tvb(off, 4):le_uint()
	subMatchmakeParam_container = MatchmakeParam_container:add_le(F.MatchmakeParam_m_Params_len, tvb(off,4))
	off = off + 4
	for i=1,MatchmakeParam_m_Params_len do
	off, MatchmakeParam_m_Params_key = do_String(conn, subMatchmakeParam_container, tvb, off, 'MatchmakeParam_m_Params_key', 'm_Params')

off = do_Variant(conn, subMatchmakeParam_container, tvb, off, 'MatchmakeParam_m_Params_value', 'm_Params')

	end
	

return off
end
function do_PlayerStatSet(conn, tree, tvb, off, field_unique_name, field_name)
local PlayerStatSet_container = tree:add(F.PlayerStatSet, tvb(off, 0))
	PlayerStatSet_container:set_text(field_name .. " (PlayerStatSet):")
	off = do_Structure(conn, PlayerStatSet_container, tvb, off, 'PlayerStatSet_Base', 'Base')
off, PlayerStatSet_m_playerPID = do_Uint32(conn, PlayerStatSet_container, tvb, off, 'PlayerStatSet_m_playerPID', 'm_playerPID')
off, PlayerStatSet_m_playerName = do_String(conn, PlayerStatSet_container, tvb, off, 'PlayerStatSet_m_playerName', 'm_playerName')
off, PlayerStatSet_m_submittedTime = do_DateTime(conn, PlayerStatSet_container, tvb, off, 'PlayerStatSet_m_submittedTime', 'm_submittedTime')
local PlayerStatSet_m_stats_len = tvb(off, 4):le_uint()
	subPlayerStatSet_container = PlayerStatSet_container:add_le(F.PlayerStatSet_m_stats_len, tvb(off,4))
	off = off + 4
	for i=1,PlayerStatSet_m_stats_len do
	off = do_PropertyVariant(conn, subPlayerStatSet_container, tvb, off, 'PlayerStatSet_m_stats_item', 'm_stats')

	end
	

return off
end
function do_UplaySectionContentLocalized(conn, tree, tvb, off, field_unique_name, field_name)
local UplaySectionContentLocalized_container = tree:add(F.UplaySectionContentLocalized, tvb(off, 0))
	UplaySectionContentLocalized_container:set_text(field_name .. " (UplaySectionContentLocalized):")
	off = do_Structure(conn, UplaySectionContentLocalized_container, tvb, off, 'UplaySectionContentLocalized_Base', 'Base')
off, UplaySectionContentLocalized_m_key = do_String(conn, UplaySectionContentLocalized_container, tvb, off, 'UplaySectionContentLocalized_m_key', 'm_key')
off, UplaySectionContentLocalized_m_culture = do_String(conn, UplaySectionContentLocalized_container, tvb, off, 'UplaySectionContentLocalized_m_culture', 'm_culture')
off, UplaySectionContentLocalized_m_text = do_String(conn, UplaySectionContentLocalized_container, tvb, off, 'UplaySectionContentLocalized_m_text', 'm_text')
off, UplaySectionContentLocalized_m_url = do_String(conn, UplaySectionContentLocalized_container, tvb, off, 'UplaySectionContentLocalized_m_url', 'm_url')
off, UplaySectionContentLocalized_m_duration = do_Sint32(conn, UplaySectionContentLocalized_container, tvb, off, 'UplaySectionContentLocalized_m_duration', 'm_duration')
off, UplaySectionContentLocalized_m_size = do_String(conn, UplaySectionContentLocalized_container, tvb, off, 'UplaySectionContentLocalized_m_size', 'm_size')
off, UplaySectionContentLocalized_m_width = do_String(conn, UplaySectionContentLocalized_container, tvb, off, 'UplaySectionContentLocalized_m_width', 'm_width')
off, UplaySectionContentLocalized_m_height = do_String(conn, UplaySectionContentLocalized_container, tvb, off, 'UplaySectionContentLocalized_m_height', 'm_height')

return off
end
function do_LeaguePlayerDetail(conn, tree, tvb, off, field_unique_name, field_name)
local LeaguePlayerDetail_container = tree:add(F.LeaguePlayerDetail, tvb(off, 0))
	LeaguePlayerDetail_container:set_text(field_name .. " (LeaguePlayerDetail):")
	off = do_Structure(conn, LeaguePlayerDetail_container, tvb, off, 'LeaguePlayerDetail_Base', 'Base')
off, LeaguePlayerDetail_principalId = do_Uint64(conn, LeaguePlayerDetail_container, tvb, off, 'LeaguePlayerDetail_principalId', 'principalId')
off, LeaguePlayerDetail_weaponId = do_Sint32(conn, LeaguePlayerDetail_container, tvb, off, 'LeaguePlayerDetail_weaponId', 'weaponId')

return off
end
function do_Mii(conn, tree, tvb, off, field_unique_name, field_name)
local Mii_container = tree:add(F.Mii, tvb(off, 0))
	Mii_container:set_text(field_name .. " (Mii):")
	off, Mii_Unknown = do_String(conn, Mii_container, tvb, off, 'Mii_Unknown', 'Unknown')
off, Mii_Unknown2 = do_Bool(conn, Mii_container, tvb, off, 'Mii_Unknown2', 'Unknown2')
off, Mii_Unknown3 = do_Uint8(conn, Mii_container, tvb, off, 'Mii_Unknown3', 'Unknown3')
off, Mii_Mii_data = do_Buffer(conn, Mii_container, tvb, off, 'Mii_Mii_data', 'Mii_data')

return off
end
function do_GameKey(conn, tree, tvb, off, field_unique_name, field_name)
local GameKey_container = tree:add(F.GameKey, tvb(off, 0))
	GameKey_container:set_text(field_name .. " (GameKey):")
	off, GameKey_Title_id = do_Uint64(conn, GameKey_container, tvb, off, 'GameKey_Title_id', 'Title_id')
off, GameKey_Title_version = do_Uint16(conn, GameKey_container, tvb, off, 'GameKey_Title_version', 'Title_version')

return off
end
function do_Ranking2CommonData(conn, tree, tvb, off, field_unique_name, field_name)
local Ranking2CommonData_container = tree:add(F.Ranking2CommonData, tvb(off, 0))
	Ranking2CommonData_container:set_text(field_name .. " (Ranking2CommonData):")
	off = do_Structure(conn, Ranking2CommonData_container, tvb, off, 'Ranking2CommonData_Base', 'Base')
off, Ranking2CommonData_userName = do_String(conn, Ranking2CommonData_container, tvb, off, 'Ranking2CommonData_userName', 'userName')
off, Ranking2CommonData_mii = do_qBuffer(conn, Ranking2CommonData_container, tvb, off, 'Ranking2CommonData_mii', 'mii')
off, Ranking2CommonData_binaryData = do_qBuffer(conn, Ranking2CommonData_container, tvb, off, 'Ranking2CommonData_binaryData', 'binaryData')

return off
end
function do_UserMessage(conn, tree, tvb, off, field_unique_name, field_name)
local UserMessage_container = tree:add(F.UserMessage, tvb(off, 0))
	UserMessage_container:set_text(field_name .. " (UserMessage):")
	off = do_DataHeader(conn, UserMessage_container, tvb, off, 'UserMessage_Base2', 'Base2')
off = do_Structure(conn, UserMessage_container, tvb, off, 'UserMessage_Base', 'Base')
off, UserMessage_m_uiID = do_Uint32(conn, UserMessage_container, tvb, off, 'UserMessage_m_uiID', 'm_uiID')
off, UserMessage_m_uiParentID = do_Uint32(conn, UserMessage_container, tvb, off, 'UserMessage_m_uiParentID', 'm_uiParentID')
off, UserMessage_m_pidSender = do_PID(conn, UserMessage_container, tvb, off, 'UserMessage_m_pidSender', 'm_pidSender')
off, UserMessage_m_receptiontime = do_DateTime(conn, UserMessage_container, tvb, off, 'UserMessage_m_receptiontime', 'm_receptiontime')
off, UserMessage_m_uiLifeTime = do_Uint32(conn, UserMessage_container, tvb, off, 'UserMessage_m_uiLifeTime', 'm_uiLifeTime')
off, UserMessage_m_uiFlags = do_Uint32(conn, UserMessage_container, tvb, off, 'UserMessage_m_uiFlags', 'm_uiFlags')
off, UserMessage_m_strSubject = do_String(conn, UserMessage_container, tvb, off, 'UserMessage_m_strSubject', 'm_strSubject')
off, UserMessage_m_strSender = do_String(conn, UserMessage_container, tvb, off, 'UserMessage_m_strSender', 'm_strSender')
off = do_MessageRecipient(conn, UserMessage_container, tvb, off, 'UserMessage_m_messageRecipient', 'm_messageRecipient')

return off
end
function do_DataStorePreparePostParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStorePreparePostParam_container = tree:add(F.DataStorePreparePostParam, tvb(off, 0))
	DataStorePreparePostParam_container:set_text(field_name .. " (DataStorePreparePostParam):")
	off = do_Structure(conn, DataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_Base', 'Base')
off, DataStorePreparePostParam_size = do_Uint32(conn, DataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_size', 'size')
off, DataStorePreparePostParam_name = do_String(conn, DataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_name', 'name')
off, DataStorePreparePostParam_dataType = do_Uint16(conn, DataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_dataType', 'dataType')
off, DataStorePreparePostParam_metaBinary = do_qBuffer(conn, DataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_metaBinary', 'metaBinary')
off = do_DataStorePermission(conn, DataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_permission', 'permission')
off = do_DataStorePermission(conn, DataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_delPermission', 'delPermission')
off, DataStorePreparePostParam_flag = do_Uint32(conn, DataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_flag', 'flag')
off, DataStorePreparePostParam_period = do_Uint16(conn, DataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_period', 'period')
off, DataStorePreparePostParam_referDataId = do_Uint32(conn, DataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_referDataId', 'referDataId')
local DataStorePreparePostParam_tags_len = tvb(off, 4):le_uint()
	subDataStorePreparePostParam_container = DataStorePreparePostParam_container:add_le(F.DataStorePreparePostParam_tags_len, tvb(off,4))
	off = off + 4
	for i=1,DataStorePreparePostParam_tags_len do
	off, DataStorePreparePostParam_tags_item = do_String(conn, subDataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_tags_item', 'tags')

	end
	
local DataStorePreparePostParam_ratingInitParams_len = tvb(off, 4):le_uint()
	subDataStorePreparePostParam_container = DataStorePreparePostParam_container:add_le(F.DataStorePreparePostParam_ratingInitParams_len, tvb(off,4))
	off = off + 4
	for i=1,DataStorePreparePostParam_ratingInitParams_len do
	off = do_DataStoreRatingInitParamWithSlot(conn, subDataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_ratingInitParams_item', 'ratingInitParams')

	end
	
off = do_DataStorePersistenceInitParam(conn, DataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_persistenceInitParam', 'persistenceInitParam')
local DataStorePreparePostParam_extraData_len = tvb(off, 4):le_uint()
	subDataStorePreparePostParam_container = DataStorePreparePostParam_container:add_le(F.DataStorePreparePostParam_extraData_len, tvb(off,4))
	off = off + 4
	for i=1,DataStorePreparePostParam_extraData_len do
	off, DataStorePreparePostParam_extraData_item = do_String(conn, subDataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_extraData_item', 'extraData')

	end
	

return off
end
function do_DataStoreMetaInfo(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreMetaInfo_container = tree:add(F.DataStoreMetaInfo, tvb(off, 0))
	DataStoreMetaInfo_container:set_text(field_name .. " (DataStoreMetaInfo):")
	off = do_Structure(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_Base', 'Base')
off, DataStoreMetaInfo_dataId = do_Uint64(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_dataId', 'dataId')
off, DataStoreMetaInfo_ownerId = do_PID(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_ownerId', 'ownerId')
off, DataStoreMetaInfo_size = do_Uint32(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_size', 'size')
off, DataStoreMetaInfo_name = do_String(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_name', 'name')
off, DataStoreMetaInfo_dataType = do_Uint16(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_dataType', 'dataType')
off, DataStoreMetaInfo_metaBinary = do_qBuffer(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_metaBinary', 'metaBinary')
off = do_DataStorePermission(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_permission', 'permission')
off = do_DataStorePermission(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_delPermission', 'delPermission')
off, DataStoreMetaInfo_createdTime = do_DateTime(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_createdTime', 'createdTime')
off, DataStoreMetaInfo_updatedTime = do_DateTime(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_updatedTime', 'updatedTime')
off, DataStoreMetaInfo_period = do_Uint16(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_period', 'period')
off, DataStoreMetaInfo_status = do_Uint8(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_status', 'status')
off, DataStoreMetaInfo_referredCnt = do_Uint32(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_referredCnt', 'referredCnt')
off, DataStoreMetaInfo_referDataId = do_Uint32(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_referDataId', 'referDataId')
off, DataStoreMetaInfo_flag = do_Uint32(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_flag', 'flag')
off, DataStoreMetaInfo_referredTime = do_DateTime(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_referredTime', 'referredTime')
off, DataStoreMetaInfo_expireTime = do_DateTime(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_expireTime', 'expireTime')
local DataStoreMetaInfo_tags_len = tvb(off, 4):le_uint()
	subDataStoreMetaInfo_container = DataStoreMetaInfo_container:add_le(F.DataStoreMetaInfo_tags_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreMetaInfo_tags_len do
	off, DataStoreMetaInfo_tags_item = do_String(conn, subDataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_tags_item', 'tags')

	end
	
local DataStoreMetaInfo_ratings_len = tvb(off, 4):le_uint()
	subDataStoreMetaInfo_container = DataStoreMetaInfo_container:add_le(F.DataStoreMetaInfo_ratings_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreMetaInfo_ratings_len do
	off = do_DataStoreRatingInfoWithSlot(conn, subDataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_ratings_item', 'ratings')

	end
	

return off
end
function do_DataStoreReqGetInfo(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreReqGetInfo_container = tree:add(F.DataStoreReqGetInfo, tvb(off, 0))
	DataStoreReqGetInfo_container:set_text(field_name .. " (DataStoreReqGetInfo):")
	off = do_Structure(conn, DataStoreReqGetInfo_container, tvb, off, 'DataStoreReqGetInfo_Base', 'Base')
off, DataStoreReqGetInfo_url = do_String(conn, DataStoreReqGetInfo_container, tvb, off, 'DataStoreReqGetInfo_url', 'url')
local DataStoreReqGetInfo_requestHeaders_len = tvb(off, 4):le_uint()
	subDataStoreReqGetInfo_container = DataStoreReqGetInfo_container:add_le(F.DataStoreReqGetInfo_requestHeaders_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreReqGetInfo_requestHeaders_len do
	off = do_DataStoreKeyValue(conn, subDataStoreReqGetInfo_container, tvb, off, 'DataStoreReqGetInfo_requestHeaders_item', 'requestHeaders')

	end
	
off, DataStoreReqGetInfo_size = do_Uint32(conn, DataStoreReqGetInfo_container, tvb, off, 'DataStoreReqGetInfo_size', 'size')
off, DataStoreReqGetInfo_rootCaCert = do_Buffer(conn, DataStoreReqGetInfo_container, tvb, off, 'DataStoreReqGetInfo_rootCaCert', 'rootCaCert')
off, DataStoreReqGetInfo_dataId = do_Uint64(conn, DataStoreReqGetInfo_container, tvb, off, 'DataStoreReqGetInfo_dataId', 'dataId')

return off
end
function do_DataStoreCustomRankingRatingCondition(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreCustomRankingRatingCondition_container = tree:add(F.DataStoreCustomRankingRatingCondition, tvb(off, 0))
	DataStoreCustomRankingRatingCondition_container:set_text(field_name .. " (DataStoreCustomRankingRatingCondition):")
	off = do_Structure(conn, DataStoreCustomRankingRatingCondition_container, tvb, off, 'DataStoreCustomRankingRatingCondition_Base', 'Base')
off, DataStoreCustomRankingRatingCondition_slot = do_Sint8(conn, DataStoreCustomRankingRatingCondition_container, tvb, off, 'DataStoreCustomRankingRatingCondition_slot', 'slot')
off, DataStoreCustomRankingRatingCondition_minValue = do_Sint32(conn, DataStoreCustomRankingRatingCondition_container, tvb, off, 'DataStoreCustomRankingRatingCondition_minValue', 'minValue')
off, DataStoreCustomRankingRatingCondition_maxValue = do_Sint32(conn, DataStoreCustomRankingRatingCondition_container, tvb, off, 'DataStoreCustomRankingRatingCondition_maxValue', 'maxValue')
off, DataStoreCustomRankingRatingCondition_minCount = do_Uint32(conn, DataStoreCustomRankingRatingCondition_container, tvb, off, 'DataStoreCustomRankingRatingCondition_minCount', 'minCount')
off, DataStoreCustomRankingRatingCondition_maxCount = do_Uint32(conn, DataStoreCustomRankingRatingCondition_container, tvb, off, 'DataStoreCustomRankingRatingCondition_maxCount', 'maxCount')

return off
end
function do_NNAInfo(conn, tree, tvb, off, field_unique_name, field_name)
local NNAInfo_container = tree:add(F.NNAInfo, tvb(off, 0))
	NNAInfo_container:set_text(field_name .. " (NNAInfo):")
	off = do_PrincipalBasicInfo(conn, NNAInfo_container, tvb, off, 'NNAInfo_Principal_basic_info', 'Principal_basic_info')
off, NNAInfo_Unknown = do_Uint8(conn, NNAInfo_container, tvb, off, 'NNAInfo_Unknown', 'Unknown')
off, NNAInfo_Unknown2 = do_Uint8(conn, NNAInfo_container, tvb, off, 'NNAInfo_Unknown2', 'Unknown2')

return off
end
function do_CalicoFesStats(conn, tree, tvb, off, field_unique_name, field_name)
local CalicoFesStats_container = tree:add(F.CalicoFesStats, tvb(off, 0))
	CalicoFesStats_container:set_text(field_name .. " (CalicoFesStats):")
	off = do_CalicoRegularStats(conn, CalicoFesStats_container, tvb, off, 'CalicoFesStats_Base2', 'Base2')
off = do_Structure(conn, CalicoFesStats_container, tvb, off, 'CalicoFesStats_Base', 'Base')
off, CalicoFesStats_fesId = do_Uint32(conn, CalicoFesStats_container, tvb, off, 'CalicoFesStats_fesId', 'fesId')
off, CalicoFesStats_themeId = do_Uint8(conn, CalicoFesStats_container, tvb, off, 'CalicoFesStats_themeId', 'themeId')
off, CalicoFesStats_fesGrade = do_Sint32(conn, CalicoFesStats_container, tvb, off, 'CalicoFesStats_fesGrade', 'fesGrade')
off, CalicoFesStats_fesPoint = do_Sint32(conn, CalicoFesStats_container, tvb, off, 'CalicoFesStats_fesPoint', 'fesPoint')
off, CalicoFesStats_fesPower = do_Uint32(conn, CalicoFesStats_container, tvb, off, 'CalicoFesStats_fesPower', 'fesPower')
off, CalicoFesStats_maxFesPower = do_Uint32(conn, CalicoFesStats_container, tvb, off, 'CalicoFesStats_maxFesPower', 'maxFesPower')
off, CalicoFesStats_myEstimateFesPower = do_Sint32(conn, CalicoFesStats_container, tvb, off, 'CalicoFesStats_myEstimateFesPower', 'myEstimateFesPower')
off, CalicoFesStats_otherEstimateFesPower = do_Sint32(conn, CalicoFesStats_container, tvb, off, 'CalicoFesStats_otherEstimateFesPower', 'otherEstimateFesPower')

return off
end
function do_CalicoGachiStats(conn, tree, tvb, off, field_unique_name, field_name)
local CalicoGachiStats_container = tree:add(F.CalicoGachiStats, tvb(off, 0))
	CalicoGachiStats_container:set_text(field_name .. " (CalicoGachiStats):")
	off = do_CalicoStatsBase(conn, CalicoGachiStats_container, tvb, off, 'CalicoGachiStats_Base2', 'Base2')
off = do_Structure(conn, CalicoGachiStats_container, tvb, off, 'CalicoGachiStats_Base', 'Base')
off, CalicoGachiStats_elapsedTime = do_Sint32(conn, CalicoGachiStats_container, tvb, off, 'CalicoGachiStats_elapsedTime', 'elapsedTime')
off, CalicoGachiStats_myTeamCount = do_Sint8(conn, CalicoGachiStats_container, tvb, off, 'CalicoGachiStats_myTeamCount', 'myTeamCount')
off, CalicoGachiStats_otherTeamCount = do_Sint8(conn, CalicoGachiStats_container, tvb, off, 'CalicoGachiStats_otherTeamCount', 'otherTeamCount')
off, CalicoGachiStats_udemae = do_Sint32(conn, CalicoGachiStats_container, tvb, off, 'CalicoGachiStats_udemae', 'udemae')
off, CalicoGachiStats_estimateGachiPower = do_Sint32(conn, CalicoGachiStats_container, tvb, off, 'CalicoGachiStats_estimateGachiPower', 'estimateGachiPower')

return off
end
function do_CoconutMeta(conn, tree, tvb, off, field_unique_name, field_name)
local CoconutMeta_container = tree:add(F.CoconutMeta, tvb(off, 0))
	CoconutMeta_container:set_text(field_name .. " (CoconutMeta):")
	off = do_Structure(conn, CoconutMeta_container, tvb, off, 'CoconutMeta_Base', 'Base')
off, CoconutMeta_dataId = do_Uint64(conn, CoconutMeta_container, tvb, off, 'CoconutMeta_dataId', 'dataId')
off, CoconutMeta_tweetId = do_Uint64(conn, CoconutMeta_container, tvb, off, 'CoconutMeta_tweetId', 'tweetId')
off, CoconutMeta_region = do_Uint8(conn, CoconutMeta_container, tvb, off, 'CoconutMeta_region', 'region')
off, CoconutMeta_postType = do_Uint8(conn, CoconutMeta_container, tvb, off, 'CoconutMeta_postType', 'postType')
off, CoconutMeta_themeId = do_Uint8(conn, CoconutMeta_container, tvb, off, 'CoconutMeta_themeId', 'themeId')
off, CoconutMeta_festivalId = do_Uint32(conn, CoconutMeta_container, tvb, off, 'CoconutMeta_festivalId', 'festivalId')
off, CoconutMeta_language = do_String(conn, CoconutMeta_container, tvb, off, 'CoconutMeta_language', 'language')
off, CoconutMeta_binaryData = do_qBuffer(conn, CoconutMeta_container, tvb, off, 'CoconutMeta_binaryData', 'binaryData')

return off
end
function do_PlayLogEntry(conn, tree, tvb, off, field_unique_name, field_name)
local PlayLogEntry_container = tree:add(F.PlayLogEntry, tvb(off, 0))
	PlayLogEntry_container:set_text(field_name .. " (PlayLogEntry):")
	off = do_Structure(conn, PlayLogEntry_container, tvb, off, 'PlayLogEntry_Base', 'Base')
off, PlayLogEntry_User_id = do_PID(conn, PlayLogEntry_container, tvb, off, 'PlayLogEntry_User_id', 'User_id')
off, PlayLogEntry_Player_name = do_String(conn, PlayLogEntry_container, tvb, off, 'PlayLogEntry_Player_name', 'Player_name')
off, PlayLogEntry_Unknown = do_Uint64(conn, PlayLogEntry_container, tvb, off, 'PlayLogEntry_Unknown', 'Unknown')
local PlayLogEntry_Properties_len = tvb(off, 4):le_uint()
	subPlayLogEntry_container = PlayLogEntry_container:add_le(F.PlayLogEntry_Properties_len, tvb(off,4))
	off = off + 4
	for i=1,PlayLogEntry_Properties_len do
	off, PlayLogEntry_Properties_key = do_String(conn, subPlayLogEntry_container, tvb, off, 'PlayLogEntry_Properties_key', 'Properties')

off = do_Variant(conn, subPlayLogEntry_container, tvb, off, 'PlayLogEntry_Properties_value', 'Properties')

	end
	

return off
end
function do_StageTimeAttackInfo(conn, tree, tvb, off, field_unique_name, field_name)
local StageTimeAttackInfo_container = tree:add(F.StageTimeAttackInfo, tvb(off, 0))
	StageTimeAttackInfo_container:set_text(field_name .. " (StageTimeAttackInfo):")
	off = do_Structure(conn, StageTimeAttackInfo_container, tvb, off, 'StageTimeAttackInfo_Base', 'Base')
local StageTimeAttackInfo_clearWeapons_len = tvb(off, 4):le_uint()
	subStageTimeAttackInfo_container = StageTimeAttackInfo_container:add_le(F.StageTimeAttackInfo_clearWeapons_len, tvb(off,4))
	off = off + 4
	for i=1,StageTimeAttackInfo_clearWeapons_len do
	off, StageTimeAttackInfo_clearWeapons_key = do_Sint32(conn, subStageTimeAttackInfo_container, tvb, off, 'StageTimeAttackInfo_clearWeapons_key', 'clearWeapons')

off = do_StageTimeAttackWeapon(conn, subStageTimeAttackInfo_container, tvb, off, 'StageTimeAttackInfo_clearWeapons_value', 'clearWeapons')

	end
	

return off
end
function do_MatchmakeSession(conn, tree, tvb, off, field_unique_name, field_name)
local MatchmakeSession_container = tree:add(F.MatchmakeSession, tvb(off, 0))
	MatchmakeSession_container:set_text(field_name .. " (MatchmakeSession):")
	off = do_Gathering(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_Base2', 'Base2')
off = do_Structure(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_Base', 'Base')
off, MatchmakeSession_m_GameMode = do_Uint32(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_GameMode', 'm_GameMode')
local MatchmakeSession_m_Attribs_len = tvb(off, 4):le_uint()
	subMatchmakeSession_container = MatchmakeSession_container:add_le(F.MatchmakeSession_m_Attribs_len, tvb(off,4))
	off = off + 4
	for i=1,MatchmakeSession_m_Attribs_len do
	off, MatchmakeSession_m_Attribs_item = do_Uint32(conn, subMatchmakeSession_container, tvb, off, 'MatchmakeSession_m_Attribs_item', 'm_Attribs')

	end
	
off, MatchmakeSession_m_OpenParticipation = do_Bool(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_OpenParticipation', 'm_OpenParticipation')
off, MatchmakeSession_m_MatchmakeSystemType = do_Uint32(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_MatchmakeSystemType', 'm_MatchmakeSystemType')
off, MatchmakeSession_m_ApplicationBuffer = do_Buffer(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_ApplicationBuffer', 'm_ApplicationBuffer')
off, MatchmakeSession_m_ParticipationCount = do_Uint32(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_ParticipationCount', 'm_ParticipationCount')
if version_gt_eq(conn['nex_version'], {3,5,0}) then
off, MatchmakeSession_m_ProgressScore = do_Uint8(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_ProgressScore', 'm_ProgressScore')

end
if version_gt_eq(conn['nex_version'], {3,0,0}) then
off, MatchmakeSession_m_SessionKey = do_Buffer(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_SessionKey', 'm_SessionKey')

end
if version_gt_eq(conn['nex_version'], {3,5,0}) then
off, MatchmakeSession_m_Option0 = do_Uint32(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_Option0', 'm_Option0')

end
if version_gt_eq(conn['nex_version'], {4,0,0}) then
off = do_MatchmakeParam(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_MatchmakeParam', 'm_MatchmakeParam')

end
if version_gt_eq(conn['nex_version'], {4,0,0}) then
off, MatchmakeSession_m_StartedTime = do_DateTime(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_StartedTime', 'm_StartedTime')

end
if version_gt_eq(conn['nex_version'], {4,0,0}) then
off, MatchmakeSession_m_UserPassword = do_String(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_UserPassword', 'm_UserPassword')

end
if version_gt_eq(conn['nex_version'], {4,0,0}) then
off, MatchmakeSession_m_ReferGid = do_Uint32(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_ReferGid', 'm_ReferGid')

end
if version_gt_eq(conn['nex_version'], {4,0,0}) then
off, MatchmakeSession_m_UserPasswordEnabled = do_Bool(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_UserPasswordEnabled', 'm_UserPasswordEnabled')

end
if version_gt_eq(conn['nex_version'], {4,0,0}) then
off, MatchmakeSession_m_SystemPasswordEnabled = do_Bool(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_SystemPasswordEnabled', 'm_SystemPasswordEnabled')

end
if version_gt_eq(conn['nex_version'], {4,0,0}) then
off, MatchmakeSession_m_Codeword = do_String(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_Codeword', 'm_Codeword')

end

return off
end
function do_MatchmakeBlockListParam(conn, tree, tvb, off, field_unique_name, field_name)
local MatchmakeBlockListParam_container = tree:add(F.MatchmakeBlockListParam, tvb(off, 0))
	MatchmakeBlockListParam_container:set_text(field_name .. " (MatchmakeBlockListParam):")
	off = do_Structure(conn, MatchmakeBlockListParam_container, tvb, off, 'MatchmakeBlockListParam_Base', 'Base')
off, MatchmakeBlockListParam_optionFlag = do_Uint32(conn, MatchmakeBlockListParam_container, tvb, off, 'MatchmakeBlockListParam_optionFlag', 'optionFlag')

return off
end
function do_MatchmakeSessionSearchCriteria(conn, tree, tvb, off, field_unique_name, field_name)
local MatchmakeSessionSearchCriteria_container = tree:add(F.MatchmakeSessionSearchCriteria, tvb(off, 0))
	MatchmakeSessionSearchCriteria_container:set_text(field_name .. " (MatchmakeSessionSearchCriteria):")
	off = do_Structure(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_Base', 'Base')
local MatchmakeSessionSearchCriteria_m_Attribs_len = tvb(off, 4):le_uint()
	subMatchmakeSessionSearchCriteria_container = MatchmakeSessionSearchCriteria_container:add_le(F.MatchmakeSessionSearchCriteria_m_Attribs_len, tvb(off,4))
	off = off + 4
	for i=1,MatchmakeSessionSearchCriteria_m_Attribs_len do
	off, MatchmakeSessionSearchCriteria_m_Attribs_item = do_String(conn, subMatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_Attribs_item', 'm_Attribs')

	end
	
off, MatchmakeSessionSearchCriteria_m_GameMode = do_String(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_GameMode', 'm_GameMode')
off, MatchmakeSessionSearchCriteria_m_MinParticipants = do_String(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_MinParticipants', 'm_MinParticipants')
off, MatchmakeSessionSearchCriteria_m_MaxParticipants = do_String(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_MaxParticipants', 'm_MaxParticipants')
off, MatchmakeSessionSearchCriteria_m_MatchmakeSystemType = do_String(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_MatchmakeSystemType', 'm_MatchmakeSystemType')
off, MatchmakeSessionSearchCriteria_m_VacantOnly = do_Bool(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_VacantOnly', 'm_VacantOnly')
off, MatchmakeSessionSearchCriteria_m_ExcludeLocked = do_Bool(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_ExcludeLocked', 'm_ExcludeLocked')
off, MatchmakeSessionSearchCriteria_m_ExcludeNonHostPid = do_Bool(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_ExcludeNonHostPid', 'm_ExcludeNonHostPid')
off, MatchmakeSessionSearchCriteria_m_SelectionMethod = do_Uint32(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_SelectionMethod', 'm_SelectionMethod')
if version_gt_eq(conn['nex_version'], {3,5,0}) then
off, MatchmakeSessionSearchCriteria_m_VacantParticipants = do_Uint16(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_VacantParticipants', 'm_VacantParticipants')

end
if version_gt_eq(conn['nex_version'], {4,0,0}) then
off = do_MatchmakeParam(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_MatchmakeParam', 'm_MatchmakeParam')

end
if version_gt_eq(conn['nex_version'], {4,0,0}) then
off, MatchmakeSessionSearchCriteria_m_ExcludeUserPasswordSet = do_Bool(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_ExcludeUserPasswordSet', 'm_ExcludeUserPasswordSet')

end
if version_gt_eq(conn['nex_version'], {4,0,0}) then
off, MatchmakeSessionSearchCriteria_m_ExcludeSystemPasswordSet = do_Bool(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_ExcludeSystemPasswordSet', 'm_ExcludeSystemPasswordSet')

end
if version_gt_eq(conn['nex_version'], {4,0,0}) then
off, MatchmakeSessionSearchCriteria_m_ReferGid = do_Uint32(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_ReferGid', 'm_ReferGid')

end
if version_gt_eq(conn['nex_version'], {4,0,0}) then
off, MatchmakeSessionSearchCriteria_m_Codeword = do_String(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_Codeword', 'm_Codeword')

end
if version_gt_eq(conn['nex_version'], {4,0,0}) then
off = do_ResultRange(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_ResultRange', 'm_ResultRange')

end

return off
end
function do_PlayerStatSortCriteria(conn, tree, tvb, off, field_unique_name, field_name)
local PlayerStatSortCriteria_container = tree:add(F.PlayerStatSortCriteria, tvb(off, 0))
	PlayerStatSortCriteria_container:set_text(field_name .. " (PlayerStatSortCriteria):")
	off = do_Structure(conn, PlayerStatSortCriteria_container, tvb, off, 'PlayerStatSortCriteria_Base', 'Base')
off, PlayerStatSortCriteria_m_sortStatID = do_Uint32(conn, PlayerStatSortCriteria_container, tvb, off, 'PlayerStatSortCriteria_m_sortStatID', 'm_sortStatID')
off, PlayerStatSortCriteria_m_sortOrder = do_Uint32(conn, PlayerStatSortCriteria_container, tvb, off, 'PlayerStatSortCriteria_m_sortOrder', 'm_sortOrder')

return off
end
function do_PlayerRank(conn, tree, tvb, off, field_unique_name, field_name)
local PlayerRank_container = tree:add(F.PlayerRank, tvb(off, 0))
	PlayerRank_container:set_text(field_name .. " (PlayerRank):")
	off = do_Structure(conn, PlayerRank_container, tvb, off, 'PlayerRank_Base', 'Base')
off = do_PlayerStatSet(conn, PlayerRank_container, tvb, off, 'PlayerRank_m_playerStatSet', 'm_playerStatSet')
off, PlayerRank_m_rankStatus = do_Uint32(conn, PlayerRank_container, tvb, off, 'PlayerRank_m_rankStatus', 'm_rankStatus')
off, PlayerRank_m_rank = do_Uint32(conn, PlayerRank_container, tvb, off, 'PlayerRank_m_rank', 'm_rank')
off = do_Variant(conn, PlayerRank_container, tvb, off, 'PlayerRank_m_score', 'm_score')

return off
end
function do_DateRange(conn, tree, tvb, off, field_unique_name, field_name)
local DateRange_container = tree:add(F.DateRange, tvb(off, 0))
	DateRange_container:set_text(field_name .. " (DateRange):")
	off = do_Structure(conn, DateRange_container, tvb, off, 'DateRange_Base', 'Base')
off, DateRange_m_startingDatetime = do_DateTime(conn, DateRange_container, tvb, off, 'DateRange_m_startingDatetime', 'm_startingDatetime')
off, DateRange_m_endingDatetime = do_DateTime(conn, DateRange_container, tvb, off, 'DateRange_m_endingDatetime', 'm_endingDatetime')

return off
end
function do_UplayActionPlatform(conn, tree, tvb, off, field_unique_name, field_name)
local UplayActionPlatform_container = tree:add(F.UplayActionPlatform, tvb(off, 0))
	UplayActionPlatform_container:set_text(field_name .. " (UplayActionPlatform):")
	off = do_Structure(conn, UplayActionPlatform_container, tvb, off, 'UplayActionPlatform_Base', 'Base')
off, UplayActionPlatform_m_platformCode = do_String(conn, UplayActionPlatform_container, tvb, off, 'UplayActionPlatform_m_platformCode', 'm_platformCode')
off, UplayActionPlatform_m_completed = do_Bool(conn, UplayActionPlatform_container, tvb, off, 'UplayActionPlatform_m_completed', 'm_completed')
off, UplayActionPlatform_m_specificKey = do_String(conn, UplayActionPlatform_container, tvb, off, 'UplayActionPlatform_m_specificKey', 'm_specificKey')

return off
end
function do_UplayRewardPlatform(conn, tree, tvb, off, field_unique_name, field_name)
local UplayRewardPlatform_container = tree:add(F.UplayRewardPlatform, tvb(off, 0))
	UplayRewardPlatform_container:set_text(field_name .. " (UplayRewardPlatform):")
	off = do_Structure(conn, UplayRewardPlatform_container, tvb, off, 'UplayRewardPlatform_Base', 'Base')
off, UplayRewardPlatform_m_platformCode = do_String(conn, UplayRewardPlatform_container, tvb, off, 'UplayRewardPlatform_m_platformCode', 'm_platformCode')
off, UplayRewardPlatform_m_purchased = do_Bool(conn, UplayRewardPlatform_container, tvb, off, 'UplayRewardPlatform_m_purchased', 'm_purchased')

return off
end
function do_UplaySectionContent(conn, tree, tvb, off, field_unique_name, field_name)
local UplaySectionContent_container = tree:add(F.UplaySectionContent, tvb(off, 0))
	UplaySectionContent_container:set_text(field_name .. " (UplaySectionContent):")
	off = do_Structure(conn, UplaySectionContent_container, tvb, off, 'UplaySectionContent_Base', 'Base')
off, UplaySectionContent_m_key = do_String(conn, UplaySectionContent_container, tvb, off, 'UplaySectionContent_m_key', 'm_key')
off, UplaySectionContent_m_name = do_String(conn, UplaySectionContent_container, tvb, off, 'UplaySectionContent_m_name', 'm_name')
off, UplaySectionContent_m_order = do_Sint16(conn, UplaySectionContent_container, tvb, off, 'UplaySectionContent_m_order', 'm_order')
off, UplaySectionContent_m_typeName = do_String(conn, UplaySectionContent_container, tvb, off, 'UplaySectionContent_m_typeName', 'm_typeName')
off = do_UplaySectionContentLocalized(conn, UplaySectionContent_container, tvb, off, 'UplaySectionContent_m_localizedInfo', 'm_localizedInfo')

return off
end
function do_DataStorePersistenceTarget(conn, tree, tvb, off, field_unique_name, field_name)
local DataStorePersistenceTarget_container = tree:add(F.DataStorePersistenceTarget, tvb(off, 0))
	DataStorePersistenceTarget_container:set_text(field_name .. " (DataStorePersistenceTarget):")
	off = do_Structure(conn, DataStorePersistenceTarget_container, tvb, off, 'DataStorePersistenceTarget_Base', 'Base')
off, DataStorePersistenceTarget_ownerId = do_PID(conn, DataStorePersistenceTarget_container, tvb, off, 'DataStorePersistenceTarget_ownerId', 'ownerId')
off, DataStorePersistenceTarget_persistenceSlotId = do_Uint16(conn, DataStorePersistenceTarget_container, tvb, off, 'DataStorePersistenceTarget_persistenceSlotId', 'persistenceSlotId')

return off
end
function do_DataStoreChangeMetaCompareParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreChangeMetaCompareParam_container = tree:add(F.DataStoreChangeMetaCompareParam, tvb(off, 0))
	DataStoreChangeMetaCompareParam_container:set_text(field_name .. " (DataStoreChangeMetaCompareParam):")
	off = do_Structure(conn, DataStoreChangeMetaCompareParam_container, tvb, off, 'DataStoreChangeMetaCompareParam_Base', 'Base')
off, DataStoreChangeMetaCompareParam_comparisonFlag = do_Uint32(conn, DataStoreChangeMetaCompareParam_container, tvb, off, 'DataStoreChangeMetaCompareParam_comparisonFlag', 'comparisonFlag')
off, DataStoreChangeMetaCompareParam_name = do_String(conn, DataStoreChangeMetaCompareParam_container, tvb, off, 'DataStoreChangeMetaCompareParam_name', 'name')
off = do_DataStorePermission(conn, DataStoreChangeMetaCompareParam_container, tvb, off, 'DataStoreChangeMetaCompareParam_permission', 'permission')
off = do_DataStorePermission(conn, DataStoreChangeMetaCompareParam_container, tvb, off, 'DataStoreChangeMetaCompareParam_delPermission', 'delPermission')
off, DataStoreChangeMetaCompareParam_period = do_Uint16(conn, DataStoreChangeMetaCompareParam_container, tvb, off, 'DataStoreChangeMetaCompareParam_period', 'period')
off, DataStoreChangeMetaCompareParam_metaBinary = do_qBuffer(conn, DataStoreChangeMetaCompareParam_container, tvb, off, 'DataStoreChangeMetaCompareParam_metaBinary', 'metaBinary')
local DataStoreChangeMetaCompareParam_tags_len = tvb(off, 4):le_uint()
	subDataStoreChangeMetaCompareParam_container = DataStoreChangeMetaCompareParam_container:add_le(F.DataStoreChangeMetaCompareParam_tags_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreChangeMetaCompareParam_tags_len do
	off, DataStoreChangeMetaCompareParam_tags_item = do_String(conn, subDataStoreChangeMetaCompareParam_container, tvb, off, 'DataStoreChangeMetaCompareParam_tags_item', 'tags')

	end
	
off, DataStoreChangeMetaCompareParam_referredCnt = do_Uint32(conn, DataStoreChangeMetaCompareParam_container, tvb, off, 'DataStoreChangeMetaCompareParam_referredCnt', 'referredCnt')
off, DataStoreChangeMetaCompareParam_dataType = do_Uint16(conn, DataStoreChangeMetaCompareParam_container, tvb, off, 'DataStoreChangeMetaCompareParam_dataType', 'dataType')
off, DataStoreChangeMetaCompareParam_status = do_Uint8(conn, DataStoreChangeMetaCompareParam_container, tvb, off, 'DataStoreChangeMetaCompareParam_status', 'status')

return off
end
function do_UserContentKey(conn, tree, tvb, off, field_unique_name, field_name)
local UserContentKey_container = tree:add(F.UserContentKey, tvb(off, 0))
	UserContentKey_container:set_text(field_name .. " (UserContentKey):")
	off = do_Structure(conn, UserContentKey_container, tvb, off, 'UserContentKey_Base', 'Base')
off, UserContentKey_m_typeID = do_Uint32(conn, UserContentKey_container, tvb, off, 'UserContentKey_m_typeID', 'm_typeID')
off, UserContentKey_m_contentID = do_Uint64(conn, UserContentKey_container, tvb, off, 'UserContentKey_m_contentID', 'm_contentID')

return off
end
function do_ContentProperty(conn, tree, tvb, off, field_unique_name, field_name)
local ContentProperty_container = tree:add(F.ContentProperty, tvb(off, 0))
	ContentProperty_container:set_text(field_name .. " (ContentProperty):")
	off = do_Structure(conn, ContentProperty_container, tvb, off, 'ContentProperty_Base', 'Base')
off, ContentProperty_m_ID = do_Uint32(conn, ContentProperty_container, tvb, off, 'ContentProperty_m_ID', 'm_ID')
off = do_Variant(conn, ContentProperty_container, tvb, off, 'ContentProperty_m_value', 'm_value')

return off
end
function do_RankingRankData(conn, tree, tvb, off, field_unique_name, field_name)
local RankingRankData_container = tree:add(F.RankingRankData, tvb(off, 0))
	RankingRankData_container:set_text(field_name .. " (RankingRankData):")
	off = do_Structure(conn, RankingRankData_container, tvb, off, 'RankingRankData_Base', 'Base')
off, RankingRankData_principalId = do_PID(conn, RankingRankData_container, tvb, off, 'RankingRankData_principalId', 'principalId')
off, RankingRankData_uniqueId = do_Uint64(conn, RankingRankData_container, tvb, off, 'RankingRankData_uniqueId', 'uniqueId')
off, RankingRankData_order = do_Uint32(conn, RankingRankData_container, tvb, off, 'RankingRankData_order', 'order')
off, RankingRankData_category = do_Uint32(conn, RankingRankData_container, tvb, off, 'RankingRankData_category', 'category')
off, RankingRankData_score = do_Uint32(conn, RankingRankData_container, tvb, off, 'RankingRankData_score', 'score')
local RankingRankData_groups_len = tvb(off, 4):le_uint()
	subRankingRankData_container = RankingRankData_container:add_le(F.RankingRankData_groups_len, tvb(off,4))
	off = off + 4
	for i=1,RankingRankData_groups_len do
	off, RankingRankData_groups_item = do_byte(conn, subRankingRankData_container, tvb, off, 'RankingRankData_groups_item', 'groups')

	end
	
off, RankingRankData_param = do_Uint64(conn, RankingRankData_container, tvb, off, 'RankingRankData_param', 'param')
off, RankingRankData_commonData = do_Buffer(conn, RankingRankData_container, tvb, off, 'RankingRankData_commonData', 'commonData')

return off
end
function do_NotificationEvent(conn, tree, tvb, off, field_unique_name, field_name)
local NotificationEvent_container = tree:add(F.NotificationEvent, tvb(off, 0))
	NotificationEvent_container:set_text(field_name .. " (NotificationEvent):")
	off = do_Structure(conn, NotificationEvent_container, tvb, off, 'NotificationEvent_Base', 'Base')
off, NotificationEvent_m_pidSource = do_PID(conn, NotificationEvent_container, tvb, off, 'NotificationEvent_m_pidSource', 'm_pidSource')
off, NotificationEvent_m_uiType = do_Uint32(conn, NotificationEvent_container, tvb, off, 'NotificationEvent_m_uiType', 'm_uiType')
off, NotificationEvent_m_uiParam1 = do_Uint32(conn, NotificationEvent_container, tvb, off, 'NotificationEvent_m_uiParam1', 'm_uiParam1')
off, NotificationEvent_m_uiParam2 = do_Uint32(conn, NotificationEvent_container, tvb, off, 'NotificationEvent_m_uiParam2', 'm_uiParam2')
off, NotificationEvent_m_strParam = do_String(conn, NotificationEvent_container, tvb, off, 'NotificationEvent_m_strParam', 'm_strParam')
off, NotificationEvent_m_pidSource2 = do_PID(conn, NotificationEvent_container, tvb, off, 'NotificationEvent_m_pidSource2', 'm_pidSource2')
off, NotificationEvent_m_uiType2 = do_Uint32(conn, NotificationEvent_container, tvb, off, 'NotificationEvent_m_uiType2', 'm_uiType2')
off, NotificationEvent_m_uiParam12 = do_Uint64(conn, NotificationEvent_container, tvb, off, 'NotificationEvent_m_uiParam12', 'm_uiParam12')
off, NotificationEvent_m_uiParam22 = do_Uint64(conn, NotificationEvent_container, tvb, off, 'NotificationEvent_m_uiParam22', 'm_uiParam22')
off, NotificationEvent_m_strParam2 = do_String(conn, NotificationEvent_container, tvb, off, 'NotificationEvent_m_strParam2', 'm_strParam2')
off, NotificationEvent_m_uiParam3 = do_Uint64(conn, NotificationEvent_container, tvb, off, 'NotificationEvent_m_uiParam3', 'm_uiParam3')
local NotificationEvent_m_mapParam_len = tvb(off, 4):le_uint()
	subNotificationEvent_container = NotificationEvent_container:add_le(F.NotificationEvent_m_mapParam_len, tvb(off,4))
	off = off + 4
	for i=1,NotificationEvent_m_mapParam_len do
	off, NotificationEvent_m_mapParam_key = do_String(conn, subNotificationEvent_container, tvb, off, 'NotificationEvent_m_mapParam_key', 'm_mapParam')

off = do_Variant(conn, subNotificationEvent_container, tvb, off, 'NotificationEvent_m_mapParam_value', 'm_mapParam')

	end
	

return off
end
function do_LeaguePointInfo(conn, tree, tvb, off, field_unique_name, field_name)
local LeaguePointInfo_container = tree:add(F.LeaguePointInfo, tvb(off, 0))
	LeaguePointInfo_container:set_text(field_name .. " (LeaguePointInfo):")
	off = do_Structure(conn, LeaguePointInfo_container, tvb, off, 'LeaguePointInfo_Base', 'Base')
off, LeaguePointInfo_tagId = do_Uint64(conn, LeaguePointInfo_container, tvb, off, 'LeaguePointInfo_tagId', 'tagId')
off, LeaguePointInfo_regionFlag = do_Uint8(conn, LeaguePointInfo_container, tvb, off, 'LeaguePointInfo_regionFlag', 'regionFlag')
off, LeaguePointInfo_leagueId = do_String(conn, LeaguePointInfo_container, tvb, off, 'LeaguePointInfo_leagueId', 'leagueId')
off, LeaguePointInfo_point = do_Uint32(conn, LeaguePointInfo_container, tvb, off, 'LeaguePointInfo_point', 'point')
local LeaguePointInfo_tagMembers_len = tvb(off, 4):le_uint()
	subLeaguePointInfo_container = LeaguePointInfo_container:add_le(F.LeaguePointInfo_tagMembers_len, tvb(off,4))
	off = off + 4
	for i=1,LeaguePointInfo_tagMembers_len do
	off, LeaguePointInfo_tagMembers_key = do_Uint64(conn, subLeaguePointInfo_container, tvb, off, 'LeaguePointInfo_tagMembers_key', 'tagMembers')

off = do_LeaguePlayerDetail(conn, subLeaguePointInfo_container, tvb, off, 'LeaguePointInfo_tagMembers_value', 'tagMembers')

	end
	
off, LeaguePointInfo_applicationBuffer = do_qBuffer(conn, LeaguePointInfo_container, tvb, off, 'LeaguePointInfo_applicationBuffer', 'applicationBuffer')

return off
end
function do_FriendMii(conn, tree, tvb, off, field_unique_name, field_name)
local FriendMii_container = tree:add(F.FriendMii, tvb(off, 0))
	FriendMii_container:set_text(field_name .. " (FriendMii):")
	off, FriendMii_Unknown = do_Uint32(conn, FriendMii_container, tvb, off, 'FriendMii_Unknown', 'Unknown')
off = do_Mii(conn, FriendMii_container, tvb, off, 'FriendMii_Mii', 'Mii')
off, FriendMii_Unknown2 = do_DateTime(conn, FriendMii_container, tvb, off, 'FriendMii_Unknown2', 'Unknown2')

return off
end
function do_MiiList(conn, tree, tvb, off, field_unique_name, field_name)
local MiiList_container = tree:add(F.MiiList, tvb(off, 0))
	MiiList_container:set_text(field_name .. " (MiiList):")
	off, MiiList_Unknown = do_String(conn, MiiList_container, tvb, off, 'MiiList_Unknown', 'Unknown')
off, MiiList_Unknown2 = do_Bool(conn, MiiList_container, tvb, off, 'MiiList_Unknown2', 'Unknown2')
off, MiiList_Unknown3 = do_Uint8(conn, MiiList_container, tvb, off, 'MiiList_Unknown3', 'Unknown3')
local MiiList_Mii_data_list_len = tvb(off, 4):le_uint()
	subMiiList_container = MiiList_container:add_le(F.MiiList_Mii_data_list_len, tvb(off,4))
	off = off + 4
	for i=1,MiiList_Mii_data_list_len do
	off, MiiList_Mii_data_list_item = do_Buffer(conn, subMiiList_container, tvb, off, 'MiiList_Mii_data_list_item', 'Mii_data_list')

	end
	

return off
end
function do_NintendoPresence(conn, tree, tvb, off, field_unique_name, field_name)
local NintendoPresence_container = tree:add(F.NintendoPresence, tvb(off, 0))
	NintendoPresence_container:set_text(field_name .. " (NintendoPresence):")
	off, NintendoPresence_m_changedBitFlag = do_Uint32(conn, NintendoPresence_container, tvb, off, 'NintendoPresence_m_changedBitFlag', 'm_changedBitFlag')
off = do_GameKey(conn, NintendoPresence_container, tvb, off, 'NintendoPresence_m_gameKey', 'm_gameKey')
off, NintendoPresence_m_gameModeDescription = do_String(conn, NintendoPresence_container, tvb, off, 'NintendoPresence_m_gameModeDescription', 'm_gameModeDescription')
off, NintendoPresence_m_joinAvailabilityFlag = do_Uint32(conn, NintendoPresence_container, tvb, off, 'NintendoPresence_m_joinAvailabilityFlag', 'm_joinAvailabilityFlag')
off, NintendoPresence_m_matchmakeSystemType = do_Uint8(conn, NintendoPresence_container, tvb, off, 'NintendoPresence_m_matchmakeSystemType', 'm_matchmakeSystemType')
off, NintendoPresence_m_joinGameID = do_Uint32(conn, NintendoPresence_container, tvb, off, 'NintendoPresence_m_joinGameID', 'm_joinGameID')
off, NintendoPresence_m_joinGameMode = do_Uint32(conn, NintendoPresence_container, tvb, off, 'NintendoPresence_m_joinGameMode', 'm_joinGameMode')
off, NintendoPresence_m_ownerPrincipalID = do_PID(conn, NintendoPresence_container, tvb, off, 'NintendoPresence_m_ownerPrincipalID', 'm_ownerPrincipalID')
off, NintendoPresence_m_joinGroupID = do_Uint32(conn, NintendoPresence_container, tvb, off, 'NintendoPresence_m_joinGroupID', 'm_joinGroupID')
off, NintendoPresence_m_applicationArg = do_Buffer(conn, NintendoPresence_container, tvb, off, 'NintendoPresence_m_applicationArg', 'm_applicationArg')

return off
end
function do_CommentPictureReqGetInfoWithoutHeaders(conn, tree, tvb, off, field_unique_name, field_name)
local CommentPictureReqGetInfoWithoutHeaders_container = tree:add(F.CommentPictureReqGetInfoWithoutHeaders, tvb(off, 0))
	CommentPictureReqGetInfoWithoutHeaders_container:set_text(field_name .. " (CommentPictureReqGetInfoWithoutHeaders):")
	off = do_Structure(conn, CommentPictureReqGetInfoWithoutHeaders_container, tvb, off, 'CommentPictureReqGetInfoWithoutHeaders_Base', 'Base')
off, CommentPictureReqGetInfoWithoutHeaders_Url = do_String(conn, CommentPictureReqGetInfoWithoutHeaders_container, tvb, off, 'CommentPictureReqGetInfoWithoutHeaders_Url', 'Url')
off, CommentPictureReqGetInfoWithoutHeaders_Relation_data_type = do_Uint8(conn, CommentPictureReqGetInfoWithoutHeaders_container, tvb, off, 'CommentPictureReqGetInfoWithoutHeaders_Relation_data_type', 'Relation_data_type')
off, CommentPictureReqGetInfoWithoutHeaders_Filesize = do_Uint32(conn, CommentPictureReqGetInfoWithoutHeaders_container, tvb, off, 'CommentPictureReqGetInfoWithoutHeaders_Filesize', 'Filesize')
off, CommentPictureReqGetInfoWithoutHeaders_Root_ca_cert = do_Buffer(conn, CommentPictureReqGetInfoWithoutHeaders_container, tvb, off, 'CommentPictureReqGetInfoWithoutHeaders_Root_ca_cert', 'Root_ca_cert')
off, CommentPictureReqGetInfoWithoutHeaders_Filename = do_String(conn, CommentPictureReqGetInfoWithoutHeaders_container, tvb, off, 'CommentPictureReqGetInfoWithoutHeaders_Filename', 'Filename')

return off
end
function do_PreparePostCourseParam(conn, tree, tvb, off, field_unique_name, field_name)
local PreparePostCourseParam_container = tree:add(F.PreparePostCourseParam, tvb(off, 0))
	PreparePostCourseParam_container:set_text(field_name .. " (PreparePostCourseParam):")
	off = do_Structure(conn, PreparePostCourseParam_container, tvb, off, 'PreparePostCourseParam_Base', 'Base')
off, PreparePostCourseParam_Unknown = do_String(conn, PreparePostCourseParam_container, tvb, off, 'PreparePostCourseParam_Unknown', 'Unknown')
off, PreparePostCourseParam_Unknown2 = do_String(conn, PreparePostCourseParam_container, tvb, off, 'PreparePostCourseParam_Unknown2', 'Unknown2')
off, PreparePostCourseParam_Unknown3 = do_Uint32(conn, PreparePostCourseParam_container, tvb, off, 'PreparePostCourseParam_Unknown3', 'Unknown3')
off, PreparePostCourseParam_Unknown4 = do_Bool(conn, PreparePostCourseParam_container, tvb, off, 'PreparePostCourseParam_Unknown4', 'Unknown4')
off, PreparePostCourseParam_Unknown5 = do_Uint8(conn, PreparePostCourseParam_container, tvb, off, 'PreparePostCourseParam_Unknown5', 'Unknown5')
off, PreparePostCourseParam_Unknown6 = do_Uint8(conn, PreparePostCourseParam_container, tvb, off, 'PreparePostCourseParam_Unknown6', 'Unknown6')
off, PreparePostCourseParam_Unknown7 = do_Uint32(conn, PreparePostCourseParam_container, tvb, off, 'PreparePostCourseParam_Unknown7', 'Unknown7')
off, PreparePostCourseParam_Unknown8 = do_Uint32(conn, PreparePostCourseParam_container, tvb, off, 'PreparePostCourseParam_Unknown8', 'Unknown8')
off, PreparePostCourseParam_Unknown9 = do_Uint32(conn, PreparePostCourseParam_container, tvb, off, 'PreparePostCourseParam_Unknown9', 'Unknown9')
off, PreparePostCourseParam_Unknown10 = do_Uint32(conn, PreparePostCourseParam_container, tvb, off, 'PreparePostCourseParam_Unknown10', 'Unknown10')
off, PreparePostCourseParam_Unknown11 = do_qBuffer(conn, PreparePostCourseParam_container, tvb, off, 'PreparePostCourseParam_Unknown11', 'Unknown11')
off, PreparePostCourseParam_Unknown12 = do_Uint8(conn, PreparePostCourseParam_container, tvb, off, 'PreparePostCourseParam_Unknown12', 'Unknown12')
off, PreparePostCourseParam_Unknown13 = do_Uint32(conn, PreparePostCourseParam_container, tvb, off, 'PreparePostCourseParam_Unknown13', 'Unknown13')
off, PreparePostCourseParam_Unknown14 = do_Uint16(conn, PreparePostCourseParam_container, tvb, off, 'PreparePostCourseParam_Unknown14', 'Unknown14')
off, PreparePostCourseParam_Unknown15 = do_Uint16(conn, PreparePostCourseParam_container, tvb, off, 'PreparePostCourseParam_Unknown15', 'Unknown15')
off, PreparePostCourseParam_Unknown16 = do_Bool(conn, PreparePostCourseParam_container, tvb, off, 'PreparePostCourseParam_Unknown16', 'Unknown16')
off, PreparePostCourseParam_Unknown17 = do_Uint32(conn, PreparePostCourseParam_container, tvb, off, 'PreparePostCourseParam_Unknown17', 'Unknown17')
off, PreparePostCourseParam_Unknown18 = do_Uint32(conn, PreparePostCourseParam_container, tvb, off, 'PreparePostCourseParam_Unknown18', 'Unknown18')
local PreparePostCourseParam_Unknown19_len = tvb(off, 4):le_uint()
	subPreparePostCourseParam_container = PreparePostCourseParam_container:add_le(F.PreparePostCourseParam_Unknown19_len, tvb(off,4))
	off = off + 4
	for i=1,PreparePostCourseParam_Unknown19_len do
	off, PreparePostCourseParam_Unknown19_item = do_String(conn, subPreparePostCourseParam_container, tvb, off, 'PreparePostCourseParam_Unknown19_item', 'Unknown19')

	end
	

return off
end
function do_UnknownStruct4(conn, tree, tvb, off, field_unique_name, field_name)
local UnknownStruct4_container = tree:add(F.UnknownStruct4, tvb(off, 0))
	UnknownStruct4_container:set_text(field_name .. " (UnknownStruct4):")
	off = do_Structure(conn, UnknownStruct4_container, tvb, off, 'UnknownStruct4_Base', 'Base')
off, UnknownStruct4_Unknown = do_Uint8(conn, UnknownStruct4_container, tvb, off, 'UnknownStruct4_Unknown', 'Unknown')
off, UnknownStruct4_Unknown2 = do_Uint8(conn, UnknownStruct4_container, tvb, off, 'UnknownStruct4_Unknown2', 'Unknown2')
off, UnknownStruct4_Unknown3 = do_Uint32(conn, UnknownStruct4_container, tvb, off, 'UnknownStruct4_Unknown3', 'Unknown3')
off, UnknownStruct4_Unknown4 = do_DateTime(conn, UnknownStruct4_container, tvb, off, 'UnknownStruct4_Unknown4', 'Unknown4')
off, UnknownStruct4_Unknown5 = do_DateTime(conn, UnknownStruct4_container, tvb, off, 'UnknownStruct4_Unknown5', 'Unknown5')
off, UnknownStruct4_Unknown6 = do_Uint8(conn, UnknownStruct4_container, tvb, off, 'UnknownStruct4_Unknown6', 'Unknown6')
off, UnknownStruct4_Unknown7 = do_Uint8(conn, UnknownStruct4_container, tvb, off, 'UnknownStruct4_Unknown7', 'Unknown7')

return off
end
function do_UnknownStruct5(conn, tree, tvb, off, field_unique_name, field_name)
local UnknownStruct5_container = tree:add(F.UnknownStruct5, tvb(off, 0))
	UnknownStruct5_container:set_text(field_name .. " (UnknownStruct5):")
	off = do_Structure(conn, UnknownStruct5_container, tvb, off, 'UnknownStruct5_Base', 'Base')
off, UnknownStruct5_Unknown = do_Uint8(conn, UnknownStruct5_container, tvb, off, 'UnknownStruct5_Unknown', 'Unknown')
off, UnknownStruct5_Unknown2 = do_Uint32(conn, UnknownStruct5_container, tvb, off, 'UnknownStruct5_Unknown2', 'Unknown2')

return off
end
function do_RelationObjectReqGetInfo(conn, tree, tvb, off, field_unique_name, field_name)
local RelationObjectReqGetInfo_container = tree:add(F.RelationObjectReqGetInfo, tvb(off, 0))
	RelationObjectReqGetInfo_container:set_text(field_name .. " (RelationObjectReqGetInfo):")
	off = do_Structure(conn, RelationObjectReqGetInfo_container, tvb, off, 'RelationObjectReqGetInfo_Base', 'Base')
off, RelationObjectReqGetInfo_Url = do_String(conn, RelationObjectReqGetInfo_container, tvb, off, 'RelationObjectReqGetInfo_Url', 'Url')
off, RelationObjectReqGetInfo_Relation_data_type = do_Uint8(conn, RelationObjectReqGetInfo_container, tvb, off, 'RelationObjectReqGetInfo_Relation_data_type', 'Relation_data_type')
off, RelationObjectReqGetInfo_Filesize = do_Uint32(conn, RelationObjectReqGetInfo_container, tvb, off, 'RelationObjectReqGetInfo_Filesize', 'Filesize')
off, RelationObjectReqGetInfo_Root_ca_cert = do_Buffer(conn, RelationObjectReqGetInfo_container, tvb, off, 'RelationObjectReqGetInfo_Root_ca_cert', 'Root_ca_cert')
off, RelationObjectReqGetInfo_Filename = do_String(conn, RelationObjectReqGetInfo_container, tvb, off, 'RelationObjectReqGetInfo_Filename', 'Filename')

return off
end
function do_UnknownStruct1(conn, tree, tvb, off, field_unique_name, field_name)
local UnknownStruct1_container = tree:add(F.UnknownStruct1, tvb(off, 0))
	UnknownStruct1_container:set_text(field_name .. " (UnknownStruct1):")
	off = do_Structure(conn, UnknownStruct1_container, tvb, off, 'UnknownStruct1_Base', 'Base')
off, UnknownStruct1_Unknown = do_Uint16(conn, UnknownStruct1_container, tvb, off, 'UnknownStruct1_Unknown', 'Unknown')
off, UnknownStruct1_Unknown2 = do_Uint16(conn, UnknownStruct1_container, tvb, off, 'UnknownStruct1_Unknown2', 'Unknown2')
off, UnknownStruct1_Unknown3 = do_Uint16(conn, UnknownStruct1_container, tvb, off, 'UnknownStruct1_Unknown3', 'Unknown3')
off, UnknownStruct1_Unknown4 = do_Uint16(conn, UnknownStruct1_container, tvb, off, 'UnknownStruct1_Unknown4', 'Unknown4')

return off
end
function do_NintendoPresenceV2(conn, tree, tvb, off, field_unique_name, field_name)
local NintendoPresenceV2_container = tree:add(F.NintendoPresenceV2, tvb(off, 0))
	NintendoPresenceV2_container:set_text(field_name .. " (NintendoPresenceV2):")
	off, NintendoPresenceV2_Changed_flags = do_Uint32(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Changed_flags', 'Changed_flags')
off, NintendoPresenceV2_Is_online = do_Bool(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Is_online', 'Is_online')
off = do_GameKey(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Game_key', 'Game_key')
off, NintendoPresenceV2_Unknown_1 = do_Uint8(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Unknown_1', 'Unknown_1')
off, NintendoPresenceV2_Message = do_String(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Message', 'Message')
off, NintendoPresenceV2_Unknown_2 = do_Uint32(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Unknown_2', 'Unknown_2')
off, NintendoPresenceV2_Unknown_3 = do_Uint8(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Unknown_3', 'Unknown_3')
off, NintendoPresenceV2_Game_server_id = do_Uint32(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Game_server_id', 'Game_server_id')
off, NintendoPresenceV2_Unknown_4 = do_Uint32(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Unknown_4', 'Unknown_4')
off, NintendoPresenceV2_Pid = do_PID(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Pid', 'Pid')
off, NintendoPresenceV2_Gathering_id = do_Uint32(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Gathering_id', 'Gathering_id')
off, NintendoPresenceV2_Application_data = do_Buffer(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Application_data', 'Application_data')
off, NintendoPresenceV2_Unknown_5 = do_Uint8(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Unknown_5', 'Unknown_5')
off, NintendoPresenceV2_Unknown_6 = do_Uint8(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Unknown_6', 'Unknown_6')
off, NintendoPresenceV2_Unknown_7 = do_Uint8(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Unknown_7', 'Unknown_7')

return off
end
function do_Comment(conn, tree, tvb, off, field_unique_name, field_name)
local Comment_container = tree:add(F.Comment, tvb(off, 0))
	Comment_container:set_text(field_name .. " (Comment):")
	off, Comment_Unknown = do_Uint8(conn, Comment_container, tvb, off, 'Comment_Unknown', 'Unknown')
off, Comment_Status_message = do_String(conn, Comment_container, tvb, off, 'Comment_Status_message', 'Status_message')
off, Comment_Last_changed_on = do_DateTime(conn, Comment_container, tvb, off, 'Comment_Last_changed_on', 'Last_changed_on')

return off
end
function do_FriendRequestMessage(conn, tree, tvb, off, field_unique_name, field_name)
local FriendRequestMessage_container = tree:add(F.FriendRequestMessage, tvb(off, 0))
	FriendRequestMessage_container:set_text(field_name .. " (FriendRequestMessage):")
	off, FriendRequestMessage_Friend_request_id = do_Uint64(conn, FriendRequestMessage_container, tvb, off, 'FriendRequestMessage_Friend_request_id', 'Friend_request_id')
off, FriendRequestMessage_Unknown = do_Uint8(conn, FriendRequestMessage_container, tvb, off, 'FriendRequestMessage_Unknown', 'Unknown')
off, FriendRequestMessage_Unknown2 = do_Uint8(conn, FriendRequestMessage_container, tvb, off, 'FriendRequestMessage_Unknown2', 'Unknown2')
off, FriendRequestMessage_Message = do_String(conn, FriendRequestMessage_container, tvb, off, 'FriendRequestMessage_Message', 'Message')
off, FriendRequestMessage_Unknown3 = do_Uint8(conn, FriendRequestMessage_container, tvb, off, 'FriendRequestMessage_Unknown3', 'Unknown3')
off, FriendRequestMessage_Unknown4 = do_String(conn, FriendRequestMessage_container, tvb, off, 'FriendRequestMessage_Unknown4', 'Unknown4')
off = do_GameKey(conn, FriendRequestMessage_container, tvb, off, 'FriendRequestMessage_Game_key', 'Game_key')
off, FriendRequestMessage_Unknown5 = do_DateTime(conn, FriendRequestMessage_container, tvb, off, 'FriendRequestMessage_Unknown5', 'Unknown5')
off, FriendRequestMessage_Expires_on = do_DateTime(conn, FriendRequestMessage_container, tvb, off, 'FriendRequestMessage_Expires_on', 'Expires_on')

return off
end
function do_PersistentNotification(conn, tree, tvb, off, field_unique_name, field_name)
local PersistentNotification_container = tree:add(F.PersistentNotification, tvb(off, 0))
	PersistentNotification_container:set_text(field_name .. " (PersistentNotification):")
	off, PersistentNotification_Unknown = do_Uint64(conn, PersistentNotification_container, tvb, off, 'PersistentNotification_Unknown', 'Unknown')
off, PersistentNotification_Unknown2 = do_Uint32(conn, PersistentNotification_container, tvb, off, 'PersistentNotification_Unknown2', 'Unknown2')
off, PersistentNotification_Unknown3 = do_Uint32(conn, PersistentNotification_container, tvb, off, 'PersistentNotification_Unknown3', 'Unknown3')
off, PersistentNotification_Unknown4 = do_Uint32(conn, PersistentNotification_container, tvb, off, 'PersistentNotification_Unknown4', 'Unknown4')
off, PersistentNotification_Unknown5 = do_String(conn, PersistentNotification_container, tvb, off, 'PersistentNotification_Unknown5', 'Unknown5')

return off
end
function do_Property(conn, tree, tvb, off, field_unique_name, field_name)
local Property_container = tree:add(F.Property, tvb(off, 0))
	Property_container:set_text(field_name .. " (Property):")
	off = do_Structure(conn, Property_container, tvb, off, 'Property_Base', 'Base')
off, Property_ID = do_Uint32(conn, Property_container, tvb, off, 'Property_ID', 'ID')
off, Property_Value = do_Uint32(conn, Property_container, tvb, off, 'Property_Value', 'Value')

return off
end
function do_GameSessionKey(conn, tree, tvb, off, field_unique_name, field_name)
local GameSessionKey_container = tree:add(F.GameSessionKey, tvb(off, 0))
	GameSessionKey_container:set_text(field_name .. " (GameSessionKey):")
	off = do_Structure(conn, GameSessionKey_container, tvb, off, 'GameSessionKey_Base', 'Base')
off, GameSessionKey_m_typeID = do_Uint32(conn, GameSessionKey_container, tvb, off, 'GameSessionKey_m_typeID', 'm_typeID')
off, GameSessionKey_m_sessionID = do_Uint32(conn, GameSessionKey_container, tvb, off, 'GameSessionKey_m_sessionID', 'm_sessionID')

return off
end
function do_Ranking2RankData(conn, tree, tvb, off, field_unique_name, field_name)
local Ranking2RankData_container = tree:add(F.Ranking2RankData, tvb(off, 0))
	Ranking2RankData_container:set_text(field_name .. " (Ranking2RankData):")
	off = do_Structure(conn, Ranking2RankData_container, tvb, off, 'Ranking2RankData_Base', 'Base')
off, Ranking2RankData_misc = do_Uint64(conn, Ranking2RankData_container, tvb, off, 'Ranking2RankData_misc', 'misc')
off, Ranking2RankData_nexUniqueId = do_Uint64(conn, Ranking2RankData_container, tvb, off, 'Ranking2RankData_nexUniqueId', 'nexUniqueId')
off, Ranking2RankData_principalId = do_PID(conn, Ranking2RankData_container, tvb, off, 'Ranking2RankData_principalId', 'principalId')
off, Ranking2RankData_rank = do_Uint32(conn, Ranking2RankData_container, tvb, off, 'Ranking2RankData_rank', 'rank')
off, Ranking2RankData_score = do_Uint32(conn, Ranking2RankData_container, tvb, off, 'Ranking2RankData_score', 'score')
off = do_Ranking2CommonData(conn, Ranking2RankData_container, tvb, off, 'Ranking2RankData_commonData', 'commonData')

return off
end
function do_UbiAccountStatus(conn, tree, tvb, off, field_unique_name, field_name)
local UbiAccountStatus_container = tree:add(F.UbiAccountStatus, tvb(off, 0))
	UbiAccountStatus_container:set_text(field_name .. " (UbiAccountStatus):")
	off = do_Structure(conn, UbiAccountStatus_container, tvb, off, 'UbiAccountStatus_Base', 'Base')
off, UbiAccountStatus_m_basicStatus = do_Uint32(conn, UbiAccountStatus_container, tvb, off, 'UbiAccountStatus_m_basicStatus', 'm_basicStatus')
off, UbiAccountStatus_m_missingRequiredInformations = do_Bool(conn, UbiAccountStatus_container, tvb, off, 'UbiAccountStatus_m_missingRequiredInformations', 'm_missingRequiredInformations')
off, UbiAccountStatus_m_recoveringPassword = do_Bool(conn, UbiAccountStatus_container, tvb, off, 'UbiAccountStatus_m_recoveringPassword', 'm_recoveringPassword')
off, UbiAccountStatus_m_pendingDeactivation = do_Bool(conn, UbiAccountStatus_container, tvb, off, 'UbiAccountStatus_m_pendingDeactivation', 'm_pendingDeactivation')

return off
end
function do_ExternalAccount(conn, tree, tvb, off, field_unique_name, field_name)
local ExternalAccount_container = tree:add(F.ExternalAccount, tvb(off, 0))
	ExternalAccount_container:set_text(field_name .. " (ExternalAccount):")
	off = do_Structure(conn, ExternalAccount_container, tvb, off, 'ExternalAccount_Base', 'Base')
off, ExternalAccount_m_accountType = do_Uint32(conn, ExternalAccount_container, tvb, off, 'ExternalAccount_m_accountType', 'm_accountType')
off, ExternalAccount_m_id = do_String(conn, ExternalAccount_container, tvb, off, 'ExternalAccount_m_id', 'm_id')
off, ExternalAccount_m_username = do_String(conn, ExternalAccount_container, tvb, off, 'ExternalAccount_m_username', 'm_username')

return off
end
function do_ValidationFailureReason(conn, tree, tvb, off, field_unique_name, field_name)
local ValidationFailureReason_container = tree:add(F.ValidationFailureReason, tvb(off, 0))
	ValidationFailureReason_container:set_text(field_name .. " (ValidationFailureReason):")
	off = do_Structure(conn, ValidationFailureReason_container, tvb, off, 'ValidationFailureReason_Base', 'Base')
off, ValidationFailureReason_m_validationId = do_Uint32(conn, ValidationFailureReason_container, tvb, off, 'ValidationFailureReason_m_validationId', 'm_validationId')
off, ValidationFailureReason_m_description = do_String(conn, ValidationFailureReason_container, tvb, off, 'ValidationFailureReason_m_description', 'm_description')

return off
end
function do_DataStoreSearchBalloonResult(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreSearchBalloonResult_container = tree:add(F.DataStoreSearchBalloonResult, tvb(off, 0))
	DataStoreSearchBalloonResult_container:set_text(field_name .. " (DataStoreSearchBalloonResult):")
	off = do_Structure(conn, DataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_Base', 'Base')
off, DataStoreSearchBalloonResult_dataId = do_Uint64(conn, DataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_dataId', 'dataId')
off, DataStoreSearchBalloonResult_ownerId = do_PID(conn, DataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_ownerId', 'ownerId')
off, DataStoreSearchBalloonResult_size = do_Uint32(conn, DataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_size', 'size')
off, DataStoreSearchBalloonResult_name = do_String(conn, DataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_name', 'name')
off, DataStoreSearchBalloonResult_dataType = do_Uint16(conn, DataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_dataType', 'dataType')
off, DataStoreSearchBalloonResult_metaBinary = do_qBuffer(conn, DataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_metaBinary', 'metaBinary')
off, DataStoreSearchBalloonResult_createdTime = do_DateTime(conn, DataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_createdTime', 'createdTime')
off, DataStoreSearchBalloonResult_updatedTime = do_DateTime(conn, DataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_updatedTime', 'updatedTime')
off, DataStoreSearchBalloonResult_ownerDataId = do_Uint64(conn, DataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_ownerDataId', 'ownerDataId')
off, DataStoreSearchBalloonResult_ownerName = do_String(conn, DataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_ownerName', 'ownerName')
off, DataStoreSearchBalloonResult_isFriendBalloon = do_Bool(conn, DataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_isFriendBalloon', 'isFriendBalloon')
local DataStoreSearchBalloonResult_ratings_len = tvb(off, 4):le_uint()
	subDataStoreSearchBalloonResult_container = DataStoreSearchBalloonResult_container:add_le(F.DataStoreSearchBalloonResult_ratings_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreSearchBalloonResult_ratings_len do
	off, DataStoreSearchBalloonResult_ratings_key = do_Sint8(conn, subDataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_ratings_key', 'ratings')

off = do_DataStoreRatingInfo(conn, subDataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_ratings_value', 'ratings')

	end
	
local DataStoreSearchBalloonResult_ownerRatings_len = tvb(off, 4):le_uint()
	subDataStoreSearchBalloonResult_container = DataStoreSearchBalloonResult_container:add_le(F.DataStoreSearchBalloonResult_ownerRatings_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreSearchBalloonResult_ownerRatings_len do
	off, DataStoreSearchBalloonResult_ownerRatings_key = do_Sint8(conn, subDataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_ownerRatings_key', 'ownerRatings')

off = do_DataStoreRatingInfo(conn, subDataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_ownerRatings_value', 'ownerRatings')

	end
	

return off
end
function do_DataStoreFetchMyInfosBalloonResult(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreFetchMyInfosBalloonResult_container = tree:add(F.DataStoreFetchMyInfosBalloonResult, tvb(off, 0))
	DataStoreFetchMyInfosBalloonResult_container:set_text(field_name .. " (DataStoreFetchMyInfosBalloonResult):")
	off = do_Structure(conn, DataStoreFetchMyInfosBalloonResult_container, tvb, off, 'DataStoreFetchMyInfosBalloonResult_Base', 'Base')
off, DataStoreFetchMyInfosBalloonResult_dataId = do_Uint64(conn, DataStoreFetchMyInfosBalloonResult_container, tvb, off, 'DataStoreFetchMyInfosBalloonResult_dataId', 'dataId')
off, DataStoreFetchMyInfosBalloonResult_dataType = do_Uint16(conn, DataStoreFetchMyInfosBalloonResult_container, tvb, off, 'DataStoreFetchMyInfosBalloonResult_dataType', 'dataType')
off, DataStoreFetchMyInfosBalloonResult_metaBinary = do_qBuffer(conn, DataStoreFetchMyInfosBalloonResult_container, tvb, off, 'DataStoreFetchMyInfosBalloonResult_metaBinary', 'metaBinary')
off, DataStoreFetchMyInfosBalloonResult_createdTime = do_DateTime(conn, DataStoreFetchMyInfosBalloonResult_container, tvb, off, 'DataStoreFetchMyInfosBalloonResult_createdTime', 'createdTime')
off, DataStoreFetchMyInfosBalloonResult_updatedTime = do_DateTime(conn, DataStoreFetchMyInfosBalloonResult_container, tvb, off, 'DataStoreFetchMyInfosBalloonResult_updatedTime', 'updatedTime')
off, DataStoreFetchMyInfosBalloonResult_isCleared = do_Bool(conn, DataStoreFetchMyInfosBalloonResult_container, tvb, off, 'DataStoreFetchMyInfosBalloonResult_isCleared', 'isCleared')
local DataStoreFetchMyInfosBalloonResult_ratings_len = tvb(off, 4):le_uint()
	subDataStoreFetchMyInfosBalloonResult_container = DataStoreFetchMyInfosBalloonResult_container:add_le(F.DataStoreFetchMyInfosBalloonResult_ratings_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreFetchMyInfosBalloonResult_ratings_len do
	off, DataStoreFetchMyInfosBalloonResult_ratings_key = do_Sint8(conn, subDataStoreFetchMyInfosBalloonResult_container, tvb, off, 'DataStoreFetchMyInfosBalloonResult_ratings_key', 'ratings')

off = do_DataStoreRatingInfo(conn, subDataStoreFetchMyInfosBalloonResult_container, tvb, off, 'DataStoreFetchMyInfosBalloonResult_ratings_value', 'ratings')

	end
	
local DataStoreFetchMyInfosBalloonResult_buffers_len = tvb(off, 4):le_uint()
	subDataStoreFetchMyInfosBalloonResult_container = DataStoreFetchMyInfosBalloonResult_container:add_le(F.DataStoreFetchMyInfosBalloonResult_buffers_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreFetchMyInfosBalloonResult_buffers_len do
	off, DataStoreFetchMyInfosBalloonResult_buffers_key = do_Sint8(conn, subDataStoreFetchMyInfosBalloonResult_container, tvb, off, 'DataStoreFetchMyInfosBalloonResult_buffers_key', 'buffers')

local DataStoreFetchMyInfosBalloonResult_buffers_value_len = tvb(off, 4):le_uint()
	subsubDataStoreFetchMyInfosBalloonResult_container = subDataStoreFetchMyInfosBalloonResult_container:add_le(F.DataStoreFetchMyInfosBalloonResult_buffers_value_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreFetchMyInfosBalloonResult_buffers_value_len do
	off, DataStoreFetchMyInfosBalloonResult_buffers_value_item = do_qBuffer(conn, subsubDataStoreFetchMyInfosBalloonResult_container, tvb, off, 'DataStoreFetchMyInfosBalloonResult_buffers_value_item', 'buffers')

	end
	

	end
	

return off
end
function do_DataStoreFetchMyInfosAchievementResult(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreFetchMyInfosAchievementResult_container = tree:add(F.DataStoreFetchMyInfosAchievementResult, tvb(off, 0))
	DataStoreFetchMyInfosAchievementResult_container:set_text(field_name .. " (DataStoreFetchMyInfosAchievementResult):")
	off = do_Structure(conn, DataStoreFetchMyInfosAchievementResult_container, tvb, off, 'DataStoreFetchMyInfosAchievementResult_Base', 'Base')
off, DataStoreFetchMyInfosAchievementResult_dataId = do_Uint64(conn, DataStoreFetchMyInfosAchievementResult_container, tvb, off, 'DataStoreFetchMyInfosAchievementResult_dataId', 'dataId')
off, DataStoreFetchMyInfosAchievementResult_dataType = do_Uint16(conn, DataStoreFetchMyInfosAchievementResult_container, tvb, off, 'DataStoreFetchMyInfosAchievementResult_dataType', 'dataType')
off, DataStoreFetchMyInfosAchievementResult_metaBinary = do_qBuffer(conn, DataStoreFetchMyInfosAchievementResult_container, tvb, off, 'DataStoreFetchMyInfosAchievementResult_metaBinary', 'metaBinary')
off, DataStoreFetchMyInfosAchievementResult_createdTime = do_DateTime(conn, DataStoreFetchMyInfosAchievementResult_container, tvb, off, 'DataStoreFetchMyInfosAchievementResult_createdTime', 'createdTime')
local DataStoreFetchMyInfosAchievementResult_ratings_len = tvb(off, 4):le_uint()
	subDataStoreFetchMyInfosAchievementResult_container = DataStoreFetchMyInfosAchievementResult_container:add_le(F.DataStoreFetchMyInfosAchievementResult_ratings_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreFetchMyInfosAchievementResult_ratings_len do
	off, DataStoreFetchMyInfosAchievementResult_ratings_key = do_Sint8(conn, subDataStoreFetchMyInfosAchievementResult_container, tvb, off, 'DataStoreFetchMyInfosAchievementResult_ratings_key', 'ratings')

off = do_DataStoreRatingInfo(conn, subDataStoreFetchMyInfosAchievementResult_container, tvb, off, 'DataStoreFetchMyInfosAchievementResult_ratings_value', 'ratings')

	end
	
local DataStoreFetchMyInfosAchievementResult_buffers_len = tvb(off, 4):le_uint()
	subDataStoreFetchMyInfosAchievementResult_container = DataStoreFetchMyInfosAchievementResult_container:add_le(F.DataStoreFetchMyInfosAchievementResult_buffers_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreFetchMyInfosAchievementResult_buffers_len do
	off, DataStoreFetchMyInfosAchievementResult_buffers_key = do_Sint8(conn, subDataStoreFetchMyInfosAchievementResult_container, tvb, off, 'DataStoreFetchMyInfosAchievementResult_buffers_key', 'buffers')

local DataStoreFetchMyInfosAchievementResult_buffers_value_len = tvb(off, 4):le_uint()
	subsubDataStoreFetchMyInfosAchievementResult_container = subDataStoreFetchMyInfosAchievementResult_container:add_le(F.DataStoreFetchMyInfosAchievementResult_buffers_value_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreFetchMyInfosAchievementResult_buffers_value_len do
	off, DataStoreFetchMyInfosAchievementResult_buffers_value_item = do_qBuffer(conn, subsubDataStoreFetchMyInfosAchievementResult_container, tvb, off, 'DataStoreFetchMyInfosAchievementResult_buffers_value_item', 'buffers')

	end
	

	end
	

return off
end
function do_Privilege(conn, tree, tvb, off, field_unique_name, field_name)
local Privilege_container = tree:add(F.Privilege, tvb(off, 0))
	Privilege_container:set_text(field_name .. " (Privilege):")
	off = do_Structure(conn, Privilege_container, tvb, off, 'Privilege_Base', 'Base')
off, Privilege_m_ID = do_Uint32(conn, Privilege_container, tvb, off, 'Privilege_m_ID', 'm_ID')
off, Privilege_m_description = do_String(conn, Privilege_container, tvb, off, 'Privilege_m_description', 'm_description')

return off
end
function do_EndRoundReport(conn, tree, tvb, off, field_unique_name, field_name)
local EndRoundReport_container = tree:add(F.EndRoundReport, tvb(off, 0))
	EndRoundReport_container:set_text(field_name .. " (EndRoundReport):")
	off = do_Structure(conn, EndRoundReport_container, tvb, off, 'EndRoundReport_Base', 'Base')
off, EndRoundReport_Unknown = do_Uint64(conn, EndRoundReport_container, tvb, off, 'EndRoundReport_Unknown', 'Unknown')
off, EndRoundReport_Unknown2 = do_Uint32(conn, EndRoundReport_container, tvb, off, 'EndRoundReport_Unknown2', 'Unknown2')
off, EndRoundReport_Unknown3 = do_Uint32(conn, EndRoundReport_container, tvb, off, 'EndRoundReport_Unknown3', 'Unknown3')
off, EndRoundReport_Unknown4 = do_Uint32(conn, EndRoundReport_container, tvb, off, 'EndRoundReport_Unknown4', 'Unknown4')
off, EndRoundReport_Unknown5 = do_qBuffer(conn, EndRoundReport_container, tvb, off, 'EndRoundReport_Unknown5', 'Unknown5')
off, EndRoundReport_Unknown6 = do_Uint8(conn, EndRoundReport_container, tvb, off, 'EndRoundReport_Unknown6', 'Unknown6')
off, EndRoundReport_Unknown7 = do_Uint32(conn, EndRoundReport_container, tvb, off, 'EndRoundReport_Unknown7', 'Unknown7')

return off
end
function do_TrackingInformation(conn, tree, tvb, off, field_unique_name, field_name)
local TrackingInformation_container = tree:add(F.TrackingInformation, tvb(off, 0))
	TrackingInformation_container:set_text(field_name .. " (TrackingInformation):")
	off = do_Structure(conn, TrackingInformation_container, tvb, off, 'TrackingInformation_Base', 'Base')
off, TrackingInformation_ipn = do_Uint32(conn, TrackingInformation_container, tvb, off, 'TrackingInformation_ipn', 'ipn')
off, TrackingInformation_userID = do_String(conn, TrackingInformation_container, tvb, off, 'TrackingInformation_userID', 'userID')
off, TrackingInformation_machineID = do_String(conn, TrackingInformation_container, tvb, off, 'TrackingInformation_machineID', 'machineID')
off, TrackingInformation_visitorID = do_String(conn, TrackingInformation_container, tvb, off, 'TrackingInformation_visitorID', 'visitorID')
off, TrackingInformation_utsVersion = do_String(conn, TrackingInformation_container, tvb, off, 'TrackingInformation_utsVersion', 'utsVersion')

return off
end
function do_TrackingTag(conn, tree, tvb, off, field_unique_name, field_name)
local TrackingTag_container = tree:add(F.TrackingTag, tvb(off, 0))
	TrackingTag_container:set_text(field_name .. " (TrackingTag):")
	off = do_Structure(conn, TrackingTag_container, tvb, off, 'TrackingTag_Base', 'Base')
off, TrackingTag_trackingID = do_Uint32(conn, TrackingTag_container, tvb, off, 'TrackingTag_trackingID', 'trackingID')
off, TrackingTag_tag = do_String(conn, TrackingTag_container, tvb, off, 'TrackingTag_tag', 'tag')
off, TrackingTag_attributes = do_String(conn, TrackingTag_container, tvb, off, 'TrackingTag_attributes', 'attributes')
off, TrackingTag_deltaTime = do_Uint32(conn, TrackingTag_container, tvb, off, 'TrackingTag_deltaTime', 'deltaTime')
off, TrackingTag_newUserId = do_String(conn, TrackingTag_container, tvb, off, 'TrackingTag_newUserId', 'newUserId')

return off
end
function do_TextMessage(conn, tree, tvb, off, field_unique_name, field_name)
local TextMessage_container = tree:add(F.TextMessage, tvb(off, 0))
	TextMessage_container:set_text(field_name .. " (TextMessage):")
	off = do_UserMessage(conn, TextMessage_container, tvb, off, 'TextMessage_Base2', 'Base2')
off = do_Structure(conn, TextMessage_container, tvb, off, 'TextMessage_Base', 'Base')
off, TextMessage_m_strTextBody = do_String(conn, TextMessage_container, tvb, off, 'TextMessage_m_strTextBody', 'm_strTextBody')

return off
end
function do_BinaryMessage(conn, tree, tvb, off, field_unique_name, field_name)
local BinaryMessage_container = tree:add(F.BinaryMessage, tvb(off, 0))
	BinaryMessage_container:set_text(field_name .. " (BinaryMessage):")
	off = do_UserMessage(conn, BinaryMessage_container, tvb, off, 'BinaryMessage_Base2', 'Base2')
off = do_Structure(conn, BinaryMessage_container, tvb, off, 'BinaryMessage_Base', 'Base')
off, BinaryMessage_m_binaryBody = do_qBuffer(conn, BinaryMessage_container, tvb, off, 'BinaryMessage_m_binaryBody', 'm_binaryBody')

return off
end
function do_BufferQueueParam(conn, tree, tvb, off, field_unique_name, field_name)
local BufferQueueParam_container = tree:add(F.BufferQueueParam, tvb(off, 0))
	BufferQueueParam_container:set_text(field_name .. " (BufferQueueParam):")
	off = do_Structure(conn, BufferQueueParam_container, tvb, off, 'BufferQueueParam_Base', 'Base')
off, BufferQueueParam_dataId = do_Uint64(conn, BufferQueueParam_container, tvb, off, 'BufferQueueParam_dataId', 'dataId')
off, BufferQueueParam_slot = do_Uint32(conn, BufferQueueParam_container, tvb, off, 'BufferQueueParam_slot', 'slot')

return off
end
function do_DataStoreAttachFileParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreAttachFileParam_container = tree:add(F.DataStoreAttachFileParam, tvb(off, 0))
	DataStoreAttachFileParam_container:set_text(field_name .. " (DataStoreAttachFileParam):")
	off = do_Structure(conn, DataStoreAttachFileParam_container, tvb, off, 'DataStoreAttachFileParam_Base', 'Base')
off = do_DataStorePreparePostParam(conn, DataStoreAttachFileParam_container, tvb, off, 'DataStoreAttachFileParam_postParam', 'postParam')
off, DataStoreAttachFileParam_referDataId = do_Uint64(conn, DataStoreAttachFileParam_container, tvb, off, 'DataStoreAttachFileParam_referDataId', 'referDataId')
off, DataStoreAttachFileParam_contentType = do_String(conn, DataStoreAttachFileParam_container, tvb, off, 'DataStoreAttachFileParam_contentType', 'contentType')

return off
end
function do_DataStoreChangePlayablePlatformParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreChangePlayablePlatformParam_container = tree:add(F.DataStoreChangePlayablePlatformParam, tvb(off, 0))
	DataStoreChangePlayablePlatformParam_container:set_text(field_name .. " (DataStoreChangePlayablePlatformParam):")
	off = do_Structure(conn, DataStoreChangePlayablePlatformParam_container, tvb, off, 'DataStoreChangePlayablePlatformParam_Base', 'Base')
off, DataStoreChangePlayablePlatformParam_dataId = do_Uint64(conn, DataStoreChangePlayablePlatformParam_container, tvb, off, 'DataStoreChangePlayablePlatformParam_dataId', 'dataId')
off, DataStoreChangePlayablePlatformParam_playablePlatform = do_Uint32(conn, DataStoreChangePlayablePlatformParam_container, tvb, off, 'DataStoreChangePlayablePlatformParam_playablePlatform', 'playablePlatform')

return off
end
function do_DataStoreCustomRankingResult(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreCustomRankingResult_container = tree:add(F.DataStoreCustomRankingResult, tvb(off, 0))
	DataStoreCustomRankingResult_container:set_text(field_name .. " (DataStoreCustomRankingResult):")
	off = do_Structure(conn, DataStoreCustomRankingResult_container, tvb, off, 'DataStoreCustomRankingResult_Base', 'Base')
off, DataStoreCustomRankingResult_order = do_Uint32(conn, DataStoreCustomRankingResult_container, tvb, off, 'DataStoreCustomRankingResult_order', 'order')
off, DataStoreCustomRankingResult_score = do_Uint32(conn, DataStoreCustomRankingResult_container, tvb, off, 'DataStoreCustomRankingResult_score', 'score')
off = do_DataStoreMetaInfo(conn, DataStoreCustomRankingResult_container, tvb, off, 'DataStoreCustomRankingResult_metaInfo', 'metaInfo')

return off
end
function do_DataStoreFileServerObjectInfo(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreFileServerObjectInfo_container = tree:add(F.DataStoreFileServerObjectInfo, tvb(off, 0))
	DataStoreFileServerObjectInfo_container:set_text(field_name .. " (DataStoreFileServerObjectInfo):")
	off = do_Structure(conn, DataStoreFileServerObjectInfo_container, tvb, off, 'DataStoreFileServerObjectInfo_Base', 'Base')
off, DataStoreFileServerObjectInfo_dataId = do_Uint64(conn, DataStoreFileServerObjectInfo_container, tvb, off, 'DataStoreFileServerObjectInfo_dataId', 'dataId')
off = do_DataStoreReqGetInfo(conn, DataStoreFileServerObjectInfo_container, tvb, off, 'DataStoreFileServerObjectInfo_getInfo', 'getInfo')

return off
end
function do_DataStoreGetCourseRecordParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreGetCourseRecordParam_container = tree:add(F.DataStoreGetCourseRecordParam, tvb(off, 0))
	DataStoreGetCourseRecordParam_container:set_text(field_name .. " (DataStoreGetCourseRecordParam):")
	off = do_Structure(conn, DataStoreGetCourseRecordParam_container, tvb, off, 'DataStoreGetCourseRecordParam_Base', 'Base')
off, DataStoreGetCourseRecordParam_dataId = do_Uint64(conn, DataStoreGetCourseRecordParam_container, tvb, off, 'DataStoreGetCourseRecordParam_dataId', 'dataId')
off, DataStoreGetCourseRecordParam_slot = do_Uint8(conn, DataStoreGetCourseRecordParam_container, tvb, off, 'DataStoreGetCourseRecordParam_slot', 'slot')

return off
end
function do_DataStoreGetCourseRecordResult(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreGetCourseRecordResult_container = tree:add(F.DataStoreGetCourseRecordResult, tvb(off, 0))
	DataStoreGetCourseRecordResult_container:set_text(field_name .. " (DataStoreGetCourseRecordResult):")
	off = do_Structure(conn, DataStoreGetCourseRecordResult_container, tvb, off, 'DataStoreGetCourseRecordResult_Base', 'Base')
off, DataStoreGetCourseRecordResult_dataId = do_Uint64(conn, DataStoreGetCourseRecordResult_container, tvb, off, 'DataStoreGetCourseRecordResult_dataId', 'dataId')
off, DataStoreGetCourseRecordResult_slot = do_Uint8(conn, DataStoreGetCourseRecordResult_container, tvb, off, 'DataStoreGetCourseRecordResult_slot', 'slot')
off, DataStoreGetCourseRecordResult_firstPid = do_Uint32(conn, DataStoreGetCourseRecordResult_container, tvb, off, 'DataStoreGetCourseRecordResult_firstPid', 'firstPid')
off, DataStoreGetCourseRecordResult_bestPid = do_Uint32(conn, DataStoreGetCourseRecordResult_container, tvb, off, 'DataStoreGetCourseRecordResult_bestPid', 'bestPid')
off, DataStoreGetCourseRecordResult_bestScore = do_Sint32(conn, DataStoreGetCourseRecordResult_container, tvb, off, 'DataStoreGetCourseRecordResult_bestScore', 'bestScore')
off, DataStoreGetCourseRecordResult_createdTime = do_DateTime(conn, DataStoreGetCourseRecordResult_container, tvb, off, 'DataStoreGetCourseRecordResult_createdTime', 'createdTime')
off, DataStoreGetCourseRecordResult_updatedTime = do_DateTime(conn, DataStoreGetCourseRecordResult_container, tvb, off, 'DataStoreGetCourseRecordResult_updatedTime', 'updatedTime')

return off
end
function do_DataStoreGetCustomRankingByDataIdParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreGetCustomRankingByDataIdParam_container = tree:add(F.DataStoreGetCustomRankingByDataIdParam, tvb(off, 0))
	DataStoreGetCustomRankingByDataIdParam_container:set_text(field_name .. " (DataStoreGetCustomRankingByDataIdParam):")
	off = do_Structure(conn, DataStoreGetCustomRankingByDataIdParam_container, tvb, off, 'DataStoreGetCustomRankingByDataIdParam_Base', 'Base')
off, DataStoreGetCustomRankingByDataIdParam_applicationId = do_Uint32(conn, DataStoreGetCustomRankingByDataIdParam_container, tvb, off, 'DataStoreGetCustomRankingByDataIdParam_applicationId', 'applicationId')
local DataStoreGetCustomRankingByDataIdParam_dataIdList_len = tvb(off, 4):le_uint()
	subDataStoreGetCustomRankingByDataIdParam_container = DataStoreGetCustomRankingByDataIdParam_container:add_le(F.DataStoreGetCustomRankingByDataIdParam_dataIdList_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreGetCustomRankingByDataIdParam_dataIdList_len do
	off, DataStoreGetCustomRankingByDataIdParam_dataIdList_item = do_Uint64(conn, subDataStoreGetCustomRankingByDataIdParam_container, tvb, off, 'DataStoreGetCustomRankingByDataIdParam_dataIdList_item', 'dataIdList')

	end
	
off, DataStoreGetCustomRankingByDataIdParam_resultOption = do_Uint8(conn, DataStoreGetCustomRankingByDataIdParam_container, tvb, off, 'DataStoreGetCustomRankingByDataIdParam_resultOption', 'resultOption')

return off
end
function do_DataStoreGetCustomRankingParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreGetCustomRankingParam_container = tree:add(F.DataStoreGetCustomRankingParam, tvb(off, 0))
	DataStoreGetCustomRankingParam_container:set_text(field_name .. " (DataStoreGetCustomRankingParam):")
	off = do_Structure(conn, DataStoreGetCustomRankingParam_container, tvb, off, 'DataStoreGetCustomRankingParam_Base', 'Base')
off, DataStoreGetCustomRankingParam_applicationId = do_Uint32(conn, DataStoreGetCustomRankingParam_container, tvb, off, 'DataStoreGetCustomRankingParam_applicationId', 'applicationId')
off = do_DataStoreCustomRankingRatingCondition(conn, DataStoreGetCustomRankingParam_container, tvb, off, 'DataStoreGetCustomRankingParam_condition', 'condition')
off, DataStoreGetCustomRankingParam_resultOption = do_Uint8(conn, DataStoreGetCustomRankingParam_container, tvb, off, 'DataStoreGetCustomRankingParam_resultOption', 'resultOption')
off = do_ResultRange(conn, DataStoreGetCustomRankingParam_container, tvb, off, 'DataStoreGetCustomRankingParam_resultRange', 'resultRange')

return off
end
function do_DataStoreGetMetaByOwnerIdParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreGetMetaByOwnerIdParam_container = tree:add(F.DataStoreGetMetaByOwnerIdParam, tvb(off, 0))
	DataStoreGetMetaByOwnerIdParam_container:set_text(field_name .. " (DataStoreGetMetaByOwnerIdParam):")
	off = do_Structure(conn, DataStoreGetMetaByOwnerIdParam_container, tvb, off, 'DataStoreGetMetaByOwnerIdParam_Base', 'Base')
local DataStoreGetMetaByOwnerIdParam_ownerIds_len = tvb(off, 4):le_uint()
	subDataStoreGetMetaByOwnerIdParam_container = DataStoreGetMetaByOwnerIdParam_container:add_le(F.DataStoreGetMetaByOwnerIdParam_ownerIds_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreGetMetaByOwnerIdParam_ownerIds_len do
	off, DataStoreGetMetaByOwnerIdParam_ownerIds_item = do_Uint32(conn, subDataStoreGetMetaByOwnerIdParam_container, tvb, off, 'DataStoreGetMetaByOwnerIdParam_ownerIds_item', 'ownerIds')

	end
	
local DataStoreGetMetaByOwnerIdParam_dataTypes_len = tvb(off, 4):le_uint()
	subDataStoreGetMetaByOwnerIdParam_container = DataStoreGetMetaByOwnerIdParam_container:add_le(F.DataStoreGetMetaByOwnerIdParam_dataTypes_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreGetMetaByOwnerIdParam_dataTypes_len do
	off, DataStoreGetMetaByOwnerIdParam_dataTypes_item = do_Uint16(conn, subDataStoreGetMetaByOwnerIdParam_container, tvb, off, 'DataStoreGetMetaByOwnerIdParam_dataTypes_item', 'dataTypes')

	end
	
off, DataStoreGetMetaByOwnerIdParam_resultOption = do_Uint8(conn, DataStoreGetMetaByOwnerIdParam_container, tvb, off, 'DataStoreGetMetaByOwnerIdParam_resultOption', 'resultOption')
off = do_ResultRange(conn, DataStoreGetMetaByOwnerIdParam_container, tvb, off, 'DataStoreGetMetaByOwnerIdParam_resultRange', 'resultRange')

return off
end
function do_DataStoreRateCustomRankingParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreRateCustomRankingParam_container = tree:add(F.DataStoreRateCustomRankingParam, tvb(off, 0))
	DataStoreRateCustomRankingParam_container:set_text(field_name .. " (DataStoreRateCustomRankingParam):")
	off = do_Structure(conn, DataStoreRateCustomRankingParam_container, tvb, off, 'DataStoreRateCustomRankingParam_Base', 'Base')
off, DataStoreRateCustomRankingParam_dataId = do_Uint64(conn, DataStoreRateCustomRankingParam_container, tvb, off, 'DataStoreRateCustomRankingParam_dataId', 'dataId')
off, DataStoreRateCustomRankingParam_applicationId = do_Uint32(conn, DataStoreRateCustomRankingParam_container, tvb, off, 'DataStoreRateCustomRankingParam_applicationId', 'applicationId')
off, DataStoreRateCustomRankingParam_score = do_Uint32(conn, DataStoreRateCustomRankingParam_container, tvb, off, 'DataStoreRateCustomRankingParam_score', 'score')
off, DataStoreRateCustomRankingParam_period = do_Uint16(conn, DataStoreRateCustomRankingParam_container, tvb, off, 'DataStoreRateCustomRankingParam_period', 'period')

return off
end
function do_DataStoreUploadCourseRecordParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreUploadCourseRecordParam_container = tree:add(F.DataStoreUploadCourseRecordParam, tvb(off, 0))
	DataStoreUploadCourseRecordParam_container:set_text(field_name .. " (DataStoreUploadCourseRecordParam):")
	off = do_Structure(conn, DataStoreUploadCourseRecordParam_container, tvb, off, 'DataStoreUploadCourseRecordParam_Base', 'Base')
off, DataStoreUploadCourseRecordParam_dataId = do_Uint64(conn, DataStoreUploadCourseRecordParam_container, tvb, off, 'DataStoreUploadCourseRecordParam_dataId', 'dataId')
off, DataStoreUploadCourseRecordParam_slot = do_Uint8(conn, DataStoreUploadCourseRecordParam_container, tvb, off, 'DataStoreUploadCourseRecordParam_slot', 'slot')
off, DataStoreUploadCourseRecordParam_score = do_Sint32(conn, DataStoreUploadCourseRecordParam_container, tvb, off, 'DataStoreUploadCourseRecordParam_score', 'score')

return off
end
function do_SubscriberContent(conn, tree, tvb, off, field_unique_name, field_name)
local SubscriberContent_container = tree:add(F.SubscriberContent, tvb(off, 0))
	SubscriberContent_container:set_text(field_name .. " (SubscriberContent):")
	off = do_Structure(conn, SubscriberContent_container, tvb, off, 'SubscriberContent_Base', 'Base')
off, SubscriberContent_Unknown = do_Uint64(conn, SubscriberContent_container, tvb, off, 'SubscriberContent_Unknown', 'Unknown')
off, SubscriberContent_Unknown2 = do_String(conn, SubscriberContent_container, tvb, off, 'SubscriberContent_Unknown2', 'Unknown2')
off, SubscriberContent_Unknown3 = do_qBuffer(conn, SubscriberContent_container, tvb, off, 'SubscriberContent_Unknown3', 'Unknown3')
off, SubscriberContent_Unknown4 = do_Uint64(conn, SubscriberContent_container, tvb, off, 'SubscriberContent_Unknown4', 'Unknown4')
local SubscriberContent_Unknown5_len = tvb(off, 4):le_uint()
	subSubscriberContent_container = SubscriberContent_container:add_le(F.SubscriberContent_Unknown5_len, tvb(off,4))
	off = off + 4
	for i=1,SubscriberContent_Unknown5_len do
	off, SubscriberContent_Unknown5_item = do_String(conn, subSubscriberContent_container, tvb, off, 'SubscriberContent_Unknown5_item', 'Unknown5')

	end
	
off, SubscriberContent_Unknown6 = do_DateTime(conn, SubscriberContent_container, tvb, off, 'SubscriberContent_Unknown6', 'Unknown6')

return off
end
function do_SubscriberGetContentParam(conn, tree, tvb, off, field_unique_name, field_name)
local SubscriberGetContentParam_container = tree:add(F.SubscriberGetContentParam, tvb(off, 0))
	SubscriberGetContentParam_container:set_text(field_name .. " (SubscriberGetContentParam):")
	off = do_Structure(conn, SubscriberGetContentParam_container, tvb, off, 'SubscriberGetContentParam_Base', 'Base')
off, SubscriberGetContentParam_Unknown = do_String(conn, SubscriberGetContentParam_container, tvb, off, 'SubscriberGetContentParam_Unknown', 'Unknown')
off, SubscriberGetContentParam_Unknown2 = do_Uint32(conn, SubscriberGetContentParam_container, tvb, off, 'SubscriberGetContentParam_Unknown2', 'Unknown2')
off, SubscriberGetContentParam_Unknown3 = do_Uint32(conn, SubscriberGetContentParam_container, tvb, off, 'SubscriberGetContentParam_Unknown3', 'Unknown3')
off, SubscriberGetContentParam_Unknown4 = do_Uint64(conn, SubscriberGetContentParam_container, tvb, off, 'SubscriberGetContentParam_Unknown4', 'Unknown4')

return off
end
function do_SubscriberPostContentParam(conn, tree, tvb, off, field_unique_name, field_name)
local SubscriberPostContentParam_container = tree:add(F.SubscriberPostContentParam, tvb(off, 0))
	SubscriberPostContentParam_container:set_text(field_name .. " (SubscriberPostContentParam):")
	off = do_Structure(conn, SubscriberPostContentParam_container, tvb, off, 'SubscriberPostContentParam_Base', 'Base')
local SubscriberPostContentParam_Unknown_len = tvb(off, 4):le_uint()
	subSubscriberPostContentParam_container = SubscriberPostContentParam_container:add_le(F.SubscriberPostContentParam_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,SubscriberPostContentParam_Unknown_len do
	off, SubscriberPostContentParam_Unknown_item = do_String(conn, subSubscriberPostContentParam_container, tvb, off, 'SubscriberPostContentParam_Unknown_item', 'Unknown')

	end
	
off, SubscriberPostContentParam_Unknown2 = do_String(conn, SubscriberPostContentParam_container, tvb, off, 'SubscriberPostContentParam_Unknown2', 'Unknown2')
off, SubscriberPostContentParam_Unknown3 = do_qBuffer(conn, SubscriberPostContentParam_container, tvb, off, 'SubscriberPostContentParam_Unknown3', 'Unknown3')

return off
end
function do_Unknown(conn, tree, tvb, off, field_unique_name, field_name)
local Unknown_container = tree:add(F.Unknown, tvb(off, 0))
	Unknown_container:set_text(field_name .. " (Unknown):")
	off = do_Structure(conn, Unknown_container, tvb, off, 'Unknown_Base', 'Base')
off, Unknown_Unknown = do_qBuffer(conn, Unknown_container, tvb, off, 'Unknown_Unknown', 'Unknown')

return off
end
function do_SubscriberUserStatusInfo(conn, tree, tvb, off, field_unique_name, field_name)
local SubscriberUserStatusInfo_container = tree:add(F.SubscriberUserStatusInfo, tvb(off, 0))
	SubscriberUserStatusInfo_container:set_text(field_name .. " (SubscriberUserStatusInfo):")
	off = do_Structure(conn, SubscriberUserStatusInfo_container, tvb, off, 'SubscriberUserStatusInfo_Base', 'Base')
off, SubscriberUserStatusInfo_User_id = do_PID(conn, SubscriberUserStatusInfo_container, tvb, off, 'SubscriberUserStatusInfo_User_id', 'User_id')
local SubscriberUserStatusInfo_Unknown_len = tvb(off, 4):le_uint()
	subSubscriberUserStatusInfo_container = SubscriberUserStatusInfo_container:add_le(F.SubscriberUserStatusInfo_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,SubscriberUserStatusInfo_Unknown_len do
	off, SubscriberUserStatusInfo_Unknown_item = do_qBuffer(conn, subSubscriberUserStatusInfo_container, tvb, off, 'SubscriberUserStatusInfo_Unknown_item', 'Unknown')

	end
	

return off
end
function do_BasicAccountInfo(conn, tree, tvb, off, field_unique_name, field_name)
local BasicAccountInfo_container = tree:add(F.BasicAccountInfo, tvb(off, 0))
	BasicAccountInfo_container:set_text(field_name .. " (BasicAccountInfo):")
	off = do_Structure(conn, BasicAccountInfo_container, tvb, off, 'BasicAccountInfo_Base', 'Base')
off, BasicAccountInfo_m_pidOwner = do_PID(conn, BasicAccountInfo_container, tvb, off, 'BasicAccountInfo_m_pidOwner', 'm_pidOwner')
off, BasicAccountInfo_m_strName = do_String(conn, BasicAccountInfo_container, tvb, off, 'BasicAccountInfo_m_strName', 'm_strName')

return off
end
function do_AccountData(conn, tree, tvb, off, field_unique_name, field_name)
local AccountData_container = tree:add(F.AccountData, tvb(off, 0))
	AccountData_container:set_text(field_name .. " (AccountData):")
	off = do_Structure(conn, AccountData_container, tvb, off, 'AccountData_Base', 'Base')
off, AccountData_m_pid = do_PID(conn, AccountData_container, tvb, off, 'AccountData_m_pid', 'm_pid')
off, AccountData_m_strName = do_String(conn, AccountData_container, tvb, off, 'AccountData_m_strName', 'm_strName')
off, AccountData_m_uiGroups = do_Uint32(conn, AccountData_container, tvb, off, 'AccountData_m_uiGroups', 'm_uiGroups')
off, AccountData_m_strEmail = do_String(conn, AccountData_container, tvb, off, 'AccountData_m_strEmail', 'm_strEmail')
off, AccountData_m_dtCreationDate = do_DateTime(conn, AccountData_container, tvb, off, 'AccountData_m_dtCreationDate', 'm_dtCreationDate')
off, AccountData_m_dtEffectiveDate = do_DateTime(conn, AccountData_container, tvb, off, 'AccountData_m_dtEffectiveDate', 'm_dtEffectiveDate')
off, AccountData_m_strNotEffectiveMsg = do_String(conn, AccountData_container, tvb, off, 'AccountData_m_strNotEffectiveMsg', 'm_strNotEffectiveMsg')
off, AccountData_m_dtExpiryDate = do_DateTime(conn, AccountData_container, tvb, off, 'AccountData_m_dtExpiryDate', 'm_dtExpiryDate')
off, AccountData_m_strExpiredMsg = do_String(conn, AccountData_container, tvb, off, 'AccountData_m_strExpiredMsg', 'm_strExpiredMsg')

return off
end
function do_NintendoCreateAccountData(conn, tree, tvb, off, field_unique_name, field_name)
local NintendoCreateAccountData_container = tree:add(F.NintendoCreateAccountData, tvb(off, 0))
	NintendoCreateAccountData_container:set_text(field_name .. " (NintendoCreateAccountData):")
	off = do_Structure(conn, NintendoCreateAccountData_container, tvb, off, 'NintendoCreateAccountData_Base', 'Base')
off = do_NNAInfo(conn, NintendoCreateAccountData_container, tvb, off, 'NintendoCreateAccountData_NNA_info', 'NNA_info')
off, NintendoCreateAccountData_NEX_token = do_String(conn, NintendoCreateAccountData_container, tvb, off, 'NintendoCreateAccountData_NEX_token', 'NEX_token')
off, NintendoCreateAccountData_Birthday = do_DateTime(conn, NintendoCreateAccountData_container, tvb, off, 'NintendoCreateAccountData_Birthday', 'Birthday')
off, NintendoCreateAccountData_Unknown = do_Uint64(conn, NintendoCreateAccountData_container, tvb, off, 'NintendoCreateAccountData_Unknown', 'Unknown')

return off
end
function do_CalicoFesStatsV2(conn, tree, tvb, off, field_unique_name, field_name)
local CalicoFesStatsV2_container = tree:add(F.CalicoFesStatsV2, tvb(off, 0))
	CalicoFesStatsV2_container:set_text(field_name .. " (CalicoFesStatsV2):")
	off = do_CalicoFesStats(conn, CalicoFesStatsV2_container, tvb, off, 'CalicoFesStatsV2_Base2', 'Base2')
off = do_Structure(conn, CalicoFesStatsV2_container, tvb, off, 'CalicoFesStatsV2_Base', 'Base')
off, CalicoFesStatsV2_otherThemeId = do_Uint8(conn, CalicoFesStatsV2_container, tvb, off, 'CalicoFesStatsV2_otherThemeId', 'otherThemeId')

return off
end
function do_CalicoLeagueStats(conn, tree, tvb, off, field_unique_name, field_name)
local CalicoLeagueStats_container = tree:add(F.CalicoLeagueStats, tvb(off, 0))
	CalicoLeagueStats_container:set_text(field_name .. " (CalicoLeagueStats):")
	off = do_CalicoGachiStats(conn, CalicoLeagueStats_container, tvb, off, 'CalicoLeagueStats_Base2', 'Base2')
off = do_Structure(conn, CalicoLeagueStats_container, tvb, off, 'CalicoLeagueStats_Base', 'Base')
off, CalicoLeagueStats_leagueId = do_String(conn, CalicoLeagueStats_container, tvb, off, 'CalicoLeagueStats_leagueId', 'leagueId')
off, CalicoLeagueStats_tagId = do_Uint64(conn, CalicoLeagueStats_container, tvb, off, 'CalicoLeagueStats_tagId', 'tagId')
off, CalicoLeagueStats_leaguePoint = do_Sint32(conn, CalicoLeagueStats_container, tvb, off, 'CalicoLeagueStats_leaguePoint', 'leaguePoint')
off, CalicoLeagueStats_maxLeaguePoint = do_Sint32(conn, CalicoLeagueStats_container, tvb, off, 'CalicoLeagueStats_maxLeaguePoint', 'maxLeaguePoint')
off, CalicoLeagueStats_myEstimateLeaguePoint = do_Sint32(conn, CalicoLeagueStats_container, tvb, off, 'CalicoLeagueStats_myEstimateLeaguePoint', 'myEstimateLeaguePoint')
off, CalicoLeagueStats_otherEstimateLeaguePoint = do_Sint32(conn, CalicoLeagueStats_container, tvb, off, 'CalicoLeagueStats_otherEstimateLeaguePoint', 'otherEstimateLeaguePoint')

return off
end
function do_CoconutGetInfo(conn, tree, tvb, off, field_unique_name, field_name)
local CoconutGetInfo_container = tree:add(F.CoconutGetInfo, tvb(off, 0))
	CoconutGetInfo_container:set_text(field_name .. " (CoconutGetInfo):")
	off = do_Structure(conn, CoconutGetInfo_container, tvb, off, 'CoconutGetInfo_Base', 'Base')
off = do_DataStoreReqGetInfo(conn, CoconutGetInfo_container, tvb, off, 'CoconutGetInfo_info', 'info')
off = do_CoconutMeta(conn, CoconutGetInfo_container, tvb, off, 'CoconutGetInfo_meta', 'meta')

return off
end
function do_CoconutGetParam(conn, tree, tvb, off, field_unique_name, field_name)
local CoconutGetParam_container = tree:add(F.CoconutGetParam, tvb(off, 0))
	CoconutGetParam_container:set_text(field_name .. " (CoconutGetParam):")
	off = do_Structure(conn, CoconutGetParam_container, tvb, off, 'CoconutGetParam_Base', 'Base')
local CoconutGetParam_uniqueIds_len = tvb(off, 4):le_uint()
	subCoconutGetParam_container = CoconutGetParam_container:add_le(F.CoconutGetParam_uniqueIds_len, tvb(off,4))
	off = off + 4
	for i=1,CoconutGetParam_uniqueIds_len do
	off, CoconutGetParam_uniqueIds_item = do_Uint64(conn, subCoconutGetParam_container, tvb, off, 'CoconutGetParam_uniqueIds_item', 'uniqueIds')

	end
	
off, CoconutGetParam_getType = do_Uint8(conn, CoconutGetParam_container, tvb, off, 'CoconutGetParam_getType', 'getType')
off, CoconutGetParam_region = do_Uint8(conn, CoconutGetParam_container, tvb, off, 'CoconutGetParam_region', 'region')
off, CoconutGetParam_festivalId = do_Uint32(conn, CoconutGetParam_container, tvb, off, 'CoconutGetParam_festivalId', 'festivalId')

return off
end
function do_CoconutViolation(conn, tree, tvb, off, field_unique_name, field_name)
local CoconutViolation_container = tree:add(F.CoconutViolation, tvb(off, 0))
	CoconutViolation_container:set_text(field_name .. " (CoconutViolation):")
	off = do_Structure(conn, CoconutViolation_container, tvb, off, 'CoconutViolation_Base', 'Base')
off, CoconutViolation_dataId = do_Uint64(conn, CoconutViolation_container, tvb, off, 'CoconutViolation_dataId', 'dataId')
off, CoconutViolation_categoryCode = do_String(conn, CoconutViolation_container, tvb, off, 'CoconutViolation_categoryCode', 'categoryCode')
off, CoconutViolation_reason = do_String(conn, CoconutViolation_container, tvb, off, 'CoconutViolation_reason', 'reason')

return off
end
function do_OrderedInfo(conn, tree, tvb, off, field_unique_name, field_name)
local OrderedInfo_container = tree:add(F.OrderedInfo, tvb(off, 0))
	OrderedInfo_container:set_text(field_name .. " (OrderedInfo):")
	off = do_Structure(conn, OrderedInfo_container, tvb, off, 'OrderedInfo_Base', 'Base')
off, OrderedInfo_gearKind = do_Sint32(conn, OrderedInfo_container, tvb, off, 'OrderedInfo_gearKind', 'gearKind')
off, OrderedInfo_gearId = do_Sint32(conn, OrderedInfo_container, tvb, off, 'OrderedInfo_gearId', 'gearId')
off, OrderedInfo_skillId = do_Sint32(conn, OrderedInfo_container, tvb, off, 'OrderedInfo_skillId', 'skillId')
off, OrderedInfo_price = do_Sint32(conn, OrderedInfo_container, tvb, off, 'OrderedInfo_price', 'price')

return off
end
function do_PlayLogPrepareGetParam(conn, tree, tvb, off, field_unique_name, field_name)
local PlayLogPrepareGetParam_container = tree:add(F.PlayLogPrepareGetParam, tvb(off, 0))
	PlayLogPrepareGetParam_container:set_text(field_name .. " (PlayLogPrepareGetParam):")
	off = do_Structure(conn, PlayLogPrepareGetParam_container, tvb, off, 'PlayLogPrepareGetParam_Base', 'Base')
off, PlayLogPrepareGetParam_Unknown = do_Uint64(conn, PlayLogPrepareGetParam_container, tvb, off, 'PlayLogPrepareGetParam_Unknown', 'Unknown')
off, PlayLogPrepareGetParam_Unknown2 = do_DateTime(conn, PlayLogPrepareGetParam_container, tvb, off, 'PlayLogPrepareGetParam_Unknown2', 'Unknown2')
off, PlayLogPrepareGetParam_Unknown3 = do_Uint32(conn, PlayLogPrepareGetParam_container, tvb, off, 'PlayLogPrepareGetParam_Unknown3', 'Unknown3')

return off
end
function do_PlayLogPreparePostParam(conn, tree, tvb, off, field_unique_name, field_name)
local PlayLogPreparePostParam_container = tree:add(F.PlayLogPreparePostParam, tvb(off, 0))
	PlayLogPreparePostParam_container:set_text(field_name .. " (PlayLogPreparePostParam):")
	off = do_Structure(conn, PlayLogPreparePostParam_container, tvb, off, 'PlayLogPreparePostParam_Base', 'Base')
local PlayLogPreparePostParam_Entries_len = tvb(off, 4):le_uint()
	subPlayLogPreparePostParam_container = PlayLogPreparePostParam_container:add_le(F.PlayLogPreparePostParam_Entries_len, tvb(off,4))
	off = off + 4
	for i=1,PlayLogPreparePostParam_Entries_len do
	off = do_PlayLogEntry(conn, subPlayLogPreparePostParam_container, tvb, off, 'PlayLogPreparePostParam_Entries_item', 'Entries')

	end
	
off, PlayLogPreparePostParam_Play_time = do_DateTime(conn, PlayLogPreparePostParam_container, tvb, off, 'PlayLogPreparePostParam_Play_time', 'Play_time')
off, PlayLogPreparePostParam_Stage_id = do_Uint32(conn, PlayLogPreparePostParam_container, tvb, off, 'PlayLogPreparePostParam_Stage_id', 'Stage_id')
off, PlayLogPreparePostParam_Unknown = do_Uint32(conn, PlayLogPreparePostParam_container, tvb, off, 'PlayLogPreparePostParam_Unknown', 'Unknown')
local PlayLogPreparePostParam_Properties_len = tvb(off, 4):le_uint()
	subPlayLogPreparePostParam_container = PlayLogPreparePostParam_container:add_le(F.PlayLogPreparePostParam_Properties_len, tvb(off,4))
	off = off + 4
	for i=1,PlayLogPreparePostParam_Properties_len do
	off, PlayLogPreparePostParam_Properties_key = do_String(conn, subPlayLogPreparePostParam_container, tvb, off, 'PlayLogPreparePostParam_Properties_key', 'Properties')

off = do_Variant(conn, subPlayLogPreparePostParam_container, tvb, off, 'PlayLogPreparePostParam_Properties_value', 'Properties')

	end
	

return off
end
function do_TimeAttackInfo(conn, tree, tvb, off, field_unique_name, field_name)
local TimeAttackInfo_container = tree:add(F.TimeAttackInfo, tvb(off, 0))
	TimeAttackInfo_container:set_text(field_name .. " (TimeAttackInfo):")
	off = do_Structure(conn, TimeAttackInfo_container, tvb, off, 'TimeAttackInfo_Base', 'Base')
local TimeAttackInfo_stageInfos_len = tvb(off, 4):le_uint()
	subTimeAttackInfo_container = TimeAttackInfo_container:add_le(F.TimeAttackInfo_stageInfos_len, tvb(off,4))
	off = off + 4
	for i=1,TimeAttackInfo_stageInfos_len do
	off, TimeAttackInfo_stageInfos_key = do_Sint32(conn, subTimeAttackInfo_container, tvb, off, 'TimeAttackInfo_stageInfos_key', 'stageInfos')

off = do_StageTimeAttackInfo(conn, subTimeAttackInfo_container, tvb, off, 'TimeAttackInfo_stageInfos_value', 'stageInfos')

	end
	

return off
end
function do_PersistentGathering(conn, tree, tvb, off, field_unique_name, field_name)
local PersistentGathering_container = tree:add(F.PersistentGathering, tvb(off, 0))
	PersistentGathering_container:set_text(field_name .. " (PersistentGathering):")
	off = do_Gathering(conn, PersistentGathering_container, tvb, off, 'PersistentGathering_Base2', 'Base2')
off = do_Structure(conn, PersistentGathering_container, tvb, off, 'PersistentGathering_Base', 'Base')
off, PersistentGathering_m_CommunityType = do_Uint32(conn, PersistentGathering_container, tvb, off, 'PersistentGathering_m_CommunityType', 'm_CommunityType')
off, PersistentGathering_m_Password = do_String(conn, PersistentGathering_container, tvb, off, 'PersistentGathering_m_Password', 'm_Password')
local PersistentGathering_m_Attribs_len = tvb(off, 4):le_uint()
	subPersistentGathering_container = PersistentGathering_container:add_le(F.PersistentGathering_m_Attribs_len, tvb(off,4))
	off = off + 4
	for i=1,PersistentGathering_m_Attribs_len do
	off, PersistentGathering_m_Attribs_item = do_Uint32(conn, subPersistentGathering_container, tvb, off, 'PersistentGathering_m_Attribs_item', 'm_Attribs')

	end
	
off, PersistentGathering_m_ApplicationBuffer = do_Buffer(conn, PersistentGathering_container, tvb, off, 'PersistentGathering_m_ApplicationBuffer', 'm_ApplicationBuffer')
off, PersistentGathering_m_ParticipationStartDate = do_DateTime(conn, PersistentGathering_container, tvb, off, 'PersistentGathering_m_ParticipationStartDate', 'm_ParticipationStartDate')
off, PersistentGathering_m_ParticipationEndDate = do_DateTime(conn, PersistentGathering_container, tvb, off, 'PersistentGathering_m_ParticipationEndDate', 'm_ParticipationEndDate')
off, PersistentGathering_m_MatchmakeSessionCount = do_Uint32(conn, PersistentGathering_container, tvb, off, 'PersistentGathering_m_MatchmakeSessionCount', 'm_MatchmakeSessionCount')
off, PersistentGathering_m_ParticipationCount = do_Uint32(conn, PersistentGathering_container, tvb, off, 'PersistentGathering_m_ParticipationCount', 'm_ParticipationCount')

return off
end
function do_CreateMatchmakeSessionParam(conn, tree, tvb, off, field_unique_name, field_name)
local CreateMatchmakeSessionParam_container = tree:add(F.CreateMatchmakeSessionParam, tvb(off, 0))
	CreateMatchmakeSessionParam_container:set_text(field_name .. " (CreateMatchmakeSessionParam):")
	off = do_Structure(conn, CreateMatchmakeSessionParam_container, tvb, off, 'CreateMatchmakeSessionParam_Base', 'Base')
off = do_MatchmakeSession(conn, CreateMatchmakeSessionParam_container, tvb, off, 'CreateMatchmakeSessionParam_sourceMatchmakeSession', 'sourceMatchmakeSession')
local CreateMatchmakeSessionParam_additionalParticipants_len = tvb(off, 4):le_uint()
	subCreateMatchmakeSessionParam_container = CreateMatchmakeSessionParam_container:add_le(F.CreateMatchmakeSessionParam_additionalParticipants_len, tvb(off,4))
	off = off + 4
	for i=1,CreateMatchmakeSessionParam_additionalParticipants_len do
	off, CreateMatchmakeSessionParam_additionalParticipants_item = do_PID(conn, subCreateMatchmakeSessionParam_container, tvb, off, 'CreateMatchmakeSessionParam_additionalParticipants_item', 'additionalParticipants')

	end
	
off, CreateMatchmakeSessionParam_gidForParticipationCheck = do_Uint32(conn, CreateMatchmakeSessionParam_container, tvb, off, 'CreateMatchmakeSessionParam_gidForParticipationCheck', 'gidForParticipationCheck')
off, CreateMatchmakeSessionParam_createMatchmakeSessionOption = do_Uint32(conn, CreateMatchmakeSessionParam_container, tvb, off, 'CreateMatchmakeSessionParam_createMatchmakeSessionOption', 'createMatchmakeSessionOption')
off, CreateMatchmakeSessionParam_joinMessage = do_String(conn, CreateMatchmakeSessionParam_container, tvb, off, 'CreateMatchmakeSessionParam_joinMessage', 'joinMessage')
off, CreateMatchmakeSessionParam_participationCount = do_Uint16(conn, CreateMatchmakeSessionParam_container, tvb, off, 'CreateMatchmakeSessionParam_participationCount', 'participationCount')

return off
end
function do_JoinMatchmakeSessionParam(conn, tree, tvb, off, field_unique_name, field_name)
local JoinMatchmakeSessionParam_container = tree:add(F.JoinMatchmakeSessionParam, tvb(off, 0))
	JoinMatchmakeSessionParam_container:set_text(field_name .. " (JoinMatchmakeSessionParam):")
	off = do_Structure(conn, JoinMatchmakeSessionParam_container, tvb, off, 'JoinMatchmakeSessionParam_Base', 'Base')
off, JoinMatchmakeSessionParam_gid = do_Uint32(conn, JoinMatchmakeSessionParam_container, tvb, off, 'JoinMatchmakeSessionParam_gid', 'gid')
local JoinMatchmakeSessionParam_additionalParticipants_len = tvb(off, 4):le_uint()
	subJoinMatchmakeSessionParam_container = JoinMatchmakeSessionParam_container:add_le(F.JoinMatchmakeSessionParam_additionalParticipants_len, tvb(off,4))
	off = off + 4
	for i=1,JoinMatchmakeSessionParam_additionalParticipants_len do
	off, JoinMatchmakeSessionParam_additionalParticipants_item = do_PID(conn, subJoinMatchmakeSessionParam_container, tvb, off, 'JoinMatchmakeSessionParam_additionalParticipants_item', 'additionalParticipants')

	end
	
off, JoinMatchmakeSessionParam_gidForParticipationCheck = do_Uint32(conn, JoinMatchmakeSessionParam_container, tvb, off, 'JoinMatchmakeSessionParam_gidForParticipationCheck', 'gidForParticipationCheck')
off, JoinMatchmakeSessionParam_joinMatchmakeSessionOption = do_Uint32(conn, JoinMatchmakeSessionParam_container, tvb, off, 'JoinMatchmakeSessionParam_joinMatchmakeSessionOption', 'joinMatchmakeSessionOption')
off, JoinMatchmakeSessionParam_joinMatchmakeSessionBehavior = do_Uint8(conn, JoinMatchmakeSessionParam_container, tvb, off, 'JoinMatchmakeSessionParam_joinMatchmakeSessionBehavior', 'joinMatchmakeSessionBehavior')
off, JoinMatchmakeSessionParam_strUserPassword = do_String(conn, JoinMatchmakeSessionParam_container, tvb, off, 'JoinMatchmakeSessionParam_strUserPassword', 'strUserPassword')
off, JoinMatchmakeSessionParam_strSystemPassword = do_String(conn, JoinMatchmakeSessionParam_container, tvb, off, 'JoinMatchmakeSessionParam_strSystemPassword', 'strSystemPassword')
off, JoinMatchmakeSessionParam_joinMessage = do_String(conn, JoinMatchmakeSessionParam_container, tvb, off, 'JoinMatchmakeSessionParam_joinMessage', 'joinMessage')
off, JoinMatchmakeSessionParam_participationCount = do_Uint16(conn, JoinMatchmakeSessionParam_container, tvb, off, 'JoinMatchmakeSessionParam_participationCount', 'participationCount')
off, JoinMatchmakeSessionParam_extraParticipants = do_Uint16(conn, JoinMatchmakeSessionParam_container, tvb, off, 'JoinMatchmakeSessionParam_extraParticipants', 'extraParticipants')
off = do_MatchmakeBlockListParam(conn, JoinMatchmakeSessionParam_container, tvb, off, 'JoinMatchmakeSessionParam_blockListParam', 'blockListParam')

return off
end
function do_UpdateMatchmakeSessionParam(conn, tree, tvb, off, field_unique_name, field_name)
local UpdateMatchmakeSessionParam_container = tree:add(F.UpdateMatchmakeSessionParam, tvb(off, 0))
	UpdateMatchmakeSessionParam_container:set_text(field_name .. " (UpdateMatchmakeSessionParam):")
	off = do_Structure(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_Base', 'Base')
off, UpdateMatchmakeSessionParam_gid = do_Uint32(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_gid', 'gid')
off, UpdateMatchmakeSessionParam_modificationFlag = do_Uint32(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_modificationFlag', 'modificationFlag')
local UpdateMatchmakeSessionParam_attributes_len = tvb(off, 4):le_uint()
	subUpdateMatchmakeSessionParam_container = UpdateMatchmakeSessionParam_container:add_le(F.UpdateMatchmakeSessionParam_attributes_len, tvb(off,4))
	off = off + 4
	for i=1,UpdateMatchmakeSessionParam_attributes_len do
	off, UpdateMatchmakeSessionParam_attributes_item = do_Uint32(conn, subUpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_attributes_item', 'attributes')

	end
	
off, UpdateMatchmakeSessionParam_openParticipation = do_Bool(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_openParticipation', 'openParticipation')
off, UpdateMatchmakeSessionParam_applicationBuffer = do_Buffer(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_applicationBuffer', 'applicationBuffer')
off, UpdateMatchmakeSessionParam_progressScore = do_Uint8(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_progressScore', 'progressScore')
off = do_MatchmakeParam(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_matchmakeParam', 'matchmakeParam')
off, UpdateMatchmakeSessionParam_startedTime = do_DateTime(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_startedTime', 'startedTime')
off, UpdateMatchmakeSessionParam_userPassword = do_String(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_userPassword', 'userPassword')
off, UpdateMatchmakeSessionParam_gameMode = do_Uint32(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_gameMode', 'gameMode')
off, UpdateMatchmakeSessionParam_description = do_String(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_description', 'description')
off, UpdateMatchmakeSessionParam_minParticipants = do_Uint16(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_minParticipants', 'minParticipants')
off, UpdateMatchmakeSessionParam_maxParticipants = do_Uint16(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_maxParticipants', 'maxParticipants')
off, UpdateMatchmakeSessionParam_matchmakeSystemType = do_Uint32(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_matchmakeSystemType', 'matchmakeSystemType')
off, UpdateMatchmakeSessionParam_participationPolicy = do_Uint32(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_participationPolicy', 'participationPolicy')
off, UpdateMatchmakeSessionParam_policyArgument = do_Uint32(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_policyArgument', 'policyArgument')
off, UpdateMatchmakeSessionParam_codeword = do_String(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_codeword', 'codeword')

return off
end
function do_AutoMatchmakeParam(conn, tree, tvb, off, field_unique_name, field_name)
local AutoMatchmakeParam_container = tree:add(F.AutoMatchmakeParam, tvb(off, 0))
	AutoMatchmakeParam_container:set_text(field_name .. " (AutoMatchmakeParam):")
	off = do_Structure(conn, AutoMatchmakeParam_container, tvb, off, 'AutoMatchmakeParam_Base', 'Base')
off = do_MatchmakeSession(conn, AutoMatchmakeParam_container, tvb, off, 'AutoMatchmakeParam_sourceMatchmakeSession', 'sourceMatchmakeSession')
local AutoMatchmakeParam_additionalParticipants_len = tvb(off, 4):le_uint()
	subAutoMatchmakeParam_container = AutoMatchmakeParam_container:add_le(F.AutoMatchmakeParam_additionalParticipants_len, tvb(off,4))
	off = off + 4
	for i=1,AutoMatchmakeParam_additionalParticipants_len do
	off, AutoMatchmakeParam_additionalParticipants_item = do_PID(conn, subAutoMatchmakeParam_container, tvb, off, 'AutoMatchmakeParam_additionalParticipants_item', 'additionalParticipants')

	end
	
off, AutoMatchmakeParam_gidForParticipationCheck = do_Uint32(conn, AutoMatchmakeParam_container, tvb, off, 'AutoMatchmakeParam_gidForParticipationCheck', 'gidForParticipationCheck')
off, AutoMatchmakeParam_autoMatchmakeOption = do_Uint32(conn, AutoMatchmakeParam_container, tvb, off, 'AutoMatchmakeParam_autoMatchmakeOption', 'autoMatchmakeOption')
off, AutoMatchmakeParam_joinMessage = do_String(conn, AutoMatchmakeParam_container, tvb, off, 'AutoMatchmakeParam_joinMessage', 'joinMessage')
off, AutoMatchmakeParam_participationCount = do_Uint16(conn, AutoMatchmakeParam_container, tvb, off, 'AutoMatchmakeParam_participationCount', 'participationCount')
local AutoMatchmakeParam_lstSearchCriteria_len = tvb(off, 4):le_uint()
	subAutoMatchmakeParam_container = AutoMatchmakeParam_container:add_le(F.AutoMatchmakeParam_lstSearchCriteria_len, tvb(off,4))
	off = off + 4
	for i=1,AutoMatchmakeParam_lstSearchCriteria_len do
	off = do_MatchmakeSessionSearchCriteria(conn, subAutoMatchmakeParam_container, tvb, off, 'AutoMatchmakeParam_lstSearchCriteria_item', 'lstSearchCriteria')

	end
	
local AutoMatchmakeParam_targetGids_len = tvb(off, 4):le_uint()
	subAutoMatchmakeParam_container = AutoMatchmakeParam_container:add_le(F.AutoMatchmakeParam_targetGids_len, tvb(off,4))
	off = off + 4
	for i=1,AutoMatchmakeParam_targetGids_len do
	off, AutoMatchmakeParam_targetGids_item = do_Uint32(conn, subAutoMatchmakeParam_container, tvb, off, 'AutoMatchmakeParam_targetGids_item', 'targetGids')

	end
	
off = do_MatchmakeBlockListParam(conn, AutoMatchmakeParam_container, tvb, off, 'AutoMatchmakeParam_blockListParam', 'blockListParam')

return off
end
function do_FindMatchmakeSessionByParticipantParam(conn, tree, tvb, off, field_unique_name, field_name)
local FindMatchmakeSessionByParticipantParam_container = tree:add(F.FindMatchmakeSessionByParticipantParam, tvb(off, 0))
	FindMatchmakeSessionByParticipantParam_container:set_text(field_name .. " (FindMatchmakeSessionByParticipantParam):")
	off = do_Structure(conn, FindMatchmakeSessionByParticipantParam_container, tvb, off, 'FindMatchmakeSessionByParticipantParam_Base', 'Base')
local FindMatchmakeSessionByParticipantParam_m_principalIdList_len = tvb(off, 4):le_uint()
	subFindMatchmakeSessionByParticipantParam_container = FindMatchmakeSessionByParticipantParam_container:add_le(F.FindMatchmakeSessionByParticipantParam_m_principalIdList_len, tvb(off,4))
	off = off + 4
	for i=1,FindMatchmakeSessionByParticipantParam_m_principalIdList_len do
	off, FindMatchmakeSessionByParticipantParam_m_principalIdList_item = do_PID(conn, subFindMatchmakeSessionByParticipantParam_container, tvb, off, 'FindMatchmakeSessionByParticipantParam_m_principalIdList_item', 'm_principalIdList')

	end
	
off, FindMatchmakeSessionByParticipantParam_m_resultOptions = do_Uint32(conn, FindMatchmakeSessionByParticipantParam_container, tvb, off, 'FindMatchmakeSessionByParticipantParam_m_resultOptions', 'm_resultOptions')
off = do_MatchmakeBlockListParam(conn, FindMatchmakeSessionByParticipantParam_container, tvb, off, 'FindMatchmakeSessionByParticipantParam_m_blockListParam', 'm_blockListParam')

return off
end
function do_FindMatchmakeSessionByParticipantResult(conn, tree, tvb, off, field_unique_name, field_name)
local FindMatchmakeSessionByParticipantResult_container = tree:add(F.FindMatchmakeSessionByParticipantResult, tvb(off, 0))
	FindMatchmakeSessionByParticipantResult_container:set_text(field_name .. " (FindMatchmakeSessionByParticipantResult):")
	off = do_Structure(conn, FindMatchmakeSessionByParticipantResult_container, tvb, off, 'FindMatchmakeSessionByParticipantResult_Base', 'Base')
off, FindMatchmakeSessionByParticipantResult_m_principalId = do_PID(conn, FindMatchmakeSessionByParticipantResult_container, tvb, off, 'FindMatchmakeSessionByParticipantResult_m_principalId', 'm_principalId')
off = do_MatchmakeSession(conn, FindMatchmakeSessionByParticipantResult_container, tvb, off, 'FindMatchmakeSessionByParticipantResult_m_session', 'm_session')

return off
end
function do_GatheringURLs(conn, tree, tvb, off, field_unique_name, field_name)
local GatheringURLs_container = tree:add(F.GatheringURLs, tvb(off, 0))
	GatheringURLs_container:set_text(field_name .. " (GatheringURLs):")
	off = do_Structure(conn, GatheringURLs_container, tvb, off, 'GatheringURLs_Base', 'Base')
off, GatheringURLs_m_gid = do_Uint32(conn, GatheringURLs_container, tvb, off, 'GatheringURLs_m_gid', 'm_gid')
local GatheringURLs_m_lstStationURLs_len = tvb(off, 4):le_uint()
	subGatheringURLs_container = GatheringURLs_container:add_le(F.GatheringURLs_m_lstStationURLs_len, tvb(off,4))
	off = off + 4
	for i=1,GatheringURLs_m_lstStationURLs_len do
	off, GatheringURLs_m_lstStationURLs_item = do_StationURL(conn, subGatheringURLs_container, tvb, off, 'GatheringURLs_m_lstStationURLs_item', 'm_lstStationURLs')

	end
	

return off
end
function do_GatheringStats(conn, tree, tvb, off, field_unique_name, field_name)
local GatheringStats_container = tree:add(F.GatheringStats, tvb(off, 0))
	GatheringStats_container:set_text(field_name .. " (GatheringStats):")
	off = do_Structure(conn, GatheringStats_container, tvb, off, 'GatheringStats_Base', 'Base')
off, GatheringStats_m_pidParticipant = do_PID(conn, GatheringStats_container, tvb, off, 'GatheringStats_m_pidParticipant', 'm_pidParticipant')
off, GatheringStats_m_uiFlags = do_Uint32(conn, GatheringStats_container, tvb, off, 'GatheringStats_m_uiFlags', 'm_uiFlags')
local GatheringStats_m_lstValues_len = tvb(off, 4):le_uint()
	subGatheringStats_container = GatheringStats_container:add_le(F.GatheringStats_m_lstValues_len, tvb(off,4))
	off = off + 4
	for i=1,GatheringStats_m_lstValues_len do
	off, GatheringStats_m_lstValues_item = do_Float(conn, subGatheringStats_container, tvb, off, 'GatheringStats_m_lstValues_item', 'm_lstValues')

	end
	

return off
end
function do_Invitation(conn, tree, tvb, off, field_unique_name, field_name)
local Invitation_container = tree:add(F.Invitation, tvb(off, 0))
	Invitation_container:set_text(field_name .. " (Invitation):")
	off = do_Structure(conn, Invitation_container, tvb, off, 'Invitation_Base', 'Base')
off, Invitation_m_idGathering = do_Uint32(conn, Invitation_container, tvb, off, 'Invitation_m_idGathering', 'm_idGathering')
off, Invitation_m_idGuest = do_Uint32(conn, Invitation_container, tvb, off, 'Invitation_m_idGuest', 'm_idGuest')
off, Invitation_m_strMessage = do_String(conn, Invitation_container, tvb, off, 'Invitation_m_strMessage', 'm_strMessage')

return off
end
function do_ParticipantDetails(conn, tree, tvb, off, field_unique_name, field_name)
local ParticipantDetails_container = tree:add(F.ParticipantDetails, tvb(off, 0))
	ParticipantDetails_container:set_text(field_name .. " (ParticipantDetails):")
	off = do_Structure(conn, ParticipantDetails_container, tvb, off, 'ParticipantDetails_Base', 'Base')
off, ParticipantDetails_m_idParticipant = do_PID(conn, ParticipantDetails_container, tvb, off, 'ParticipantDetails_m_idParticipant', 'm_idParticipant')
off, ParticipantDetails_m_strName = do_String(conn, ParticipantDetails_container, tvb, off, 'ParticipantDetails_m_strName', 'm_strName')
off, ParticipantDetails_m_strMessage = do_String(conn, ParticipantDetails_container, tvb, off, 'ParticipantDetails_m_strMessage', 'm_strMessage')
off, ParticipantDetails_m_uiParticipants = do_Uint16(conn, ParticipantDetails_container, tvb, off, 'ParticipantDetails_m_uiParticipants', 'm_uiParticipants')

return off
end
function do_DeletionEntry(conn, tree, tvb, off, field_unique_name, field_name)
local DeletionEntry_container = tree:add(F.DeletionEntry, tvb(off, 0))
	DeletionEntry_container:set_text(field_name .. " (DeletionEntry):")
	off = do_Structure(conn, DeletionEntry_container, tvb, off, 'DeletionEntry_Base', 'Base')
off, DeletionEntry_m_idGathering = do_Uint32(conn, DeletionEntry_container, tvb, off, 'DeletionEntry_m_idGathering', 'm_idGathering')
off, DeletionEntry_m_pid = do_PID(conn, DeletionEntry_container, tvb, off, 'DeletionEntry_m_pid', 'm_pid')
off, DeletionEntry_m_uiReason = do_Uint32(conn, DeletionEntry_container, tvb, off, 'DeletionEntry_m_uiReason', 'm_uiReason')

return off
end
function do_PlayingSession(conn, tree, tvb, off, field_unique_name, field_name)
local PlayingSession_container = tree:add(F.PlayingSession, tvb(off, 0))
	PlayingSession_container:set_text(field_name .. " (PlayingSession):")
	off = do_Structure(conn, PlayingSession_container, tvb, off, 'PlayingSession_Base', 'Base')
off, PlayingSession_m_PrincipalId = do_PID(conn, PlayingSession_container, tvb, off, 'PlayingSession_m_PrincipalId', 'm_PrincipalId')

		local PlayingSession_m_Gathering_container = PlayingSession_container:add(F.Data, tvb(off, 0))
		PlayingSession_m_Gathering_container:set_text("Data<Gathering>")
	off, PlayingSession_m_Gathering_type_name = do_String(conn, PlayingSession_m_Gathering_container, tvb, off, 'PlayingSession_m_Gathering_type_name', 'm_Gathering_type_name')

off, PlayingSession_m_Gathering_len_plus_four = do_Uint32(conn, PlayingSession_m_Gathering_container, tvb, off, 'PlayingSession_m_Gathering_len_plus_four', 'm_Gathering_len_plus_four')

off, PlayingSession_m_Gathering_data_len = do_Uint32(conn, PlayingSession_m_Gathering_container, tvb, off, 'PlayingSession_m_Gathering_data_len', 'm_Gathering_data_len')

local type_func = 'do_'..PlayingSession_m_Gathering_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, PlayingSession_m_Gathering_container, tvb, off, "PlayingSession_m_Gathering_data", "m_Gathering")
		else
			PlayingSession_m_Gathering_container:add(F.PlayingSession_m_Gathering_data_bytes, tvb(off, PlayingSession_m_Gathering_len))
			off = off + PlayingSession_m_Gathering_data_len
		end
	

return off
end
function do_SimplePlayingSession(conn, tree, tvb, off, field_unique_name, field_name)
local SimplePlayingSession_container = tree:add(F.SimplePlayingSession, tvb(off, 0))
	SimplePlayingSession_container:set_text(field_name .. " (SimplePlayingSession):")
	off = do_Structure(conn, SimplePlayingSession_container, tvb, off, 'SimplePlayingSession_Base', 'Base')
off, SimplePlayingSession_m_PrincipalID = do_PID(conn, SimplePlayingSession_container, tvb, off, 'SimplePlayingSession_m_PrincipalID', 'm_PrincipalID')
off, SimplePlayingSession_m_GatheringID = do_Uint32(conn, SimplePlayingSession_container, tvb, off, 'SimplePlayingSession_m_GatheringID', 'm_GatheringID')
off, SimplePlayingSession_m_GameMode = do_Uint32(conn, SimplePlayingSession_container, tvb, off, 'SimplePlayingSession_m_GameMode', 'm_GameMode')
off, SimplePlayingSession_m_Attribute_0 = do_Uint32(conn, SimplePlayingSession_container, tvb, off, 'SimplePlayingSession_m_Attribute_0', 'm_Attribute_0')

return off
end
function do_SimpleCommunity(conn, tree, tvb, off, field_unique_name, field_name)
local SimpleCommunity_container = tree:add(F.SimpleCommunity, tvb(off, 0))
	SimpleCommunity_container:set_text(field_name .. " (SimpleCommunity):")
	off = do_Structure(conn, SimpleCommunity_container, tvb, off, 'SimpleCommunity_Base', 'Base')
off, SimpleCommunity_m_GatheringID = do_Uint32(conn, SimpleCommunity_container, tvb, off, 'SimpleCommunity_m_GatheringID', 'm_GatheringID')
off, SimpleCommunity_m_MatchmakeSessionCount = do_Uint32(conn, SimpleCommunity_container, tvb, off, 'SimpleCommunity_m_MatchmakeSessionCount', 'm_MatchmakeSessionCount')

return off
end
function do_PlayerStatUpdate(conn, tree, tvb, off, field_unique_name, field_name)
local PlayerStatUpdate_container = tree:add(F.PlayerStatUpdate, tvb(off, 0))
	PlayerStatUpdate_container:set_text(field_name .. " (PlayerStatUpdate):")
	off = do_Structure(conn, PlayerStatUpdate_container, tvb, off, 'PlayerStatUpdate_Base', 'Base')
off, PlayerStatUpdate_m_boardID = do_Uint32(conn, PlayerStatUpdate_container, tvb, off, 'PlayerStatUpdate_m_boardID', 'm_boardID')
local PlayerStatUpdate_m_contextIDs_len = tvb(off, 4):le_uint()
	subPlayerStatUpdate_container = PlayerStatUpdate_container:add_le(F.PlayerStatUpdate_m_contextIDs_len, tvb(off,4))
	off = off + 4
	for i=1,PlayerStatUpdate_m_contextIDs_len do
	off, PlayerStatUpdate_m_contextIDs_item = do_Uint32(conn, subPlayerStatUpdate_container, tvb, off, 'PlayerStatUpdate_m_contextIDs_item', 'm_contextIDs')

	end
	
local PlayerStatUpdate_m_stats_len = tvb(off, 4):le_uint()
	subPlayerStatUpdate_container = PlayerStatUpdate_container:add_le(F.PlayerStatUpdate_m_stats_len, tvb(off,4))
	off = off + 4
	for i=1,PlayerStatUpdate_m_stats_len do
	off = do_PropertyVariant(conn, subPlayerStatUpdate_container, tvb, off, 'PlayerStatUpdate_m_stats_item', 'm_stats')

	end
	

return off
end
function do_StatboardQuery(conn, tree, tvb, off, field_unique_name, field_name)
local StatboardQuery_container = tree:add(F.StatboardQuery, tvb(off, 0))
	StatboardQuery_container:set_text(field_name .. " (StatboardQuery):")
	off = do_Structure(conn, StatboardQuery_container, tvb, off, 'StatboardQuery_Base', 'Base')
off, StatboardQuery_m_boardID = do_Uint32(conn, StatboardQuery_container, tvb, off, 'StatboardQuery_m_boardID', 'm_boardID')
local StatboardQuery_m_contextIDs_len = tvb(off, 4):le_uint()
	subStatboardQuery_container = StatboardQuery_container:add_le(F.StatboardQuery_m_contextIDs_len, tvb(off,4))
	off = off + 4
	for i=1,StatboardQuery_m_contextIDs_len do
	off, StatboardQuery_m_contextIDs_item = do_Uint32(conn, subStatboardQuery_container, tvb, off, 'StatboardQuery_m_contextIDs_item', 'm_contextIDs')

	end
	
off, StatboardQuery_m_resetFrequency = do_Uint32(conn, StatboardQuery_container, tvb, off, 'StatboardQuery_m_resetFrequency', 'm_resetFrequency')
local StatboardQuery_m_statIDs_len = tvb(off, 4):le_uint()
	subStatboardQuery_container = StatboardQuery_container:add_le(F.StatboardQuery_m_statIDs_len, tvb(off,4))
	off = off + 4
	for i=1,StatboardQuery_m_statIDs_len do
	off, StatboardQuery_m_statIDs_item = do_Uint32(conn, subStatboardQuery_container, tvb, off, 'StatboardQuery_m_statIDs_item', 'm_statIDs')

	end
	
local StatboardQuery_m_sortCriterias_len = tvb(off, 4):le_uint()
	subStatboardQuery_container = StatboardQuery_container:add_le(F.StatboardQuery_m_sortCriterias_len, tvb(off,4))
	off = off + 4
	for i=1,StatboardQuery_m_sortCriterias_len do
	off = do_PlayerStatSortCriteria(conn, subStatboardQuery_container, tvb, off, 'StatboardQuery_m_sortCriterias_item', 'm_sortCriterias')

	end
	

return off
end
function do_LeaderboardQuery(conn, tree, tvb, off, field_unique_name, field_name)
local LeaderboardQuery_container = tree:add(F.LeaderboardQuery, tvb(off, 0))
	LeaderboardQuery_container:set_text(field_name .. " (LeaderboardQuery):")
	off = do_Structure(conn, LeaderboardQuery_container, tvb, off, 'LeaderboardQuery_Base', 'Base')
off, LeaderboardQuery_m_boardID = do_Uint32(conn, LeaderboardQuery_container, tvb, off, 'LeaderboardQuery_m_boardID', 'm_boardID')
off, LeaderboardQuery_m_contextID = do_Uint32(conn, LeaderboardQuery_container, tvb, off, 'LeaderboardQuery_m_contextID', 'm_contextID')
off, LeaderboardQuery_m_resetFrequency = do_Uint32(conn, LeaderboardQuery_container, tvb, off, 'LeaderboardQuery_m_resetFrequency', 'm_resetFrequency')
local LeaderboardQuery_m_statIDs_len = tvb(off, 4):le_uint()
	subLeaderboardQuery_container = LeaderboardQuery_container:add_le(F.LeaderboardQuery_m_statIDs_len, tvb(off,4))
	off = off + 4
	for i=1,LeaderboardQuery_m_statIDs_len do
	off, LeaderboardQuery_m_statIDs_item = do_Uint32(conn, subLeaderboardQuery_container, tvb, off, 'LeaderboardQuery_m_statIDs_item', 'm_statIDs')

	end
	

return off
end
function do_LeaderboardQuery2(conn, tree, tvb, off, field_unique_name, field_name)
local LeaderboardQuery2_container = tree:add(F.LeaderboardQuery2, tvb(off, 0))
	LeaderboardQuery2_container:set_text(field_name .. " (LeaderboardQuery2):")
	off = do_Structure(conn, LeaderboardQuery2_container, tvb, off, 'LeaderboardQuery2_Base', 'Base')
off, LeaderboardQuery2_m_boardID = do_Uint32(conn, LeaderboardQuery2_container, tvb, off, 'LeaderboardQuery2_m_boardID', 'm_boardID')
off, LeaderboardQuery2_m_contextID = do_Uint32(conn, LeaderboardQuery2_container, tvb, off, 'LeaderboardQuery2_m_contextID', 'm_contextID')
off, LeaderboardQuery2_m_resetFrequency = do_Uint32(conn, LeaderboardQuery2_container, tvb, off, 'LeaderboardQuery2_m_resetFrequency', 'm_resetFrequency')
local LeaderboardQuery2_m_statIDs_len = tvb(off, 4):le_uint()
	subLeaderboardQuery2_container = LeaderboardQuery2_container:add_le(F.LeaderboardQuery2_m_statIDs_len, tvb(off,4))
	off = off + 4
	for i=1,LeaderboardQuery2_m_statIDs_len do
	off, LeaderboardQuery2_m_statIDs_item = do_Uint32(conn, subLeaderboardQuery2_container, tvb, off, 'LeaderboardQuery2_m_statIDs_item', 'm_statIDs')

	end
	
local LeaderboardQuery2_m_estimatedPIDs_len = tvb(off, 4):le_uint()
	subLeaderboardQuery2_container = LeaderboardQuery2_container:add_le(F.LeaderboardQuery2_m_estimatedPIDs_len, tvb(off,4))
	off = off + 4
	for i=1,LeaderboardQuery2_m_estimatedPIDs_len do
	off, LeaderboardQuery2_m_estimatedPIDs_item = do_Uint32(conn, subLeaderboardQuery2_container, tvb, off, 'LeaderboardQuery2_m_estimatedPIDs_item', 'm_estimatedPIDs')

	end
	

return off
end
function do_StatboardResult(conn, tree, tvb, off, field_unique_name, field_name)
local StatboardResult_container = tree:add(F.StatboardResult, tvb(off, 0))
	StatboardResult_container:set_text(field_name .. " (StatboardResult):")
	off = do_Structure(conn, StatboardResult_container, tvb, off, 'StatboardResult_Base', 'Base')
off, StatboardResult_m_boardID = do_Uint32(conn, StatboardResult_container, tvb, off, 'StatboardResult_m_boardID', 'm_boardID')
off, StatboardResult_m_contextID = do_Uint32(conn, StatboardResult_container, tvb, off, 'StatboardResult_m_contextID', 'm_contextID')
off, StatboardResult_m_resetFrequency = do_Uint32(conn, StatboardResult_container, tvb, off, 'StatboardResult_m_resetFrequency', 'm_resetFrequency')
local StatboardResult_m_playerStatSets_len = tvb(off, 4):le_uint()
	subStatboardResult_container = StatboardResult_container:add_le(F.StatboardResult_m_playerStatSets_len, tvb(off,4))
	off = off + 4
	for i=1,StatboardResult_m_playerStatSets_len do
	off = do_PlayerStatSet(conn, subStatboardResult_container, tvb, off, 'StatboardResult_m_playerStatSets_item', 'm_playerStatSets')

	end
	
local StatboardResult_m_defaultStatValues_len = tvb(off, 4):le_uint()
	subStatboardResult_container = StatboardResult_container:add_le(F.StatboardResult_m_defaultStatValues_len, tvb(off,4))
	off = off + 4
	for i=1,StatboardResult_m_defaultStatValues_len do
	off = do_PropertyVariant(conn, subStatboardResult_container, tvb, off, 'StatboardResult_m_defaultStatValues_item', 'm_defaultStatValues')

	end
	

return off
end
function do_LeaderboardResult(conn, tree, tvb, off, field_unique_name, field_name)
local LeaderboardResult_container = tree:add(F.LeaderboardResult, tvb(off, 0))
	LeaderboardResult_container:set_text(field_name .. " (LeaderboardResult):")
	off = do_Structure(conn, LeaderboardResult_container, tvb, off, 'LeaderboardResult_Base', 'Base')
off, LeaderboardResult_m_boardID = do_Uint32(conn, LeaderboardResult_container, tvb, off, 'LeaderboardResult_m_boardID', 'm_boardID')
off, LeaderboardResult_m_contextID = do_Uint32(conn, LeaderboardResult_container, tvb, off, 'LeaderboardResult_m_contextID', 'm_contextID')
off, LeaderboardResult_m_resetFrequency = do_Uint32(conn, LeaderboardResult_container, tvb, off, 'LeaderboardResult_m_resetFrequency', 'm_resetFrequency')
off, LeaderboardResult_m_leaderboardTotalPlayerCount = do_Uint32(conn, LeaderboardResult_container, tvb, off, 'LeaderboardResult_m_leaderboardTotalPlayerCount', 'm_leaderboardTotalPlayerCount')
local LeaderboardResult_m_playerRanks_len = tvb(off, 4):le_uint()
	subLeaderboardResult_container = LeaderboardResult_container:add_le(F.LeaderboardResult_m_playerRanks_len, tvb(off,4))
	off = off + 4
	for i=1,LeaderboardResult_m_playerRanks_len do
	off = do_PlayerRank(conn, subLeaderboardResult_container, tvb, off, 'LeaderboardResult_m_playerRanks_item', 'm_playerRanks')

	end
	

return off
end
function do_StatboardHistoryQuery(conn, tree, tvb, off, field_unique_name, field_name)
local StatboardHistoryQuery_container = tree:add(F.StatboardHistoryQuery, tvb(off, 0))
	StatboardHistoryQuery_container:set_text(field_name .. " (StatboardHistoryQuery):")
	off = do_Structure(conn, StatboardHistoryQuery_container, tvb, off, 'StatboardHistoryQuery_Base', 'Base')
local StatboardHistoryQuery_m_playerPIDs_len = tvb(off, 4):le_uint()
	subStatboardHistoryQuery_container = StatboardHistoryQuery_container:add_le(F.StatboardHistoryQuery_m_playerPIDs_len, tvb(off,4))
	off = off + 4
	for i=1,StatboardHistoryQuery_m_playerPIDs_len do
	off, StatboardHistoryQuery_m_playerPIDs_item = do_Uint32(conn, subStatboardHistoryQuery_container, tvb, off, 'StatboardHistoryQuery_m_playerPIDs_item', 'm_playerPIDs')

	end
	
off, StatboardHistoryQuery_m_boardID = do_Uint32(conn, StatboardHistoryQuery_container, tvb, off, 'StatboardHistoryQuery_m_boardID', 'm_boardID')
local StatboardHistoryQuery_m_contextIDs_len = tvb(off, 4):le_uint()
	subStatboardHistoryQuery_container = StatboardHistoryQuery_container:add_le(F.StatboardHistoryQuery_m_contextIDs_len, tvb(off,4))
	off = off + 4
	for i=1,StatboardHistoryQuery_m_contextIDs_len do
	off, StatboardHistoryQuery_m_contextIDs_item = do_Uint32(conn, subStatboardHistoryQuery_container, tvb, off, 'StatboardHistoryQuery_m_contextIDs_item', 'm_contextIDs')

	end
	
local StatboardHistoryQuery_m_statIDs_len = tvb(off, 4):le_uint()
	subStatboardHistoryQuery_container = StatboardHistoryQuery_container:add_le(F.StatboardHistoryQuery_m_statIDs_len, tvb(off,4))
	off = off + 4
	for i=1,StatboardHistoryQuery_m_statIDs_len do
	off, StatboardHistoryQuery_m_statIDs_item = do_Uint32(conn, subStatboardHistoryQuery_container, tvb, off, 'StatboardHistoryQuery_m_statIDs_item', 'm_statIDs')

	end
	
off = do_ResultRange(conn, StatboardHistoryQuery_container, tvb, off, 'StatboardHistoryQuery_m_resultRange', 'm_resultRange')
local StatboardHistoryQuery_m_playerStats_len = tvb(off, 4):le_uint()
	subStatboardHistoryQuery_container = StatboardHistoryQuery_container:add_le(F.StatboardHistoryQuery_m_playerStats_len, tvb(off,4))
	off = off + 4
	for i=1,StatboardHistoryQuery_m_playerStats_len do
	off = do_PropertyVariant(conn, subStatboardHistoryQuery_container, tvb, off, 'StatboardHistoryQuery_m_playerStats_item', 'm_playerStats')

	end
	
local StatboardHistoryQuery_m_dateRanges_len = tvb(off, 4):le_uint()
	subStatboardHistoryQuery_container = StatboardHistoryQuery_container:add_le(F.StatboardHistoryQuery_m_dateRanges_len, tvb(off,4))
	off = off + 4
	for i=1,StatboardHistoryQuery_m_dateRanges_len do
	off = do_DateRange(conn, subStatboardHistoryQuery_container, tvb, off, 'StatboardHistoryQuery_m_dateRanges_item', 'm_dateRanges')

	end
	
local StatboardHistoryQuery_m_sortCriterias_len = tvb(off, 4):le_uint()
	subStatboardHistoryQuery_container = StatboardHistoryQuery_container:add_le(F.StatboardHistoryQuery_m_sortCriterias_len, tvb(off,4))
	off = off + 4
	for i=1,StatboardHistoryQuery_m_sortCriterias_len do
	off = do_PlayerStatSortCriteria(conn, subStatboardHistoryQuery_container, tvb, off, 'StatboardHistoryQuery_m_sortCriterias_item', 'm_sortCriterias')

	end
	

return off
end
function do_StatboardHistoryAggregatedQuery(conn, tree, tvb, off, field_unique_name, field_name)
local StatboardHistoryAggregatedQuery_container = tree:add(F.StatboardHistoryAggregatedQuery, tvb(off, 0))
	StatboardHistoryAggregatedQuery_container:set_text(field_name .. " (StatboardHistoryAggregatedQuery):")
	off = do_Structure(conn, StatboardHistoryAggregatedQuery_container, tvb, off, 'StatboardHistoryAggregatedQuery_Base', 'Base')
local StatboardHistoryAggregatedQuery_m_playerPIDs_len = tvb(off, 4):le_uint()
	subStatboardHistoryAggregatedQuery_container = StatboardHistoryAggregatedQuery_container:add_le(F.StatboardHistoryAggregatedQuery_m_playerPIDs_len, tvb(off,4))
	off = off + 4
	for i=1,StatboardHistoryAggregatedQuery_m_playerPIDs_len do
	off, StatboardHistoryAggregatedQuery_m_playerPIDs_item = do_Uint32(conn, subStatboardHistoryAggregatedQuery_container, tvb, off, 'StatboardHistoryAggregatedQuery_m_playerPIDs_item', 'm_playerPIDs')

	end
	
off, StatboardHistoryAggregatedQuery_m_boardID = do_Uint32(conn, StatboardHistoryAggregatedQuery_container, tvb, off, 'StatboardHistoryAggregatedQuery_m_boardID', 'm_boardID')
local StatboardHistoryAggregatedQuery_m_contextIDs_len = tvb(off, 4):le_uint()
	subStatboardHistoryAggregatedQuery_container = StatboardHistoryAggregatedQuery_container:add_le(F.StatboardHistoryAggregatedQuery_m_contextIDs_len, tvb(off,4))
	off = off + 4
	for i=1,StatboardHistoryAggregatedQuery_m_contextIDs_len do
	off, StatboardHistoryAggregatedQuery_m_contextIDs_item = do_Uint32(conn, subStatboardHistoryAggregatedQuery_container, tvb, off, 'StatboardHistoryAggregatedQuery_m_contextIDs_item', 'm_contextIDs')

	end
	
local StatboardHistoryAggregatedQuery_m_statIDs_len = tvb(off, 4):le_uint()
	subStatboardHistoryAggregatedQuery_container = StatboardHistoryAggregatedQuery_container:add_le(F.StatboardHistoryAggregatedQuery_m_statIDs_len, tvb(off,4))
	off = off + 4
	for i=1,StatboardHistoryAggregatedQuery_m_statIDs_len do
	off, StatboardHistoryAggregatedQuery_m_statIDs_item = do_Uint32(conn, subStatboardHistoryAggregatedQuery_container, tvb, off, 'StatboardHistoryAggregatedQuery_m_statIDs_item', 'm_statIDs')

	end
	
off = do_ResultRange(conn, StatboardHistoryAggregatedQuery_container, tvb, off, 'StatboardHistoryAggregatedQuery_m_resultRange', 'm_resultRange')
local StatboardHistoryAggregatedQuery_m_playerStats_len = tvb(off, 4):le_uint()
	subStatboardHistoryAggregatedQuery_container = StatboardHistoryAggregatedQuery_container:add_le(F.StatboardHistoryAggregatedQuery_m_playerStats_len, tvb(off,4))
	off = off + 4
	for i=1,StatboardHistoryAggregatedQuery_m_playerStats_len do
	off = do_PropertyVariant(conn, subStatboardHistoryAggregatedQuery_container, tvb, off, 'StatboardHistoryAggregatedQuery_m_playerStats_item', 'm_playerStats')

	end
	
local StatboardHistoryAggregatedQuery_m_dateRanges_len = tvb(off, 4):le_uint()
	subStatboardHistoryAggregatedQuery_container = StatboardHistoryAggregatedQuery_container:add_le(F.StatboardHistoryAggregatedQuery_m_dateRanges_len, tvb(off,4))
	off = off + 4
	for i=1,StatboardHistoryAggregatedQuery_m_dateRanges_len do
	off = do_DateRange(conn, subStatboardHistoryAggregatedQuery_container, tvb, off, 'StatboardHistoryAggregatedQuery_m_dateRanges_item', 'm_dateRanges')

	end
	
local StatboardHistoryAggregatedQuery_m_sortCriterias_len = tvb(off, 4):le_uint()
	subStatboardHistoryAggregatedQuery_container = StatboardHistoryAggregatedQuery_container:add_le(F.StatboardHistoryAggregatedQuery_m_sortCriterias_len, tvb(off,4))
	off = off + 4
	for i=1,StatboardHistoryAggregatedQuery_m_sortCriterias_len do
	off = do_PlayerStatSortCriteria(conn, subStatboardHistoryAggregatedQuery_container, tvb, off, 'StatboardHistoryAggregatedQuery_m_sortCriterias_item', 'm_sortCriterias')

	end
	
off, StatboardHistoryAggregatedQuery_m_filterOption = do_Uint32(conn, StatboardHistoryAggregatedQuery_container, tvb, off, 'StatboardHistoryAggregatedQuery_m_filterOption', 'm_filterOption')

return off
end
function do_LeaderboardHistoryQuery(conn, tree, tvb, off, field_unique_name, field_name)
local LeaderboardHistoryQuery_container = tree:add(F.LeaderboardHistoryQuery, tvb(off, 0))
	LeaderboardHistoryQuery_container:set_text(field_name .. " (LeaderboardHistoryQuery):")
	off = do_Structure(conn, LeaderboardHistoryQuery_container, tvb, off, 'LeaderboardHistoryQuery_Base', 'Base')
local LeaderboardHistoryQuery_m_playerPIDs_len = tvb(off, 4):le_uint()
	subLeaderboardHistoryQuery_container = LeaderboardHistoryQuery_container:add_le(F.LeaderboardHistoryQuery_m_playerPIDs_len, tvb(off,4))
	off = off + 4
	for i=1,LeaderboardHistoryQuery_m_playerPIDs_len do
	off, LeaderboardHistoryQuery_m_playerPIDs_item = do_Uint32(conn, subLeaderboardHistoryQuery_container, tvb, off, 'LeaderboardHistoryQuery_m_playerPIDs_item', 'm_playerPIDs')

	end
	
off, LeaderboardHistoryQuery_m_boardID = do_Uint32(conn, LeaderboardHistoryQuery_container, tvb, off, 'LeaderboardHistoryQuery_m_boardID', 'm_boardID')
off, LeaderboardHistoryQuery_m_contextID = do_Uint32(conn, LeaderboardHistoryQuery_container, tvb, off, 'LeaderboardHistoryQuery_m_contextID', 'm_contextID')
off = do_ResultRange(conn, LeaderboardHistoryQuery_container, tvb, off, 'LeaderboardHistoryQuery_m_resultRange', 'm_resultRange')
local LeaderboardHistoryQuery_m_dateRanges_len = tvb(off, 4):le_uint()
	subLeaderboardHistoryQuery_container = LeaderboardHistoryQuery_container:add_le(F.LeaderboardHistoryQuery_m_dateRanges_len, tvb(off,4))
	off = off + 4
	for i=1,LeaderboardHistoryQuery_m_dateRanges_len do
	off = do_DateRange(conn, subLeaderboardHistoryQuery_container, tvb, off, 'LeaderboardHistoryQuery_m_dateRanges_item', 'm_dateRanges')

	end
	
off, LeaderboardHistoryQuery_m_filterOption = do_Uint32(conn, LeaderboardHistoryQuery_container, tvb, off, 'LeaderboardHistoryQuery_m_filterOption', 'm_filterOption')

return off
end
function do_PopulationStatQuery(conn, tree, tvb, off, field_unique_name, field_name)
local PopulationStatQuery_container = tree:add(F.PopulationStatQuery, tvb(off, 0))
	PopulationStatQuery_container:set_text(field_name .. " (PopulationStatQuery):")
	off = do_Structure(conn, PopulationStatQuery_container, tvb, off, 'PopulationStatQuery_Base', 'Base')
off, PopulationStatQuery_m_boardID = do_Uint32(conn, PopulationStatQuery_container, tvb, off, 'PopulationStatQuery_m_boardID', 'm_boardID')
off, PopulationStatQuery_m_contextID = do_Uint32(conn, PopulationStatQuery_container, tvb, off, 'PopulationStatQuery_m_contextID', 'm_contextID')
local PopulationStatQuery_m_statIDs_len = tvb(off, 4):le_uint()
	subPopulationStatQuery_container = PopulationStatQuery_container:add_le(F.PopulationStatQuery_m_statIDs_len, tvb(off,4))
	off = off + 4
	for i=1,PopulationStatQuery_m_statIDs_len do
	off, PopulationStatQuery_m_statIDs_item = do_Uint32(conn, subPopulationStatQuery_container, tvb, off, 'PopulationStatQuery_m_statIDs_item', 'm_statIDs')

	end
	

return off
end
function do_PopulationStatResult(conn, tree, tvb, off, field_unique_name, field_name)
local PopulationStatResult_container = tree:add(F.PopulationStatResult, tvb(off, 0))
	PopulationStatResult_container:set_text(field_name .. " (PopulationStatResult):")
	off = do_Structure(conn, PopulationStatResult_container, tvb, off, 'PopulationStatResult_Base', 'Base')
off, PopulationStatResult_m_boardID = do_Uint32(conn, PopulationStatResult_container, tvb, off, 'PopulationStatResult_m_boardID', 'm_boardID')
off, PopulationStatResult_m_contextID = do_Uint32(conn, PopulationStatResult_container, tvb, off, 'PopulationStatResult_m_contextID', 'm_contextID')
off, PopulationStatResult_m_statID = do_Uint32(conn, PopulationStatResult_container, tvb, off, 'PopulationStatResult_m_statID', 'm_statID')
off, PopulationStatResult_m_sum = do_Double(conn, PopulationStatResult_container, tvb, off, 'PopulationStatResult_m_sum', 'm_sum')
off, PopulationStatResult_m_average = do_Double(conn, PopulationStatResult_container, tvb, off, 'PopulationStatResult_m_average', 'm_average')
off, PopulationStatResult_m_standardDeviation = do_Double(conn, PopulationStatResult_container, tvb, off, 'PopulationStatResult_m_standardDeviation', 'm_standardDeviation')

return off
end
function do_UplayAction(conn, tree, tvb, off, field_unique_name, field_name)
local UplayAction_container = tree:add(F.UplayAction, tvb(off, 0))
	UplayAction_container:set_text(field_name .. " (UplayAction):")
	off = do_Structure(conn, UplayAction_container, tvb, off, 'UplayAction_Base', 'Base')
off, UplayAction_m_code = do_String(conn, UplayAction_container, tvb, off, 'UplayAction_m_code', 'm_code')
off, UplayAction_m_name = do_String(conn, UplayAction_container, tvb, off, 'UplayAction_m_name', 'm_name')
off, UplayAction_m_description = do_String(conn, UplayAction_container, tvb, off, 'UplayAction_m_description', 'm_description')
off, UplayAction_m_value = do_Sint32(conn, UplayAction_container, tvb, off, 'UplayAction_m_value', 'm_value')
off, UplayAction_m_gameCode = do_String(conn, UplayAction_container, tvb, off, 'UplayAction_m_gameCode', 'm_gameCode')
local UplayAction_m_platforms_len = tvb(off, 4):le_uint()
	subUplayAction_container = UplayAction_container:add_le(F.UplayAction_m_platforms_len, tvb(off,4))
	off = off + 4
	for i=1,UplayAction_m_platforms_len do
	off = do_UplayActionPlatform(conn, subUplayAction_container, tvb, off, 'UplayAction_m_platforms_item', 'm_platforms')

	end
	

return off
end
function do_UplayReward(conn, tree, tvb, off, field_unique_name, field_name)
local UplayReward_container = tree:add(F.UplayReward, tvb(off, 0))
	UplayReward_container:set_text(field_name .. " (UplayReward):")
	off = do_Structure(conn, UplayReward_container, tvb, off, 'UplayReward_Base', 'Base')
off, UplayReward_m_code = do_String(conn, UplayReward_container, tvb, off, 'UplayReward_m_code', 'm_code')
off, UplayReward_m_name = do_String(conn, UplayReward_container, tvb, off, 'UplayReward_m_name', 'm_name')
off, UplayReward_m_description = do_String(conn, UplayReward_container, tvb, off, 'UplayReward_m_description', 'm_description')
off, UplayReward_m_value = do_Sint32(conn, UplayReward_container, tvb, off, 'UplayReward_m_value', 'm_value')
off, UplayReward_m_rewardTypeName = do_String(conn, UplayReward_container, tvb, off, 'UplayReward_m_rewardTypeName', 'm_rewardTypeName')
off, UplayReward_m_gameCode = do_String(conn, UplayReward_container, tvb, off, 'UplayReward_m_gameCode', 'm_gameCode')
local UplayReward_m_platforms_len = tvb(off, 4):le_uint()
	subUplayReward_container = UplayReward_container:add_le(F.UplayReward_m_platforms_len, tvb(off,4))
	off = off + 4
	for i=1,UplayReward_m_platforms_len do
	off = do_UplayRewardPlatform(conn, subUplayReward_container, tvb, off, 'UplayReward_m_platforms_item', 'm_platforms')

	end
	

return off
end
function do_UplaySection(conn, tree, tvb, off, field_unique_name, field_name)
local UplaySection_container = tree:add(F.UplaySection, tvb(off, 0))
	UplaySection_container:set_text(field_name .. " (UplaySection):")
	off = do_Structure(conn, UplaySection_container, tvb, off, 'UplaySection_Base', 'Base')
off, UplaySection_m_key = do_String(conn, UplaySection_container, tvb, off, 'UplaySection_m_key', 'm_key')
off, UplaySection_m_name = do_String(conn, UplaySection_container, tvb, off, 'UplaySection_m_name', 'm_name')
off, UplaySection_m_typeName = do_String(conn, UplaySection_container, tvb, off, 'UplaySection_m_typeName', 'm_typeName')
off, UplaySection_m_menuTypeName = do_String(conn, UplaySection_container, tvb, off, 'UplaySection_m_menuTypeName', 'm_menuTypeName')
local UplaySection_m_contentList_len = tvb(off, 4):le_uint()
	subUplaySection_container = UplaySection_container:add_le(F.UplaySection_m_contentList_len, tvb(off,4))
	off = off + 4
	for i=1,UplaySection_m_contentList_len do
	off = do_UplaySectionContent(conn, subUplaySection_container, tvb, off, 'UplaySection_m_contentList_item', 'm_contentList')

	end
	
off, UplaySection_m_gameCode = do_String(conn, UplaySection_container, tvb, off, 'UplaySection_m_gameCode', 'm_gameCode')
off, UplaySection_m_platformCode = do_String(conn, UplaySection_container, tvb, off, 'UplaySection_m_platformCode', 'm_platformCode')

return off
end
function do_DataStorePrepareGetParamV1(conn, tree, tvb, off, field_unique_name, field_name)
local DataStorePrepareGetParamV1_container = tree:add(F.DataStorePrepareGetParamV1, tvb(off, 0))
	DataStorePrepareGetParamV1_container:set_text(field_name .. " (DataStorePrepareGetParamV1):")
	off = do_Structure(conn, DataStorePrepareGetParamV1_container, tvb, off, 'DataStorePrepareGetParamV1_Base', 'Base')
off, DataStorePrepareGetParamV1_dataId = do_Uint32(conn, DataStorePrepareGetParamV1_container, tvb, off, 'DataStorePrepareGetParamV1_dataId', 'dataId')
off, DataStorePrepareGetParamV1_lockId = do_Uint32(conn, DataStorePrepareGetParamV1_container, tvb, off, 'DataStorePrepareGetParamV1_lockId', 'lockId')

return off
end
function do_DataStorePrepareGetParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStorePrepareGetParam_container = tree:add(F.DataStorePrepareGetParam, tvb(off, 0))
	DataStorePrepareGetParam_container:set_text(field_name .. " (DataStorePrepareGetParam):")
	off = do_Structure(conn, DataStorePrepareGetParam_container, tvb, off, 'DataStorePrepareGetParam_Base', 'Base')
off, DataStorePrepareGetParam_dataId = do_Uint64(conn, DataStorePrepareGetParam_container, tvb, off, 'DataStorePrepareGetParam_dataId', 'dataId')
off, DataStorePrepareGetParam_lockId = do_Uint32(conn, DataStorePrepareGetParam_container, tvb, off, 'DataStorePrepareGetParam_lockId', 'lockId')
off = do_DataStorePersistenceTarget(conn, DataStorePrepareGetParam_container, tvb, off, 'DataStorePrepareGetParam_persistenceTarget', 'persistenceTarget')
off, DataStorePrepareGetParam_accessPassword = do_Uint64(conn, DataStorePrepareGetParam_container, tvb, off, 'DataStorePrepareGetParam_accessPassword', 'accessPassword')
local DataStorePrepareGetParam_extraData_len = tvb(off, 4):le_uint()
	subDataStorePrepareGetParam_container = DataStorePrepareGetParam_container:add_le(F.DataStorePrepareGetParam_extraData_len, tvb(off,4))
	off = off + 4
	for i=1,DataStorePrepareGetParam_extraData_len do
	off, DataStorePrepareGetParam_extraData_item = do_String(conn, subDataStorePrepareGetParam_container, tvb, off, 'DataStorePrepareGetParam_extraData_item', 'extraData')

	end
	

return off
end
function do_DataStoreReqGetInfoV1(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreReqGetInfoV1_container = tree:add(F.DataStoreReqGetInfoV1, tvb(off, 0))
	DataStoreReqGetInfoV1_container:set_text(field_name .. " (DataStoreReqGetInfoV1):")
	off = do_Structure(conn, DataStoreReqGetInfoV1_container, tvb, off, 'DataStoreReqGetInfoV1_Base', 'Base')
off, DataStoreReqGetInfoV1_url = do_String(conn, DataStoreReqGetInfoV1_container, tvb, off, 'DataStoreReqGetInfoV1_url', 'url')
local DataStoreReqGetInfoV1_requestHeaders_len = tvb(off, 4):le_uint()
	subDataStoreReqGetInfoV1_container = DataStoreReqGetInfoV1_container:add_le(F.DataStoreReqGetInfoV1_requestHeaders_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreReqGetInfoV1_requestHeaders_len do
	off = do_DataStoreKeyValue(conn, subDataStoreReqGetInfoV1_container, tvb, off, 'DataStoreReqGetInfoV1_requestHeaders_item', 'requestHeaders')

	end
	
off, DataStoreReqGetInfoV1_size = do_Uint32(conn, DataStoreReqGetInfoV1_container, tvb, off, 'DataStoreReqGetInfoV1_size', 'size')
off, DataStoreReqGetInfoV1_rootCaCert = do_Buffer(conn, DataStoreReqGetInfoV1_container, tvb, off, 'DataStoreReqGetInfoV1_rootCaCert', 'rootCaCert')

return off
end
function do_DataStoreReqGetAdditionalMeta(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreReqGetAdditionalMeta_container = tree:add(F.DataStoreReqGetAdditionalMeta, tvb(off, 0))
	DataStoreReqGetAdditionalMeta_container:set_text(field_name .. " (DataStoreReqGetAdditionalMeta):")
	off = do_Structure(conn, DataStoreReqGetAdditionalMeta_container, tvb, off, 'DataStoreReqGetAdditionalMeta_Base', 'Base')
off, DataStoreReqGetAdditionalMeta_ownerId = do_PID(conn, DataStoreReqGetAdditionalMeta_container, tvb, off, 'DataStoreReqGetAdditionalMeta_ownerId', 'ownerId')
off, DataStoreReqGetAdditionalMeta_dataType = do_Uint16(conn, DataStoreReqGetAdditionalMeta_container, tvb, off, 'DataStoreReqGetAdditionalMeta_dataType', 'dataType')
off, DataStoreReqGetAdditionalMeta_version = do_Uint16(conn, DataStoreReqGetAdditionalMeta_container, tvb, off, 'DataStoreReqGetAdditionalMeta_version', 'version')
off, DataStoreReqGetAdditionalMeta_metaBinary = do_qBuffer(conn, DataStoreReqGetAdditionalMeta_container, tvb, off, 'DataStoreReqGetAdditionalMeta_metaBinary', 'metaBinary')

return off
end
function do_DataStorePreparePostParamV1(conn, tree, tvb, off, field_unique_name, field_name)
local DataStorePreparePostParamV1_container = tree:add(F.DataStorePreparePostParamV1, tvb(off, 0))
	DataStorePreparePostParamV1_container:set_text(field_name .. " (DataStorePreparePostParamV1):")
	off = do_Structure(conn, DataStorePreparePostParamV1_container, tvb, off, 'DataStorePreparePostParamV1_Base', 'Base')
off, DataStorePreparePostParamV1_size = do_Uint32(conn, DataStorePreparePostParamV1_container, tvb, off, 'DataStorePreparePostParamV1_size', 'size')
off, DataStorePreparePostParamV1_name = do_String(conn, DataStorePreparePostParamV1_container, tvb, off, 'DataStorePreparePostParamV1_name', 'name')
off, DataStorePreparePostParamV1_dataType = do_Uint16(conn, DataStorePreparePostParamV1_container, tvb, off, 'DataStorePreparePostParamV1_dataType', 'dataType')
off, DataStorePreparePostParamV1_metaBinary = do_qBuffer(conn, DataStorePreparePostParamV1_container, tvb, off, 'DataStorePreparePostParamV1_metaBinary', 'metaBinary')
off = do_DataStorePermission(conn, DataStorePreparePostParamV1_container, tvb, off, 'DataStorePreparePostParamV1_permission', 'permission')
off = do_DataStorePermission(conn, DataStorePreparePostParamV1_container, tvb, off, 'DataStorePreparePostParamV1_delPermission', 'delPermission')
off, DataStorePreparePostParamV1_flag = do_Uint32(conn, DataStorePreparePostParamV1_container, tvb, off, 'DataStorePreparePostParamV1_flag', 'flag')
off, DataStorePreparePostParamV1_period = do_Uint16(conn, DataStorePreparePostParamV1_container, tvb, off, 'DataStorePreparePostParamV1_period', 'period')
off, DataStorePreparePostParamV1_referDataId = do_Uint32(conn, DataStorePreparePostParamV1_container, tvb, off, 'DataStorePreparePostParamV1_referDataId', 'referDataId')
local DataStorePreparePostParamV1_tags_len = tvb(off, 4):le_uint()
	subDataStorePreparePostParamV1_container = DataStorePreparePostParamV1_container:add_le(F.DataStorePreparePostParamV1_tags_len, tvb(off,4))
	off = off + 4
	for i=1,DataStorePreparePostParamV1_tags_len do
	off, DataStorePreparePostParamV1_tags_item = do_String(conn, subDataStorePreparePostParamV1_container, tvb, off, 'DataStorePreparePostParamV1_tags_item', 'tags')

	end
	
local DataStorePreparePostParamV1_ratingInitParams_len = tvb(off, 4):le_uint()
	subDataStorePreparePostParamV1_container = DataStorePreparePostParamV1_container:add_le(F.DataStorePreparePostParamV1_ratingInitParams_len, tvb(off,4))
	off = off + 4
	for i=1,DataStorePreparePostParamV1_ratingInitParams_len do
	off = do_DataStoreRatingInitParamWithSlot(conn, subDataStorePreparePostParamV1_container, tvb, off, 'DataStorePreparePostParamV1_ratingInitParams_item', 'ratingInitParams')

	end
	

return off
end
function do_DataStoreReqPostInfoV1(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreReqPostInfoV1_container = tree:add(F.DataStoreReqPostInfoV1, tvb(off, 0))
	DataStoreReqPostInfoV1_container:set_text(field_name .. " (DataStoreReqPostInfoV1):")
	off = do_Structure(conn, DataStoreReqPostInfoV1_container, tvb, off, 'DataStoreReqPostInfoV1_Base', 'Base')
off, DataStoreReqPostInfoV1_dataId = do_Uint32(conn, DataStoreReqPostInfoV1_container, tvb, off, 'DataStoreReqPostInfoV1_dataId', 'dataId')
off, DataStoreReqPostInfoV1_url = do_String(conn, DataStoreReqPostInfoV1_container, tvb, off, 'DataStoreReqPostInfoV1_url', 'url')
local DataStoreReqPostInfoV1_requestHeaders_len = tvb(off, 4):le_uint()
	subDataStoreReqPostInfoV1_container = DataStoreReqPostInfoV1_container:add_le(F.DataStoreReqPostInfoV1_requestHeaders_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreReqPostInfoV1_requestHeaders_len do
	off = do_DataStoreKeyValue(conn, subDataStoreReqPostInfoV1_container, tvb, off, 'DataStoreReqPostInfoV1_requestHeaders_item', 'requestHeaders')

	end
	
local DataStoreReqPostInfoV1_formFields_len = tvb(off, 4):le_uint()
	subDataStoreReqPostInfoV1_container = DataStoreReqPostInfoV1_container:add_le(F.DataStoreReqPostInfoV1_formFields_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreReqPostInfoV1_formFields_len do
	off = do_DataStoreKeyValue(conn, subDataStoreReqPostInfoV1_container, tvb, off, 'DataStoreReqPostInfoV1_formFields_item', 'formFields')

	end
	
off, DataStoreReqPostInfoV1_rootCaCert = do_Buffer(conn, DataStoreReqPostInfoV1_container, tvb, off, 'DataStoreReqPostInfoV1_rootCaCert', 'rootCaCert')

return off
end
function do_DataStoreReqPostInfo(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreReqPostInfo_container = tree:add(F.DataStoreReqPostInfo, tvb(off, 0))
	DataStoreReqPostInfo_container:set_text(field_name .. " (DataStoreReqPostInfo):")
	off = do_Structure(conn, DataStoreReqPostInfo_container, tvb, off, 'DataStoreReqPostInfo_Base', 'Base')
off, DataStoreReqPostInfo_dataId = do_Uint64(conn, DataStoreReqPostInfo_container, tvb, off, 'DataStoreReqPostInfo_dataId', 'dataId')
off, DataStoreReqPostInfo_url = do_String(conn, DataStoreReqPostInfo_container, tvb, off, 'DataStoreReqPostInfo_url', 'url')
local DataStoreReqPostInfo_requestHeaders_len = tvb(off, 4):le_uint()
	subDataStoreReqPostInfo_container = DataStoreReqPostInfo_container:add_le(F.DataStoreReqPostInfo_requestHeaders_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreReqPostInfo_requestHeaders_len do
	off = do_DataStoreKeyValue(conn, subDataStoreReqPostInfo_container, tvb, off, 'DataStoreReqPostInfo_requestHeaders_item', 'requestHeaders')

	end
	
local DataStoreReqPostInfo_formFields_len = tvb(off, 4):le_uint()
	subDataStoreReqPostInfo_container = DataStoreReqPostInfo_container:add_le(F.DataStoreReqPostInfo_formFields_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreReqPostInfo_formFields_len do
	off = do_DataStoreKeyValue(conn, subDataStoreReqPostInfo_container, tvb, off, 'DataStoreReqPostInfo_formFields_item', 'formFields')

	end
	
off, DataStoreReqPostInfo_rootCaCert = do_Buffer(conn, DataStoreReqPostInfo_container, tvb, off, 'DataStoreReqPostInfo_rootCaCert', 'rootCaCert')

return off
end
function do_DataStoreCompletePostParamV1(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreCompletePostParamV1_container = tree:add(F.DataStoreCompletePostParamV1, tvb(off, 0))
	DataStoreCompletePostParamV1_container:set_text(field_name .. " (DataStoreCompletePostParamV1):")
	off = do_Structure(conn, DataStoreCompletePostParamV1_container, tvb, off, 'DataStoreCompletePostParamV1_Base', 'Base')
off, DataStoreCompletePostParamV1_dataId = do_Uint32(conn, DataStoreCompletePostParamV1_container, tvb, off, 'DataStoreCompletePostParamV1_dataId', 'dataId')
off, DataStoreCompletePostParamV1_isSuccess = do_Bool(conn, DataStoreCompletePostParamV1_container, tvb, off, 'DataStoreCompletePostParamV1_isSuccess', 'isSuccess')

return off
end
function do_DataStoreCompletePostParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreCompletePostParam_container = tree:add(F.DataStoreCompletePostParam, tvb(off, 0))
	DataStoreCompletePostParam_container:set_text(field_name .. " (DataStoreCompletePostParam):")
	off = do_Structure(conn, DataStoreCompletePostParam_container, tvb, off, 'DataStoreCompletePostParam_Base', 'Base')
off, DataStoreCompletePostParam_dataId = do_Uint64(conn, DataStoreCompletePostParam_container, tvb, off, 'DataStoreCompletePostParam_dataId', 'dataId')
off, DataStoreCompletePostParam_isSuccess = do_Bool(conn, DataStoreCompletePostParam_container, tvb, off, 'DataStoreCompletePostParam_isSuccess', 'isSuccess')

return off
end
function do_DataStoreDeleteParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreDeleteParam_container = tree:add(F.DataStoreDeleteParam, tvb(off, 0))
	DataStoreDeleteParam_container:set_text(field_name .. " (DataStoreDeleteParam):")
	off = do_Structure(conn, DataStoreDeleteParam_container, tvb, off, 'DataStoreDeleteParam_Base', 'Base')
off, DataStoreDeleteParam_dataId = do_Uint64(conn, DataStoreDeleteParam_container, tvb, off, 'DataStoreDeleteParam_dataId', 'dataId')
off, DataStoreDeleteParam_updatePassword = do_Uint64(conn, DataStoreDeleteParam_container, tvb, off, 'DataStoreDeleteParam_updatePassword', 'updatePassword')

return off
end
function do_DataStoreChangeMetaParamV1(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreChangeMetaParamV1_container = tree:add(F.DataStoreChangeMetaParamV1, tvb(off, 0))
	DataStoreChangeMetaParamV1_container:set_text(field_name .. " (DataStoreChangeMetaParamV1):")
	off = do_Structure(conn, DataStoreChangeMetaParamV1_container, tvb, off, 'DataStoreChangeMetaParamV1_Base', 'Base')
off, DataStoreChangeMetaParamV1_dataId = do_Uint64(conn, DataStoreChangeMetaParamV1_container, tvb, off, 'DataStoreChangeMetaParamV1_dataId', 'dataId')
off, DataStoreChangeMetaParamV1_modifiesFlag = do_Uint32(conn, DataStoreChangeMetaParamV1_container, tvb, off, 'DataStoreChangeMetaParamV1_modifiesFlag', 'modifiesFlag')
off, DataStoreChangeMetaParamV1_name = do_String(conn, DataStoreChangeMetaParamV1_container, tvb, off, 'DataStoreChangeMetaParamV1_name', 'name')
off = do_DataStorePermission(conn, DataStoreChangeMetaParamV1_container, tvb, off, 'DataStoreChangeMetaParamV1_permission', 'permission')
off = do_DataStorePermission(conn, DataStoreChangeMetaParamV1_container, tvb, off, 'DataStoreChangeMetaParamV1_delPermission', 'delPermission')
off, DataStoreChangeMetaParamV1_period = do_Uint16(conn, DataStoreChangeMetaParamV1_container, tvb, off, 'DataStoreChangeMetaParamV1_period', 'period')
off, DataStoreChangeMetaParamV1_metaBinary = do_qBuffer(conn, DataStoreChangeMetaParamV1_container, tvb, off, 'DataStoreChangeMetaParamV1_metaBinary', 'metaBinary')
local DataStoreChangeMetaParamV1_tags_len = tvb(off, 4):le_uint()
	subDataStoreChangeMetaParamV1_container = DataStoreChangeMetaParamV1_container:add_le(F.DataStoreChangeMetaParamV1_tags_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreChangeMetaParamV1_tags_len do
	off, DataStoreChangeMetaParamV1_tags_item = do_String(conn, subDataStoreChangeMetaParamV1_container, tvb, off, 'DataStoreChangeMetaParamV1_tags_item', 'tags')

	end
	
off, DataStoreChangeMetaParamV1_updatePassword = do_Uint64(conn, DataStoreChangeMetaParamV1_container, tvb, off, 'DataStoreChangeMetaParamV1_updatePassword', 'updatePassword')

return off
end
function do_DataStoreChangeMetaParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreChangeMetaParam_container = tree:add(F.DataStoreChangeMetaParam, tvb(off, 0))
	DataStoreChangeMetaParam_container:set_text(field_name .. " (DataStoreChangeMetaParam):")
	off = do_Structure(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_Base', 'Base')
off, DataStoreChangeMetaParam_dataId = do_Uint64(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_dataId', 'dataId')
off, DataStoreChangeMetaParam_modifiesFlag = do_Uint32(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_modifiesFlag', 'modifiesFlag')
off, DataStoreChangeMetaParam_name = do_String(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_name', 'name')
off = do_DataStorePermission(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_permission', 'permission')
off = do_DataStorePermission(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_delPermission', 'delPermission')
off, DataStoreChangeMetaParam_period = do_Uint16(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_period', 'period')
off, DataStoreChangeMetaParam_metaBinary = do_qBuffer(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_metaBinary', 'metaBinary')
local DataStoreChangeMetaParam_tags_len = tvb(off, 4):le_uint()
	subDataStoreChangeMetaParam_container = DataStoreChangeMetaParam_container:add_le(F.DataStoreChangeMetaParam_tags_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreChangeMetaParam_tags_len do
	off, DataStoreChangeMetaParam_tags_item = do_String(conn, subDataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_tags_item', 'tags')

	end
	
off, DataStoreChangeMetaParam_updatePassword = do_Uint64(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_updatePassword', 'updatePassword')
off, DataStoreChangeMetaParam_referredCnt = do_Uint32(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_referredCnt', 'referredCnt')
off, DataStoreChangeMetaParam_dataType = do_Uint16(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_dataType', 'dataType')
off, DataStoreChangeMetaParam_status = do_Uint8(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_status', 'status')
off = do_DataStoreChangeMetaCompareParam(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_compareParam', 'compareParam')
off = do_DataStorePersistenceTarget(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_persistenceTarget', 'persistenceTarget')

return off
end
function do_DataStoreGetMetaParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreGetMetaParam_container = tree:add(F.DataStoreGetMetaParam, tvb(off, 0))
	DataStoreGetMetaParam_container:set_text(field_name .. " (DataStoreGetMetaParam):")
	off = do_Structure(conn, DataStoreGetMetaParam_container, tvb, off, 'DataStoreGetMetaParam_Base', 'Base')
off, DataStoreGetMetaParam_dataId = do_Uint64(conn, DataStoreGetMetaParam_container, tvb, off, 'DataStoreGetMetaParam_dataId', 'dataId')
off = do_DataStorePersistenceTarget(conn, DataStoreGetMetaParam_container, tvb, off, 'DataStoreGetMetaParam_persistenceTarget', 'persistenceTarget')
off, DataStoreGetMetaParam_resultOption = do_Uint8(conn, DataStoreGetMetaParam_container, tvb, off, 'DataStoreGetMetaParam_resultOption', 'resultOption')
off, DataStoreGetMetaParam_accessPassword = do_Uint64(conn, DataStoreGetMetaParam_container, tvb, off, 'DataStoreGetMetaParam_accessPassword', 'accessPassword')

return off
end
function do_DataStorePrepareUpdateParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStorePrepareUpdateParam_container = tree:add(F.DataStorePrepareUpdateParam, tvb(off, 0))
	DataStorePrepareUpdateParam_container:set_text(field_name .. " (DataStorePrepareUpdateParam):")
	off = do_Structure(conn, DataStorePrepareUpdateParam_container, tvb, off, 'DataStorePrepareUpdateParam_Base', 'Base')
off, DataStorePrepareUpdateParam_dataId = do_Uint64(conn, DataStorePrepareUpdateParam_container, tvb, off, 'DataStorePrepareUpdateParam_dataId', 'dataId')
off, DataStorePrepareUpdateParam_size = do_Uint32(conn, DataStorePrepareUpdateParam_container, tvb, off, 'DataStorePrepareUpdateParam_size', 'size')
off, DataStorePrepareUpdateParam_updatePassword = do_Uint64(conn, DataStorePrepareUpdateParam_container, tvb, off, 'DataStorePrepareUpdateParam_updatePassword', 'updatePassword')
local DataStorePrepareUpdateParam_extraData_len = tvb(off, 4):le_uint()
	subDataStorePrepareUpdateParam_container = DataStorePrepareUpdateParam_container:add_le(F.DataStorePrepareUpdateParam_extraData_len, tvb(off,4))
	off = off + 4
	for i=1,DataStorePrepareUpdateParam_extraData_len do
	off, DataStorePrepareUpdateParam_extraData_item = do_String(conn, subDataStorePrepareUpdateParam_container, tvb, off, 'DataStorePrepareUpdateParam_extraData_item', 'extraData')

	end
	

return off
end
function do_DataStoreReqUpdateInfo(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreReqUpdateInfo_container = tree:add(F.DataStoreReqUpdateInfo, tvb(off, 0))
	DataStoreReqUpdateInfo_container:set_text(field_name .. " (DataStoreReqUpdateInfo):")
	off = do_Structure(conn, DataStoreReqUpdateInfo_container, tvb, off, 'DataStoreReqUpdateInfo_Base', 'Base')
off, DataStoreReqUpdateInfo_version = do_Uint32(conn, DataStoreReqUpdateInfo_container, tvb, off, 'DataStoreReqUpdateInfo_version', 'version')
off, DataStoreReqUpdateInfo_url = do_String(conn, DataStoreReqUpdateInfo_container, tvb, off, 'DataStoreReqUpdateInfo_url', 'url')
local DataStoreReqUpdateInfo_requestHeaders_len = tvb(off, 4):le_uint()
	subDataStoreReqUpdateInfo_container = DataStoreReqUpdateInfo_container:add_le(F.DataStoreReqUpdateInfo_requestHeaders_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreReqUpdateInfo_requestHeaders_len do
	off = do_DataStoreKeyValue(conn, subDataStoreReqUpdateInfo_container, tvb, off, 'DataStoreReqUpdateInfo_requestHeaders_item', 'requestHeaders')

	end
	
local DataStoreReqUpdateInfo_formFields_len = tvb(off, 4):le_uint()
	subDataStoreReqUpdateInfo_container = DataStoreReqUpdateInfo_container:add_le(F.DataStoreReqUpdateInfo_formFields_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreReqUpdateInfo_formFields_len do
	off = do_DataStoreKeyValue(conn, subDataStoreReqUpdateInfo_container, tvb, off, 'DataStoreReqUpdateInfo_formFields_item', 'formFields')

	end
	
off, DataStoreReqUpdateInfo_rootCaCert = do_Buffer(conn, DataStoreReqUpdateInfo_container, tvb, off, 'DataStoreReqUpdateInfo_rootCaCert', 'rootCaCert')

return off
end
function do_DataStoreCompleteUpdateParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreCompleteUpdateParam_container = tree:add(F.DataStoreCompleteUpdateParam, tvb(off, 0))
	DataStoreCompleteUpdateParam_container:set_text(field_name .. " (DataStoreCompleteUpdateParam):")
	off = do_Structure(conn, DataStoreCompleteUpdateParam_container, tvb, off, 'DataStoreCompleteUpdateParam_Base', 'Base')
off, DataStoreCompleteUpdateParam_dataId = do_Uint64(conn, DataStoreCompleteUpdateParam_container, tvb, off, 'DataStoreCompleteUpdateParam_dataId', 'dataId')
off, DataStoreCompleteUpdateParam_version = do_Uint32(conn, DataStoreCompleteUpdateParam_container, tvb, off, 'DataStoreCompleteUpdateParam_version', 'version')
off, DataStoreCompleteUpdateParam_isSuccess = do_Bool(conn, DataStoreCompleteUpdateParam_container, tvb, off, 'DataStoreCompleteUpdateParam_isSuccess', 'isSuccess')

return off
end
function do_DataStoreSearchParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreSearchParam_container = tree:add(F.DataStoreSearchParam, tvb(off, 0))
	DataStoreSearchParam_container:set_text(field_name .. " (DataStoreSearchParam):")
	off = do_Structure(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_Base', 'Base')
off, DataStoreSearchParam_searchTarget = do_Uint8(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_searchTarget', 'searchTarget')
local DataStoreSearchParam_ownerIds_len = tvb(off, 4):le_uint()
	subDataStoreSearchParam_container = DataStoreSearchParam_container:add_le(F.DataStoreSearchParam_ownerIds_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreSearchParam_ownerIds_len do
	off, DataStoreSearchParam_ownerIds_item = do_PID(conn, subDataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_ownerIds_item', 'ownerIds')

	end
	
off, DataStoreSearchParam_ownerType = do_Uint8(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_ownerType', 'ownerType')
local DataStoreSearchParam_destinationIds_len = tvb(off, 4):le_uint()
	subDataStoreSearchParam_container = DataStoreSearchParam_container:add_le(F.DataStoreSearchParam_destinationIds_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreSearchParam_destinationIds_len do
	off, DataStoreSearchParam_destinationIds_item = do_Uint64(conn, subDataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_destinationIds_item', 'destinationIds')

	end
	
off, DataStoreSearchParam_dataType = do_Uint16(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_dataType', 'dataType')
off, DataStoreSearchParam_createdAfter = do_DateTime(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_createdAfter', 'createdAfter')
off, DataStoreSearchParam_createdBefore = do_DateTime(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_createdBefore', 'createdBefore')
off, DataStoreSearchParam_updatedAfter = do_DateTime(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_updatedAfter', 'updatedAfter')
off, DataStoreSearchParam_updatedBefore = do_DateTime(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_updatedBefore', 'updatedBefore')
off, DataStoreSearchParam_referDataId = do_Uint32(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_referDataId', 'referDataId')
local DataStoreSearchParam_tags_len = tvb(off, 4):le_uint()
	subDataStoreSearchParam_container = DataStoreSearchParam_container:add_le(F.DataStoreSearchParam_tags_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreSearchParam_tags_len do
	off, DataStoreSearchParam_tags_item = do_String(conn, subDataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_tags_item', 'tags')

	end
	
off, DataStoreSearchParam_resultOrderColumn = do_Uint8(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_resultOrderColumn', 'resultOrderColumn')
off, DataStoreSearchParam_resultOrder = do_Uint8(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_resultOrder', 'resultOrder')
off = do_ResultRange(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_resultRange', 'resultRange')
off, DataStoreSearchParam_resultOption = do_Uint8(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_resultOption', 'resultOption')
off, DataStoreSearchParam_minimalRatingFrequency = do_Uint32(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_minimalRatingFrequency', 'minimalRatingFrequency')
off, DataStoreSearchParam_useCache = do_Bool(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_useCache', 'useCache')
off, DataStoreSearchParam_totalCountEnabled = do_Bool(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_totalCountEnabled', 'totalCountEnabled')
local DataStoreSearchParam_dataTypes_len = tvb(off, 4):le_uint()
	subDataStoreSearchParam_container = DataStoreSearchParam_container:add_le(F.DataStoreSearchParam_dataTypes_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreSearchParam_dataTypes_len do
	off, DataStoreSearchParam_dataTypes_item = do_Uint16(conn, subDataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_dataTypes_item', 'dataTypes')

	end
	

return off
end
function do_DataStoreSearchResult(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreSearchResult_container = tree:add(F.DataStoreSearchResult, tvb(off, 0))
	DataStoreSearchResult_container:set_text(field_name .. " (DataStoreSearchResult):")
	off = do_Structure(conn, DataStoreSearchResult_container, tvb, off, 'DataStoreSearchResult_Base', 'Base')
off, DataStoreSearchResult_totalCount = do_Uint32(conn, DataStoreSearchResult_container, tvb, off, 'DataStoreSearchResult_totalCount', 'totalCount')
local DataStoreSearchResult_result_len = tvb(off, 4):le_uint()
	subDataStoreSearchResult_container = DataStoreSearchResult_container:add_le(F.DataStoreSearchResult_result_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreSearchResult_result_len do
	off = do_DataStoreMetaInfo(conn, subDataStoreSearchResult_container, tvb, off, 'DataStoreSearchResult_result_item', 'result')

	end
	
off, DataStoreSearchResult_totalCountType = do_Uint8(conn, DataStoreSearchResult_container, tvb, off, 'DataStoreSearchResult_totalCountType', 'totalCountType')

return off
end
function do_DataStoreGetNotificationUrlParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreGetNotificationUrlParam_container = tree:add(F.DataStoreGetNotificationUrlParam, tvb(off, 0))
	DataStoreGetNotificationUrlParam_container:set_text(field_name .. " (DataStoreGetNotificationUrlParam):")
	off = do_Structure(conn, DataStoreGetNotificationUrlParam_container, tvb, off, 'DataStoreGetNotificationUrlParam_Base', 'Base')
off, DataStoreGetNotificationUrlParam_previousUrl = do_String(conn, DataStoreGetNotificationUrlParam_container, tvb, off, 'DataStoreGetNotificationUrlParam_previousUrl', 'previousUrl')

return off
end
function do_DataStoreReqGetNotificationUrlInfo(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreReqGetNotificationUrlInfo_container = tree:add(F.DataStoreReqGetNotificationUrlInfo, tvb(off, 0))
	DataStoreReqGetNotificationUrlInfo_container:set_text(field_name .. " (DataStoreReqGetNotificationUrlInfo):")
	off = do_Structure(conn, DataStoreReqGetNotificationUrlInfo_container, tvb, off, 'DataStoreReqGetNotificationUrlInfo_Base', 'Base')
off, DataStoreReqGetNotificationUrlInfo_url = do_String(conn, DataStoreReqGetNotificationUrlInfo_container, tvb, off, 'DataStoreReqGetNotificationUrlInfo_url', 'url')
off, DataStoreReqGetNotificationUrlInfo_key = do_String(conn, DataStoreReqGetNotificationUrlInfo_container, tvb, off, 'DataStoreReqGetNotificationUrlInfo_key', 'key')
off, DataStoreReqGetNotificationUrlInfo_query = do_String(conn, DataStoreReqGetNotificationUrlInfo_container, tvb, off, 'DataStoreReqGetNotificationUrlInfo_query', 'query')
off, DataStoreReqGetNotificationUrlInfo_rootCaCert = do_Buffer(conn, DataStoreReqGetNotificationUrlInfo_container, tvb, off, 'DataStoreReqGetNotificationUrlInfo_rootCaCert', 'rootCaCert')

return off
end
function do_DataStoreGetNewArrivedNotificationsParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreGetNewArrivedNotificationsParam_container = tree:add(F.DataStoreGetNewArrivedNotificationsParam, tvb(off, 0))
	DataStoreGetNewArrivedNotificationsParam_container:set_text(field_name .. " (DataStoreGetNewArrivedNotificationsParam):")
	off = do_Structure(conn, DataStoreGetNewArrivedNotificationsParam_container, tvb, off, 'DataStoreGetNewArrivedNotificationsParam_Base', 'Base')
off, DataStoreGetNewArrivedNotificationsParam_lastNotificationId = do_Uint64(conn, DataStoreGetNewArrivedNotificationsParam_container, tvb, off, 'DataStoreGetNewArrivedNotificationsParam_lastNotificationId', 'lastNotificationId')
off, DataStoreGetNewArrivedNotificationsParam_limit = do_Uint16(conn, DataStoreGetNewArrivedNotificationsParam_container, tvb, off, 'DataStoreGetNewArrivedNotificationsParam_limit', 'limit')

return off
end
function do_DataStoreNotificationV1(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreNotificationV1_container = tree:add(F.DataStoreNotificationV1, tvb(off, 0))
	DataStoreNotificationV1_container:set_text(field_name .. " (DataStoreNotificationV1):")
	off = do_Structure(conn, DataStoreNotificationV1_container, tvb, off, 'DataStoreNotificationV1_Base', 'Base')
off, DataStoreNotificationV1_notificationId = do_Uint64(conn, DataStoreNotificationV1_container, tvb, off, 'DataStoreNotificationV1_notificationId', 'notificationId')
off, DataStoreNotificationV1_dataId = do_Uint32(conn, DataStoreNotificationV1_container, tvb, off, 'DataStoreNotificationV1_dataId', 'dataId')

return off
end
function do_DataStoreNotification(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreNotification_container = tree:add(F.DataStoreNotification, tvb(off, 0))
	DataStoreNotification_container:set_text(field_name .. " (DataStoreNotification):")
	off = do_Structure(conn, DataStoreNotification_container, tvb, off, 'DataStoreNotification_Base', 'Base')
off, DataStoreNotification_notificationId = do_Uint64(conn, DataStoreNotification_container, tvb, off, 'DataStoreNotification_notificationId', 'notificationId')
off, DataStoreNotification_dataId = do_Uint64(conn, DataStoreNotification_container, tvb, off, 'DataStoreNotification_dataId', 'dataId')

return off
end
function do_DataStoreRateObjectParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreRateObjectParam_container = tree:add(F.DataStoreRateObjectParam, tvb(off, 0))
	DataStoreRateObjectParam_container:set_text(field_name .. " (DataStoreRateObjectParam):")
	off = do_Structure(conn, DataStoreRateObjectParam_container, tvb, off, 'DataStoreRateObjectParam_Base', 'Base')
off, DataStoreRateObjectParam_ratingValue = do_Sint32(conn, DataStoreRateObjectParam_container, tvb, off, 'DataStoreRateObjectParam_ratingValue', 'ratingValue')
off, DataStoreRateObjectParam_accessPassword = do_Uint64(conn, DataStoreRateObjectParam_container, tvb, off, 'DataStoreRateObjectParam_accessPassword', 'accessPassword')

return off
end
function do_DataStoreRatingTarget(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreRatingTarget_container = tree:add(F.DataStoreRatingTarget, tvb(off, 0))
	DataStoreRatingTarget_container:set_text(field_name .. " (DataStoreRatingTarget):")
	off = do_Structure(conn, DataStoreRatingTarget_container, tvb, off, 'DataStoreRatingTarget_Base', 'Base')
off, DataStoreRatingTarget_dataId = do_Uint64(conn, DataStoreRatingTarget_container, tvb, off, 'DataStoreRatingTarget_dataId', 'dataId')
off, DataStoreRatingTarget_slot = do_Sint8(conn, DataStoreRatingTarget_container, tvb, off, 'DataStoreRatingTarget_slot', 'slot')

return off
end
function do_DataStoreGetSpecificMetaParamV1(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreGetSpecificMetaParamV1_container = tree:add(F.DataStoreGetSpecificMetaParamV1, tvb(off, 0))
	DataStoreGetSpecificMetaParamV1_container:set_text(field_name .. " (DataStoreGetSpecificMetaParamV1):")
	off = do_Structure(conn, DataStoreGetSpecificMetaParamV1_container, tvb, off, 'DataStoreGetSpecificMetaParamV1_Base', 'Base')
local DataStoreGetSpecificMetaParamV1_dataIds_len = tvb(off, 4):le_uint()
	subDataStoreGetSpecificMetaParamV1_container = DataStoreGetSpecificMetaParamV1_container:add_le(F.DataStoreGetSpecificMetaParamV1_dataIds_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreGetSpecificMetaParamV1_dataIds_len do
	off, DataStoreGetSpecificMetaParamV1_dataIds_item = do_Uint32(conn, subDataStoreGetSpecificMetaParamV1_container, tvb, off, 'DataStoreGetSpecificMetaParamV1_dataIds_item', 'dataIds')

	end
	

return off
end
function do_DataStoreGetSpecificMetaParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreGetSpecificMetaParam_container = tree:add(F.DataStoreGetSpecificMetaParam, tvb(off, 0))
	DataStoreGetSpecificMetaParam_container:set_text(field_name .. " (DataStoreGetSpecificMetaParam):")
	off = do_Structure(conn, DataStoreGetSpecificMetaParam_container, tvb, off, 'DataStoreGetSpecificMetaParam_Base', 'Base')
local DataStoreGetSpecificMetaParam_dataIds_len = tvb(off, 4):le_uint()
	subDataStoreGetSpecificMetaParam_container = DataStoreGetSpecificMetaParam_container:add_le(F.DataStoreGetSpecificMetaParam_dataIds_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreGetSpecificMetaParam_dataIds_len do
	off, DataStoreGetSpecificMetaParam_dataIds_item = do_Uint64(conn, subDataStoreGetSpecificMetaParam_container, tvb, off, 'DataStoreGetSpecificMetaParam_dataIds_item', 'dataIds')

	end
	

return off
end
function do_DataStoreSpecificMetaInfoV1(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreSpecificMetaInfoV1_container = tree:add(F.DataStoreSpecificMetaInfoV1, tvb(off, 0))
	DataStoreSpecificMetaInfoV1_container:set_text(field_name .. " (DataStoreSpecificMetaInfoV1):")
	off = do_Structure(conn, DataStoreSpecificMetaInfoV1_container, tvb, off, 'DataStoreSpecificMetaInfoV1_Base', 'Base')
off, DataStoreSpecificMetaInfoV1_dataId = do_Uint32(conn, DataStoreSpecificMetaInfoV1_container, tvb, off, 'DataStoreSpecificMetaInfoV1_dataId', 'dataId')
off, DataStoreSpecificMetaInfoV1_ownerId = do_PID(conn, DataStoreSpecificMetaInfoV1_container, tvb, off, 'DataStoreSpecificMetaInfoV1_ownerId', 'ownerId')
off, DataStoreSpecificMetaInfoV1_size = do_Uint32(conn, DataStoreSpecificMetaInfoV1_container, tvb, off, 'DataStoreSpecificMetaInfoV1_size', 'size')
off, DataStoreSpecificMetaInfoV1_dataType = do_Uint16(conn, DataStoreSpecificMetaInfoV1_container, tvb, off, 'DataStoreSpecificMetaInfoV1_dataType', 'dataType')
off, DataStoreSpecificMetaInfoV1_version = do_Uint16(conn, DataStoreSpecificMetaInfoV1_container, tvb, off, 'DataStoreSpecificMetaInfoV1_version', 'version')

return off
end
function do_DataStoreSpecificMetaInfo(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreSpecificMetaInfo_container = tree:add(F.DataStoreSpecificMetaInfo, tvb(off, 0))
	DataStoreSpecificMetaInfo_container:set_text(field_name .. " (DataStoreSpecificMetaInfo):")
	off = do_Structure(conn, DataStoreSpecificMetaInfo_container, tvb, off, 'DataStoreSpecificMetaInfo_Base', 'Base')
off, DataStoreSpecificMetaInfo_dataId = do_Uint64(conn, DataStoreSpecificMetaInfo_container, tvb, off, 'DataStoreSpecificMetaInfo_dataId', 'dataId')
off, DataStoreSpecificMetaInfo_ownerId = do_PID(conn, DataStoreSpecificMetaInfo_container, tvb, off, 'DataStoreSpecificMetaInfo_ownerId', 'ownerId')
off, DataStoreSpecificMetaInfo_size = do_Uint32(conn, DataStoreSpecificMetaInfo_container, tvb, off, 'DataStoreSpecificMetaInfo_size', 'size')
off, DataStoreSpecificMetaInfo_dataType = do_Uint16(conn, DataStoreSpecificMetaInfo_container, tvb, off, 'DataStoreSpecificMetaInfo_dataType', 'dataType')
off, DataStoreSpecificMetaInfo_version = do_Uint32(conn, DataStoreSpecificMetaInfo_container, tvb, off, 'DataStoreSpecificMetaInfo_version', 'version')

return off
end
function do_DataStoreTouchObjectParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreTouchObjectParam_container = tree:add(F.DataStoreTouchObjectParam, tvb(off, 0))
	DataStoreTouchObjectParam_container:set_text(field_name .. " (DataStoreTouchObjectParam):")
	off = do_Structure(conn, DataStoreTouchObjectParam_container, tvb, off, 'DataStoreTouchObjectParam_Base', 'Base')
off, DataStoreTouchObjectParam_dataId = do_Uint64(conn, DataStoreTouchObjectParam_container, tvb, off, 'DataStoreTouchObjectParam_dataId', 'dataId')
off, DataStoreTouchObjectParam_lockId = do_Uint32(conn, DataStoreTouchObjectParam_container, tvb, off, 'DataStoreTouchObjectParam_lockId', 'lockId')
off, DataStoreTouchObjectParam_accessPassword = do_Uint64(conn, DataStoreTouchObjectParam_container, tvb, off, 'DataStoreTouchObjectParam_accessPassword', 'accessPassword')

return off
end
function do_DataStoreRatingLog(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreRatingLog_container = tree:add(F.DataStoreRatingLog, tvb(off, 0))
	DataStoreRatingLog_container:set_text(field_name .. " (DataStoreRatingLog):")
	off = do_Structure(conn, DataStoreRatingLog_container, tvb, off, 'DataStoreRatingLog_Base', 'Base')
off, DataStoreRatingLog_isRated = do_Bool(conn, DataStoreRatingLog_container, tvb, off, 'DataStoreRatingLog_isRated', 'isRated')
off, DataStoreRatingLog_pid = do_PID(conn, DataStoreRatingLog_container, tvb, off, 'DataStoreRatingLog_pid', 'pid')
off, DataStoreRatingLog_ratingValue = do_Sint32(conn, DataStoreRatingLog_container, tvb, off, 'DataStoreRatingLog_ratingValue', 'ratingValue')
off, DataStoreRatingLog_lockExpirationTime = do_DateTime(conn, DataStoreRatingLog_container, tvb, off, 'DataStoreRatingLog_lockExpirationTime', 'lockExpirationTime')

return off
end
function do_DataStorePersistenceInfo(conn, tree, tvb, off, field_unique_name, field_name)
local DataStorePersistenceInfo_container = tree:add(F.DataStorePersistenceInfo, tvb(off, 0))
	DataStorePersistenceInfo_container:set_text(field_name .. " (DataStorePersistenceInfo):")
	off = do_Structure(conn, DataStorePersistenceInfo_container, tvb, off, 'DataStorePersistenceInfo_Base', 'Base')
off, DataStorePersistenceInfo_ownerId = do_PID(conn, DataStorePersistenceInfo_container, tvb, off, 'DataStorePersistenceInfo_ownerId', 'ownerId')
off, DataStorePersistenceInfo_persistenceSlotId = do_Uint16(conn, DataStorePersistenceInfo_container, tvb, off, 'DataStorePersistenceInfo_persistenceSlotId', 'persistenceSlotId')
off, DataStorePersistenceInfo_dataId = do_Uint64(conn, DataStorePersistenceInfo_container, tvb, off, 'DataStorePersistenceInfo_dataId', 'dataId')

return off
end
function do_DataStorePasswordInfo(conn, tree, tvb, off, field_unique_name, field_name)
local DataStorePasswordInfo_container = tree:add(F.DataStorePasswordInfo, tvb(off, 0))
	DataStorePasswordInfo_container:set_text(field_name .. " (DataStorePasswordInfo):")
	off = do_Structure(conn, DataStorePasswordInfo_container, tvb, off, 'DataStorePasswordInfo_Base', 'Base')
off, DataStorePasswordInfo_dataId = do_Uint64(conn, DataStorePasswordInfo_container, tvb, off, 'DataStorePasswordInfo_dataId', 'dataId')
off, DataStorePasswordInfo_accessPassword = do_Uint64(conn, DataStorePasswordInfo_container, tvb, off, 'DataStorePasswordInfo_accessPassword', 'accessPassword')
off, DataStorePasswordInfo_updatePassword = do_Uint64(conn, DataStorePasswordInfo_container, tvb, off, 'DataStorePasswordInfo_updatePassword', 'updatePassword')

return off
end
function do_UniqueIdInfo(conn, tree, tvb, off, field_unique_name, field_name)
local UniqueIdInfo_container = tree:add(F.UniqueIdInfo, tvb(off, 0))
	UniqueIdInfo_container:set_text(field_name .. " (UniqueIdInfo):")
	off = do_Structure(conn, UniqueIdInfo_container, tvb, off, 'UniqueIdInfo_Base', 'Base')
off, UniqueIdInfo_nexUniqueId = do_Uint64(conn, UniqueIdInfo_container, tvb, off, 'UniqueIdInfo_nexUniqueId', 'nexUniqueId')
off, UniqueIdInfo_nexUniqueIdPassword = do_Uint64(conn, UniqueIdInfo_container, tvb, off, 'UniqueIdInfo_nexUniqueIdPassword', 'nexUniqueIdPassword')

return off
end
function do_UserContent(conn, tree, tvb, off, field_unique_name, field_name)
local UserContent_container = tree:add(F.UserContent, tvb(off, 0))
	UserContent_container:set_text(field_name .. " (UserContent):")
	off = do_Structure(conn, UserContent_container, tvb, off, 'UserContent_Base', 'Base')
off = do_UserContentKey(conn, UserContent_container, tvb, off, 'UserContent_m_key', 'm_key')
off, UserContent_m_pid = do_Uint32(conn, UserContent_container, tvb, off, 'UserContent_m_pid', 'm_pid')
local UserContent_m_properties_len = tvb(off, 4):le_uint()
	subUserContent_container = UserContent_container:add_le(F.UserContent_m_properties_len, tvb(off,4))
	off = off + 4
	for i=1,UserContent_m_properties_len do
	off = do_ContentProperty(conn, subUserContent_container, tvb, off, 'UserContent_m_properties_item', 'm_properties')

	end
	

return off
end
function do_UserStorageQuery(conn, tree, tvb, off, field_unique_name, field_name)
local UserStorageQuery_container = tree:add(F.UserStorageQuery, tvb(off, 0))
	UserStorageQuery_container:set_text(field_name .. " (UserStorageQuery):")
	off = do_Structure(conn, UserStorageQuery_container, tvb, off, 'UserStorageQuery_Base', 'Base')
off, UserStorageQuery_m_typeID = do_Uint32(conn, UserStorageQuery_container, tvb, off, 'UserStorageQuery_m_typeID', 'm_typeID')
off, UserStorageQuery_m_queryID = do_Uint32(conn, UserStorageQuery_container, tvb, off, 'UserStorageQuery_m_queryID', 'm_queryID')
off = do_ResultRange(conn, UserStorageQuery_container, tvb, off, 'UserStorageQuery_m_resultRange', 'm_resultRange')
local UserStorageQuery_m_parameters_len = tvb(off, 4):le_uint()
	subUserStorageQuery_container = UserStorageQuery_container:add_le(F.UserStorageQuery_m_parameters_len, tvb(off,4))
	off = off + 4
	for i=1,UserStorageQuery_m_parameters_len do
	off = do_ContentProperty(conn, subUserStorageQuery_container, tvb, off, 'UserStorageQuery_m_parameters_item', 'm_parameters')

	end
	

return off
end
function do_UserSlotCount(conn, tree, tvb, off, field_unique_name, field_name)
local UserSlotCount_container = tree:add(F.UserSlotCount, tvb(off, 0))
	UserSlotCount_container:set_text(field_name .. " (UserSlotCount):")
	off = do_Structure(conn, UserSlotCount_container, tvb, off, 'UserSlotCount_Base', 'Base')
off, UserSlotCount_m_pid = do_Uint32(conn, UserSlotCount_container, tvb, off, 'UserSlotCount_m_pid', 'm_pid')
off, UserSlotCount_m_typeID = do_Uint32(conn, UserSlotCount_container, tvb, off, 'UserSlotCount_m_typeID', 'm_typeID')
off, UserSlotCount_m_usedSlots = do_Uint32(conn, UserSlotCount_container, tvb, off, 'UserSlotCount_m_usedSlots', 'm_usedSlots')
off, UserSlotCount_m_totalSlots = do_Uint32(conn, UserSlotCount_container, tvb, off, 'UserSlotCount_m_totalSlots', 'm_totalSlots')

return off
end
function do_UserContentURL(conn, tree, tvb, off, field_unique_name, field_name)
local UserContentURL_container = tree:add(F.UserContentURL, tvb(off, 0))
	UserContentURL_container:set_text(field_name .. " (UserContentURL):")
	off = do_Structure(conn, UserContentURL_container, tvb, off, 'UserContentURL_Base', 'Base')
off, UserContentURL_m_protocol = do_String(conn, UserContentURL_container, tvb, off, 'UserContentURL_m_protocol', 'm_protocol')
off, UserContentURL_m_host = do_String(conn, UserContentURL_container, tvb, off, 'UserContentURL_m_host', 'm_host')
off, UserContentURL_m_path = do_String(conn, UserContentURL_container, tvb, off, 'UserContentURL_m_path', 'm_path')

return off
end
function do_WeightedTag(conn, tree, tvb, off, field_unique_name, field_name)
local WeightedTag_container = tree:add(F.WeightedTag, tvb(off, 0))
	WeightedTag_container:set_text(field_name .. " (WeightedTag):")
	off = do_Structure(conn, WeightedTag_container, tvb, off, 'WeightedTag_Base', 'Base')
off, WeightedTag_m_id = do_Uint32(conn, WeightedTag_container, tvb, off, 'WeightedTag_m_id', 'm_id')
off, WeightedTag_m_numberOfOccurences = do_Uint32(conn, WeightedTag_container, tvb, off, 'WeightedTag_m_numberOfOccurences', 'm_numberOfOccurences')

return off
end
function do_RankingOrderParam(conn, tree, tvb, off, field_unique_name, field_name)
local RankingOrderParam_container = tree:add(F.RankingOrderParam, tvb(off, 0))
	RankingOrderParam_container:set_text(field_name .. " (RankingOrderParam):")
	off = do_Structure(conn, RankingOrderParam_container, tvb, off, 'RankingOrderParam_Base', 'Base')
off, RankingOrderParam_orderCalculation = do_Uint8(conn, RankingOrderParam_container, tvb, off, 'RankingOrderParam_orderCalculation', 'orderCalculation')
off, RankingOrderParam_groupIndex = do_Uint8(conn, RankingOrderParam_container, tvb, off, 'RankingOrderParam_groupIndex', 'groupIndex')
off, RankingOrderParam_groupNum = do_Uint8(conn, RankingOrderParam_container, tvb, off, 'RankingOrderParam_groupNum', 'groupNum')
off, RankingOrderParam_timeScope = do_Uint8(conn, RankingOrderParam_container, tvb, off, 'RankingOrderParam_timeScope', 'timeScope')
off, RankingOrderParam_offset = do_Uint32(conn, RankingOrderParam_container, tvb, off, 'RankingOrderParam_offset', 'offset')
off, RankingOrderParam_length = do_Uint8(conn, RankingOrderParam_container, tvb, off, 'RankingOrderParam_length', 'length')

return off
end
function do_RankingResult(conn, tree, tvb, off, field_unique_name, field_name)
local RankingResult_container = tree:add(F.RankingResult, tvb(off, 0))
	RankingResult_container:set_text(field_name .. " (RankingResult):")
	off = do_Structure(conn, RankingResult_container, tvb, off, 'RankingResult_Base', 'Base')
local RankingResult_rankDataList_len = tvb(off, 4):le_uint()
	subRankingResult_container = RankingResult_container:add_le(F.RankingResult_rankDataList_len, tvb(off,4))
	off = off + 4
	for i=1,RankingResult_rankDataList_len do
	off = do_RankingRankData(conn, subRankingResult_container, tvb, off, 'RankingResult_rankDataList_item', 'rankDataList')

	end
	
off, RankingResult_totalCount = do_Uint32(conn, RankingResult_container, tvb, off, 'RankingResult_totalCount', 'totalCount')
off, RankingResult_sinceTime = do_DateTime(conn, RankingResult_container, tvb, off, 'RankingResult_sinceTime', 'sinceTime')

return off
end
function do_RankingCachedResult(conn, tree, tvb, off, field_unique_name, field_name)
local RankingCachedResult_container = tree:add(F.RankingCachedResult, tvb(off, 0))
	RankingCachedResult_container:set_text(field_name .. " (RankingCachedResult):")
	off, RankingCachedResult_createdTime = do_DateTime(conn, RankingCachedResult_container, tvb, off, 'RankingCachedResult_createdTime', 'createdTime')
off, RankingCachedResult_expiredTime = do_DateTime(conn, RankingCachedResult_container, tvb, off, 'RankingCachedResult_expiredTime', 'expiredTime')
off, RankingCachedResult_maxLength = do_Uint8(conn, RankingCachedResult_container, tvb, off, 'RankingCachedResult_maxLength', 'maxLength')

return off
end
function do_RankingStats(conn, tree, tvb, off, field_unique_name, field_name)
local RankingStats_container = tree:add(F.RankingStats, tvb(off, 0))
	RankingStats_container:set_text(field_name .. " (RankingStats):")
	off = do_Structure(conn, RankingStats_container, tvb, off, 'RankingStats_Base', 'Base')
local RankingStats_statsList_len = tvb(off, 4):le_uint()
	subRankingStats_container = RankingStats_container:add_le(F.RankingStats_statsList_len, tvb(off,4))
	off = off + 4
	for i=1,RankingStats_statsList_len do
	off, RankingStats_statsList_item = do_Double(conn, subRankingStats_container, tvb, off, 'RankingStats_statsList_item', 'statsList')

	end
	

return off
end
function do_RankingScoreData(conn, tree, tvb, off, field_unique_name, field_name)
local RankingScoreData_container = tree:add(F.RankingScoreData, tvb(off, 0))
	RankingScoreData_container:set_text(field_name .. " (RankingScoreData):")
	off = do_Structure(conn, RankingScoreData_container, tvb, off, 'RankingScoreData_Base', 'Base')
off, RankingScoreData_category = do_Uint32(conn, RankingScoreData_container, tvb, off, 'RankingScoreData_category', 'category')
off, RankingScoreData_score = do_Uint32(conn, RankingScoreData_container, tvb, off, 'RankingScoreData_score', 'score')
off, RankingScoreData_orderBy = do_Uint8(conn, RankingScoreData_container, tvb, off, 'RankingScoreData_orderBy', 'orderBy')
off, RankingScoreData_updateMode = do_Uint8(conn, RankingScoreData_container, tvb, off, 'RankingScoreData_updateMode', 'updateMode')
local RankingScoreData_groups_len = tvb(off, 4):le_uint()
	subRankingScoreData_container = RankingScoreData_container:add_le(F.RankingScoreData_groups_len, tvb(off,4))
	off = off + 4
	for i=1,RankingScoreData_groups_len do
	off, RankingScoreData_groups_item = do_Uint8(conn, subRankingScoreData_container, tvb, off, 'RankingScoreData_groups_item', 'groups')

	end
	
off, RankingScoreData_param = do_Uint64(conn, RankingScoreData_container, tvb, off, 'RankingScoreData_param', 'param')

return off
end
function do_RankingChangeAttributesParam(conn, tree, tvb, off, field_unique_name, field_name)
local RankingChangeAttributesParam_container = tree:add(F.RankingChangeAttributesParam, tvb(off, 0))
	RankingChangeAttributesParam_container:set_text(field_name .. " (RankingChangeAttributesParam):")
	off = do_Structure(conn, RankingChangeAttributesParam_container, tvb, off, 'RankingChangeAttributesParam_Base', 'Base')
off, RankingChangeAttributesParam_modificationFlag = do_Uint8(conn, RankingChangeAttributesParam_container, tvb, off, 'RankingChangeAttributesParam_modificationFlag', 'modificationFlag')
local RankingChangeAttributesParam_groups_len = tvb(off, 4):le_uint()
	subRankingChangeAttributesParam_container = RankingChangeAttributesParam_container:add_le(F.RankingChangeAttributesParam_groups_len, tvb(off,4))
	off = off + 4
	for i=1,RankingChangeAttributesParam_groups_len do
	off, RankingChangeAttributesParam_groups_item = do_Uint8(conn, subRankingChangeAttributesParam_container, tvb, off, 'RankingChangeAttributesParam_groups_item', 'groups')

	end
	
off, RankingChangeAttributesParam_param = do_Uint64(conn, RankingChangeAttributesParam_container, tvb, off, 'RankingChangeAttributesParam_param', 'param')

return off
end
function do_TimedNotification(conn, tree, tvb, off, field_unique_name, field_name)
local TimedNotification_container = tree:add(F.TimedNotification, tvb(off, 0))
	TimedNotification_container:set_text(field_name .. " (TimedNotification):")
	off = do_Structure(conn, TimedNotification_container, tvb, off, 'TimedNotification_Base', 'Base')
off, TimedNotification_timestamp = do_DateTime(conn, TimedNotification_container, tvb, off, 'TimedNotification_timestamp', 'timestamp')
off = do_NotificationEvent(conn, TimedNotification_container, tvb, off, 'TimedNotification_Notification', 'Notification')

return off
end
function do_FriendUserParam(conn, tree, tvb, off, field_unique_name, field_name)
local FriendUserParam_container = tree:add(F.FriendUserParam, tvb(off, 0))
	FriendUserParam_container:set_text(field_name .. " (FriendUserParam):")
	off = do_Structure(conn, FriendUserParam_container, tvb, off, 'FriendUserParam_Base', 'Base')
off, FriendUserParam_name = do_String(conn, FriendUserParam_container, tvb, off, 'FriendUserParam_name', 'name')

return off
end
function do_FriendUserInfo(conn, tree, tvb, off, field_unique_name, field_name)
local FriendUserInfo_container = tree:add(F.FriendUserInfo, tvb(off, 0))
	FriendUserInfo_container:set_text(field_name .. " (FriendUserInfo):")
	off = do_Structure(conn, FriendUserInfo_container, tvb, off, 'FriendUserInfo_Base', 'Base')
off, FriendUserInfo_pid = do_Uint64(conn, FriendUserInfo_container, tvb, off, 'FriendUserInfo_pid', 'pid')
off, FriendUserInfo_name = do_String(conn, FriendUserInfo_container, tvb, off, 'FriendUserInfo_name', 'name')
off, FriendUserInfo_presence = do_Uint32(conn, FriendUserInfo_container, tvb, off, 'FriendUserInfo_presence', 'presence')

return off
end
function do_FestivalResult(conn, tree, tvb, off, field_unique_name, field_name)
local FestivalResult_container = tree:add(F.FestivalResult, tvb(off, 0))
	FestivalResult_container:set_text(field_name .. " (FestivalResult):")
	off = do_Structure(conn, FestivalResult_container, tvb, off, 'FestivalResult_Base', 'Base')
off, FestivalResult_festivalId = do_Uint32(conn, FestivalResult_container, tvb, off, 'FestivalResult_festivalId', 'festivalId')
off, FestivalResult_numParticipants = do_Uint32(conn, FestivalResult_container, tvb, off, 'FestivalResult_numParticipants', 'numParticipants')
local FestivalResult_teamParticipants_len = tvb(off, 4):le_uint()
	subFestivalResult_container = FestivalResult_container:add_le(F.FestivalResult_teamParticipants_len, tvb(off,4))
	off = off + 4
	for i=1,FestivalResult_teamParticipants_len do
	off, FestivalResult_teamParticipants_item = do_Uint32(conn, subFestivalResult_container, tvb, off, 'FestivalResult_teamParticipants_item', 'teamParticipants')

	end
	
local FestivalResult_teamScores_len = tvb(off, 4):le_uint()
	subFestivalResult_container = FestivalResult_container:add_le(F.FestivalResult_teamScores_len, tvb(off,4))
	off = off + 4
	for i=1,FestivalResult_teamScores_len do
	off, FestivalResult_teamScores_item = do_Uint32(conn, subFestivalResult_container, tvb, off, 'FestivalResult_teamScores_item', 'teamScores')

	end
	
off, FestivalResult_updatedTime = do_DateTime(conn, FestivalResult_container, tvb, off, 'FestivalResult_updatedTime', 'updatedTime')

return off
end
function do_FestivalUploadScoreParam(conn, tree, tvb, off, field_unique_name, field_name)
local FestivalUploadScoreParam_container = tree:add(F.FestivalUploadScoreParam, tvb(off, 0))
	FestivalUploadScoreParam_container:set_text(field_name .. " (FestivalUploadScoreParam):")
	off = do_Structure(conn, FestivalUploadScoreParam_container, tvb, off, 'FestivalUploadScoreParam_Base', 'Base')
off, FestivalUploadScoreParam_uniqueId = do_Uint64(conn, FestivalUploadScoreParam_container, tvb, off, 'FestivalUploadScoreParam_uniqueId', 'uniqueId')
off, FestivalUploadScoreParam_region = do_Uint8(conn, FestivalUploadScoreParam_container, tvb, off, 'FestivalUploadScoreParam_region', 'region')
off, FestivalUploadScoreParam_festivalId = do_Uint32(conn, FestivalUploadScoreParam_container, tvb, off, 'FestivalUploadScoreParam_festivalId', 'festivalId')
off, FestivalUploadScoreParam_teamId = do_Uint8(conn, FestivalUploadScoreParam_container, tvb, off, 'FestivalUploadScoreParam_teamId', 'teamId')
off, FestivalUploadScoreParam_score = do_Uint32(conn, FestivalUploadScoreParam_container, tvb, off, 'FestivalUploadScoreParam_score', 'score')
off, FestivalUploadScoreParam_battleGatheringId = do_Uint32(conn, FestivalUploadScoreParam_container, tvb, off, 'FestivalUploadScoreParam_battleGatheringId', 'battleGatheringId')
off, FestivalUploadScoreParam_battleResult = do_Uint32(conn, FestivalUploadScoreParam_container, tvb, off, 'FestivalUploadScoreParam_battleResult', 'battleResult')
off, FestivalUploadScoreParam_applicationBuffer = do_qBuffer(conn, FestivalUploadScoreParam_container, tvb, off, 'FestivalUploadScoreParam_applicationBuffer', 'applicationBuffer')

return off
end
function do_FestivalUploadVoteParam(conn, tree, tvb, off, field_unique_name, field_name)
local FestivalUploadVoteParam_container = tree:add(F.FestivalUploadVoteParam, tvb(off, 0))
	FestivalUploadVoteParam_container:set_text(field_name .. " (FestivalUploadVoteParam):")
	off = do_Structure(conn, FestivalUploadVoteParam_container, tvb, off, 'FestivalUploadVoteParam_Base', 'Base')
off, FestivalUploadVoteParam_festivalId = do_Uint32(conn, FestivalUploadVoteParam_container, tvb, off, 'FestivalUploadVoteParam_festivalId', 'festivalId')
off, FestivalUploadVoteParam_themeId = do_Uint8(conn, FestivalUploadVoteParam_container, tvb, off, 'FestivalUploadVoteParam_themeId', 'themeId')

return off
end
function do_LeagueResult(conn, tree, tvb, off, field_unique_name, field_name)
local LeagueResult_container = tree:add(F.LeagueResult, tvb(off, 0))
	LeagueResult_container:set_text(field_name .. " (LeagueResult):")
	off = do_Structure(conn, LeagueResult_container, tvb, off, 'LeagueResult_Base', 'Base')
off = do_LeaguePointInfo(conn, LeagueResult_container, tvb, off, 'LeagueResult_leaguePointInfo', 'leaguePointInfo')
off, LeagueResult_status = do_Uint8(conn, LeagueResult_container, tvb, off, 'LeagueResult_status', 'status')
off, LeagueResult_specificRank = do_Uint32(conn, LeagueResult_container, tvb, off, 'LeagueResult_specificRank', 'specificRank')
off, LeagueResult_rankRatio = do_Uint8(conn, LeagueResult_container, tvb, off, 'LeagueResult_rankRatio', 'rankRatio')
off, LeagueResult_tagNum = do_Uint32(conn, LeagueResult_container, tvb, off, 'LeagueResult_tagNum', 'tagNum')
off, LeagueResult_matchCount = do_Uint32(conn, LeagueResult_container, tvb, off, 'LeagueResult_matchCount', 'matchCount')

return off
end
function do_response(conn, tree, tvb, off, field_unique_name, field_name)
local response_container = tree:add(F.response, tvb(off, 0))
	response_container:set_text(field_name .. " (response):")
	local response_Miis_len = tvb(off, 4):le_uint()
	subresponse_container = response_container:add_le(F.response_Miis_len, tvb(off,4))
	off = off + 4
	for i=1,response_Miis_len do
	off = do_FriendMii(conn, subresponse_container, tvb, off, 'response_Miis_item', 'Miis')

	end
	

return off
end
function do_FriendMiiList(conn, tree, tvb, off, field_unique_name, field_name)
local FriendMiiList_container = tree:add(F.FriendMiiList, tvb(off, 0))
	FriendMiiList_container:set_text(field_name .. " (FriendMiiList):")
	off, FriendMiiList_Unknown = do_Uint32(conn, FriendMiiList_container, tvb, off, 'FriendMiiList_Unknown', 'Unknown')
off = do_MiiList(conn, FriendMiiList_container, tvb, off, 'FriendMiiList_Mii_list', 'Mii_list')
off, FriendMiiList_Unknown2 = do_DateTime(conn, FriendMiiList_container, tvb, off, 'FriendMiiList_Unknown2', 'Unknown2')

return off
end
function do_FriendMiiRequest(conn, tree, tvb, off, field_unique_name, field_name)
local FriendMiiRequest_container = tree:add(F.FriendMiiRequest, tvb(off, 0))
	FriendMiiRequest_container:set_text(field_name .. " (FriendMiiRequest):")
	off, FriendMiiRequest_Unknown = do_Uint32(conn, FriendMiiRequest_container, tvb, off, 'FriendMiiRequest_Unknown', 'Unknown')
off, FriendMiiRequest_Unknown2 = do_DateTime(conn, FriendMiiRequest_container, tvb, off, 'FriendMiiRequest_Unknown2', 'Unknown2')

return off
end
function do_FriendPersistentInfo(conn, tree, tvb, off, field_unique_name, field_name)
local FriendPersistentInfo_container = tree:add(F.FriendPersistentInfo, tvb(off, 0))
	FriendPersistentInfo_container:set_text(field_name .. " (FriendPersistentInfo):")
	off, FriendPersistentInfo_User_id = do_PID(conn, FriendPersistentInfo_container, tvb, off, 'FriendPersistentInfo_User_id', 'User_id')
off, FriendPersistentInfo_Region = do_Uint8(conn, FriendPersistentInfo_container, tvb, off, 'FriendPersistentInfo_Region', 'Region')
off, FriendPersistentInfo_Country = do_Uint8(conn, FriendPersistentInfo_container, tvb, off, 'FriendPersistentInfo_Country', 'Country')
off, FriendPersistentInfo_Area = do_Uint8(conn, FriendPersistentInfo_container, tvb, off, 'FriendPersistentInfo_Area', 'Area')
off, FriendPersistentInfo_Language = do_Uint8(conn, FriendPersistentInfo_container, tvb, off, 'FriendPersistentInfo_Language', 'Language')
off, FriendPersistentInfo_Platform = do_Uint8(conn, FriendPersistentInfo_container, tvb, off, 'FriendPersistentInfo_Platform', 'Platform')
off = do_GameKey(conn, FriendPersistentInfo_container, tvb, off, 'FriendPersistentInfo_Game_key', 'Game_key')
off, FriendPersistentInfo_Message = do_String(conn, FriendPersistentInfo_container, tvb, off, 'FriendPersistentInfo_Message', 'Message')
off, FriendPersistentInfo_Message_updated_at = do_DateTime(conn, FriendPersistentInfo_container, tvb, off, 'FriendPersistentInfo_Message_updated_at', 'Message_updated_at')
off, FriendPersistentInfo_Friended_at = do_DateTime(conn, FriendPersistentInfo_container, tvb, off, 'FriendPersistentInfo_Friended_at', 'Friended_at')
off, FriendPersistentInfo_Unknown = do_DateTime(conn, FriendPersistentInfo_container, tvb, off, 'FriendPersistentInfo_Unknown', 'Unknown')

return off
end
function do_FriendPicture(conn, tree, tvb, off, field_unique_name, field_name)
local FriendPicture_container = tree:add(F.FriendPicture, tvb(off, 0))
	FriendPicture_container:set_text(field_name .. " (FriendPicture):")
	off, FriendPicture_Unknown = do_Uint32(conn, FriendPicture_container, tvb, off, 'FriendPicture_Unknown', 'Unknown')
off, FriendPicture_Data = do_Buffer(conn, FriendPicture_container, tvb, off, 'FriendPicture_Data', 'Data')
off, FriendPicture_Date_time = do_DateTime(conn, FriendPicture_container, tvb, off, 'FriendPicture_Date_time', 'Date_time')

return off
end
function do_FriendPresence(conn, tree, tvb, off, field_unique_name, field_name)
local FriendPresence_container = tree:add(F.FriendPresence, tvb(off, 0))
	FriendPresence_container:set_text(field_name .. " (FriendPresence):")
	off, FriendPresence_Unknown = do_Uint32(conn, FriendPresence_container, tvb, off, 'FriendPresence_Unknown', 'Unknown')
off = do_NintendoPresence(conn, FriendPresence_container, tvb, off, 'FriendPresence_Nintendo_presence', 'Nintendo_presence')

return off
end
function do_FriendRelationship(conn, tree, tvb, off, field_unique_name, field_name)
local FriendRelationship_container = tree:add(F.FriendRelationship, tvb(off, 0))
	FriendRelationship_container:set_text(field_name .. " (FriendRelationship):")
	off, FriendRelationship_Unknown = do_Uint32(conn, FriendRelationship_container, tvb, off, 'FriendRelationship_Unknown', 'Unknown')
off, FriendRelationship_Unknown2 = do_Uint64(conn, FriendRelationship_container, tvb, off, 'FriendRelationship_Unknown2', 'Unknown2')
off, FriendRelationship_Unknown3 = do_Uint8(conn, FriendRelationship_container, tvb, off, 'FriendRelationship_Unknown3', 'Unknown3')

return off
end
function do_MyProfile(conn, tree, tvb, off, field_unique_name, field_name)
local MyProfile_container = tree:add(F.MyProfile, tvb(off, 0))
	MyProfile_container:set_text(field_name .. " (MyProfile):")
	off, MyProfile_Region = do_Uint8(conn, MyProfile_container, tvb, off, 'MyProfile_Region', 'Region')
off, MyProfile_Country = do_Uint8(conn, MyProfile_container, tvb, off, 'MyProfile_Country', 'Country')
off, MyProfile_Area = do_Uint8(conn, MyProfile_container, tvb, off, 'MyProfile_Area', 'Area')
off, MyProfile_Language = do_Uint8(conn, MyProfile_container, tvb, off, 'MyProfile_Language', 'Language')
off, MyProfile_Platform = do_Uint8(conn, MyProfile_container, tvb, off, 'MyProfile_Platform', 'Platform')
off, MyProfile_Unknown = do_Uint64(conn, MyProfile_container, tvb, off, 'MyProfile_Unknown', 'Unknown')
off, MyProfile_Unknown2 = do_String(conn, MyProfile_container, tvb, off, 'MyProfile_Unknown2', 'Unknown2')
off, MyProfile_Unknown3 = do_String(conn, MyProfile_container, tvb, off, 'MyProfile_Unknown3', 'Unknown3')

return off
end
function do_PlayedGame(conn, tree, tvb, off, field_unique_name, field_name)
local PlayedGame_container = tree:add(F.PlayedGame, tvb(off, 0))
	PlayedGame_container:set_text(field_name .. " (PlayedGame):")
	off = do_GameKey(conn, PlayedGame_container, tvb, off, 'PlayedGame_Game_key', 'Game_key')
off, PlayedGame_Date_time = do_DateTime(conn, PlayedGame_container, tvb, off, 'PlayedGame_Date_time', 'Date_time')

return off
end
function do_ConnectionData(conn, tree, tvb, off, field_unique_name, field_name)
local ConnectionData_container = tree:add(F.ConnectionData, tvb(off, 0))
	ConnectionData_container:set_text(field_name .. " (ConnectionData):")
	off = do_Structure(conn, ConnectionData_container, tvb, off, 'ConnectionData_Base', 'Base')
off, ConnectionData_m_StationUrl = do_StationURL(conn, ConnectionData_container, tvb, off, 'ConnectionData_m_StationUrl', 'm_StationUrl')
off, ConnectionData_m_ConnectionID = do_Uint32(conn, ConnectionData_container, tvb, off, 'ConnectionData_m_ConnectionID', 'm_ConnectionID')

return off
end
function do_NintendoLoginData___AccountExtraInfo(conn, tree, tvb, off, field_unique_name, field_name)
local NintendoLoginData___AccountExtraInfo_container = tree:add(F.NintendoLoginData___AccountExtraInfo, tvb(off, 0))
	NintendoLoginData___AccountExtraInfo_container:set_text(field_name .. " (NintendoLoginData___AccountExtraInfo):")
	off, NintendoLoginData___AccountExtraInfo_Token_received_from_the_account_server = do_String(conn, NintendoLoginData___AccountExtraInfo_container, tvb, off, 'NintendoLoginData___AccountExtraInfo_Token_received_from_the_account_server', 'Token_received_from_the_account_server')

return off
end
function do_AuthenticationInfo(conn, tree, tvb, off, field_unique_name, field_name)
local AuthenticationInfo_container = tree:add(F.AuthenticationInfo, tvb(off, 0))
	AuthenticationInfo_container:set_text(field_name .. " (AuthenticationInfo):")
	off = do_DataHeader(conn, AuthenticationInfo_container, tvb, off, 'AuthenticationInfo_Base2', 'Base2')
off = do_Structure(conn, AuthenticationInfo_container, tvb, off, 'AuthenticationInfo_Base', 'Base')
off, AuthenticationInfo_m_authToken = do_String(conn, AuthenticationInfo_container, tvb, off, 'AuthenticationInfo_m_authToken', 'm_authToken')
off, AuthenticationInfo_m_ngsVersion = do_Uint32(conn, AuthenticationInfo_container, tvb, off, 'AuthenticationInfo_m_ngsVersion', 'm_ngsVersion')
off, AuthenticationInfo_m_authTokenType = do_Uint8(conn, AuthenticationInfo_container, tvb, off, 'AuthenticationInfo_m_authTokenType', 'm_authTokenType')
off, AuthenticationInfo_m_serverVersion = do_Uint32(conn, AuthenticationInfo_container, tvb, off, 'AuthenticationInfo_m_serverVersion', 'm_serverVersion')

return off
end
function do_ValidateAndRequestTicketParam(conn, tree, tvb, off, field_unique_name, field_name)
local ValidateAndRequestTicketParam_container = tree:add(F.ValidateAndRequestTicketParam, tvb(off, 0))
	ValidateAndRequestTicketParam_container:set_text(field_name .. " (ValidateAndRequestTicketParam):")
	off = do_Structure(conn, ValidateAndRequestTicketParam_container, tvb, off, 'ValidateAndRequestTicketParam_Base', 'Base')
off, ValidateAndRequestTicketParam_platformType = do_Uint32(conn, ValidateAndRequestTicketParam_container, tvb, off, 'ValidateAndRequestTicketParam_platformType', 'platformType')
off, ValidateAndRequestTicketParam_userName = do_String(conn, ValidateAndRequestTicketParam_container, tvb, off, 'ValidateAndRequestTicketParam_userName', 'userName')

		local ValidateAndRequestTicketParam_extraData_container = ValidateAndRequestTicketParam_container:add(F.Data, tvb(off, 0))
		ValidateAndRequestTicketParam_extraData_container:set_text("Any")
	off, ValidateAndRequestTicketParam_extraData_type_name = do_String(conn, ValidateAndRequestTicketParam_extraData_container, tvb, off, 'ValidateAndRequestTicketParam_extraData_type_name', 'extraData_type_name')

off, ValidateAndRequestTicketParam_extraData_len_plus_four = do_Uint32(conn, ValidateAndRequestTicketParam_extraData_container, tvb, off, 'ValidateAndRequestTicketParam_extraData_len_plus_four', 'extraData_len_plus_four')

off, ValidateAndRequestTicketParam_extraData_data_len = do_Uint32(conn, ValidateAndRequestTicketParam_extraData_container, tvb, off, 'ValidateAndRequestTicketParam_extraData_data_len', 'extraData_data_len')

local type_func = 'do_'..ValidateAndRequestTicketParam_extraData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, ValidateAndRequestTicketParam_extraData_container, tvb, off, "ValidateAndRequestTicketParam_extraData_data", "extraData")
		else
			ValidateAndRequestTicketParam_extraData_container:add(F.ValidateAndRequestTicketParam_extraData_data_bytes, tvb(off, ValidateAndRequestTicketParam_extraData_len))
			off = off + ValidateAndRequestTicketParam_extraData_data_len
		end
	
off, ValidateAndRequestTicketParam_ignoreApiVersionCheck = do_Bool(conn, ValidateAndRequestTicketParam_container, tvb, off, 'ValidateAndRequestTicketParam_ignoreApiVersionCheck', 'ignoreApiVersionCheck')
off, ValidateAndRequestTicketParam_apiVersionGeneral = do_Uint32(conn, ValidateAndRequestTicketParam_container, tvb, off, 'ValidateAndRequestTicketParam_apiVersionGeneral', 'apiVersionGeneral')
off, ValidateAndRequestTicketParam_apiVersionCustom = do_Uint32(conn, ValidateAndRequestTicketParam_container, tvb, off, 'ValidateAndRequestTicketParam_apiVersionCustom', 'apiVersionCustom')

return off
end
function do_ValidateAndRequestTicketResult(conn, tree, tvb, off, field_unique_name, field_name)
local ValidateAndRequestTicketResult_container = tree:add(F.ValidateAndRequestTicketResult, tvb(off, 0))
	ValidateAndRequestTicketResult_container:set_text(field_name .. " (ValidateAndRequestTicketResult):")
	off = do_Structure(conn, ValidateAndRequestTicketResult_container, tvb, off, 'ValidateAndRequestTicketResult_Base', 'Base')
off, ValidateAndRequestTicketResult_sourcePid = do_PID(conn, ValidateAndRequestTicketResult_container, tvb, off, 'ValidateAndRequestTicketResult_sourcePid', 'sourcePid')
off, ValidateAndRequestTicketResult_bufResponse = do_Buffer(conn, ValidateAndRequestTicketResult_container, tvb, off, 'ValidateAndRequestTicketResult_bufResponse', 'bufResponse')
off, ValidateAndRequestTicketResult_serviceNodeUrl = do_StationURL(conn, ValidateAndRequestTicketResult_container, tvb, off, 'ValidateAndRequestTicketResult_serviceNodeUrl', 'serviceNodeUrl')
off, ValidateAndRequestTicketResult_currentUtcTime = do_DateTime(conn, ValidateAndRequestTicketResult_container, tvb, off, 'ValidateAndRequestTicketResult_currentUtcTime', 'currentUtcTime')
off, ValidateAndRequestTicketResult_returnMsg = do_String(conn, ValidateAndRequestTicketResult_container, tvb, off, 'ValidateAndRequestTicketResult_returnMsg', 'returnMsg')
off, ValidateAndRequestTicketResult_sourceKey = do_String(conn, ValidateAndRequestTicketResult_container, tvb, off, 'ValidateAndRequestTicketResult_sourceKey', 'sourceKey')

return off
end
function do_NintendoNotificationEvent(conn, tree, tvb, off, field_unique_name, field_name)
local NintendoNotificationEvent_container = tree:add(F.NintendoNotificationEvent, tvb(off, 0))
	NintendoNotificationEvent_container:set_text(field_name .. " (NintendoNotificationEvent):")
	off = do_Structure(conn, NintendoNotificationEvent_container, tvb, off, 'NintendoNotificationEvent_Base', 'Base')
off, NintendoNotificationEvent_m_uiType = do_Uint32(conn, NintendoNotificationEvent_container, tvb, off, 'NintendoNotificationEvent_m_uiType', 'm_uiType')
off, NintendoNotificationEvent_m_pidSender = do_PID(conn, NintendoNotificationEvent_container, tvb, off, 'NintendoNotificationEvent_m_pidSender', 'm_pidSender')

		local NintendoNotificationEvent_m_dataholder_container = NintendoNotificationEvent_container:add(F.Data, tvb(off, 0))
		NintendoNotificationEvent_m_dataholder_container:set_text("Data")
	off, NintendoNotificationEvent_m_dataholder_type_name = do_String(conn, NintendoNotificationEvent_m_dataholder_container, tvb, off, 'NintendoNotificationEvent_m_dataholder_type_name', 'm_dataholder_type_name')

off, NintendoNotificationEvent_m_dataholder_len_plus_four = do_Uint32(conn, NintendoNotificationEvent_m_dataholder_container, tvb, off, 'NintendoNotificationEvent_m_dataholder_len_plus_four', 'm_dataholder_len_plus_four')

off, NintendoNotificationEvent_m_dataholder_data_len = do_Uint32(conn, NintendoNotificationEvent_m_dataholder_container, tvb, off, 'NintendoNotificationEvent_m_dataholder_data_len', 'm_dataholder_data_len')

local type_func = 'do_'..NintendoNotificationEvent_m_dataholder_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, NintendoNotificationEvent_m_dataholder_container, tvb, off, "NintendoNotificationEvent_m_dataholder_data", "m_dataholder")
		else
			NintendoNotificationEvent_m_dataholder_container:add(F.NintendoNotificationEvent_m_dataholder_data_bytes, tvb(off, NintendoNotificationEvent_m_dataholder_len))
			off = off + NintendoNotificationEvent_m_dataholder_data_len
		end
	

return off
end
function do_NintendoNotificationEventGeneral(conn, tree, tvb, off, field_unique_name, field_name)
local NintendoNotificationEventGeneral_container = tree:add(F.NintendoNotificationEventGeneral, tvb(off, 0))
	NintendoNotificationEventGeneral_container:set_text(field_name .. " (NintendoNotificationEventGeneral):")
	off = do_Structure(conn, NintendoNotificationEventGeneral_container, tvb, off, 'NintendoNotificationEventGeneral_Base', 'Base')
off, NintendoNotificationEventGeneral_m_u32Param = do_Uint32(conn, NintendoNotificationEventGeneral_container, tvb, off, 'NintendoNotificationEventGeneral_m_u32Param', 'm_u32Param')
off, NintendoNotificationEventGeneral_m_u64Param1 = do_Uint64(conn, NintendoNotificationEventGeneral_container, tvb, off, 'NintendoNotificationEventGeneral_m_u64Param1', 'm_u64Param1')
off, NintendoNotificationEventGeneral_m_u64Param2 = do_Uint64(conn, NintendoNotificationEventGeneral_container, tvb, off, 'NintendoNotificationEventGeneral_m_u64Param2', 'm_u64Param2')
off, NintendoNotificationEventGeneral_m_strParam = do_String(conn, NintendoNotificationEventGeneral_container, tvb, off, 'NintendoNotificationEventGeneral_m_strParam', 'm_strParam')

return off
end
function do_NintendoNotificationEventProfile(conn, tree, tvb, off, field_unique_name, field_name)
local NintendoNotificationEventProfile_container = tree:add(F.NintendoNotificationEventProfile, tvb(off, 0))
	NintendoNotificationEventProfile_container:set_text(field_name .. " (NintendoNotificationEventProfile):")
	off = do_Structure(conn, NintendoNotificationEventProfile_container, tvb, off, 'NintendoNotificationEventProfile_Base', 'Base')
off, NintendoNotificationEventProfile_m_region = do_Uint8(conn, NintendoNotificationEventProfile_container, tvb, off, 'NintendoNotificationEventProfile_m_region', 'm_region')
off, NintendoNotificationEventProfile_m_country = do_Uint8(conn, NintendoNotificationEventProfile_container, tvb, off, 'NintendoNotificationEventProfile_m_country', 'm_country')
off, NintendoNotificationEventProfile_m_area = do_Uint8(conn, NintendoNotificationEventProfile_container, tvb, off, 'NintendoNotificationEventProfile_m_area', 'm_area')
off, NintendoNotificationEventProfile_m_language = do_Uint8(conn, NintendoNotificationEventProfile_container, tvb, off, 'NintendoNotificationEventProfile_m_language', 'm_language')
off, NintendoNotificationEventProfile_m_platform = do_Uint8(conn, NintendoNotificationEventProfile_container, tvb, off, 'NintendoNotificationEventProfile_m_platform', 'm_platform')

return off
end
function do_ApplicationInfo(conn, tree, tvb, off, field_unique_name, field_name)
local ApplicationInfo_container = tree:add(F.ApplicationInfo, tvb(off, 0))
	ApplicationInfo_container:set_text(field_name .. " (ApplicationInfo):")
	off = do_Structure(conn, ApplicationInfo_container, tvb, off, 'ApplicationInfo_Base', 'Base')
off, ApplicationInfo_Title_id = do_Uint64(conn, ApplicationInfo_container, tvb, off, 'ApplicationInfo_Title_id', 'Title_id')
off, ApplicationInfo_Title_version = do_Uint16(conn, ApplicationInfo_container, tvb, off, 'ApplicationInfo_Title_version', 'Title_version')

return off
end
function do_BadgeInfo(conn, tree, tvb, off, field_unique_name, field_name)
local BadgeInfo_container = tree:add(F.BadgeInfo, tvb(off, 0))
	BadgeInfo_container:set_text(field_name .. " (BadgeInfo):")
	off = do_Structure(conn, BadgeInfo_container, tvb, off, 'BadgeInfo_Base', 'Base')
off, BadgeInfo_Unknown = do_Uint16(conn, BadgeInfo_container, tvb, off, 'BadgeInfo_Unknown', 'Unknown')
off, BadgeInfo_Unknown2 = do_Uint8(conn, BadgeInfo_container, tvb, off, 'BadgeInfo_Unknown2', 'Unknown2')

return off
end
function do_BattleModeRating(conn, tree, tvb, off, field_unique_name, field_name)
local BattleModeRating_container = tree:add(F.BattleModeRating, tvb(off, 0))
	BattleModeRating_container:set_text(field_name .. " (BattleModeRating):")
	off = do_Structure(conn, BattleModeRating_container, tvb, off, 'BattleModeRating_Base', 'Base')
off, BattleModeRating_Unknown = do_Uint32(conn, BattleModeRating_container, tvb, off, 'BattleModeRating_Unknown', 'Unknown')
off, BattleModeRating_Unknown2 = do_Uint8(conn, BattleModeRating_container, tvb, off, 'BattleModeRating_Unknown2', 'Unknown2')

return off
end
function do_CanPostRatingAndCommentParam(conn, tree, tvb, off, field_unique_name, field_name)
local CanPostRatingAndCommentParam_container = tree:add(F.CanPostRatingAndCommentParam, tvb(off, 0))
	CanPostRatingAndCommentParam_container:set_text(field_name .. " (CanPostRatingAndCommentParam):")
	off = do_Structure(conn, CanPostRatingAndCommentParam_container, tvb, off, 'CanPostRatingAndCommentParam_Base', 'Base')
off, CanPostRatingAndCommentParam_Unknown = do_Uint64(conn, CanPostRatingAndCommentParam_container, tvb, off, 'CanPostRatingAndCommentParam_Unknown', 'Unknown')
off, CanPostRatingAndCommentParam_Unknown2 = do_Uint32(conn, CanPostRatingAndCommentParam_container, tvb, off, 'CanPostRatingAndCommentParam_Unknown2', 'Unknown2')

return off
end
function do_CanPostRatingAndCommentResult(conn, tree, tvb, off, field_unique_name, field_name)
local CanPostRatingAndCommentResult_container = tree:add(F.CanPostRatingAndCommentResult, tvb(off, 0))
	CanPostRatingAndCommentResult_container:set_text(field_name .. " (CanPostRatingAndCommentResult):")
	off = do_Structure(conn, CanPostRatingAndCommentResult_container, tvb, off, 'CanPostRatingAndCommentResult_Base', 'Base')
off, CanPostRatingAndCommentResult_Unknown = do_Uint64(conn, CanPostRatingAndCommentResult_container, tvb, off, 'CanPostRatingAndCommentResult_Unknown', 'Unknown')
off, CanPostRatingAndCommentResult_Unknown2 = do_Bool(conn, CanPostRatingAndCommentResult_container, tvb, off, 'CanPostRatingAndCommentResult_Unknown2', 'Unknown2')
off, CanPostRatingAndCommentResult_Unknown3 = do_Uint32(conn, CanPostRatingAndCommentResult_container, tvb, off, 'CanPostRatingAndCommentResult_Unknown3', 'Unknown3')
local CanPostRatingAndCommentResult_Unknown4_len = tvb(off, 4):le_uint()
	subCanPostRatingAndCommentResult_container = CanPostRatingAndCommentResult_container:add_le(F.CanPostRatingAndCommentResult_Unknown4_len, tvb(off,4))
	off = off + 4
	for i=1,CanPostRatingAndCommentResult_Unknown4_len do
	off, CanPostRatingAndCommentResult_Unknown4_key = do_Uint8(conn, subCanPostRatingAndCommentResult_container, tvb, off, 'CanPostRatingAndCommentResult_Unknown4_key', 'Unknown4')

off, CanPostRatingAndCommentResult_Unknown4_value = do_Uint32(conn, subCanPostRatingAndCommentResult_container, tvb, off, 'CanPostRatingAndCommentResult_Unknown4_value', 'Unknown4')

	end
	
off, CanPostRatingAndCommentResult_Unknown5 = do_Bool(conn, CanPostRatingAndCommentResult_container, tvb, off, 'CanPostRatingAndCommentResult_Unknown5', 'Unknown5')
off, CanPostRatingAndCommentResult_Unknown6 = do_Uint32(conn, CanPostRatingAndCommentResult_container, tvb, off, 'CanPostRatingAndCommentResult_Unknown6', 'Unknown6')
local CanPostRatingAndCommentResult_Unknown7_len = tvb(off, 4):le_uint()
	subCanPostRatingAndCommentResult_container = CanPostRatingAndCommentResult_container:add_le(F.CanPostRatingAndCommentResult_Unknown7_len, tvb(off,4))
	off = off + 4
	for i=1,CanPostRatingAndCommentResult_Unknown7_len do
	off, CanPostRatingAndCommentResult_Unknown7_key = do_Uint8(conn, subCanPostRatingAndCommentResult_container, tvb, off, 'CanPostRatingAndCommentResult_Unknown7_key', 'Unknown7')

off, CanPostRatingAndCommentResult_Unknown7_value = do_Uint32(conn, subCanPostRatingAndCommentResult_container, tvb, off, 'CanPostRatingAndCommentResult_Unknown7_value', 'Unknown7')

	end
	

return off
end
function do_CommentInfo(conn, tree, tvb, off, field_unique_name, field_name)
local CommentInfo_container = tree:add(F.CommentInfo, tvb(off, 0))
	CommentInfo_container:set_text(field_name .. " (CommentInfo):")
	off = do_Structure(conn, CommentInfo_container, tvb, off, 'CommentInfo_Base', 'Base')
off, CommentInfo_Unknown = do_Uint64(conn, CommentInfo_container, tvb, off, 'CommentInfo_Unknown', 'Unknown')
off, CommentInfo_Unknown2 = do_String(conn, CommentInfo_container, tvb, off, 'CommentInfo_Unknown2', 'Unknown2')
off, CommentInfo_Unknown3 = do_Uint8(conn, CommentInfo_container, tvb, off, 'CommentInfo_Unknown3', 'Unknown3')
off, CommentInfo_Unknown4 = do_Uint8(conn, CommentInfo_container, tvb, off, 'CommentInfo_Unknown4', 'Unknown4')
off, CommentInfo_Unknown5 = do_Uint64(conn, CommentInfo_container, tvb, off, 'CommentInfo_Unknown5', 'Unknown5')
off, CommentInfo_Unknown6 = do_Uint16(conn, CommentInfo_container, tvb, off, 'CommentInfo_Unknown6', 'Unknown6')
off, CommentInfo_Unknown7 = do_Uint16(conn, CommentInfo_container, tvb, off, 'CommentInfo_Unknown7', 'Unknown7')
off, CommentInfo_Unknown8 = do_Uint8(conn, CommentInfo_container, tvb, off, 'CommentInfo_Unknown8', 'Unknown8')
off, CommentInfo_Unknown9 = do_Uint8(conn, CommentInfo_container, tvb, off, 'CommentInfo_Unknown9', 'Unknown9')
off, CommentInfo_Unknown10 = do_Uint16(conn, CommentInfo_container, tvb, off, 'CommentInfo_Unknown10', 'Unknown10')
off, CommentInfo_Unknown11 = do_Bool(conn, CommentInfo_container, tvb, off, 'CommentInfo_Unknown11', 'Unknown11')
off, CommentInfo_Unknown12 = do_Bool(conn, CommentInfo_container, tvb, off, 'CommentInfo_Unknown12', 'Unknown12')
off, CommentInfo_Unknown13 = do_DateTime(conn, CommentInfo_container, tvb, off, 'CommentInfo_Unknown13', 'Unknown13')
off, CommentInfo_Unknown14 = do_qBuffer(conn, CommentInfo_container, tvb, off, 'CommentInfo_Unknown14', 'Unknown14')
off, CommentInfo_Unknown15 = do_String(conn, CommentInfo_container, tvb, off, 'CommentInfo_Unknown15', 'Unknown15')
off = do_CommentPictureReqGetInfoWithoutHeaders(conn, CommentInfo_container, tvb, off, 'CommentInfo_Comment_picture_info', 'Comment_picture_info')
off, CommentInfo_Unknown16 = do_Uint16(conn, CommentInfo_container, tvb, off, 'CommentInfo_Unknown16', 'Unknown16')
off, CommentInfo_Unknown17 = do_Uint8(conn, CommentInfo_container, tvb, off, 'CommentInfo_Unknown17', 'Unknown17')

return off
end
function do_CompletePostObjectsCourseParam(conn, tree, tvb, off, field_unique_name, field_name)
local CompletePostObjectsCourseParam_container = tree:add(F.CompletePostObjectsCourseParam, tvb(off, 0))
	CompletePostObjectsCourseParam_container:set_text(field_name .. " (CompletePostObjectsCourseParam):")
	off = do_Structure(conn, CompletePostObjectsCourseParam_container, tvb, off, 'CompletePostObjectsCourseParam_Base', 'Base')
off, CompletePostObjectsCourseParam_Unknown = do_String(conn, CompletePostObjectsCourseParam_container, tvb, off, 'CompletePostObjectsCourseParam_Unknown', 'Unknown')
off, CompletePostObjectsCourseParam_Unknown2 = do_String(conn, CompletePostObjectsCourseParam_container, tvb, off, 'CompletePostObjectsCourseParam_Unknown2', 'Unknown2')
off, CompletePostObjectsCourseParam_Unknown3 = do_String(conn, CompletePostObjectsCourseParam_container, tvb, off, 'CompletePostObjectsCourseParam_Unknown3', 'Unknown3')
off, CompletePostObjectsCourseParam_Unknown4 = do_String(conn, CompletePostObjectsCourseParam_container, tvb, off, 'CompletePostObjectsCourseParam_Unknown4', 'Unknown4')
off, CompletePostObjectsCourseParam_Unknown5 = do_String(conn, CompletePostObjectsCourseParam_container, tvb, off, 'CompletePostObjectsCourseParam_Unknown5', 'Unknown5')
off, CompletePostObjectsCourseParam_Unknown6 = do_Uint64(conn, CompletePostObjectsCourseParam_container, tvb, off, 'CompletePostObjectsCourseParam_Unknown6', 'Unknown6')
off = do_PreparePostCourseParam(conn, CompletePostObjectsCourseParam_container, tvb, off, 'CompletePostObjectsCourseParam_Course_param', 'Course_param')

return off
end
function do_CourseTimeStats(conn, tree, tvb, off, field_unique_name, field_name)
local CourseTimeStats_container = tree:add(F.CourseTimeStats, tvb(off, 0))
	CourseTimeStats_container:set_text(field_name .. " (CourseTimeStats):")
	off = do_Structure(conn, CourseTimeStats_container, tvb, off, 'CourseTimeStats_Base', 'Base')
off, CourseTimeStats_User_id_of_first_completion = do_PID(conn, CourseTimeStats_container, tvb, off, 'CourseTimeStats_User_id_of_first_completion', 'User_id_of_first_completion')
off, CourseTimeStats_User_id_of_world_record_holder = do_PID(conn, CourseTimeStats_container, tvb, off, 'CourseTimeStats_User_id_of_world_record_holder', 'User_id_of_world_record_holder')
off, CourseTimeStats_World_record_milliseconds = do_Uint32(conn, CourseTimeStats_container, tvb, off, 'CourseTimeStats_World_record_milliseconds', 'World_record_milliseconds')
off, CourseTimeStats_Time_of_uploader_milliseconds = do_Uint32(conn, CourseTimeStats_container, tvb, off, 'CourseTimeStats_Time_of_uploader_milliseconds', 'Time_of_uploader_milliseconds')

return off
end
function do_DebugUploadEventCourseGhostParam(conn, tree, tvb, off, field_unique_name, field_name)
local DebugUploadEventCourseGhostParam_container = tree:add(F.DebugUploadEventCourseGhostParam, tvb(off, 0))
	DebugUploadEventCourseGhostParam_container:set_text(field_name .. " (DebugUploadEventCourseGhostParam):")
	off = do_Structure(conn, DebugUploadEventCourseGhostParam_container, tvb, off, 'DebugUploadEventCourseGhostParam_Base', 'Base')
off, DebugUploadEventCourseGhostParam_Unknown = do_Uint64(conn, DebugUploadEventCourseGhostParam_container, tvb, off, 'DebugUploadEventCourseGhostParam_Unknown', 'Unknown')
off, DebugUploadEventCourseGhostParam_Unknown2 = do_Uint32(conn, DebugUploadEventCourseGhostParam_container, tvb, off, 'DebugUploadEventCourseGhostParam_Unknown2', 'Unknown2')
off, DebugUploadEventCourseGhostParam_Unknown3 = do_String(conn, DebugUploadEventCourseGhostParam_container, tvb, off, 'DebugUploadEventCourseGhostParam_Unknown3', 'Unknown3')

return off
end
function do_EndlessModeStatus(conn, tree, tvb, off, field_unique_name, field_name)
local EndlessModeStatus_container = tree:add(F.EndlessModeStatus, tvb(off, 0))
	EndlessModeStatus_container:set_text(field_name .. " (EndlessModeStatus):")
	off = do_Structure(conn, EndlessModeStatus_container, tvb, off, 'EndlessModeStatus_Base', 'Base')
local EndlessModeStatus_Unknown_len = tvb(off, 4):le_uint()
	subEndlessModeStatus_container = EndlessModeStatus_container:add_le(F.EndlessModeStatus_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,EndlessModeStatus_Unknown_len do
	off, EndlessModeStatus_Unknown_key = do_Uint8(conn, subEndlessModeStatus_container, tvb, off, 'EndlessModeStatus_Unknown_key', 'Unknown')

off = do_UnknownStruct4(conn, subEndlessModeStatus_container, tvb, off, 'EndlessModeStatus_Unknown_value', 'Unknown')

	end
	
local EndlessModeStatus_Unknown2_len = tvb(off, 4):le_uint()
	subEndlessModeStatus_container = EndlessModeStatus_container:add_le(F.EndlessModeStatus_Unknown2_len, tvb(off,4))
	off = off + 4
	for i=1,EndlessModeStatus_Unknown2_len do
	off, EndlessModeStatus_Unknown2_key = do_Uint8(conn, subEndlessModeStatus_container, tvb, off, 'EndlessModeStatus_Unknown2_key', 'Unknown2')

off = do_UnknownStruct5(conn, subEndlessModeStatus_container, tvb, off, 'EndlessModeStatus_Unknown2_value', 'Unknown2')

	end
	

return off
end
function do_EventCourseGhostInfo(conn, tree, tvb, off, field_unique_name, field_name)
local EventCourseGhostInfo_container = tree:add(F.EventCourseGhostInfo, tvb(off, 0))
	EventCourseGhostInfo_container:set_text(field_name .. " (EventCourseGhostInfo):")
	off = do_Structure(conn, EventCourseGhostInfo_container, tvb, off, 'EventCourseGhostInfo_Base', 'Base')
off = do_RelationObjectReqGetInfo(conn, EventCourseGhostInfo_container, tvb, off, 'EventCourseGhostInfo_Replay_file', 'Replay_file')
off, EventCourseGhostInfo_Time_in_milliseconds = do_Uint32(conn, EventCourseGhostInfo_container, tvb, off, 'EventCourseGhostInfo_Time_in_milliseconds', 'Time_in_milliseconds')
off, EventCourseGhostInfo_User_id = do_PID(conn, EventCourseGhostInfo_container, tvb, off, 'EventCourseGhostInfo_User_id', 'User_id')

return off
end
function do_EventCourseHistogram(conn, tree, tvb, off, field_unique_name, field_name)
local EventCourseHistogram_container = tree:add(F.EventCourseHistogram, tvb(off, 0))
	EventCourseHistogram_container:set_text(field_name .. " (EventCourseHistogram):")
	off = do_Structure(conn, EventCourseHistogram_container, tvb, off, 'EventCourseHistogram_Base', 'Base')
off, EventCourseHistogram_Data_id = do_Uint64(conn, EventCourseHistogram_container, tvb, off, 'EventCourseHistogram_Data_id', 'Data_id')
off, EventCourseHistogram_Unknown = do_Uint32(conn, EventCourseHistogram_container, tvb, off, 'EventCourseHistogram_Unknown', 'Unknown')
off, EventCourseHistogram_Unknown2 = do_Uint32(conn, EventCourseHistogram_container, tvb, off, 'EventCourseHistogram_Unknown2', 'Unknown2')
off, EventCourseHistogram_Unknown3 = do_Uint32(conn, EventCourseHistogram_container, tvb, off, 'EventCourseHistogram_Unknown3', 'Unknown3')
local EventCourseHistogram_Histogram_values_len = tvb(off, 4):le_uint()
	subEventCourseHistogram_container = EventCourseHistogram_container:add_le(F.EventCourseHistogram_Histogram_values_len, tvb(off,4))
	off = off + 4
	for i=1,EventCourseHistogram_Histogram_values_len do
	off, EventCourseHistogram_Histogram_values_item = do_Uint32(conn, subEventCourseHistogram_container, tvb, off, 'EventCourseHistogram_Histogram_values_item', 'Histogram_values')

	end
	
local EventCourseHistogram_Medal_time_len = tvb(off, 4):le_uint()
	subEventCourseHistogram_container = EventCourseHistogram_container:add_le(F.EventCourseHistogram_Medal_time_len, tvb(off,4))
	off = off + 4
	for i=1,EventCourseHistogram_Medal_time_len do
	off, EventCourseHistogram_Medal_time_key = do_Uint8(conn, subEventCourseHistogram_container, tvb, off, 'EventCourseHistogram_Medal_time_key', 'Medal_time')

off, EventCourseHistogram_Medal_time_value = do_Uint32(conn, subEventCourseHistogram_container, tvb, off, 'EventCourseHistogram_Medal_time_value', 'Medal_time')

	end
	
off, EventCourseHistogram_Unknown4 = do_Uint32(conn, EventCourseHistogram_container, tvb, off, 'EventCourseHistogram_Unknown4', 'Unknown4')

return off
end
function do_EventCourseStatusInfo(conn, tree, tvb, off, field_unique_name, field_name)
local EventCourseStatusInfo_container = tree:add(F.EventCourseStatusInfo, tvb(off, 0))
	EventCourseStatusInfo_container:set_text(field_name .. " (EventCourseStatusInfo):")
	off = do_Structure(conn, EventCourseStatusInfo_container, tvb, off, 'EventCourseStatusInfo_Base', 'Base')
off, EventCourseStatusInfo_Unknown = do_Uint64(conn, EventCourseStatusInfo_container, tvb, off, 'EventCourseStatusInfo_Unknown', 'Unknown')
off, EventCourseStatusInfo_Unknown2 = do_Bool(conn, EventCourseStatusInfo_container, tvb, off, 'EventCourseStatusInfo_Unknown2', 'Unknown2')
off, EventCourseStatusInfo_Unknown3 = do_DateTime(conn, EventCourseStatusInfo_container, tvb, off, 'EventCourseStatusInfo_Unknown3', 'Unknown3')

return off
end
function do_EventCourseThumbnail(conn, tree, tvb, off, field_unique_name, field_name)
local EventCourseThumbnail_container = tree:add(F.EventCourseThumbnail, tvb(off, 0))
	EventCourseThumbnail_container:set_text(field_name .. " (EventCourseThumbnail):")
	off = do_Structure(conn, EventCourseThumbnail_container, tvb, off, 'EventCourseThumbnail_Base', 'Base')
off, EventCourseThumbnail_Url = do_String(conn, EventCourseThumbnail_container, tvb, off, 'EventCourseThumbnail_Url', 'Url')
local EventCourseThumbnail_Headers_len = tvb(off, 4):le_uint()
	subEventCourseThumbnail_container = EventCourseThumbnail_container:add_le(F.EventCourseThumbnail_Headers_len, tvb(off,4))
	off = off + 4
	for i=1,EventCourseThumbnail_Headers_len do
	off = do_DataStoreKeyValue(conn, subEventCourseThumbnail_container, tvb, off, 'EventCourseThumbnail_Headers_item', 'Headers')

	end
	
off, EventCourseThumbnail_Filesize = do_Uint32(conn, EventCourseThumbnail_container, tvb, off, 'EventCourseThumbnail_Filesize', 'Filesize')
off, EventCourseThumbnail_Root_ca_cert = do_Buffer(conn, EventCourseThumbnail_container, tvb, off, 'EventCourseThumbnail_Root_ca_cert', 'Root_ca_cert')
off, EventCourseThumbnail_Filename = do_String(conn, EventCourseThumbnail_container, tvb, off, 'EventCourseThumbnail_Filename', 'Filename')

return off
end
function do_GetCoursesParam(conn, tree, tvb, off, field_unique_name, field_name)
local GetCoursesParam_container = tree:add(F.GetCoursesParam, tvb(off, 0))
	GetCoursesParam_container:set_text(field_name .. " (GetCoursesParam):")
	off = do_Structure(conn, GetCoursesParam_container, tvb, off, 'GetCoursesParam_Base', 'Base')
local GetCoursesParam_Data_ids_len = tvb(off, 4):le_uint()
	subGetCoursesParam_container = GetCoursesParam_container:add_le(F.GetCoursesParam_Data_ids_len, tvb(off,4))
	off = off + 4
	for i=1,GetCoursesParam_Data_ids_len do
	off, GetCoursesParam_Data_ids_item = do_Uint64(conn, subGetCoursesParam_container, tvb, off, 'GetCoursesParam_Data_ids_item', 'Data_ids')

	end
	
off, GetCoursesParam_Result_options = do_Uint32(conn, GetCoursesParam_container, tvb, off, 'GetCoursesParam_Result_options', 'Result_options')

return off
end
function do_GetEventCourseGhostParam(conn, tree, tvb, off, field_unique_name, field_name)
local GetEventCourseGhostParam_container = tree:add(F.GetEventCourseGhostParam, tvb(off, 0))
	GetEventCourseGhostParam_container:set_text(field_name .. " (GetEventCourseGhostParam):")
	off = do_Structure(conn, GetEventCourseGhostParam_container, tvb, off, 'GetEventCourseGhostParam_Base', 'Base')
off, GetEventCourseGhostParam_Data_id = do_Uint64(conn, GetEventCourseGhostParam_container, tvb, off, 'GetEventCourseGhostParam_Data_id', 'Data_id')
off, GetEventCourseGhostParam_Approximate_time = do_Uint32(conn, GetEventCourseGhostParam_container, tvb, off, 'GetEventCourseGhostParam_Approximate_time', 'Approximate_time')
off, GetEventCourseGhostParam_Number_of_ghosts = do_Uint8(conn, GetEventCourseGhostParam_container, tvb, off, 'GetEventCourseGhostParam_Number_of_ghosts', 'Number_of_ghosts')

return off
end
function do_GetEventCourseHistogramParam(conn, tree, tvb, off, field_unique_name, field_name)
local GetEventCourseHistogramParam_container = tree:add(F.GetEventCourseHistogramParam, tvb(off, 0))
	GetEventCourseHistogramParam_container:set_text(field_name .. " (GetEventCourseHistogramParam):")
	off = do_Structure(conn, GetEventCourseHistogramParam_container, tvb, off, 'GetEventCourseHistogramParam_Base', 'Base')
off, GetEventCourseHistogramParam_Data_id = do_Uint64(conn, GetEventCourseHistogramParam_container, tvb, off, 'GetEventCourseHistogramParam_Data_id', 'Data_id')

return off
end
function do_GetUserOrCourseParam(conn, tree, tvb, off, field_unique_name, field_name)
local GetUserOrCourseParam_container = tree:add(F.GetUserOrCourseParam, tvb(off, 0))
	GetUserOrCourseParam_container:set_text(field_name .. " (GetUserOrCourseParam):")
	off = do_Structure(conn, GetUserOrCourseParam_container, tvb, off, 'GetUserOrCourseParam_Base', 'Base')
off, GetUserOrCourseParam_codeString = do_String(conn, GetUserOrCourseParam_container, tvb, off, 'GetUserOrCourseParam_codeString', 'codeString')
off, GetUserOrCourseParam_userResultOption = do_Uint32(conn, GetUserOrCourseParam_container, tvb, off, 'GetUserOrCourseParam_userResultOption', 'userResultOption')
off, GetUserOrCourseParam_courseResultOption = do_Uint32(conn, GetUserOrCourseParam_container, tvb, off, 'GetUserOrCourseParam_courseResultOption', 'courseResultOption')

return off
end
function do_GetUsersParam(conn, tree, tvb, off, field_unique_name, field_name)
local GetUsersParam_container = tree:add(F.GetUsersParam, tvb(off, 0))
	GetUsersParam_container:set_text(field_name .. " (GetUsersParam):")
	off = do_Structure(conn, GetUsersParam_container, tvb, off, 'GetUsersParam_Base', 'Base')
local GetUsersParam_userPIDs_len = tvb(off, 4):le_uint()
	subGetUsersParam_container = GetUsersParam_container:add_le(F.GetUsersParam_userPIDs_len, tvb(off,4))
	off = off + 4
	for i=1,GetUsersParam_userPIDs_len do
	off, GetUsersParam_userPIDs_item = do_PID(conn, subGetUsersParam_container, tvb, off, 'GetUsersParam_userPIDs_item', 'userPIDs')

	end
	
off, GetUsersParam_resultOption = do_Uint32(conn, GetUsersParam_container, tvb, off, 'GetUsersParam_resultOption', 'resultOption')

return off
end
function do_MiiClothes(conn, tree, tvb, off, field_unique_name, field_name)
local MiiClothes_container = tree:add(F.MiiClothes, tvb(off, 0))
	MiiClothes_container:set_text(field_name .. " (MiiClothes):")
	off = do_Structure(conn, MiiClothes_container, tvb, off, 'MiiClothes_Base', 'Base')
off, MiiClothes_Unknown = do_Uint16(conn, MiiClothes_container, tvb, off, 'MiiClothes_Unknown', 'Unknown')
off, MiiClothes_Unknown2 = do_Uint16(conn, MiiClothes_container, tvb, off, 'MiiClothes_Unknown2', 'Unknown2')
off, MiiClothes_Unknown3 = do_Bool(conn, MiiClothes_container, tvb, off, 'MiiClothes_Unknown3', 'Unknown3')

return off
end
function do_PreparePostRelationObjectParam(conn, tree, tvb, off, field_unique_name, field_name)
local PreparePostRelationObjectParam_container = tree:add(F.PreparePostRelationObjectParam, tvb(off, 0))
	PreparePostRelationObjectParam_container:set_text(field_name .. " (PreparePostRelationObjectParam):")
	off = do_Structure(conn, PreparePostRelationObjectParam_container, tvb, off, 'PreparePostRelationObjectParam_Base', 'Base')
off, PreparePostRelationObjectParam_Unknown = do_String(conn, PreparePostRelationObjectParam_container, tvb, off, 'PreparePostRelationObjectParam_Unknown', 'Unknown')
off, PreparePostRelationObjectParam_Unknown2 = do_Uint32(conn, PreparePostRelationObjectParam_container, tvb, off, 'PreparePostRelationObjectParam_Unknown2', 'Unknown2')
off, PreparePostRelationObjectParam_Unknown3 = do_Uint32(conn, PreparePostRelationObjectParam_container, tvb, off, 'PreparePostRelationObjectParam_Unknown3', 'Unknown3')
off, PreparePostRelationObjectParam_Unknown4 = do_Uint32(conn, PreparePostRelationObjectParam_container, tvb, off, 'PreparePostRelationObjectParam_Unknown4', 'Unknown4')
off, PreparePostRelationObjectParam_Unknown5 = do_Uint32(conn, PreparePostRelationObjectParam_container, tvb, off, 'PreparePostRelationObjectParam_Unknown5', 'Unknown5')
local PreparePostRelationObjectParam_Unknown6_len = tvb(off, 4):le_uint()
	subPreparePostRelationObjectParam_container = PreparePostRelationObjectParam_container:add_le(F.PreparePostRelationObjectParam_Unknown6_len, tvb(off,4))
	off = off + 4
	for i=1,PreparePostRelationObjectParam_Unknown6_len do
	off, PreparePostRelationObjectParam_Unknown6_item = do_String(conn, subPreparePostRelationObjectParam_container, tvb, off, 'PreparePostRelationObjectParam_Unknown6_item', 'Unknown6')

	end
	

return off
end
function do_ReadEventCourseListParam(conn, tree, tvb, off, field_unique_name, field_name)
local ReadEventCourseListParam_container = tree:add(F.ReadEventCourseListParam, tvb(off, 0))
	ReadEventCourseListParam_container:set_text(field_name .. " (ReadEventCourseListParam):")
	off = do_Structure(conn, ReadEventCourseListParam_container, tvb, off, 'ReadEventCourseListParam_Base', 'Base')
off, ReadEventCourseListParam_Unknown = do_DateTime(conn, ReadEventCourseListParam_container, tvb, off, 'ReadEventCourseListParam_Unknown', 'Unknown')

return off
end
function do_RegisterUserParam(conn, tree, tvb, off, field_unique_name, field_name)
local RegisterUserParam_container = tree:add(F.RegisterUserParam, tvb(off, 0))
	RegisterUserParam_container:set_text(field_name .. " (RegisterUserParam):")
	off = do_Structure(conn, RegisterUserParam_container, tvb, off, 'RegisterUserParam_Base', 'Base')
off, RegisterUserParam_Username = do_String(conn, RegisterUserParam_container, tvb, off, 'RegisterUserParam_Username', 'Username')
off = do_UnknownStruct1(conn, RegisterUserParam_container, tvb, off, 'RegisterUserParam_Unknown', 'Unknown')
off, RegisterUserParam_Unknown2 = do_qBuffer(conn, RegisterUserParam_container, tvb, off, 'RegisterUserParam_Unknown2', 'Unknown2')
off, RegisterUserParam_Region_id = do_Uint8(conn, RegisterUserParam_container, tvb, off, 'RegisterUserParam_Region_id', 'Region_id')
off, RegisterUserParam_Country_code = do_String(conn, RegisterUserParam_container, tvb, off, 'RegisterUserParam_Country_code', 'Country_code')
off, RegisterUserParam_Pseudo_device_id = do_String(conn, RegisterUserParam_container, tvb, off, 'RegisterUserParam_Pseudo_device_id', 'Pseudo_device_id')

return off
end
function do_RelationObjectReqPostInfo(conn, tree, tvb, off, field_unique_name, field_name)
local RelationObjectReqPostInfo_container = tree:add(F.RelationObjectReqPostInfo, tvb(off, 0))
	RelationObjectReqPostInfo_container:set_text(field_name .. " (RelationObjectReqPostInfo):")
	off = do_Structure(conn, RelationObjectReqPostInfo_container, tvb, off, 'RelationObjectReqPostInfo_Base', 'Base')
off, RelationObjectReqPostInfo_Data_id = do_String(conn, RelationObjectReqPostInfo_container, tvb, off, 'RelationObjectReqPostInfo_Data_id', 'Data_id')
off, RelationObjectReqPostInfo_Url = do_String(conn, RelationObjectReqPostInfo_container, tvb, off, 'RelationObjectReqPostInfo_Url', 'Url')
local RelationObjectReqPostInfo_Headers_len = tvb(off, 4):le_uint()
	subRelationObjectReqPostInfo_container = RelationObjectReqPostInfo_container:add_le(F.RelationObjectReqPostInfo_Headers_len, tvb(off,4))
	off = off + 4
	for i=1,RelationObjectReqPostInfo_Headers_len do
	off = do_DataStoreKeyValue(conn, subRelationObjectReqPostInfo_container, tvb, off, 'RelationObjectReqPostInfo_Headers_item', 'Headers')

	end
	
local RelationObjectReqPostInfo_Form_fields_len = tvb(off, 4):le_uint()
	subRelationObjectReqPostInfo_container = RelationObjectReqPostInfo_container:add_le(F.RelationObjectReqPostInfo_Form_fields_len, tvb(off,4))
	off = off + 4
	for i=1,RelationObjectReqPostInfo_Form_fields_len do
	off = do_DataStoreKeyValue(conn, subRelationObjectReqPostInfo_container, tvb, off, 'RelationObjectReqPostInfo_Form_fields_item', 'Form_fields')

	end
	
off, RelationObjectReqPostInfo_Root_ca_cert = do_Buffer(conn, RelationObjectReqPostInfo_container, tvb, off, 'RelationObjectReqPostInfo_Root_ca_cert', 'Root_ca_cert')

return off
end
function do_ReqGetInfoHeadersInfo(conn, tree, tvb, off, field_unique_name, field_name)
local ReqGetInfoHeadersInfo_container = tree:add(F.ReqGetInfoHeadersInfo, tvb(off, 0))
	ReqGetInfoHeadersInfo_container:set_text(field_name .. " (ReqGetInfoHeadersInfo):")
	off = do_Structure(conn, ReqGetInfoHeadersInfo_container, tvb, off, 'ReqGetInfoHeadersInfo_Base', 'Base')
local ReqGetInfoHeadersInfo_Headers_len = tvb(off, 4):le_uint()
	subReqGetInfoHeadersInfo_container = ReqGetInfoHeadersInfo_container:add_le(F.ReqGetInfoHeadersInfo_Headers_len, tvb(off,4))
	off = off + 4
	for i=1,ReqGetInfoHeadersInfo_Headers_len do
	off = do_DataStoreKeyValue(conn, subReqGetInfoHeadersInfo_container, tvb, off, 'ReqGetInfoHeadersInfo_Headers_item', 'Headers')

	end
	
off, ReqGetInfoHeadersInfo_Expiration_seconds = do_Uint32(conn, ReqGetInfoHeadersInfo_container, tvb, off, 'ReqGetInfoHeadersInfo_Expiration_seconds', 'Expiration_seconds')

return off
end
function do_SearchCoursesEndlessModeParam(conn, tree, tvb, off, field_unique_name, field_name)
local SearchCoursesEndlessModeParam_container = tree:add(F.SearchCoursesEndlessModeParam, tvb(off, 0))
	SearchCoursesEndlessModeParam_container:set_text(field_name .. " (SearchCoursesEndlessModeParam):")
	off = do_Structure(conn, SearchCoursesEndlessModeParam_container, tvb, off, 'SearchCoursesEndlessModeParam_Base', 'Base')
off, SearchCoursesEndlessModeParam_resultOption = do_Uint32(conn, SearchCoursesEndlessModeParam_container, tvb, off, 'SearchCoursesEndlessModeParam_resultOption', 'resultOption')
off, SearchCoursesEndlessModeParam_count = do_Uint32(conn, SearchCoursesEndlessModeParam_container, tvb, off, 'SearchCoursesEndlessModeParam_count', 'count')
off, SearchCoursesEndlessModeParam_difficulty = do_Uint8(conn, SearchCoursesEndlessModeParam_container, tvb, off, 'SearchCoursesEndlessModeParam_difficulty', 'difficulty')

return off
end
function do_SearchCoursesEventParam(conn, tree, tvb, off, field_unique_name, field_name)
local SearchCoursesEventParam_container = tree:add(F.SearchCoursesEventParam, tvb(off, 0))
	SearchCoursesEventParam_container:set_text(field_name .. " (SearchCoursesEventParam):")
	off = do_Structure(conn, SearchCoursesEventParam_container, tvb, off, 'SearchCoursesEventParam_Base', 'Base')
off, SearchCoursesEventParam_Result_option = do_Uint32(conn, SearchCoursesEventParam_container, tvb, off, 'SearchCoursesEventParam_Result_option', 'Result_option')

return off
end
function do_SearchCoursesLatestParam(conn, tree, tvb, off, field_unique_name, field_name)
local SearchCoursesLatestParam_container = tree:add(F.SearchCoursesLatestParam, tvb(off, 0))
	SearchCoursesLatestParam_container:set_text(field_name .. " (SearchCoursesLatestParam):")
	off = do_Structure(conn, SearchCoursesLatestParam_container, tvb, off, 'SearchCoursesLatestParam_Base', 'Base')
off, SearchCoursesLatestParam_resultOption = do_Uint32(conn, SearchCoursesLatestParam_container, tvb, off, 'SearchCoursesLatestParam_resultOption', 'resultOption')
off = do_ResultRange(conn, SearchCoursesLatestParam_container, tvb, off, 'SearchCoursesLatestParam_resultRange', 'resultRange')

return off
end
function do_SearchCoursesPickUpParam(conn, tree, tvb, off, field_unique_name, field_name)
local SearchCoursesPickUpParam_container = tree:add(F.SearchCoursesPickUpParam, tvb(off, 0))
	SearchCoursesPickUpParam_container:set_text(field_name .. " (SearchCoursesPickUpParam):")
	off = do_Structure(conn, SearchCoursesPickUpParam_container, tvb, off, 'SearchCoursesPickUpParam_Base', 'Base')
off, SearchCoursesPickUpParam_Unknown = do_Uint32(conn, SearchCoursesPickUpParam_container, tvb, off, 'SearchCoursesPickUpParam_Unknown', 'Unknown')
off, SearchCoursesPickUpParam_Unknown2 = do_Uint32(conn, SearchCoursesPickUpParam_container, tvb, off, 'SearchCoursesPickUpParam_Unknown2', 'Unknown2')
off, SearchCoursesPickUpParam_Difficulty = do_Uint8(conn, SearchCoursesPickUpParam_container, tvb, off, 'SearchCoursesPickUpParam_Difficulty', 'Difficulty')

return off
end
function do_SearchCoursesPointRankingParam(conn, tree, tvb, off, field_unique_name, field_name)
local SearchCoursesPointRankingParam_container = tree:add(F.SearchCoursesPointRankingParam, tvb(off, 0))
	SearchCoursesPointRankingParam_container:set_text(field_name .. " (SearchCoursesPointRankingParam):")
	off = do_Structure(conn, SearchCoursesPointRankingParam_container, tvb, off, 'SearchCoursesPointRankingParam_Base', 'Base')
off, SearchCoursesPointRankingParam_resultOption = do_Uint32(conn, SearchCoursesPointRankingParam_container, tvb, off, 'SearchCoursesPointRankingParam_resultOption', 'resultOption')
off = do_ResultRange(conn, SearchCoursesPointRankingParam_container, tvb, off, 'SearchCoursesPointRankingParam_resultRange', 'resultRange')
off, SearchCoursesPointRankingParam_preferCourseDifficulty = do_Uint8(conn, SearchCoursesPointRankingParam_container, tvb, off, 'SearchCoursesPointRankingParam_preferCourseDifficulty', 'preferCourseDifficulty')
local SearchCoursesPointRankingParam_rejectRegionIds_len = tvb(off, 4):le_uint()
	subSearchCoursesPointRankingParam_container = SearchCoursesPointRankingParam_container:add_le(F.SearchCoursesPointRankingParam_rejectRegionIds_len, tvb(off,4))
	off = off + 4
	for i=1,SearchCoursesPointRankingParam_rejectRegionIds_len do
	off, SearchCoursesPointRankingParam_rejectRegionIds_item = do_Uint8(conn, subSearchCoursesPointRankingParam_container, tvb, off, 'SearchCoursesPointRankingParam_rejectRegionIds_item', 'rejectRegionIds')

	end
	

return off
end
function do_SearchCoursesPostedByParam(conn, tree, tvb, off, field_unique_name, field_name)
local SearchCoursesPostedByParam_container = tree:add(F.SearchCoursesPostedByParam, tvb(off, 0))
	SearchCoursesPostedByParam_container:set_text(field_name .. " (SearchCoursesPostedByParam):")
	off = do_Structure(conn, SearchCoursesPostedByParam_container, tvb, off, 'SearchCoursesPostedByParam_Base', 'Base')
off, SearchCoursesPostedByParam_Unknown = do_Uint32(conn, SearchCoursesPostedByParam_container, tvb, off, 'SearchCoursesPostedByParam_Unknown', 'Unknown')
off = do_ResultRange(conn, SearchCoursesPostedByParam_container, tvb, off, 'SearchCoursesPostedByParam_Result_range', 'Result_range')
local SearchCoursesPostedByParam_Unknown2_len = tvb(off, 4):le_uint()
	subSearchCoursesPostedByParam_container = SearchCoursesPostedByParam_container:add_le(F.SearchCoursesPostedByParam_Unknown2_len, tvb(off,4))
	off = off + 4
	for i=1,SearchCoursesPostedByParam_Unknown2_len do
	off, SearchCoursesPostedByParam_Unknown2_item = do_Uint64(conn, subSearchCoursesPostedByParam_container, tvb, off, 'SearchCoursesPostedByParam_Unknown2_item', 'Unknown2')

	end
	

return off
end
function do_SearchUsersBattleModeParam(conn, tree, tvb, off, field_unique_name, field_name)
local SearchUsersBattleModeParam_container = tree:add(F.SearchUsersBattleModeParam, tvb(off, 0))
	SearchUsersBattleModeParam_container:set_text(field_name .. " (SearchUsersBattleModeParam):")
	off = do_Structure(conn, SearchUsersBattleModeParam_container, tvb, off, 'SearchUsersBattleModeParam_Base', 'Base')
off, SearchUsersBattleModeParam_Unknown = do_Uint32(conn, SearchUsersBattleModeParam_container, tvb, off, 'SearchUsersBattleModeParam_Unknown', 'Unknown')
off, SearchUsersBattleModeParam_Unknown2 = do_Buffer(conn, SearchUsersBattleModeParam_container, tvb, off, 'SearchUsersBattleModeParam_Unknown2', 'Unknown2')
off = do_ResultRange(conn, SearchUsersBattleModeParam_container, tvb, off, 'SearchUsersBattleModeParam_Unknown3', 'Unknown3')

return off
end
function do_SearchUsersClearedCourseParam(conn, tree, tvb, off, field_unique_name, field_name)
local SearchUsersClearedCourseParam_container = tree:add(F.SearchUsersClearedCourseParam, tvb(off, 0))
	SearchUsersClearedCourseParam_container:set_text(field_name .. " (SearchUsersClearedCourseParam):")
	off = do_Structure(conn, SearchUsersClearedCourseParam_container, tvb, off, 'SearchUsersClearedCourseParam_Base', 'Base')
off, SearchUsersClearedCourseParam_dataId = do_Uint64(conn, SearchUsersClearedCourseParam_container, tvb, off, 'SearchUsersClearedCourseParam_dataId', 'dataId')
off, SearchUsersClearedCourseParam_resultOption = do_Uint32(conn, SearchUsersClearedCourseParam_container, tvb, off, 'SearchUsersClearedCourseParam_resultOption', 'resultOption')
off, SearchUsersClearedCourseParam_count = do_Uint32(conn, SearchUsersClearedCourseParam_container, tvb, off, 'SearchUsersClearedCourseParam_count', 'count')

return off
end
function do_SearchUsersClearRankingParam(conn, tree, tvb, off, field_unique_name, field_name)
local SearchUsersClearRankingParam_container = tree:add(F.SearchUsersClearRankingParam, tvb(off, 0))
	SearchUsersClearRankingParam_container:set_text(field_name .. " (SearchUsersClearRankingParam):")
	off = do_Structure(conn, SearchUsersClearRankingParam_container, tvb, off, 'SearchUsersClearRankingParam_Base', 'Base')
off, SearchUsersClearRankingParam_Unknown = do_Uint8(conn, SearchUsersClearRankingParam_container, tvb, off, 'SearchUsersClearRankingParam_Unknown', 'Unknown')
off, SearchUsersClearRankingParam_Unknown2 = do_Uint32(conn, SearchUsersClearRankingParam_container, tvb, off, 'SearchUsersClearRankingParam_Unknown2', 'Unknown2')
off, SearchUsersClearRankingParam_Unknown3 = do_Buffer(conn, SearchUsersClearRankingParam_container, tvb, off, 'SearchUsersClearRankingParam_Unknown3', 'Unknown3')
off = do_ResultRange(conn, SearchUsersClearRankingParam_container, tvb, off, 'SearchUsersClearRankingParam_Unknown4', 'Unknown4')

return off
end
function do_SearchUsersEndlessModeParam(conn, tree, tvb, off, field_unique_name, field_name)
local SearchUsersEndlessModeParam_container = tree:add(F.SearchUsersEndlessModeParam, tvb(off, 0))
	SearchUsersEndlessModeParam_container:set_text(field_name .. " (SearchUsersEndlessModeParam):")
	off = do_Structure(conn, SearchUsersEndlessModeParam_container, tvb, off, 'SearchUsersEndlessModeParam_Base', 'Base')
off, SearchUsersEndlessModeParam_Unknown = do_Uint8(conn, SearchUsersEndlessModeParam_container, tvb, off, 'SearchUsersEndlessModeParam_Unknown', 'Unknown')
off, SearchUsersEndlessModeParam_Unknown2 = do_Uint32(conn, SearchUsersEndlessModeParam_container, tvb, off, 'SearchUsersEndlessModeParam_Unknown2', 'Unknown2')
off, SearchUsersEndlessModeParam_Unknown3 = do_Buffer(conn, SearchUsersEndlessModeParam_container, tvb, off, 'SearchUsersEndlessModeParam_Unknown3', 'Unknown3')
off = do_ResultRange(conn, SearchUsersEndlessModeParam_container, tvb, off, 'SearchUsersEndlessModeParam_Unknown4', 'Unknown4')

return off
end
function do_SearchUsersFolloweeParam(conn, tree, tvb, off, field_unique_name, field_name)
local SearchUsersFolloweeParam_container = tree:add(F.SearchUsersFolloweeParam, tvb(off, 0))
	SearchUsersFolloweeParam_container:set_text(field_name .. " (SearchUsersFolloweeParam):")
	off = do_Structure(conn, SearchUsersFolloweeParam_container, tvb, off, 'SearchUsersFolloweeParam_Base', 'Base')
off, SearchUsersFolloweeParam_resultOption = do_Uint32(conn, SearchUsersFolloweeParam_container, tvb, off, 'SearchUsersFolloweeParam_resultOption', 'resultOption')
off = do_ResultRange(conn, SearchUsersFolloweeParam_container, tvb, off, 'SearchUsersFolloweeParam_resultRange', 'resultRange')

return off
end
function do_SearchUsersPlayedCourseParam(conn, tree, tvb, off, field_unique_name, field_name)
local SearchUsersPlayedCourseParam_container = tree:add(F.SearchUsersPlayedCourseParam, tvb(off, 0))
	SearchUsersPlayedCourseParam_container:set_text(field_name .. " (SearchUsersPlayedCourseParam):")
	off = do_Structure(conn, SearchUsersPlayedCourseParam_container, tvb, off, 'SearchUsersPlayedCourseParam_Base', 'Base')
off, SearchUsersPlayedCourseParam_dataId = do_Uint64(conn, SearchUsersPlayedCourseParam_container, tvb, off, 'SearchUsersPlayedCourseParam_dataId', 'dataId')
off, SearchUsersPlayedCourseParam_resultOption = do_Uint32(conn, SearchUsersPlayedCourseParam_container, tvb, off, 'SearchUsersPlayedCourseParam_resultOption', 'resultOption')
off, SearchUsersPlayedCourseParam_count = do_Uint32(conn, SearchUsersPlayedCourseParam_container, tvb, off, 'SearchUsersPlayedCourseParam_count', 'count')

return off
end
function do_SearchUsersPositiveRatedCourseParam(conn, tree, tvb, off, field_unique_name, field_name)
local SearchUsersPositiveRatedCourseParam_container = tree:add(F.SearchUsersPositiveRatedCourseParam, tvb(off, 0))
	SearchUsersPositiveRatedCourseParam_container:set_text(field_name .. " (SearchUsersPositiveRatedCourseParam):")
	off = do_Structure(conn, SearchUsersPositiveRatedCourseParam_container, tvb, off, 'SearchUsersPositiveRatedCourseParam_Base', 'Base')
off, SearchUsersPositiveRatedCourseParam_dataId = do_Uint64(conn, SearchUsersPositiveRatedCourseParam_container, tvb, off, 'SearchUsersPositiveRatedCourseParam_dataId', 'dataId')
off, SearchUsersPositiveRatedCourseParam_resultOption = do_Uint32(conn, SearchUsersPositiveRatedCourseParam_container, tvb, off, 'SearchUsersPositiveRatedCourseParam_resultOption', 'resultOption')
off, SearchUsersPositiveRatedCourseParam_count = do_Uint32(conn, SearchUsersPositiveRatedCourseParam_container, tvb, off, 'SearchUsersPositiveRatedCourseParam_count', 'count')

return off
end
function do_SearchUsersUserPointParam(conn, tree, tvb, off, field_unique_name, field_name)
local SearchUsersUserPointParam_container = tree:add(F.SearchUsersUserPointParam, tvb(off, 0))
	SearchUsersUserPointParam_container:set_text(field_name .. " (SearchUsersUserPointParam):")
	off = do_Structure(conn, SearchUsersUserPointParam_container, tvb, off, 'SearchUsersUserPointParam_Base', 'Base')
off, SearchUsersUserPointParam_Result_option = do_Uint32(conn, SearchUsersUserPointParam_container, tvb, off, 'SearchUsersUserPointParam_Result_option', 'Result_option')
off, SearchUsersUserPointParam_Unknown = do_Buffer(conn, SearchUsersUserPointParam_container, tvb, off, 'SearchUsersUserPointParam_Unknown', 'Unknown')
off = do_ResultRange(conn, SearchUsersUserPointParam_container, tvb, off, 'SearchUsersUserPointParam_Result_range', 'Result_range')

return off
end
function do_SyncUserProfileParam(conn, tree, tvb, off, field_unique_name, field_name)
local SyncUserProfileParam_container = tree:add(F.SyncUserProfileParam, tvb(off, 0))
	SyncUserProfileParam_container:set_text(field_name .. " (SyncUserProfileParam):")
	off = do_Structure(conn, SyncUserProfileParam_container, tvb, off, 'SyncUserProfileParam_Base', 'Base')
off, SyncUserProfileParam_Username = do_String(conn, SyncUserProfileParam_container, tvb, off, 'SyncUserProfileParam_Username', 'Username')
off = do_UnknownStruct1(conn, SyncUserProfileParam_container, tvb, off, 'SyncUserProfileParam_Unknown', 'Unknown')
off, SyncUserProfileParam_Unknown2 = do_qBuffer(conn, SyncUserProfileParam_container, tvb, off, 'SyncUserProfileParam_Unknown2', 'Unknown2')
off, SyncUserProfileParam_Unknown3 = do_Uint8(conn, SyncUserProfileParam_container, tvb, off, 'SyncUserProfileParam_Unknown3', 'Unknown3')
off, SyncUserProfileParam_Country_code = do_String(conn, SyncUserProfileParam_container, tvb, off, 'SyncUserProfileParam_Country_code', 'Country_code')
off, SyncUserProfileParam_Unknown4 = do_Bool(conn, SyncUserProfileParam_container, tvb, off, 'SyncUserProfileParam_Unknown4', 'Unknown4')
off, SyncUserProfileParam_Unknown5 = do_Bool(conn, SyncUserProfileParam_container, tvb, off, 'SyncUserProfileParam_Unknown5', 'Unknown5')
off, SyncUserProfileParam_Pseudo_device_id = do_String(conn, SyncUserProfileParam_container, tvb, off, 'SyncUserProfileParam_Pseudo_device_id', 'Pseudo_device_id')
off, SyncUserProfileParam_Unknown6 = do_Uint32(conn, SyncUserProfileParam_container, tvb, off, 'SyncUserProfileParam_Unknown6', 'Unknown6')

return off
end
function do_SyncUserProfileResult(conn, tree, tvb, off, field_unique_name, field_name)
local SyncUserProfileResult_container = tree:add(F.SyncUserProfileResult, tvb(off, 0))
	SyncUserProfileResult_container:set_text(field_name .. " (SyncUserProfileResult):")
	off = do_Structure(conn, SyncUserProfileResult_container, tvb, off, 'SyncUserProfileResult_Base', 'Base')
off, SyncUserProfileResult_User_id = do_PID(conn, SyncUserProfileResult_container, tvb, off, 'SyncUserProfileResult_User_id', 'User_id')
off, SyncUserProfileResult_Username = do_String(conn, SyncUserProfileResult_container, tvb, off, 'SyncUserProfileResult_Username', 'Username')
off = do_UnknownStruct1(conn, SyncUserProfileResult_container, tvb, off, 'SyncUserProfileResult_Unknown', 'Unknown')
off, SyncUserProfileResult_Unknown2 = do_qBuffer(conn, SyncUserProfileResult_container, tvb, off, 'SyncUserProfileResult_Unknown2', 'Unknown2')
off, SyncUserProfileResult_Unknown3 = do_Uint8(conn, SyncUserProfileResult_container, tvb, off, 'SyncUserProfileResult_Unknown3', 'Unknown3')
off, SyncUserProfileResult_Country_code = do_String(conn, SyncUserProfileResult_container, tvb, off, 'SyncUserProfileResult_Country_code', 'Country_code')
off, SyncUserProfileResult_Unknown4 = do_Uint8(conn, SyncUserProfileResult_container, tvb, off, 'SyncUserProfileResult_Unknown4', 'Unknown4')
off, SyncUserProfileResult_Unknown5 = do_Bool(conn, SyncUserProfileResult_container, tvb, off, 'SyncUserProfileResult_Unknown5', 'Unknown5')
off, SyncUserProfileResult_Unknown6 = do_Bool(conn, SyncUserProfileResult_container, tvb, off, 'SyncUserProfileResult_Unknown6', 'Unknown6')

return off
end
function do_UnknownStruct3(conn, tree, tvb, off, field_unique_name, field_name)
local UnknownStruct3_container = tree:add(F.UnknownStruct3, tvb(off, 0))
	UnknownStruct3_container:set_text(field_name .. " (UnknownStruct3):")
	off = do_Structure(conn, UnknownStruct3_container, tvb, off, 'UnknownStruct3_Base', 'Base')
off, UnknownStruct3_Unknown = do_Uint8(conn, UnknownStruct3_container, tvb, off, 'UnknownStruct3_Unknown', 'Unknown')
off, UnknownStruct3_Unknown2 = do_DateTime(conn, UnknownStruct3_container, tvb, off, 'UnknownStruct3_Unknown2', 'Unknown2')

return off
end
function do_UnknownStruct6(conn, tree, tvb, off, field_unique_name, field_name)
local UnknownStruct6_container = tree:add(F.UnknownStruct6, tvb(off, 0))
	UnknownStruct6_container:set_text(field_name .. " (UnknownStruct6):")
	off = do_Structure(conn, UnknownStruct6_container, tvb, off, 'UnknownStruct6_Base', 'Base')
off, UnknownStruct6_Unknown = do_Uint64(conn, UnknownStruct6_container, tvb, off, 'UnknownStruct6_Unknown', 'Unknown')
off, UnknownStruct6_Unknown2 = do_Uint32(conn, UnknownStruct6_container, tvb, off, 'UnknownStruct6_Unknown2', 'Unknown2')

return off
end
function do_UpdateCourseTagParam(conn, tree, tvb, off, field_unique_name, field_name)
local UpdateCourseTagParam_container = tree:add(F.UpdateCourseTagParam, tvb(off, 0))
	UpdateCourseTagParam_container:set_text(field_name .. " (UpdateCourseTagParam):")
	off = do_Structure(conn, UpdateCourseTagParam_container, tvb, off, 'UpdateCourseTagParam_Base', 'Base')
off, UpdateCourseTagParam_Data_id = do_Uint64(conn, UpdateCourseTagParam_container, tvb, off, 'UpdateCourseTagParam_Data_id', 'Data_id')
off, UpdateCourseTagParam_First_tag = do_Uint8(conn, UpdateCourseTagParam_container, tvb, off, 'UpdateCourseTagParam_First_tag', 'First_tag')
off, UpdateCourseTagParam_Second_tag = do_Uint8(conn, UpdateCourseTagParam_container, tvb, off, 'UpdateCourseTagParam_Second_tag', 'Second_tag')

return off
end
function do_UpdateMiiClothesParam(conn, tree, tvb, off, field_unique_name, field_name)
local UpdateMiiClothesParam_container = tree:add(F.UpdateMiiClothesParam, tvb(off, 0))
	UpdateMiiClothesParam_container:set_text(field_name .. " (UpdateMiiClothesParam):")
	off = do_Structure(conn, UpdateMiiClothesParam_container, tvb, off, 'UpdateMiiClothesParam_Base', 'Base')
off, UpdateMiiClothesParam_Unknown = do_Uint16(conn, UpdateMiiClothesParam_container, tvb, off, 'UpdateMiiClothesParam_Unknown', 'Unknown')
off, UpdateMiiClothesParam_Unknown2 = do_Uint16(conn, UpdateMiiClothesParam_container, tvb, off, 'UpdateMiiClothesParam_Unknown2', 'Unknown2')
off, UpdateMiiClothesParam_Unknown3 = do_Bool(conn, UpdateMiiClothesParam_container, tvb, off, 'UpdateMiiClothesParam_Unknown3', 'Unknown3')

return off
end
function do_CommonDataList(conn, tree, tvb, off, field_unique_name, field_name)
local CommonDataList_container = tree:add(F.CommonDataList, tvb(off, 0))
	CommonDataList_container:set_text(field_name .. " (CommonDataList):")
	off = do_Structure(conn, CommonDataList_container, tvb, off, 'CommonDataList_Base', 'Base')
local CommonDataList_Common_data_len = tvb(off, 4):le_uint()
	subCommonDataList_container = CommonDataList_container:add_le(F.CommonDataList_Common_data_len, tvb(off,4))
	off = off + 4
	for i=1,CommonDataList_Common_data_len do
	off, CommonDataList_Common_data_item = do_qBuffer(conn, subCommonDataList_container, tvb, off, 'CommonDataList_Common_data_item', 'Common_data')

	end
	

return off
end
function do_CompetitionRankingInfo(conn, tree, tvb, off, field_unique_name, field_name)
local CompetitionRankingInfo_container = tree:add(F.CompetitionRankingInfo, tvb(off, 0))
	CompetitionRankingInfo_container:set_text(field_name .. " (CompetitionRankingInfo):")
	off = do_Structure(conn, CompetitionRankingInfo_container, tvb, off, 'CompetitionRankingInfo_Base', 'Base')
off, CompetitionRankingInfo_Unknown = do_Uint32(conn, CompetitionRankingInfo_container, tvb, off, 'CompetitionRankingInfo_Unknown', 'Unknown')
off, CompetitionRankingInfo_Unknown2 = do_Uint32(conn, CompetitionRankingInfo_container, tvb, off, 'CompetitionRankingInfo_Unknown2', 'Unknown2')
local CompetitionRankingInfo_Unknown3_len = tvb(off, 4):le_uint()
	subCompetitionRankingInfo_container = CompetitionRankingInfo_container:add_le(F.CompetitionRankingInfo_Unknown3_len, tvb(off,4))
	off = off + 4
	for i=1,CompetitionRankingInfo_Unknown3_len do
	off, CompetitionRankingInfo_Unknown3_item = do_Uint32(conn, subCompetitionRankingInfo_container, tvb, off, 'CompetitionRankingInfo_Unknown3_item', 'Unknown3')

	end
	

return off
end
function do_GetCompetitionInfoParam(conn, tree, tvb, off, field_unique_name, field_name)
local GetCompetitionInfoParam_container = tree:add(F.GetCompetitionInfoParam, tvb(off, 0))
	GetCompetitionInfoParam_container:set_text(field_name .. " (GetCompetitionInfoParam):")
	off = do_Structure(conn, GetCompetitionInfoParam_container, tvb, off, 'GetCompetitionInfoParam_Base', 'Base')
off, GetCompetitionInfoParam_Unknown = do_Uint8(conn, GetCompetitionInfoParam_container, tvb, off, 'GetCompetitionInfoParam_Unknown', 'Unknown')
off = do_ResultRange(conn, GetCompetitionInfoParam_container, tvb, off, 'GetCompetitionInfoParam_Result_range', 'Result_range')

return off
end
function do_BlacklistedPrincipal(conn, tree, tvb, off, field_unique_name, field_name)
local BlacklistedPrincipal_container = tree:add(F.BlacklistedPrincipal, tvb(off, 0))
	BlacklistedPrincipal_container:set_text(field_name .. " (BlacklistedPrincipal):")
	off = do_PrincipalBasicInfo(conn, BlacklistedPrincipal_container, tvb, off, 'BlacklistedPrincipal_Principal_basic_info', 'Principal_basic_info')
off = do_GameKey(conn, BlacklistedPrincipal_container, tvb, off, 'BlacklistedPrincipal_Game_key', 'Game_key')
off, BlacklistedPrincipal_Blacklisted_since = do_DateTime(conn, BlacklistedPrincipal_container, tvb, off, 'BlacklistedPrincipal_Blacklisted_since', 'Blacklisted_since')

return off
end
function do_FriendInfo(conn, tree, tvb, off, field_unique_name, field_name)
local FriendInfo_container = tree:add(F.FriendInfo, tvb(off, 0))
	FriendInfo_container:set_text(field_name .. " (FriendInfo):")
	off = do_NNAInfo(conn, FriendInfo_container, tvb, off, 'FriendInfo_NNA_Info', 'NNA_Info')
off = do_NintendoPresenceV2(conn, FriendInfo_container, tvb, off, 'FriendInfo_Nintendo_presence', 'Nintendo_presence')
off = do_Comment(conn, FriendInfo_container, tvb, off, 'FriendInfo_Status_message', 'Status_message')
off, FriendInfo_Became_friend = do_DateTime(conn, FriendInfo_container, tvb, off, 'FriendInfo_Became_friend', 'Became_friend')
off, FriendInfo_Last_online = do_DateTime(conn, FriendInfo_container, tvb, off, 'FriendInfo_Last_online', 'Last_online')
off, FriendInfo_Unknown = do_Uint64(conn, FriendInfo_container, tvb, off, 'FriendInfo_Unknown', 'Unknown')

return off
end
function do_FriendRequest(conn, tree, tvb, off, field_unique_name, field_name)
local FriendRequest_container = tree:add(F.FriendRequest, tvb(off, 0))
	FriendRequest_container:set_text(field_name .. " (FriendRequest):")
	off = do_PrincipalBasicInfo(conn, FriendRequest_container, tvb, off, 'FriendRequest_Principal_basic_info', 'Principal_basic_info')
off = do_FriendRequestMessage(conn, FriendRequest_container, tvb, off, 'FriendRequest_Message', 'Message')
off, FriendRequest_Sent_on = do_DateTime(conn, FriendRequest_container, tvb, off, 'FriendRequest_Sent_on', 'Sent_on')

return off
end
function do_PersistentNotificationList(conn, tree, tvb, off, field_unique_name, field_name)
local PersistentNotificationList_container = tree:add(F.PersistentNotificationList, tvb(off, 0))
	PersistentNotificationList_container:set_text(field_name .. " (PersistentNotificationList):")
	local PersistentNotificationList_Notifications_len = tvb(off, 4):le_uint()
	subPersistentNotificationList_container = PersistentNotificationList_container:add_le(F.PersistentNotificationList_Notifications_len, tvb(off,4))
	off = off + 4
	for i=1,PersistentNotificationList_Notifications_len do
	off = do_PersistentNotification(conn, subPersistentNotificationList_container, tvb, off, 'PersistentNotificationList_Notifications_item', 'Notifications')

	end
	

return off
end
function do_PrincipalPreference(conn, tree, tvb, off, field_unique_name, field_name)
local PrincipalPreference_container = tree:add(F.PrincipalPreference, tvb(off, 0))
	PrincipalPreference_container:set_text(field_name .. " (PrincipalPreference):")
	off, PrincipalPreference_Unknown = do_Bool(conn, PrincipalPreference_container, tvb, off, 'PrincipalPreference_Unknown', 'Unknown')
off, PrincipalPreference_Unknown2 = do_Bool(conn, PrincipalPreference_container, tvb, off, 'PrincipalPreference_Unknown2', 'Unknown2')
off, PrincipalPreference_Unknown3 = do_Bool(conn, PrincipalPreference_container, tvb, off, 'PrincipalPreference_Unknown3', 'Unknown3')

return off
end
function do_PrincipalRequestBlockSetting(conn, tree, tvb, off, field_unique_name, field_name)
local PrincipalRequestBlockSetting_container = tree:add(F.PrincipalRequestBlockSetting, tvb(off, 0))
	PrincipalRequestBlockSetting_container:set_text(field_name .. " (PrincipalRequestBlockSetting):")
	off, PrincipalRequestBlockSetting_Unknown = do_Uint32(conn, PrincipalRequestBlockSetting_container, tvb, off, 'PrincipalRequestBlockSetting_Unknown', 'Unknown')
off, PrincipalRequestBlockSetting_Unknown2 = do_Bool(conn, PrincipalRequestBlockSetting_container, tvb, off, 'PrincipalRequestBlockSetting_Unknown2', 'Unknown2')

return off
end
function do_GameSession(conn, tree, tvb, off, field_unique_name, field_name)
local GameSession_container = tree:add(F.GameSession, tvb(off, 0))
	GameSession_container:set_text(field_name .. " (GameSession):")
	off = do_Structure(conn, GameSession_container, tvb, off, 'GameSession_Base', 'Base')
off, GameSession_m_typeID = do_Uint32(conn, GameSession_container, tvb, off, 'GameSession_m_typeID', 'm_typeID')
local GameSession_m_attributes_len = tvb(off, 4):le_uint()
	subGameSession_container = GameSession_container:add_le(F.GameSession_m_attributes_len, tvb(off,4))
	off = off + 4
	for i=1,GameSession_m_attributes_len do
	off = do_Property(conn, subGameSession_container, tvb, off, 'GameSession_m_attributes_item', 'm_attributes')

	end
	

return off
end
function do_GameSessionSearchResult(conn, tree, tvb, off, field_unique_name, field_name)
local GameSessionSearchResult_container = tree:add(F.GameSessionSearchResult, tvb(off, 0))
	GameSessionSearchResult_container:set_text(field_name .. " (GameSessionSearchResult):")
	off = do_Structure(conn, GameSessionSearchResult_container, tvb, off, 'GameSessionSearchResult_Base', 'Base')
off = do_GameSessionKey(conn, GameSessionSearchResult_container, tvb, off, 'GameSessionSearchResult_m_sessionKey', 'm_sessionKey')
off, GameSessionSearchResult_m_hostPID = do_Uint32(conn, GameSessionSearchResult_container, tvb, off, 'GameSessionSearchResult_m_hostPID', 'm_hostPID')
local GameSessionSearchResult_m_hostURLs_len = tvb(off, 4):le_uint()
	subGameSessionSearchResult_container = GameSessionSearchResult_container:add_le(F.GameSessionSearchResult_m_hostURLs_len, tvb(off,4))
	off = off + 4
	for i=1,GameSessionSearchResult_m_hostURLs_len do
	off, GameSessionSearchResult_m_hostURLs_item = do_StationURL(conn, subGameSessionSearchResult_container, tvb, off, 'GameSessionSearchResult_m_hostURLs_item', 'm_hostURLs')

	end
	
local GameSessionSearchResult_m_attributes_len = tvb(off, 4):le_uint()
	subGameSessionSearchResult_container = GameSessionSearchResult_container:add_le(F.GameSessionSearchResult_m_attributes_len, tvb(off,4))
	off = off + 4
	for i=1,GameSessionSearchResult_m_attributes_len do
	off = do_Property(conn, subGameSessionSearchResult_container, tvb, off, 'GameSessionSearchResult_m_attributes_item', 'm_attributes')

	end
	

return off
end
function do_GameSessionUpdate(conn, tree, tvb, off, field_unique_name, field_name)
local GameSessionUpdate_container = tree:add(F.GameSessionUpdate, tvb(off, 0))
	GameSessionUpdate_container:set_text(field_name .. " (GameSessionUpdate):")
	off = do_Structure(conn, GameSessionUpdate_container, tvb, off, 'GameSessionUpdate_Base', 'Base')
off = do_GameSessionKey(conn, GameSessionUpdate_container, tvb, off, 'GameSessionUpdate_m_sessionKey', 'm_sessionKey')
local GameSessionUpdate_m_attributes_len = tvb(off, 4):le_uint()
	subGameSessionUpdate_container = GameSessionUpdate_container:add_le(F.GameSessionUpdate_m_attributes_len, tvb(off,4))
	off = off + 4
	for i=1,GameSessionUpdate_m_attributes_len do
	off = do_Property(conn, subGameSessionUpdate_container, tvb, off, 'GameSessionUpdate_m_attributes_item', 'm_attributes')

	end
	

return off
end
function do_GameSessionParticipant(conn, tree, tvb, off, field_unique_name, field_name)
local GameSessionParticipant_container = tree:add(F.GameSessionParticipant, tvb(off, 0))
	GameSessionParticipant_container:set_text(field_name .. " (GameSessionParticipant):")
	off = do_Structure(conn, GameSessionParticipant_container, tvb, off, 'GameSessionParticipant_Base', 'Base')
off, GameSessionParticipant_m_PID = do_Uint32(conn, GameSessionParticipant_container, tvb, off, 'GameSessionParticipant_m_PID', 'm_PID')
off, GameSessionParticipant_m_name = do_String(conn, GameSessionParticipant_container, tvb, off, 'GameSessionParticipant_m_name', 'm_name')
local GameSessionParticipant_m_stationURLs_len = tvb(off, 4):le_uint()
	subGameSessionParticipant_container = GameSessionParticipant_container:add_le(F.GameSessionParticipant_m_stationURLs_len, tvb(off,4))
	off = off + 4
	for i=1,GameSessionParticipant_m_stationURLs_len do
	off, GameSessionParticipant_m_stationURLs_item = do_StationURL(conn, subGameSessionParticipant_container, tvb, off, 'GameSessionParticipant_m_stationURLs_item', 'm_stationURLs')

	end
	

return off
end
function do_GameSessionInvitation(conn, tree, tvb, off, field_unique_name, field_name)
local GameSessionInvitation_container = tree:add(F.GameSessionInvitation, tvb(off, 0))
	GameSessionInvitation_container:set_text(field_name .. " (GameSessionInvitation):")
	off = do_Structure(conn, GameSessionInvitation_container, tvb, off, 'GameSessionInvitation_Base', 'Base')
off = do_GameSessionKey(conn, GameSessionInvitation_container, tvb, off, 'GameSessionInvitation_m_sessionKey', 'm_sessionKey')
local GameSessionInvitation_m_recipientPIDs_len = tvb(off, 4):le_uint()
	subGameSessionInvitation_container = GameSessionInvitation_container:add_le(F.GameSessionInvitation_m_recipientPIDs_len, tvb(off,4))
	off = off + 4
	for i=1,GameSessionInvitation_m_recipientPIDs_len do
	off, GameSessionInvitation_m_recipientPIDs_item = do_Uint32(conn, subGameSessionInvitation_container, tvb, off, 'GameSessionInvitation_m_recipientPIDs_item', 'm_recipientPIDs')

	end
	
off, GameSessionInvitation_m_message = do_String(conn, GameSessionInvitation_container, tvb, off, 'GameSessionInvitation_m_message', 'm_message')

return off
end
function do_GameSessionInvitationSent(conn, tree, tvb, off, field_unique_name, field_name)
local GameSessionInvitationSent_container = tree:add(F.GameSessionInvitationSent, tvb(off, 0))
	GameSessionInvitationSent_container:set_text(field_name .. " (GameSessionInvitationSent):")
	off = do_Structure(conn, GameSessionInvitationSent_container, tvb, off, 'GameSessionInvitationSent_Base', 'Base')
off = do_GameSessionKey(conn, GameSessionInvitationSent_container, tvb, off, 'GameSessionInvitationSent_m_sessionKey', 'm_sessionKey')
off, GameSessionInvitationSent_m_recipientPID = do_Uint32(conn, GameSessionInvitationSent_container, tvb, off, 'GameSessionInvitationSent_m_recipientPID', 'm_recipientPID')
off, GameSessionInvitationSent_m_message = do_String(conn, GameSessionInvitationSent_container, tvb, off, 'GameSessionInvitationSent_m_message', 'm_message')
off, GameSessionInvitationSent_m_creationTime = do_DateTime(conn, GameSessionInvitationSent_container, tvb, off, 'GameSessionInvitationSent_m_creationTime', 'm_creationTime')

return off
end
function do_GameSessionInvitationReceived(conn, tree, tvb, off, field_unique_name, field_name)
local GameSessionInvitationReceived_container = tree:add(F.GameSessionInvitationReceived, tvb(off, 0))
	GameSessionInvitationReceived_container:set_text(field_name .. " (GameSessionInvitationReceived):")
	off = do_Structure(conn, GameSessionInvitationReceived_container, tvb, off, 'GameSessionInvitationReceived_Base', 'Base')
off = do_GameSessionKey(conn, GameSessionInvitationReceived_container, tvb, off, 'GameSessionInvitationReceived_m_sessionKey', 'm_sessionKey')
off, GameSessionInvitationReceived_m_senderPID = do_Uint32(conn, GameSessionInvitationReceived_container, tvb, off, 'GameSessionInvitationReceived_m_senderPID', 'm_senderPID')
off, GameSessionInvitationReceived_m_message = do_String(conn, GameSessionInvitationReceived_container, tvb, off, 'GameSessionInvitationReceived_m_message', 'm_message')
off, GameSessionInvitationReceived_m_creationTime = do_DateTime(conn, GameSessionInvitationReceived_container, tvb, off, 'GameSessionInvitationReceived_m_creationTime', 'm_creationTime')

return off
end
function do_GameSessionQuery(conn, tree, tvb, off, field_unique_name, field_name)
local GameSessionQuery_container = tree:add(F.GameSessionQuery, tvb(off, 0))
	GameSessionQuery_container:set_text(field_name .. " (GameSessionQuery):")
	off = do_Structure(conn, GameSessionQuery_container, tvb, off, 'GameSessionQuery_Base', 'Base')
off, GameSessionQuery_m_typeID = do_Uint32(conn, GameSessionQuery_container, tvb, off, 'GameSessionQuery_m_typeID', 'm_typeID')
off, GameSessionQuery_m_queryID = do_Uint32(conn, GameSessionQuery_container, tvb, off, 'GameSessionQuery_m_queryID', 'm_queryID')
local GameSessionQuery_m_parameters_len = tvb(off, 4):le_uint()
	subGameSessionQuery_container = GameSessionQuery_container:add_le(F.GameSessionQuery_m_parameters_len, tvb(off,4))
	off = off + 4
	for i=1,GameSessionQuery_m_parameters_len do
	off = do_Property(conn, subGameSessionQuery_container, tvb, off, 'GameSessionQuery_m_parameters_item', 'm_parameters')

	end
	

return off
end
function do_GameSessionSocialQuery(conn, tree, tvb, off, field_unique_name, field_name)
local GameSessionSocialQuery_container = tree:add(F.GameSessionSocialQuery, tvb(off, 0))
	GameSessionSocialQuery_container:set_text(field_name .. " (GameSessionSocialQuery):")
	off = do_Structure(conn, GameSessionSocialQuery_container, tvb, off, 'GameSessionSocialQuery_Base', 'Base')
off, GameSessionSocialQuery_m_typeID = do_Uint32(conn, GameSessionSocialQuery_container, tvb, off, 'GameSessionSocialQuery_m_typeID', 'm_typeID')
off, GameSessionSocialQuery_m_queryID = do_Uint32(conn, GameSessionSocialQuery_container, tvb, off, 'GameSessionSocialQuery_m_queryID', 'm_queryID')
local GameSessionSocialQuery_m_parameters_len = tvb(off, 4):le_uint()
	subGameSessionSocialQuery_container = GameSessionSocialQuery_container:add_le(F.GameSessionSocialQuery_m_parameters_len, tvb(off,4))
	off = off + 4
	for i=1,GameSessionSocialQuery_m_parameters_len do
	off = do_Property(conn, subGameSessionSocialQuery_container, tvb, off, 'GameSessionSocialQuery_m_parameters_item', 'm_parameters')

	end
	
local GameSessionSocialQuery_m_participantIDs_len = tvb(off, 4):le_uint()
	subGameSessionSocialQuery_container = GameSessionSocialQuery_container:add_le(F.GameSessionSocialQuery_m_participantIDs_len, tvb(off,4))
	off = off + 4
	for i=1,GameSessionSocialQuery_m_participantIDs_len do
	off, GameSessionSocialQuery_m_participantIDs_item = do_Uint32(conn, subGameSessionSocialQuery_container, tvb, off, 'GameSessionSocialQuery_m_participantIDs_item', 'm_participantIDs')

	end
	

return off
end
function do_GameSessionMessage(conn, tree, tvb, off, field_unique_name, field_name)
local GameSessionMessage_container = tree:add(F.GameSessionMessage, tvb(off, 0))
	GameSessionMessage_container:set_text(field_name .. " (GameSessionMessage):")
	off = do_Structure(conn, GameSessionMessage_container, tvb, off, 'GameSessionMessage_Base', 'Base')
off = do_GameSessionKey(conn, GameSessionMessage_container, tvb, off, 'GameSessionMessage_m_sessionKey', 'm_sessionKey')
off, GameSessionMessage_m_message = do_String(conn, GameSessionMessage_container, tvb, off, 'GameSessionMessage_m_message', 'm_message')

return off
end
function do_GameSessionSearchWithParticipantsResult(conn, tree, tvb, off, field_unique_name, field_name)
local GameSessionSearchWithParticipantsResult_container = tree:add(F.GameSessionSearchWithParticipantsResult, tvb(off, 0))
	GameSessionSearchWithParticipantsResult_container:set_text(field_name .. " (GameSessionSearchWithParticipantsResult):")
	off = do_Structure(conn, GameSessionSearchWithParticipantsResult_container, tvb, off, 'GameSessionSearchWithParticipantsResult_Base', 'Base')
local GameSessionSearchWithParticipantsResult_m_participantIDs_len = tvb(off, 4):le_uint()
	subGameSessionSearchWithParticipantsResult_container = GameSessionSearchWithParticipantsResult_container:add_le(F.GameSessionSearchWithParticipantsResult_m_participantIDs_len, tvb(off,4))
	off = off + 4
	for i=1,GameSessionSearchWithParticipantsResult_m_participantIDs_len do
	off, GameSessionSearchWithParticipantsResult_m_participantIDs_item = do_Uint32(conn, subGameSessionSearchWithParticipantsResult_container, tvb, off, 'GameSessionSearchWithParticipantsResult_m_participantIDs_item', 'm_participantIDs')

	end
	

return off
end
function do_GameSessionUnsuccessfulJoinSession(conn, tree, tvb, off, field_unique_name, field_name)
local GameSessionUnsuccessfulJoinSession_container = tree:add(F.GameSessionUnsuccessfulJoinSession, tvb(off, 0))
	GameSessionUnsuccessfulJoinSession_container:set_text(field_name .. " (GameSessionUnsuccessfulJoinSession):")
	off = do_Structure(conn, GameSessionUnsuccessfulJoinSession_container, tvb, off, 'GameSessionUnsuccessfulJoinSession_Base', 'Base')
off = do_GameSessionKey(conn, GameSessionUnsuccessfulJoinSession_container, tvb, off, 'GameSessionUnsuccessfulJoinSession_m_sessionKey', 'm_sessionKey')
off, GameSessionUnsuccessfulJoinSession_m_errorCategory = do_Uint32(conn, GameSessionUnsuccessfulJoinSession_container, tvb, off, 'GameSessionUnsuccessfulJoinSession_m_errorCategory', 'm_errorCategory')
off, GameSessionUnsuccessfulJoinSession_m_errorCode = do_Sint32(conn, GameSessionUnsuccessfulJoinSession_container, tvb, off, 'GameSessionUnsuccessfulJoinSession_m_errorCode', 'm_errorCode')

return off
end
function do_Ranking2ScoreData(conn, tree, tvb, off, field_unique_name, field_name)
local Ranking2ScoreData_container = tree:add(F.Ranking2ScoreData, tvb(off, 0))
	Ranking2ScoreData_container:set_text(field_name .. " (Ranking2ScoreData):")
	off = do_Structure(conn, Ranking2ScoreData_container, tvb, off, 'Ranking2ScoreData_Base', 'Base')
off, Ranking2ScoreData_misc = do_Uint64(conn, Ranking2ScoreData_container, tvb, off, 'Ranking2ScoreData_misc', 'misc')
off, Ranking2ScoreData_category = do_Uint32(conn, Ranking2ScoreData_container, tvb, off, 'Ranking2ScoreData_category', 'category')
off, Ranking2ScoreData_score = do_Uint32(conn, Ranking2ScoreData_container, tvb, off, 'Ranking2ScoreData_score', 'score')

return off
end
function do_Ranking2GetParam(conn, tree, tvb, off, field_unique_name, field_name)
local Ranking2GetParam_container = tree:add(F.Ranking2GetParam, tvb(off, 0))
	Ranking2GetParam_container:set_text(field_name .. " (Ranking2GetParam):")
	off = do_Structure(conn, Ranking2GetParam_container, tvb, off, 'Ranking2GetParam_Base', 'Base')
off, Ranking2GetParam_nexUniqueId = do_Uint64(conn, Ranking2GetParam_container, tvb, off, 'Ranking2GetParam_nexUniqueId', 'nexUniqueId')
off, Ranking2GetParam_principalId = do_PID(conn, Ranking2GetParam_container, tvb, off, 'Ranking2GetParam_principalId', 'principalId')
off, Ranking2GetParam_category = do_Uint32(conn, Ranking2GetParam_container, tvb, off, 'Ranking2GetParam_category', 'category')
off, Ranking2GetParam_offset = do_Uint32(conn, Ranking2GetParam_container, tvb, off, 'Ranking2GetParam_offset', 'offset')
off, Ranking2GetParam_length = do_Uint32(conn, Ranking2GetParam_container, tvb, off, 'Ranking2GetParam_length', 'length')
off, Ranking2GetParam_sortFlags = do_Uint32(conn, Ranking2GetParam_container, tvb, off, 'Ranking2GetParam_sortFlags', 'sortFlags')
off, Ranking2GetParam_optionFlags = do_Uint32(conn, Ranking2GetParam_container, tvb, off, 'Ranking2GetParam_optionFlags', 'optionFlags')
off, Ranking2GetParam_mode = do_Uint8(conn, Ranking2GetParam_container, tvb, off, 'Ranking2GetParam_mode', 'mode')
off, Ranking2GetParam_numSeasonsToGoBack = do_Uint8(conn, Ranking2GetParam_container, tvb, off, 'Ranking2GetParam_numSeasonsToGoBack', 'numSeasonsToGoBack')

return off
end
function do_Ranking2GetByListParam(conn, tree, tvb, off, field_unique_name, field_name)
local Ranking2GetByListParam_container = tree:add(F.Ranking2GetByListParam, tvb(off, 0))
	Ranking2GetByListParam_container:set_text(field_name .. " (Ranking2GetByListParam):")
	off = do_Structure(conn, Ranking2GetByListParam_container, tvb, off, 'Ranking2GetByListParam_Base', 'Base')
off, Ranking2GetByListParam_category = do_Uint32(conn, Ranking2GetByListParam_container, tvb, off, 'Ranking2GetByListParam_category', 'category')
off, Ranking2GetByListParam_offset = do_Uint32(conn, Ranking2GetByListParam_container, tvb, off, 'Ranking2GetByListParam_offset', 'offset')
off, Ranking2GetByListParam_length = do_Uint32(conn, Ranking2GetByListParam_container, tvb, off, 'Ranking2GetByListParam_length', 'length')
off, Ranking2GetByListParam_sortFlags = do_Uint32(conn, Ranking2GetByListParam_container, tvb, off, 'Ranking2GetByListParam_sortFlags', 'sortFlags')
off, Ranking2GetByListParam_optionFlags = do_Uint32(conn, Ranking2GetByListParam_container, tvb, off, 'Ranking2GetByListParam_optionFlags', 'optionFlags')
off, Ranking2GetByListParam_numSeasonsToGoBack = do_Uint8(conn, Ranking2GetByListParam_container, tvb, off, 'Ranking2GetByListParam_numSeasonsToGoBack', 'numSeasonsToGoBack')

return off
end
function do_Ranking2Info(conn, tree, tvb, off, field_unique_name, field_name)
local Ranking2Info_container = tree:add(F.Ranking2Info, tvb(off, 0))
	Ranking2Info_container:set_text(field_name .. " (Ranking2Info):")
	off = do_Structure(conn, Ranking2Info_container, tvb, off, 'Ranking2Info_Base', 'Base')
local Ranking2Info_rankDataList_len = tvb(off, 4):le_uint()
	subRanking2Info_container = Ranking2Info_container:add_le(F.Ranking2Info_rankDataList_len, tvb(off,4))
	off = off + 4
	for i=1,Ranking2Info_rankDataList_len do
	off = do_Ranking2RankData(conn, subRanking2Info_container, tvb, off, 'Ranking2Info_rankDataList_item', 'rankDataList')

	end
	
off, Ranking2Info_lowestRank = do_Uint32(conn, Ranking2Info_container, tvb, off, 'Ranking2Info_lowestRank', 'lowestRank')
off, Ranking2Info_numRankedIn = do_Uint32(conn, Ranking2Info_container, tvb, off, 'Ranking2Info_numRankedIn', 'numRankedIn')
off, Ranking2Info_season = do_Sint32(conn, Ranking2Info_container, tvb, off, 'Ranking2Info_season', 'season')

return off
end
function do_Ranking2CategorySetting(conn, tree, tvb, off, field_unique_name, field_name)
local Ranking2CategorySetting_container = tree:add(F.Ranking2CategorySetting, tvb(off, 0))
	Ranking2CategorySetting_container:set_text(field_name .. " (Ranking2CategorySetting):")
	off = do_Structure(conn, Ranking2CategorySetting_container, tvb, off, 'Ranking2CategorySetting_Base', 'Base')
off, Ranking2CategorySetting_minScore = do_Uint32(conn, Ranking2CategorySetting_container, tvb, off, 'Ranking2CategorySetting_minScore', 'minScore')
off, Ranking2CategorySetting_maxScore = do_Uint32(conn, Ranking2CategorySetting_container, tvb, off, 'Ranking2CategorySetting_maxScore', 'maxScore')
off, Ranking2CategorySetting_lowestRank = do_Uint32(conn, Ranking2CategorySetting_container, tvb, off, 'Ranking2CategorySetting_lowestRank', 'lowestRank')
off, Ranking2CategorySetting_resetMonth = do_Uint16(conn, Ranking2CategorySetting_container, tvb, off, 'Ranking2CategorySetting_resetMonth', 'resetMonth')
off, Ranking2CategorySetting_resetDay = do_Uint8(conn, Ranking2CategorySetting_container, tvb, off, 'Ranking2CategorySetting_resetDay', 'resetDay')
off, Ranking2CategorySetting_resetHour = do_Uint8(conn, Ranking2CategorySetting_container, tvb, off, 'Ranking2CategorySetting_resetHour', 'resetHour')
off, Ranking2CategorySetting_resetMode = do_Uint8(conn, Ranking2CategorySetting_container, tvb, off, 'Ranking2CategorySetting_resetMode', 'resetMode')
off, Ranking2CategorySetting_maxSeasonsToGoBack = do_Uint8(conn, Ranking2CategorySetting_container, tvb, off, 'Ranking2CategorySetting_maxSeasonsToGoBack', 'maxSeasonsToGoBack')
off, Ranking2CategorySetting_scoreOrder = do_Bool(conn, Ranking2CategorySetting_container, tvb, off, 'Ranking2CategorySetting_scoreOrder', 'scoreOrder')

return off
end
function do_Ranking2ChartInfoInput(conn, tree, tvb, off, field_unique_name, field_name)
local Ranking2ChartInfoInput_container = tree:add(F.Ranking2ChartInfoInput, tvb(off, 0))
	Ranking2ChartInfoInput_container:set_text(field_name .. " (Ranking2ChartInfoInput):")
	off = do_Structure(conn, Ranking2ChartInfoInput_container, tvb, off, 'Ranking2ChartInfoInput_Base', 'Base')
off, Ranking2ChartInfoInput_chartIndex = do_Uint32(conn, Ranking2ChartInfoInput_container, tvb, off, 'Ranking2ChartInfoInput_chartIndex', 'chartIndex')
off, Ranking2ChartInfoInput_numSeasonsToGoBack = do_Uint8(conn, Ranking2ChartInfoInput_container, tvb, off, 'Ranking2ChartInfoInput_numSeasonsToGoBack', 'numSeasonsToGoBack')

return off
end
function do_Ranking2ChartInfo(conn, tree, tvb, off, field_unique_name, field_name)
local Ranking2ChartInfo_container = tree:add(F.Ranking2ChartInfo, tvb(off, 0))
	Ranking2ChartInfo_container:set_text(field_name .. " (Ranking2ChartInfo):")
	off = do_Structure(conn, Ranking2ChartInfo_container, tvb, off, 'Ranking2ChartInfo_Base', 'Base')
off, Ranking2ChartInfo_createTime = do_DateTime(conn, Ranking2ChartInfo_container, tvb, off, 'Ranking2ChartInfo_createTime', 'createTime')
off, Ranking2ChartInfo_index = do_Uint32(conn, Ranking2ChartInfo_container, tvb, off, 'Ranking2ChartInfo_index', 'index')
off, Ranking2ChartInfo_category = do_Uint32(conn, Ranking2ChartInfo_container, tvb, off, 'Ranking2ChartInfo_category', 'category')
off, Ranking2ChartInfo_season = do_Sint32(conn, Ranking2ChartInfo_container, tvb, off, 'Ranking2ChartInfo_season', 'season')
off, Ranking2ChartInfo_binsSize = do_Uint8(conn, Ranking2ChartInfo_container, tvb, off, 'Ranking2ChartInfo_binsSize', 'binsSize')
off, Ranking2ChartInfo_samplingRate = do_Uint8(conn, Ranking2ChartInfo_container, tvb, off, 'Ranking2ChartInfo_samplingRate', 'samplingRate')
off, Ranking2ChartInfo_scoreOrder = do_Bool(conn, Ranking2ChartInfo_container, tvb, off, 'Ranking2ChartInfo_scoreOrder', 'scoreOrder')
off, Ranking2ChartInfo_estimateLength = do_Uint32(conn, Ranking2ChartInfo_container, tvb, off, 'Ranking2ChartInfo_estimateLength', 'estimateLength')
off, Ranking2ChartInfo_estimateHighestScore = do_Uint32(conn, Ranking2ChartInfo_container, tvb, off, 'Ranking2ChartInfo_estimateHighestScore', 'estimateHighestScore')
off, Ranking2ChartInfo_estimateLowestScore = do_Uint32(conn, Ranking2ChartInfo_container, tvb, off, 'Ranking2ChartInfo_estimateLowestScore', 'estimateLowestScore')
off, Ranking2ChartInfo_estimateMedianScore = do_Uint32(conn, Ranking2ChartInfo_container, tvb, off, 'Ranking2ChartInfo_estimateMedianScore', 'estimateMedianScore')
off, Ranking2ChartInfo_estimateAverageScore = do_Double(conn, Ranking2ChartInfo_container, tvb, off, 'Ranking2ChartInfo_estimateAverageScore', 'estimateAverageScore')
off, Ranking2ChartInfo_highestBinsScore = do_Uint32(conn, Ranking2ChartInfo_container, tvb, off, 'Ranking2ChartInfo_highestBinsScore', 'highestBinsScore')
off, Ranking2ChartInfo_lowestBinsScore = do_Uint32(conn, Ranking2ChartInfo_container, tvb, off, 'Ranking2ChartInfo_lowestBinsScore', 'lowestBinsScore')
off, Ranking2ChartInfo_binsWidth = do_Uint32(conn, Ranking2ChartInfo_container, tvb, off, 'Ranking2ChartInfo_binsWidth', 'binsWidth')
off, Ranking2ChartInfo_attribute1 = do_Uint32(conn, Ranking2ChartInfo_container, tvb, off, 'Ranking2ChartInfo_attribute1', 'attribute1')
off, Ranking2ChartInfo_attribute2 = do_Uint32(conn, Ranking2ChartInfo_container, tvb, off, 'Ranking2ChartInfo_attribute2', 'attribute2')
local Ranking2ChartInfo_quantities_len = tvb(off, 4):le_uint()
	subRanking2ChartInfo_container = Ranking2ChartInfo_container:add_le(F.Ranking2ChartInfo_quantities_len, tvb(off,4))
	off = off + 4
	for i=1,Ranking2ChartInfo_quantities_len do
	off, Ranking2ChartInfo_quantities_item = do_Uint32(conn, subRanking2ChartInfo_container, tvb, off, 'Ranking2ChartInfo_quantities_item', 'quantities')

	end
	

return off
end
function do_Ranking2EstimateScoreRankInput(conn, tree, tvb, off, field_unique_name, field_name)
local Ranking2EstimateScoreRankInput_container = tree:add(F.Ranking2EstimateScoreRankInput, tvb(off, 0))
	Ranking2EstimateScoreRankInput_container:set_text(field_name .. " (Ranking2EstimateScoreRankInput):")
	off = do_Structure(conn, Ranking2EstimateScoreRankInput_container, tvb, off, 'Ranking2EstimateScoreRankInput_Base', 'Base')
off, Ranking2EstimateScoreRankInput_category = do_Uint32(conn, Ranking2EstimateScoreRankInput_container, tvb, off, 'Ranking2EstimateScoreRankInput_category', 'category')
off, Ranking2EstimateScoreRankInput_numSeasonsToGoBack = do_Uint8(conn, Ranking2EstimateScoreRankInput_container, tvb, off, 'Ranking2EstimateScoreRankInput_numSeasonsToGoBack', 'numSeasonsToGoBack')
off, Ranking2EstimateScoreRankInput_score = do_Uint32(conn, Ranking2EstimateScoreRankInput_container, tvb, off, 'Ranking2EstimateScoreRankInput_score', 'score')

return off
end
function do_Ranking2EstimateScoreRankOutput(conn, tree, tvb, off, field_unique_name, field_name)
local Ranking2EstimateScoreRankOutput_container = tree:add(F.Ranking2EstimateScoreRankOutput, tvb(off, 0))
	Ranking2EstimateScoreRankOutput_container:set_text(field_name .. " (Ranking2EstimateScoreRankOutput):")
	off = do_Structure(conn, Ranking2EstimateScoreRankOutput_container, tvb, off, 'Ranking2EstimateScoreRankOutput_Base', 'Base')
off, Ranking2EstimateScoreRankOutput_rank = do_Uint32(conn, Ranking2EstimateScoreRankOutput_container, tvb, off, 'Ranking2EstimateScoreRankOutput_rank', 'rank')
off, Ranking2EstimateScoreRankOutput_length = do_Uint32(conn, Ranking2EstimateScoreRankOutput_container, tvb, off, 'Ranking2EstimateScoreRankOutput_length', 'length')
off, Ranking2EstimateScoreRankOutput_score = do_Uint32(conn, Ranking2EstimateScoreRankOutput_container, tvb, off, 'Ranking2EstimateScoreRankOutput_score', 'score')
off, Ranking2EstimateScoreRankOutput_category = do_Uint32(conn, Ranking2EstimateScoreRankOutput_container, tvb, off, 'Ranking2EstimateScoreRankOutput_category', 'category')
off, Ranking2EstimateScoreRankOutput_season = do_Sint32(conn, Ranking2EstimateScoreRankOutput_container, tvb, off, 'Ranking2EstimateScoreRankOutput_season', 'season')
off, Ranking2EstimateScoreRankOutput_samplingRate = do_Uint8(conn, Ranking2EstimateScoreRankOutput_container, tvb, off, 'Ranking2EstimateScoreRankOutput_samplingRate', 'samplingRate')

return off
end
function do_UbiAccount(conn, tree, tvb, off, field_unique_name, field_name)
local UbiAccount_container = tree:add(F.UbiAccount, tvb(off, 0))
	UbiAccount_container:set_text(field_name .. " (UbiAccount):")
	off = do_Structure(conn, UbiAccount_container, tvb, off, 'UbiAccount_Base', 'Base')
off, UbiAccount_m_ubiAccountId = do_String(conn, UbiAccount_container, tvb, off, 'UbiAccount_m_ubiAccountId', 'm_ubiAccountId')
off, UbiAccount_m_username = do_String(conn, UbiAccount_container, tvb, off, 'UbiAccount_m_username', 'm_username')
off, UbiAccount_m_password = do_String(conn, UbiAccount_container, tvb, off, 'UbiAccount_m_password', 'm_password')
off = do_UbiAccountStatus(conn, UbiAccount_container, tvb, off, 'UbiAccount_m_status', 'm_status')
off, UbiAccount_m_email = do_String(conn, UbiAccount_container, tvb, off, 'UbiAccount_m_email', 'm_email')
off, UbiAccount_m_dateOfBirth = do_DateTime(conn, UbiAccount_container, tvb, off, 'UbiAccount_m_dateOfBirth', 'm_dateOfBirth')
off, UbiAccount_m_gender = do_Uint32(conn, UbiAccount_container, tvb, off, 'UbiAccount_m_gender', 'm_gender')
off, UbiAccount_m_countryCode = do_String(conn, UbiAccount_container, tvb, off, 'UbiAccount_m_countryCode', 'm_countryCode')
off, UbiAccount_m_optIn = do_Bool(conn, UbiAccount_container, tvb, off, 'UbiAccount_m_optIn', 'm_optIn')
off, UbiAccount_m_thirdPartyOptIn = do_Bool(conn, UbiAccount_container, tvb, off, 'UbiAccount_m_thirdPartyOptIn', 'm_thirdPartyOptIn')
off, UbiAccount_m_firstName = do_String(conn, UbiAccount_container, tvb, off, 'UbiAccount_m_firstName', 'm_firstName')
off, UbiAccount_m_lastName = do_String(conn, UbiAccount_container, tvb, off, 'UbiAccount_m_lastName', 'm_lastName')
off, UbiAccount_m_preferredLanguage = do_String(conn, UbiAccount_container, tvb, off, 'UbiAccount_m_preferredLanguage', 'm_preferredLanguage')
local UbiAccount_m_externalAccounts_len = tvb(off, 4):le_uint()
	subUbiAccount_container = UbiAccount_container:add_le(F.UbiAccount_m_externalAccounts_len, tvb(off,4))
	off = off + 4
	for i=1,UbiAccount_m_externalAccounts_len do
	off = do_ExternalAccount(conn, subUbiAccount_container, tvb, off, 'UbiAccount_m_externalAccounts_item', 'm_externalAccounts')

	end
	

return off
end
function do_TOS(conn, tree, tvb, off, field_unique_name, field_name)
local TOS_container = tree:add(F.TOS, tvb(off, 0))
	TOS_container:set_text(field_name .. " (TOS):")
	off = do_Structure(conn, TOS_container, tvb, off, 'TOS_Base', 'Base')
off, TOS_m_localeCode = do_String(conn, TOS_container, tvb, off, 'TOS_m_localeCode', 'm_localeCode')
off, TOS_m_content = do_String(conn, TOS_container, tvb, off, 'TOS_m_content', 'm_content')
off, TOS_m_storingInfoQuestion = do_String(conn, TOS_container, tvb, off, 'TOS_m_storingInfoQuestion', 'm_storingInfoQuestion')

return off
end
function do_TOSEx(conn, tree, tvb, off, field_unique_name, field_name)
local TOSEx_container = tree:add(F.TOSEx, tvb(off, 0))
	TOSEx_container:set_text(field_name .. " (TOSEx):")
	off = do_Structure(conn, TOSEx_container, tvb, off, 'TOSEx_Base', 'Base')
off, TOSEx_m_localeCode = do_String(conn, TOSEx_container, tvb, off, 'TOSEx_m_localeCode', 'm_localeCode')
local TOSEx_m_contents_len = tvb(off, 4):le_uint()
	subTOSEx_container = TOSEx_container:add_le(F.TOSEx_m_contents_len, tvb(off,4))
	off = off + 4
	for i=1,TOSEx_m_contents_len do
	off, TOSEx_m_contents_item = do_String(conn, subTOSEx_container, tvb, off, 'TOSEx_m_contents_item', 'm_contents')

	end
	
off, TOSEx_m_storingInfoQuestion = do_String(conn, TOSEx_container, tvb, off, 'TOSEx_m_storingInfoQuestion', 'm_storingInfoQuestion')

return off
end
function do_UsernameValidation(conn, tree, tvb, off, field_unique_name, field_name)
local UsernameValidation_container = tree:add(F.UsernameValidation, tvb(off, 0))
	UsernameValidation_container:set_text(field_name .. " (UsernameValidation):")
	off = do_Structure(conn, UsernameValidation_container, tvb, off, 'UsernameValidation_Base', 'Base')
local UsernameValidation_m_suggestions_len = tvb(off, 4):le_uint()
	subUsernameValidation_container = UsernameValidation_container:add_le(F.UsernameValidation_m_suggestions_len, tvb(off,4))
	off = off + 4
	for i=1,UsernameValidation_m_suggestions_len do
	off, UsernameValidation_m_suggestions_item = do_String(conn, subUsernameValidation_container, tvb, off, 'UsernameValidation_m_suggestions_item', 'm_suggestions')

	end
	
local UsernameValidation_m_reasons_len = tvb(off, 4):le_uint()
	subUsernameValidation_container = UsernameValidation_container:add_le(F.UsernameValidation_m_reasons_len, tvb(off,4))
	off = off + 4
	for i=1,UsernameValidation_m_reasons_len do
	off = do_ValidationFailureReason(conn, subUsernameValidation_container, tvb, off, 'UsernameValidation_m_reasons_item', 'm_reasons')

	end
	

return off
end
function do_Country(conn, tree, tvb, off, field_unique_name, field_name)
local Country_container = tree:add(F.Country, tvb(off, 0))
	Country_container:set_text(field_name .. " (Country):")
	off = do_Structure(conn, Country_container, tvb, off, 'Country_Base', 'Base')
off, Country_m_code = do_String(conn, Country_container, tvb, off, 'Country_m_code', 'm_code')
off, Country_m_name = do_String(conn, Country_container, tvb, off, 'Country_m_name', 'm_name')

return off
end
function do_ApiCall(conn, tree, tvb, off, field_unique_name, field_name)
local ApiCall_container = tree:add(F.ApiCall, tvb(off, 0))
	ApiCall_container:set_text(field_name .. " (ApiCall):")
	off = do_Structure(conn, ApiCall_container, tvb, off, 'ApiCall_Base', 'Base')
off, ApiCall_Method_name = do_String(conn, ApiCall_container, tvb, off, 'ApiCall_Method_name', 'Method_name')
off, ApiCall_Call_time = do_DateTime(conn, ApiCall_container, tvb, off, 'ApiCall_Call_time', 'Call_time')
off, ApiCall_User_id = do_PID(conn, ApiCall_container, tvb, off, 'ApiCall_User_id', 'User_id')

return off
end
function do_DataStoreSearchBalloonParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreSearchBalloonParam_container = tree:add(F.DataStoreSearchBalloonParam, tvb(off, 0))
	DataStoreSearchBalloonParam_container:set_text(field_name .. " (DataStoreSearchBalloonParam):")
	off = do_Structure(conn, DataStoreSearchBalloonParam_container, tvb, off, 'DataStoreSearchBalloonParam_Base', 'Base')
off, DataStoreSearchBalloonParam_dataType = do_Uint16(conn, DataStoreSearchBalloonParam_container, tvb, off, 'DataStoreSearchBalloonParam_dataType', 'dataType')
off, DataStoreSearchBalloonParam_userRank = do_Uint8(conn, DataStoreSearchBalloonParam_container, tvb, off, 'DataStoreSearchBalloonParam_userRank', 'userRank')
off, DataStoreSearchBalloonParam_resultSetCount = do_Uint8(conn, DataStoreSearchBalloonParam_container, tvb, off, 'DataStoreSearchBalloonParam_resultSetCount', 'resultSetCount')

return off
end
function do_DataStoreSearchBalloonResultSet(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreSearchBalloonResultSet_container = tree:add(F.DataStoreSearchBalloonResultSet, tvb(off, 0))
	DataStoreSearchBalloonResultSet_container:set_text(field_name .. " (DataStoreSearchBalloonResultSet):")
	off = do_Structure(conn, DataStoreSearchBalloonResultSet_container, tvb, off, 'DataStoreSearchBalloonResultSet_Base', 'Base')
local DataStoreSearchBalloonResultSet_balloons_len = tvb(off, 4):le_uint()
	subDataStoreSearchBalloonResultSet_container = DataStoreSearchBalloonResultSet_container:add_le(F.DataStoreSearchBalloonResultSet_balloons_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreSearchBalloonResultSet_balloons_len do
	off = do_DataStoreSearchBalloonResult(conn, subDataStoreSearchBalloonResultSet_container, tvb, off, 'DataStoreSearchBalloonResultSet_balloons_item', 'balloons')

	end
	

return off
end
function do_DataStoreFetchMyInfosParam(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreFetchMyInfosParam_container = tree:add(F.DataStoreFetchMyInfosParam, tvb(off, 0))
	DataStoreFetchMyInfosParam_container:set_text(field_name .. " (DataStoreFetchMyInfosParam):")
	off = do_Structure(conn, DataStoreFetchMyInfosParam_container, tvb, off, 'DataStoreFetchMyInfosParam_Base', 'Base')
local DataStoreFetchMyInfosParam_balloonDataTypes_len = tvb(off, 4):le_uint()
	subDataStoreFetchMyInfosParam_container = DataStoreFetchMyInfosParam_container:add_le(F.DataStoreFetchMyInfosParam_balloonDataTypes_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreFetchMyInfosParam_balloonDataTypes_len do
	off, DataStoreFetchMyInfosParam_balloonDataTypes_item = do_Uint16(conn, subDataStoreFetchMyInfosParam_container, tvb, off, 'DataStoreFetchMyInfosParam_balloonDataTypes_item', 'balloonDataTypes')

	end
	
off, DataStoreFetchMyInfosParam_additionalOperation = do_Uint16(conn, DataStoreFetchMyInfosParam_container, tvb, off, 'DataStoreFetchMyInfosParam_additionalOperation', 'additionalOperation')

return off
end
function do_DataStoreFetchMyInfosResult(conn, tree, tvb, off, field_unique_name, field_name)
local DataStoreFetchMyInfosResult_container = tree:add(F.DataStoreFetchMyInfosResult, tvb(off, 0))
	DataStoreFetchMyInfosResult_container:set_text(field_name .. " (DataStoreFetchMyInfosResult):")
	off = do_Structure(conn, DataStoreFetchMyInfosResult_container, tvb, off, 'DataStoreFetchMyInfosResult_Base', 'Base')
local DataStoreFetchMyInfosResult_balloons_len = tvb(off, 4):le_uint()
	subDataStoreFetchMyInfosResult_container = DataStoreFetchMyInfosResult_container:add_le(F.DataStoreFetchMyInfosResult_balloons_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreFetchMyInfosResult_balloons_len do
	off = do_DataStoreFetchMyInfosBalloonResult(conn, subDataStoreFetchMyInfosResult_container, tvb, off, 'DataStoreFetchMyInfosResult_balloons_item', 'balloons')

	end
	
off = do_DataStoreFetchMyInfosAchievementResult(conn, DataStoreFetchMyInfosResult_container, tvb, off, 'DataStoreFetchMyInfosResult_achievement', 'achievement')

return off
end
function do_PrivilegeEx(conn, tree, tvb, off, field_unique_name, field_name)
local PrivilegeEx_container = tree:add(F.PrivilegeEx, tvb(off, 0))
	PrivilegeEx_container:set_text(field_name .. " (PrivilegeEx):")
	off = do_Structure(conn, PrivilegeEx_container, tvb, off, 'PrivilegeEx_Base', 'Base')
off, PrivilegeEx_m_ID = do_Uint32(conn, PrivilegeEx_container, tvb, off, 'PrivilegeEx_m_ID', 'm_ID')
off, PrivilegeEx_m_description = do_String(conn, PrivilegeEx_container, tvb, off, 'PrivilegeEx_m_description', 'm_description')
off, PrivilegeEx_m_duration = do_Sint32(conn, PrivilegeEx_container, tvb, off, 'PrivilegeEx_m_duration', 'm_duration')

return off
end
function do_PrivilegeGroup(conn, tree, tvb, off, field_unique_name, field_name)
local PrivilegeGroup_container = tree:add(F.PrivilegeGroup, tvb(off, 0))
	PrivilegeGroup_container:set_text(field_name .. " (PrivilegeGroup):")
	off = do_Structure(conn, PrivilegeGroup_container, tvb, off, 'PrivilegeGroup_Base', 'Base')
off, PrivilegeGroup_m_description = do_String(conn, PrivilegeGroup_container, tvb, off, 'PrivilegeGroup_m_description', 'm_description')
local PrivilegeGroup_m_privileges_len = tvb(off, 4):le_uint()
	subPrivilegeGroup_container = PrivilegeGroup_container:add_le(F.PrivilegeGroup_m_privileges_len, tvb(off,4))
	off = off + 4
	for i=1,PrivilegeGroup_m_privileges_len do
	off = do_Privilege(conn, subPrivilegeGroup_container, tvb, off, 'PrivilegeGroup_m_privileges_item', 'm_privileges')

	end
	

return off
end
function do_FriendData(conn, tree, tvb, off, field_unique_name, field_name)
local FriendData_container = tree:add(F.FriendData, tvb(off, 0))
	FriendData_container:set_text(field_name .. " (FriendData):")
	off, FriendData_m_pid = do_Uint32(conn, FriendData_container, tvb, off, 'FriendData_m_pid', 'm_pid')
off, FriendData_m_strName = do_String(conn, FriendData_container, tvb, off, 'FriendData_m_strName', 'm_strName')
off, FriendData_m_byRelationship = do_Uint8(conn, FriendData_container, tvb, off, 'FriendData_m_byRelationship', 'm_byRelationship')
off, FriendData_m_uiDetails = do_Uint32(conn, FriendData_container, tvb, off, 'FriendData_m_uiDetails', 'm_uiDetails')
off, FriendData_m_strStatus = do_String(conn, FriendData_container, tvb, off, 'FriendData_m_strStatus', 'm_strStatus')

return off
end
function do_RelationshipData(conn, tree, tvb, off, field_unique_name, field_name)
local RelationshipData_container = tree:add(F.RelationshipData, tvb(off, 0))
	RelationshipData_container:set_text(field_name .. " (RelationshipData):")
	off, RelationshipData_m_pid = do_Uint32(conn, RelationshipData_container, tvb, off, 'RelationshipData_m_pid', 'm_pid')
off, RelationshipData_m_strName = do_String(conn, RelationshipData_container, tvb, off, 'RelationshipData_m_strName', 'm_strName')
off, RelationshipData_m_byRelationship = do_Uint8(conn, RelationshipData_container, tvb, off, 'RelationshipData_m_byRelationship', 'm_byRelationship')
off, RelationshipData_m_uiDetails = do_Uint32(conn, RelationshipData_container, tvb, off, 'RelationshipData_m_uiDetails', 'm_uiDetails')
off, RelationshipData_m_byStatus = do_Uint8(conn, RelationshipData_container, tvb, off, 'RelationshipData_m_byStatus', 'm_byStatus')

return off
end
function do_MatchmakeRefereeEndRoundParam(conn, tree, tvb, off, field_unique_name, field_name)
local MatchmakeRefereeEndRoundParam_container = tree:add(F.MatchmakeRefereeEndRoundParam, tvb(off, 0))
	MatchmakeRefereeEndRoundParam_container:set_text(field_name .. " (MatchmakeRefereeEndRoundParam):")
	off = do_Structure(conn, MatchmakeRefereeEndRoundParam_container, tvb, off, 'MatchmakeRefereeEndRoundParam_Base', 'Base')
off, MatchmakeRefereeEndRoundParam_Round_id = do_Uint64(conn, MatchmakeRefereeEndRoundParam_container, tvb, off, 'MatchmakeRefereeEndRoundParam_Round_id', 'Round_id')
local MatchmakeRefereeEndRoundParam_Reports_len = tvb(off, 4):le_uint()
	subMatchmakeRefereeEndRoundParam_container = MatchmakeRefereeEndRoundParam_container:add_le(F.MatchmakeRefereeEndRoundParam_Reports_len, tvb(off,4))
	off = off + 4
	for i=1,MatchmakeRefereeEndRoundParam_Reports_len do
	off = do_EndRoundReport(conn, subMatchmakeRefereeEndRoundParam_container, tvb, off, 'MatchmakeRefereeEndRoundParam_Reports_item', 'Reports')

	end
	

return off
end
function do_GetStatsParam(conn, tree, tvb, off, field_unique_name, field_name)
local GetStatsParam_container = tree:add(F.GetStatsParam, tvb(off, 0))
	GetStatsParam_container:set_text(field_name .. " (GetStatsParam):")
	off = do_Structure(conn, GetStatsParam_container, tvb, off, 'GetStatsParam_Base', 'Base')
off, GetStatsParam_Unknown = do_Uint32(conn, GetStatsParam_container, tvb, off, 'GetStatsParam_Unknown', 'Unknown')
off, GetStatsParam_Unknown2 = do_Uint32(conn, GetStatsParam_container, tvb, off, 'GetStatsParam_Unknown2', 'Unknown2')
off, GetStatsParam_Unknown3 = do_Uint32(conn, GetStatsParam_container, tvb, off, 'GetStatsParam_Unknown3', 'Unknown3')

return off
end
function do_MatchmakeRefereeStartRoundParam(conn, tree, tvb, off, field_unique_name, field_name)
local MatchmakeRefereeStartRoundParam_container = tree:add(F.MatchmakeRefereeStartRoundParam, tvb(off, 0))
	MatchmakeRefereeStartRoundParam_container:set_text(field_name .. " (MatchmakeRefereeStartRoundParam):")
	off = do_Structure(conn, MatchmakeRefereeStartRoundParam_container, tvb, off, 'MatchmakeRefereeStartRoundParam_Base', 'Base')
off, MatchmakeRefereeStartRoundParam_Unknown_X = do_Uint32(conn, MatchmakeRefereeStartRoundParam_container, tvb, off, 'MatchmakeRefereeStartRoundParam_Unknown_X', 'Unknown_X')
off, MatchmakeRefereeStartRoundParam_Gathering_id = do_Uint32(conn, MatchmakeRefereeStartRoundParam_container, tvb, off, 'MatchmakeRefereeStartRoundParam_Gathering_id', 'Gathering_id')
local MatchmakeRefereeStartRoundParam_Participants_len = tvb(off, 4):le_uint()
	subMatchmakeRefereeStartRoundParam_container = MatchmakeRefereeStartRoundParam_container:add_le(F.MatchmakeRefereeStartRoundParam_Participants_len, tvb(off,4))
	off = off + 4
	for i=1,MatchmakeRefereeStartRoundParam_Participants_len do
	off, MatchmakeRefereeStartRoundParam_Participants_item = do_PID(conn, subMatchmakeRefereeStartRoundParam_container, tvb, off, 'MatchmakeRefereeStartRoundParam_Participants_item', 'Participants')

	end
	
off, MatchmakeRefereeStartRoundParam_Unknown_Y = do_Uint8(conn, MatchmakeRefereeStartRoundParam_container, tvb, off, 'MatchmakeRefereeStartRoundParam_Unknown_Y', 'Unknown_Y')
off, MatchmakeRefereeStartRoundParam_Unknown_Z = do_Uint32(conn, MatchmakeRefereeStartRoundParam_container, tvb, off, 'MatchmakeRefereeStartRoundParam_Unknown_Z', 'Unknown_Z')

return off
end
function do_RoundInfo(conn, tree, tvb, off, field_unique_name, field_name)
local RoundInfo_container = tree:add(F.RoundInfo, tvb(off, 0))
	RoundInfo_container:set_text(field_name .. " (RoundInfo):")
	off = do_Structure(conn, RoundInfo_container, tvb, off, 'RoundInfo_Base', 'Base')
off, RoundInfo_Round_id = do_Uint64(conn, RoundInfo_container, tvb, off, 'RoundInfo_Round_id', 'Round_id')
off, RoundInfo_Gathering_id = do_Uint32(conn, RoundInfo_container, tvb, off, 'RoundInfo_Gathering_id', 'Gathering_id')
off, RoundInfo_Unknown = do_Uint32(conn, RoundInfo_container, tvb, off, 'RoundInfo_Unknown', 'Unknown')
off, RoundInfo_Unknown_X = do_Uint32(conn, RoundInfo_container, tvb, off, 'RoundInfo_Unknown_X', 'Unknown_X')
off, RoundInfo_Unknown2 = do_Uint32(conn, RoundInfo_container, tvb, off, 'RoundInfo_Unknown2', 'Unknown2')
off, RoundInfo_Unknown_Y = do_Uint8(conn, RoundInfo_container, tvb, off, 'RoundInfo_Unknown_Y', 'Unknown_Y')
off, RoundInfo_Unknown_Z = do_Uint32(conn, RoundInfo_container, tvb, off, 'RoundInfo_Unknown_Z', 'Unknown_Z')

return off
end
function do_NewsChannel(conn, tree, tvb, off, field_unique_name, field_name)
local NewsChannel_container = tree:add(F.NewsChannel, tvb(off, 0))
	NewsChannel_container:set_text(field_name .. " (NewsChannel):")
	off = do_Structure(conn, NewsChannel_container, tvb, off, 'NewsChannel_Base', 'Base')
off, NewsChannel_m_ID = do_Uint32(conn, NewsChannel_container, tvb, off, 'NewsChannel_m_ID', 'm_ID')
off, NewsChannel_m_ownerPID = do_Uint32(conn, NewsChannel_container, tvb, off, 'NewsChannel_m_ownerPID', 'm_ownerPID')
off, NewsChannel_m_name = do_String(conn, NewsChannel_container, tvb, off, 'NewsChannel_m_name', 'm_name')
off, NewsChannel_m_description = do_String(conn, NewsChannel_container, tvb, off, 'NewsChannel_m_description', 'm_description')
off, NewsChannel_m_creationTime = do_DateTime(conn, NewsChannel_container, tvb, off, 'NewsChannel_m_creationTime', 'm_creationTime')
off, NewsChannel_m_expirationTime = do_DateTime(conn, NewsChannel_container, tvb, off, 'NewsChannel_m_expirationTime', 'm_expirationTime')
off, NewsChannel_m_type = do_String(conn, NewsChannel_container, tvb, off, 'NewsChannel_m_type', 'm_type')
off, NewsChannel_m_locale = do_String(conn, NewsChannel_container, tvb, off, 'NewsChannel_m_locale', 'm_locale')
off, NewsChannel_m_subscribable = do_Bool(conn, NewsChannel_container, tvb, off, 'NewsChannel_m_subscribable', 'm_subscribable')

return off
end
function do_NewsHeader(conn, tree, tvb, off, field_unique_name, field_name)
local NewsHeader_container = tree:add(F.NewsHeader, tvb(off, 0))
	NewsHeader_container:set_text(field_name .. " (NewsHeader):")
	off = do_Structure(conn, NewsHeader_container, tvb, off, 'NewsHeader_Base', 'Base')
off, NewsHeader_m_ID = do_Uint32(conn, NewsHeader_container, tvb, off, 'NewsHeader_m_ID', 'm_ID')
off, NewsHeader_m_recipientID = do_Uint32(conn, NewsHeader_container, tvb, off, 'NewsHeader_m_recipientID', 'm_recipientID')
off, NewsHeader_m_recipientType = do_Uint32(conn, NewsHeader_container, tvb, off, 'NewsHeader_m_recipientType', 'm_recipientType')
off, NewsHeader_m_publisherPID = do_Uint32(conn, NewsHeader_container, tvb, off, 'NewsHeader_m_publisherPID', 'm_publisherPID')
off, NewsHeader_m_publisherName = do_String(conn, NewsHeader_container, tvb, off, 'NewsHeader_m_publisherName', 'm_publisherName')
off, NewsHeader_m_publicationTime = do_DateTime(conn, NewsHeader_container, tvb, off, 'NewsHeader_m_publicationTime', 'm_publicationTime')
off, NewsHeader_m_displayTime = do_DateTime(conn, NewsHeader_container, tvb, off, 'NewsHeader_m_displayTime', 'm_displayTime')
off, NewsHeader_m_expirationTime = do_DateTime(conn, NewsHeader_container, tvb, off, 'NewsHeader_m_expirationTime', 'm_expirationTime')
off, NewsHeader_m_title = do_String(conn, NewsHeader_container, tvb, off, 'NewsHeader_m_title', 'm_title')
off, NewsHeader_m_link = do_String(conn, NewsHeader_container, tvb, off, 'NewsHeader_m_link', 'm_link')

return off
end
function do_NewsMessage(conn, tree, tvb, off, field_unique_name, field_name)
local NewsMessage_container = tree:add(F.NewsMessage, tvb(off, 0))
	NewsMessage_container:set_text(field_name .. " (NewsMessage):")
	off = do_Structure(conn, NewsMessage_container, tvb, off, 'NewsMessage_Base', 'Base')
off, NewsMessage_m_body = do_String(conn, NewsMessage_container, tvb, off, 'NewsMessage_m_body', 'm_body')

return off
end
function do_NewsRecipient(conn, tree, tvb, off, field_unique_name, field_name)
local NewsRecipient_container = tree:add(F.NewsRecipient, tvb(off, 0))
	NewsRecipient_container:set_text(field_name .. " (NewsRecipient):")
	off = do_Structure(conn, NewsRecipient_container, tvb, off, 'NewsRecipient_Base', 'Base')
off, NewsRecipient_m_recipientID = do_Uint32(conn, NewsRecipient_container, tvb, off, 'NewsRecipient_m_recipientID', 'm_recipientID')
off, NewsRecipient_m_recipientType = do_Uint32(conn, NewsRecipient_container, tvb, off, 'NewsRecipient_m_recipientType', 'm_recipientType')

return off
end

local info = {}
local nested_info = {}
function add_proto(id, tab)
	if not tab["nested"] then
		info[id] = tab
	else
		name = tab["name"]
		if not nested_info[name] then
			nested_info[name] = {}
		end

		nested_info[name][id] = tab
	end
end
	add_proto(21,
	{
		["nested"] = false,
		["name"] = "Match Making",
		["methods"] = {
[1] = {
				["name"] = "RegisterGathering",
				["request"] = function (conn, tree, tvb)
	local off = 0

		local Match_Making_RegisterGathering_anyGathering_container = tree:add(F.Data, tvb(off, 0))
		Match_Making_RegisterGathering_anyGathering_container:set_text("Data<Gathering>")
	off, Match_Making_RegisterGathering_anyGathering_type_name = do_String(conn, Match_Making_RegisterGathering_anyGathering_container, tvb, off, 'Match_Making_RegisterGathering_anyGathering_type_name', 'anyGathering_type_name')

off, Match_Making_RegisterGathering_anyGathering_len_plus_four = do_Uint32(conn, Match_Making_RegisterGathering_anyGathering_container, tvb, off, 'Match_Making_RegisterGathering_anyGathering_len_plus_four', 'anyGathering_len_plus_four')

off, Match_Making_RegisterGathering_anyGathering_data_len = do_Uint32(conn, Match_Making_RegisterGathering_anyGathering_container, tvb, off, 'Match_Making_RegisterGathering_anyGathering_data_len', 'anyGathering_data_len')

local type_func = 'do_'..Match_Making_RegisterGathering_anyGathering_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Match_Making_RegisterGathering_anyGathering_container, tvb, off, "Match_Making_RegisterGathering_anyGathering_data", "anyGathering")
		else
			Match_Making_RegisterGathering_anyGathering_container:add(F.Match_Making_RegisterGathering_anyGathering_data_bytes, tvb(off, Match_Making_RegisterGathering_anyGathering_len))
			off = off + Match_Making_RegisterGathering_anyGathering_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_RegisterGathering_retval = do_Uint32(conn, tree, tvb, off, 'Match_Making_RegisterGathering_retval', 'retval')
 end
			},
			[2] = {
				["name"] = "UnregisterGathering",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_UnregisterGathering_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_UnregisterGathering_idGathering', 'idGathering')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_UnregisterGathering_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_UnregisterGathering_retval', 'retval')
 end
			},
			[3] = {
				["name"] = "UnregisterGatherings",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Match_Making_UnregisterGatherings_lstGatherings_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_UnregisterGatherings_lstGatherings_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_UnregisterGatherings_lstGatherings_len do
	off, Match_Making_UnregisterGatherings_lstGatherings_item = do_Uint32(conn, subtree, tvb, off, 'Match_Making_UnregisterGatherings_lstGatherings_item', 'lstGatherings')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_UnregisterGatherings_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_UnregisterGatherings_retval', 'retval')
 end
			},
			[4] = {
				["name"] = "UpdateGathering",
				["request"] = function (conn, tree, tvb)
	local off = 0

		local Match_Making_UpdateGathering_anyGathering_container = tree:add(F.Data, tvb(off, 0))
		Match_Making_UpdateGathering_anyGathering_container:set_text("Data<Gathering>")
	off, Match_Making_UpdateGathering_anyGathering_type_name = do_String(conn, Match_Making_UpdateGathering_anyGathering_container, tvb, off, 'Match_Making_UpdateGathering_anyGathering_type_name', 'anyGathering_type_name')

off, Match_Making_UpdateGathering_anyGathering_len_plus_four = do_Uint32(conn, Match_Making_UpdateGathering_anyGathering_container, tvb, off, 'Match_Making_UpdateGathering_anyGathering_len_plus_four', 'anyGathering_len_plus_four')

off, Match_Making_UpdateGathering_anyGathering_data_len = do_Uint32(conn, Match_Making_UpdateGathering_anyGathering_container, tvb, off, 'Match_Making_UpdateGathering_anyGathering_data_len', 'anyGathering_data_len')

local type_func = 'do_'..Match_Making_UpdateGathering_anyGathering_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Match_Making_UpdateGathering_anyGathering_container, tvb, off, "Match_Making_UpdateGathering_anyGathering_data", "anyGathering")
		else
			Match_Making_UpdateGathering_anyGathering_container:add(F.Match_Making_UpdateGathering_anyGathering_data_bytes, tvb(off, Match_Making_UpdateGathering_anyGathering_len))
			off = off + Match_Making_UpdateGathering_anyGathering_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_UpdateGathering_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_UpdateGathering_retval', 'retval')
 end
			},
			[5] = {
				["name"] = "Invite",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_Invite_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_Invite_idGathering', 'idGathering')
local Match_Making_Invite_lstPrincipals_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_Invite_lstPrincipals_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_Invite_lstPrincipals_len do
	off, Match_Making_Invite_lstPrincipals_item = do_PID(conn, subtree, tvb, off, 'Match_Making_Invite_lstPrincipals_item', 'lstPrincipals')

	end
	
off, Match_Making_Invite_strMessage = do_String(conn, tree, tvb, off, 'Match_Making_Invite_strMessage', 'strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_Invite_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_Invite_retval', 'retval')
 end
			},
			[6] = {
				["name"] = "AcceptInvitation",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_AcceptInvitation_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_AcceptInvitation_idGathering', 'idGathering')
off, Match_Making_AcceptInvitation_strMessage = do_String(conn, tree, tvb, off, 'Match_Making_AcceptInvitation_strMessage', 'strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_AcceptInvitation_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_AcceptInvitation_retval', 'retval')
 end
			},
			[7] = {
				["name"] = "DeclineInvitation",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_DeclineInvitation_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_DeclineInvitation_idGathering', 'idGathering')
off, Match_Making_DeclineInvitation_strMessage = do_String(conn, tree, tvb, off, 'Match_Making_DeclineInvitation_strMessage', 'strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_DeclineInvitation_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_DeclineInvitation_retval', 'retval')
 end
			},
			[8] = {
				["name"] = "CancelInvitation",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_CancelInvitation_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_CancelInvitation_idGathering', 'idGathering')
local Match_Making_CancelInvitation_lstPrincipals_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_CancelInvitation_lstPrincipals_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_CancelInvitation_lstPrincipals_len do
	off, Match_Making_CancelInvitation_lstPrincipals_item = do_PID(conn, subtree, tvb, off, 'Match_Making_CancelInvitation_lstPrincipals_item', 'lstPrincipals')

	end
	
off, Match_Making_CancelInvitation_strMessage = do_String(conn, tree, tvb, off, 'Match_Making_CancelInvitation_strMessage', 'strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_CancelInvitation_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_CancelInvitation_retval', 'retval')
 end
			},
			[9] = {
				["name"] = "GetInvitationsSent",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetInvitationsSent_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_GetInvitationsSent_idGathering', 'idGathering')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Match_Making_GetInvitationsSent_lstInvitations_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_GetInvitationsSent_lstInvitations_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_GetInvitationsSent_lstInvitations_len do
	off = do_Invitation(conn, subtree, tvb, off, 'Match_Making_GetInvitationsSent_lstInvitations_item', 'lstInvitations')

	end
	
 end
			},
			[10] = {
				["name"] = "GetInvitationsReceived",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Match_Making_GetInvitationsReceived_lstInvitations_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_GetInvitationsReceived_lstInvitations_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_GetInvitationsReceived_lstInvitations_len do
	off = do_Invitation(conn, subtree, tvb, off, 'Match_Making_GetInvitationsReceived_lstInvitations_item', 'lstInvitations')

	end
	
 end
			},
			[11] = {
				["name"] = "Participate",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_Participate_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_Participate_idGathering', 'idGathering')
off, Match_Making_Participate_strMessage = do_String(conn, tree, tvb, off, 'Match_Making_Participate_strMessage', 'strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_Participate_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_Participate_retval', 'retval')
 end
			},
			[12] = {
				["name"] = "CancelParticipation",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_CancelParticipation_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_CancelParticipation_idGathering', 'idGathering')
off, Match_Making_CancelParticipation_strMessage = do_String(conn, tree, tvb, off, 'Match_Making_CancelParticipation_strMessage', 'strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_CancelParticipation_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_CancelParticipation_retval', 'retval')
 end
			},
			[13] = {
				["name"] = "GetParticipants",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetParticipants_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_GetParticipants_idGathering', 'idGathering')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Match_Making_GetParticipants_lstParticipants_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_GetParticipants_lstParticipants_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_GetParticipants_lstParticipants_len do
	off, Match_Making_GetParticipants_lstParticipants_item = do_PID(conn, subtree, tvb, off, 'Match_Making_GetParticipants_lstParticipants_item', 'lstParticipants')

	end
	
 end
			},
			[14] = {
				["name"] = "AddParticipants",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_AddParticipants_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_AddParticipants_idGathering', 'idGathering')
local Match_Making_AddParticipants_lstParticipants_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_AddParticipants_lstParticipants_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_AddParticipants_lstParticipants_len do
	off, Match_Making_AddParticipants_lstParticipants_item = do_PID(conn, subtree, tvb, off, 'Match_Making_AddParticipants_lstParticipants_item', 'lstParticipants')

	end
	
off, Match_Making_AddParticipants_strMessage = do_String(conn, tree, tvb, off, 'Match_Making_AddParticipants_strMessage', 'strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_AddParticipants_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_AddParticipants_retval', 'retval')
 end
			},
			[15] = {
				["name"] = "GetDetailedParticipants",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetDetailedParticipants_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_GetDetailedParticipants_idGathering', 'idGathering')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Match_Making_GetDetailedParticipants_lstParticipants_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_GetDetailedParticipants_lstParticipants_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_GetDetailedParticipants_lstParticipants_len do
	off = do_ParticipantDetails(conn, subtree, tvb, off, 'Match_Making_GetDetailedParticipants_lstParticipants_item', 'lstParticipants')

	end
	
 end
			},
			[16] = {
				["name"] = "GetParticipantsURLs",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetParticipantsURLs_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_GetParticipantsURLs_idGathering', 'idGathering')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Match_Making_GetParticipantsURLs_lstStationURL_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_GetParticipantsURLs_lstStationURL_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_GetParticipantsURLs_lstStationURL_len do
	off, Match_Making_GetParticipantsURLs_lstStationURL_item = do_StationURL(conn, subtree, tvb, off, 'Match_Making_GetParticipantsURLs_lstStationURL_item', 'lstStationURL')

	end
	
 end
			},
			[17] = {
				["name"] = "FindByType",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_FindByType_strType = do_String(conn, tree, tvb, off, 'Match_Making_FindByType_strType', 'strType')
off = do_ResultRange(conn, tree, tvb, off, 'Match_Making_FindByType_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Match_Making_FindByType_lstGathering_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_FindByType_lstGathering_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_FindByType_lstGathering_len do
	
		local Match_Making_FindByType_lstGathering_item_container = subtree:add(F.Data, tvb(off, 0))
		Match_Making_FindByType_lstGathering_item_container:set_text("Data<Gathering>")
	off, Match_Making_FindByType_lstGathering_item_type_name = do_String(conn, Match_Making_FindByType_lstGathering_item_container, tvb, off, 'Match_Making_FindByType_lstGathering_item_type_name', 'lstGathering_type_name')

off, Match_Making_FindByType_lstGathering_item_len_plus_four = do_Uint32(conn, Match_Making_FindByType_lstGathering_item_container, tvb, off, 'Match_Making_FindByType_lstGathering_item_len_plus_four', 'lstGathering_len_plus_four')

off, Match_Making_FindByType_lstGathering_item_data_len = do_Uint32(conn, Match_Making_FindByType_lstGathering_item_container, tvb, off, 'Match_Making_FindByType_lstGathering_item_data_len', 'lstGathering_data_len')

local type_func = 'do_'..Match_Making_FindByType_lstGathering_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Match_Making_FindByType_lstGathering_item_container, tvb, off, "Match_Making_FindByType_lstGathering_item_data", "lstGathering")
		else
			Match_Making_FindByType_lstGathering_item_container:add(F.Match_Making_FindByType_lstGathering_item_data_bytes, tvb(off, Match_Making_FindByType_lstGathering_item_len))
			off = off + Match_Making_FindByType_lstGathering_item_data_len
		end
	

	end
	
 end
			},
			[18] = {
				["name"] = "FindByDescription",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_FindByDescription_strDescription = do_String(conn, tree, tvb, off, 'Match_Making_FindByDescription_strDescription', 'strDescription')
off = do_ResultRange(conn, tree, tvb, off, 'Match_Making_FindByDescription_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Match_Making_FindByDescription_lstGathering_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_FindByDescription_lstGathering_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_FindByDescription_lstGathering_len do
	
		local Match_Making_FindByDescription_lstGathering_item_container = subtree:add(F.Data, tvb(off, 0))
		Match_Making_FindByDescription_lstGathering_item_container:set_text("Data<Gathering>")
	off, Match_Making_FindByDescription_lstGathering_item_type_name = do_String(conn, Match_Making_FindByDescription_lstGathering_item_container, tvb, off, 'Match_Making_FindByDescription_lstGathering_item_type_name', 'lstGathering_type_name')

off, Match_Making_FindByDescription_lstGathering_item_len_plus_four = do_Uint32(conn, Match_Making_FindByDescription_lstGathering_item_container, tvb, off, 'Match_Making_FindByDescription_lstGathering_item_len_plus_four', 'lstGathering_len_plus_four')

off, Match_Making_FindByDescription_lstGathering_item_data_len = do_Uint32(conn, Match_Making_FindByDescription_lstGathering_item_container, tvb, off, 'Match_Making_FindByDescription_lstGathering_item_data_len', 'lstGathering_data_len')

local type_func = 'do_'..Match_Making_FindByDescription_lstGathering_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Match_Making_FindByDescription_lstGathering_item_container, tvb, off, "Match_Making_FindByDescription_lstGathering_item_data", "lstGathering")
		else
			Match_Making_FindByDescription_lstGathering_item_container:add(F.Match_Making_FindByDescription_lstGathering_item_data_bytes, tvb(off, Match_Making_FindByDescription_lstGathering_item_len))
			off = off + Match_Making_FindByDescription_lstGathering_item_data_len
		end
	

	end
	
 end
			},
			[19] = {
				["name"] = "FindByDescriptionRegex",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_FindByDescriptionRegex_strDescriptionRegex = do_String(conn, tree, tvb, off, 'Match_Making_FindByDescriptionRegex_strDescriptionRegex', 'strDescriptionRegex')
off = do_ResultRange(conn, tree, tvb, off, 'Match_Making_FindByDescriptionRegex_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Match_Making_FindByDescriptionRegex_lstGathering_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_FindByDescriptionRegex_lstGathering_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_FindByDescriptionRegex_lstGathering_len do
	
		local Match_Making_FindByDescriptionRegex_lstGathering_item_container = subtree:add(F.Data, tvb(off, 0))
		Match_Making_FindByDescriptionRegex_lstGathering_item_container:set_text("Data<Gathering>")
	off, Match_Making_FindByDescriptionRegex_lstGathering_item_type_name = do_String(conn, Match_Making_FindByDescriptionRegex_lstGathering_item_container, tvb, off, 'Match_Making_FindByDescriptionRegex_lstGathering_item_type_name', 'lstGathering_type_name')

off, Match_Making_FindByDescriptionRegex_lstGathering_item_len_plus_four = do_Uint32(conn, Match_Making_FindByDescriptionRegex_lstGathering_item_container, tvb, off, 'Match_Making_FindByDescriptionRegex_lstGathering_item_len_plus_four', 'lstGathering_len_plus_four')

off, Match_Making_FindByDescriptionRegex_lstGathering_item_data_len = do_Uint32(conn, Match_Making_FindByDescriptionRegex_lstGathering_item_container, tvb, off, 'Match_Making_FindByDescriptionRegex_lstGathering_item_data_len', 'lstGathering_data_len')

local type_func = 'do_'..Match_Making_FindByDescriptionRegex_lstGathering_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Match_Making_FindByDescriptionRegex_lstGathering_item_container, tvb, off, "Match_Making_FindByDescriptionRegex_lstGathering_item_data", "lstGathering")
		else
			Match_Making_FindByDescriptionRegex_lstGathering_item_container:add(F.Match_Making_FindByDescriptionRegex_lstGathering_item_data_bytes, tvb(off, Match_Making_FindByDescriptionRegex_lstGathering_item_len))
			off = off + Match_Making_FindByDescriptionRegex_lstGathering_item_data_len
		end
	

	end
	
 end
			},
			[20] = {
				["name"] = "FindByID",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Match_Making_FindByID_lstID_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_FindByID_lstID_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_FindByID_lstID_len do
	off, Match_Making_FindByID_lstID_item = do_Uint32(conn, subtree, tvb, off, 'Match_Making_FindByID_lstID_item', 'lstID')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Match_Making_FindByID_lstGathering_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_FindByID_lstGathering_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_FindByID_lstGathering_len do
	
		local Match_Making_FindByID_lstGathering_item_container = subtree:add(F.Data, tvb(off, 0))
		Match_Making_FindByID_lstGathering_item_container:set_text("Data<Gathering>")
	off, Match_Making_FindByID_lstGathering_item_type_name = do_String(conn, Match_Making_FindByID_lstGathering_item_container, tvb, off, 'Match_Making_FindByID_lstGathering_item_type_name', 'lstGathering_type_name')

off, Match_Making_FindByID_lstGathering_item_len_plus_four = do_Uint32(conn, Match_Making_FindByID_lstGathering_item_container, tvb, off, 'Match_Making_FindByID_lstGathering_item_len_plus_four', 'lstGathering_len_plus_four')

off, Match_Making_FindByID_lstGathering_item_data_len = do_Uint32(conn, Match_Making_FindByID_lstGathering_item_container, tvb, off, 'Match_Making_FindByID_lstGathering_item_data_len', 'lstGathering_data_len')

local type_func = 'do_'..Match_Making_FindByID_lstGathering_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Match_Making_FindByID_lstGathering_item_container, tvb, off, "Match_Making_FindByID_lstGathering_item_data", "lstGathering")
		else
			Match_Making_FindByID_lstGathering_item_container:add(F.Match_Making_FindByID_lstGathering_item_data_bytes, tvb(off, Match_Making_FindByID_lstGathering_item_len))
			off = off + Match_Making_FindByID_lstGathering_item_data_len
		end
	

	end
	
 end
			},
			[21] = {
				["name"] = "FindBySingleID",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_FindBySingleID_id = do_Uint32(conn, tree, tvb, off, 'Match_Making_FindBySingleID_id', 'id')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_FindBySingleID_bResult = do_Bool(conn, tree, tvb, off, 'Match_Making_FindBySingleID_bResult', 'bResult')

		local Match_Making_FindBySingleID_pGathering_container = tree:add(F.Data, tvb(off, 0))
		Match_Making_FindBySingleID_pGathering_container:set_text("Data<Gathering>")
	off, Match_Making_FindBySingleID_pGathering_type_name = do_String(conn, Match_Making_FindBySingleID_pGathering_container, tvb, off, 'Match_Making_FindBySingleID_pGathering_type_name', 'pGathering_type_name')

off, Match_Making_FindBySingleID_pGathering_len_plus_four = do_Uint32(conn, Match_Making_FindBySingleID_pGathering_container, tvb, off, 'Match_Making_FindBySingleID_pGathering_len_plus_four', 'pGathering_len_plus_four')

off, Match_Making_FindBySingleID_pGathering_data_len = do_Uint32(conn, Match_Making_FindBySingleID_pGathering_container, tvb, off, 'Match_Making_FindBySingleID_pGathering_data_len', 'pGathering_data_len')

local type_func = 'do_'..Match_Making_FindBySingleID_pGathering_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Match_Making_FindBySingleID_pGathering_container, tvb, off, "Match_Making_FindBySingleID_pGathering_data", "pGathering")
		else
			Match_Making_FindBySingleID_pGathering_container:add(F.Match_Making_FindBySingleID_pGathering_data_bytes, tvb(off, Match_Making_FindBySingleID_pGathering_len))
			off = off + Match_Making_FindBySingleID_pGathering_data_len
		end
	
 end
			},
			[22] = {
				["name"] = "FindByOwner",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_FindByOwner_id = do_PID(conn, tree, tvb, off, 'Match_Making_FindByOwner_id', 'id')
off = do_ResultRange(conn, tree, tvb, off, 'Match_Making_FindByOwner_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Match_Making_FindByOwner_lstGathering_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_FindByOwner_lstGathering_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_FindByOwner_lstGathering_len do
	
		local Match_Making_FindByOwner_lstGathering_item_container = subtree:add(F.Data, tvb(off, 0))
		Match_Making_FindByOwner_lstGathering_item_container:set_text("Data<Gathering>")
	off, Match_Making_FindByOwner_lstGathering_item_type_name = do_String(conn, Match_Making_FindByOwner_lstGathering_item_container, tvb, off, 'Match_Making_FindByOwner_lstGathering_item_type_name', 'lstGathering_type_name')

off, Match_Making_FindByOwner_lstGathering_item_len_plus_four = do_Uint32(conn, Match_Making_FindByOwner_lstGathering_item_container, tvb, off, 'Match_Making_FindByOwner_lstGathering_item_len_plus_four', 'lstGathering_len_plus_four')

off, Match_Making_FindByOwner_lstGathering_item_data_len = do_Uint32(conn, Match_Making_FindByOwner_lstGathering_item_container, tvb, off, 'Match_Making_FindByOwner_lstGathering_item_data_len', 'lstGathering_data_len')

local type_func = 'do_'..Match_Making_FindByOwner_lstGathering_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Match_Making_FindByOwner_lstGathering_item_container, tvb, off, "Match_Making_FindByOwner_lstGathering_item_data", "lstGathering")
		else
			Match_Making_FindByOwner_lstGathering_item_container:add(F.Match_Making_FindByOwner_lstGathering_item_data_bytes, tvb(off, Match_Making_FindByOwner_lstGathering_item_len))
			off = off + Match_Making_FindByOwner_lstGathering_item_data_len
		end
	

	end
	
 end
			},
			[23] = {
				["name"] = "FindByParticipants",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Match_Making_FindByParticipants_pid_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_FindByParticipants_pid_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_FindByParticipants_pid_len do
	off, Match_Making_FindByParticipants_pid_item = do_PID(conn, subtree, tvb, off, 'Match_Making_FindByParticipants_pid_item', 'pid')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Match_Making_FindByParticipants_lstGathering_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_FindByParticipants_lstGathering_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_FindByParticipants_lstGathering_len do
	
		local Match_Making_FindByParticipants_lstGathering_item_container = subtree:add(F.Data, tvb(off, 0))
		Match_Making_FindByParticipants_lstGathering_item_container:set_text("Data<Gathering>")
	off, Match_Making_FindByParticipants_lstGathering_item_type_name = do_String(conn, Match_Making_FindByParticipants_lstGathering_item_container, tvb, off, 'Match_Making_FindByParticipants_lstGathering_item_type_name', 'lstGathering_type_name')

off, Match_Making_FindByParticipants_lstGathering_item_len_plus_four = do_Uint32(conn, Match_Making_FindByParticipants_lstGathering_item_container, tvb, off, 'Match_Making_FindByParticipants_lstGathering_item_len_plus_four', 'lstGathering_len_plus_four')

off, Match_Making_FindByParticipants_lstGathering_item_data_len = do_Uint32(conn, Match_Making_FindByParticipants_lstGathering_item_container, tvb, off, 'Match_Making_FindByParticipants_lstGathering_item_data_len', 'lstGathering_data_len')

local type_func = 'do_'..Match_Making_FindByParticipants_lstGathering_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Match_Making_FindByParticipants_lstGathering_item_container, tvb, off, "Match_Making_FindByParticipants_lstGathering_item_data", "lstGathering")
		else
			Match_Making_FindByParticipants_lstGathering_item_container:add(F.Match_Making_FindByParticipants_lstGathering_item_data_bytes, tvb(off, Match_Making_FindByParticipants_lstGathering_item_len))
			off = off + Match_Making_FindByParticipants_lstGathering_item_data_len
		end
	

	end
	
 end
			},
			[24] = {
				["name"] = "FindInvitations",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_ResultRange(conn, tree, tvb, off, 'Match_Making_FindInvitations_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Match_Making_FindInvitations_lstGathering_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_FindInvitations_lstGathering_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_FindInvitations_lstGathering_len do
	
		local Match_Making_FindInvitations_lstGathering_item_container = subtree:add(F.Data, tvb(off, 0))
		Match_Making_FindInvitations_lstGathering_item_container:set_text("Data<Gathering>")
	off, Match_Making_FindInvitations_lstGathering_item_type_name = do_String(conn, Match_Making_FindInvitations_lstGathering_item_container, tvb, off, 'Match_Making_FindInvitations_lstGathering_item_type_name', 'lstGathering_type_name')

off, Match_Making_FindInvitations_lstGathering_item_len_plus_four = do_Uint32(conn, Match_Making_FindInvitations_lstGathering_item_container, tvb, off, 'Match_Making_FindInvitations_lstGathering_item_len_plus_four', 'lstGathering_len_plus_four')

off, Match_Making_FindInvitations_lstGathering_item_data_len = do_Uint32(conn, Match_Making_FindInvitations_lstGathering_item_container, tvb, off, 'Match_Making_FindInvitations_lstGathering_item_data_len', 'lstGathering_data_len')

local type_func = 'do_'..Match_Making_FindInvitations_lstGathering_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Match_Making_FindInvitations_lstGathering_item_container, tvb, off, "Match_Making_FindInvitations_lstGathering_item_data", "lstGathering")
		else
			Match_Making_FindInvitations_lstGathering_item_container:add(F.Match_Making_FindInvitations_lstGathering_item_data_bytes, tvb(off, Match_Making_FindInvitations_lstGathering_item_len))
			off = off + Match_Making_FindInvitations_lstGathering_item_data_len
		end
	

	end
	
 end
			},
			[25] = {
				["name"] = "FindBySQLQuery",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_FindBySQLQuery_strQuery = do_String(conn, tree, tvb, off, 'Match_Making_FindBySQLQuery_strQuery', 'strQuery')
off = do_ResultRange(conn, tree, tvb, off, 'Match_Making_FindBySQLQuery_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Match_Making_FindBySQLQuery_lstGathering_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_FindBySQLQuery_lstGathering_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_FindBySQLQuery_lstGathering_len do
	
		local Match_Making_FindBySQLQuery_lstGathering_item_container = subtree:add(F.Data, tvb(off, 0))
		Match_Making_FindBySQLQuery_lstGathering_item_container:set_text("Data<Gathering>")
	off, Match_Making_FindBySQLQuery_lstGathering_item_type_name = do_String(conn, Match_Making_FindBySQLQuery_lstGathering_item_container, tvb, off, 'Match_Making_FindBySQLQuery_lstGathering_item_type_name', 'lstGathering_type_name')

off, Match_Making_FindBySQLQuery_lstGathering_item_len_plus_four = do_Uint32(conn, Match_Making_FindBySQLQuery_lstGathering_item_container, tvb, off, 'Match_Making_FindBySQLQuery_lstGathering_item_len_plus_four', 'lstGathering_len_plus_four')

off, Match_Making_FindBySQLQuery_lstGathering_item_data_len = do_Uint32(conn, Match_Making_FindBySQLQuery_lstGathering_item_container, tvb, off, 'Match_Making_FindBySQLQuery_lstGathering_item_data_len', 'lstGathering_data_len')

local type_func = 'do_'..Match_Making_FindBySQLQuery_lstGathering_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Match_Making_FindBySQLQuery_lstGathering_item_container, tvb, off, "Match_Making_FindBySQLQuery_lstGathering_item_data", "lstGathering")
		else
			Match_Making_FindBySQLQuery_lstGathering_item_container:add(F.Match_Making_FindBySQLQuery_lstGathering_item_data_bytes, tvb(off, Match_Making_FindBySQLQuery_lstGathering_item_len))
			off = off + Match_Making_FindBySQLQuery_lstGathering_item_data_len
		end
	

	end
	
 end
			},
			[26] = {
				["name"] = "LaunchSession",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_LaunchSession_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_LaunchSession_idGathering', 'idGathering')
off, Match_Making_LaunchSession_strURL = do_String(conn, tree, tvb, off, 'Match_Making_LaunchSession_strURL', 'strURL')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_LaunchSession_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_LaunchSession_retval', 'retval')
 end
			},
			[27] = {
				["name"] = "UpdateSessionURL",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_UpdateSessionURL_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_UpdateSessionURL_idGathering', 'idGathering')
off, Match_Making_UpdateSessionURL_strURL = do_String(conn, tree, tvb, off, 'Match_Making_UpdateSessionURL_strURL', 'strURL')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_UpdateSessionURL_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_UpdateSessionURL_retval', 'retval')
 end
			},
			[28] = {
				["name"] = "GetSessionURL",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetSessionURL_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_GetSessionURL_idGathering', 'idGathering')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetSessionURL_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_GetSessionURL_retval', 'retval')
off, Match_Making_GetSessionURL_strURL = do_String(conn, tree, tvb, off, 'Match_Making_GetSessionURL_strURL', 'strURL')
 end
			},
			[29] = {
				["name"] = "GetState",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetState_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_GetState_idGathering', 'idGathering')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetState_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_GetState_retval', 'retval')
off, Match_Making_GetState_uiState = do_Uint32(conn, tree, tvb, off, 'Match_Making_GetState_uiState', 'uiState')
 end
			},
			[30] = {
				["name"] = "SetState",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_SetState_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_SetState_idGathering', 'idGathering')
off, Match_Making_SetState_uiNewState = do_Uint32(conn, tree, tvb, off, 'Match_Making_SetState_uiNewState', 'uiNewState')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_SetState_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_SetState_retval', 'retval')
 end
			},
			[31] = {
				["name"] = "ReportStats",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_ReportStats_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_ReportStats_idGathering', 'idGathering')
local Match_Making_ReportStats_lstStats_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_ReportStats_lstStats_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_ReportStats_lstStats_len do
	off = do_GatheringStats(conn, subtree, tvb, off, 'Match_Making_ReportStats_lstStats_item', 'lstStats')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_ReportStats_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_ReportStats_retval', 'retval')
 end
			},
			[32] = {
				["name"] = "GetStats",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetStats_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_GetStats_idGathering', 'idGathering')
local Match_Making_GetStats_lstParticipants_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_GetStats_lstParticipants_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_GetStats_lstParticipants_len do
	off, Match_Making_GetStats_lstParticipants_item = do_PID(conn, subtree, tvb, off, 'Match_Making_GetStats_lstParticipants_item', 'lstParticipants')

	end
	
local Match_Making_GetStats_lstColumns_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_GetStats_lstColumns_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_GetStats_lstColumns_len do
	off, Match_Making_GetStats_lstColumns_item = do_byte(conn, subtree, tvb, off, 'Match_Making_GetStats_lstColumns_item', 'lstColumns')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetStats_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_GetStats_retval', 'retval')
local Match_Making_GetStats_plstStats_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_GetStats_plstStats_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_GetStats_plstStats_len do
	off = do_GatheringStats(conn, subtree, tvb, off, 'Match_Making_GetStats_plstStats_item', 'plstStats')

	end
	
 end
			},
			[33] = {
				["name"] = "DeleteGathering",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_DeleteGathering_gid = do_Uint32(conn, tree, tvb, off, 'Match_Making_DeleteGathering_gid', 'gid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_DeleteGathering_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_DeleteGathering_retval', 'retval')
 end
			},
			[34] = {
				["name"] = "GetPendingDeletions",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetPendingDeletions_uiReason = do_Uint32(conn, tree, tvb, off, 'Match_Making_GetPendingDeletions_uiReason', 'uiReason')
off = do_ResultRange(conn, tree, tvb, off, 'Match_Making_GetPendingDeletions_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetPendingDeletions_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_GetPendingDeletions_retval', 'retval')
local Match_Making_GetPendingDeletions_lstDeletions_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_GetPendingDeletions_lstDeletions_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_GetPendingDeletions_lstDeletions_len do
	off = do_DeletionEntry(conn, subtree, tvb, off, 'Match_Making_GetPendingDeletions_lstDeletions_item', 'lstDeletions')

	end
	
 end
			},
			[35] = {
				["name"] = "DeleteFromDeletions",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Match_Making_DeleteFromDeletions_lstDeletions_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_DeleteFromDeletions_lstDeletions_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_DeleteFromDeletions_lstDeletions_len do
	off, Match_Making_DeleteFromDeletions_lstDeletions_item = do_Uint32(conn, subtree, tvb, off, 'Match_Making_DeleteFromDeletions_lstDeletions_item', 'lstDeletions')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_DeleteFromDeletions_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_DeleteFromDeletions_retval', 'retval')
 end
			},
			[36] = {
				["name"] = "MigrateGatheringOwnershipV1",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_MigrateGatheringOwnershipV1_gid = do_Uint32(conn, tree, tvb, off, 'Match_Making_MigrateGatheringOwnershipV1_gid', 'gid')
local Match_Making_MigrateGatheringOwnershipV1_lstPotentialNewOwnersID_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_MigrateGatheringOwnershipV1_lstPotentialNewOwnersID_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_MigrateGatheringOwnershipV1_lstPotentialNewOwnersID_len do
	off, Match_Making_MigrateGatheringOwnershipV1_lstPotentialNewOwnersID_item = do_PID(conn, subtree, tvb, off, 'Match_Making_MigrateGatheringOwnershipV1_lstPotentialNewOwnersID_item', 'lstPotentialNewOwnersID')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_MigrateGatheringOwnershipV1_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_MigrateGatheringOwnershipV1_retval', 'retval')
 end
			},
			[37] = {
				["name"] = "FindByDescriptionLike",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_FindByDescriptionLike_strDescriptionLike = do_String(conn, tree, tvb, off, 'Match_Making_FindByDescriptionLike_strDescriptionLike', 'strDescriptionLike')
off = do_ResultRange(conn, tree, tvb, off, 'Match_Making_FindByDescriptionLike_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Match_Making_FindByDescriptionLike_lstGathering_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_FindByDescriptionLike_lstGathering_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_FindByDescriptionLike_lstGathering_len do
	
		local Match_Making_FindByDescriptionLike_lstGathering_item_container = subtree:add(F.Data, tvb(off, 0))
		Match_Making_FindByDescriptionLike_lstGathering_item_container:set_text("Data<Gathering>")
	off, Match_Making_FindByDescriptionLike_lstGathering_item_type_name = do_String(conn, Match_Making_FindByDescriptionLike_lstGathering_item_container, tvb, off, 'Match_Making_FindByDescriptionLike_lstGathering_item_type_name', 'lstGathering_type_name')

off, Match_Making_FindByDescriptionLike_lstGathering_item_len_plus_four = do_Uint32(conn, Match_Making_FindByDescriptionLike_lstGathering_item_container, tvb, off, 'Match_Making_FindByDescriptionLike_lstGathering_item_len_plus_four', 'lstGathering_len_plus_four')

off, Match_Making_FindByDescriptionLike_lstGathering_item_data_len = do_Uint32(conn, Match_Making_FindByDescriptionLike_lstGathering_item_container, tvb, off, 'Match_Making_FindByDescriptionLike_lstGathering_item_data_len', 'lstGathering_data_len')

local type_func = 'do_'..Match_Making_FindByDescriptionLike_lstGathering_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Match_Making_FindByDescriptionLike_lstGathering_item_container, tvb, off, "Match_Making_FindByDescriptionLike_lstGathering_item_data", "lstGathering")
		else
			Match_Making_FindByDescriptionLike_lstGathering_item_container:add(F.Match_Making_FindByDescriptionLike_lstGathering_item_data_bytes, tvb(off, Match_Making_FindByDescriptionLike_lstGathering_item_len))
			off = off + Match_Making_FindByDescriptionLike_lstGathering_item_data_len
		end
	

	end
	
 end
			},
			[38] = {
				["name"] = "RegisterLocalURL",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_RegisterLocalURL_gid = do_Uint32(conn, tree, tvb, off, 'Match_Making_RegisterLocalURL_gid', 'gid')
off, Match_Making_RegisterLocalURL_url = do_StationURL(conn, tree, tvb, off, 'Match_Making_RegisterLocalURL_url', 'url')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[39] = {
				["name"] = "RegisterLocalURLs",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_RegisterLocalURLs_gid = do_Uint32(conn, tree, tvb, off, 'Match_Making_RegisterLocalURLs_gid', 'gid')
local Match_Making_RegisterLocalURLs_lstUrls_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_RegisterLocalURLs_lstUrls_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_RegisterLocalURLs_lstUrls_len do
	off, Match_Making_RegisterLocalURLs_lstUrls_item = do_StationURL(conn, subtree, tvb, off, 'Match_Making_RegisterLocalURLs_lstUrls_item', 'lstUrls')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[40] = {
				["name"] = "UpdateSessionHostV1",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_UpdateSessionHostV1_gid = do_Uint32(conn, tree, tvb, off, 'Match_Making_UpdateSessionHostV1_gid', 'gid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[41] = {
				["name"] = "GetSessionURLs",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetSessionURLs_gid = do_Uint32(conn, tree, tvb, off, 'Match_Making_GetSessionURLs_gid', 'gid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Match_Making_GetSessionURLs_lstURLs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_GetSessionURLs_lstURLs_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_GetSessionURLs_lstURLs_len do
	off, Match_Making_GetSessionURLs_lstURLs_item = do_StationURL(conn, subtree, tvb, off, 'Match_Making_GetSessionURLs_lstURLs_item', 'lstURLs')

	end
	
 end
			},
			[42] = {
				["name"] = "UpdateSessionHost",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_UpdateSessionHost_gid = do_Uint32(conn, tree, tvb, off, 'Match_Making_UpdateSessionHost_gid', 'gid')
off, Match_Making_UpdateSessionHost_isMigrateOwner = do_Bool(conn, tree, tvb, off, 'Match_Making_UpdateSessionHost_isMigrateOwner', 'isMigrateOwner')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[43] = {
				["name"] = "UpdateGatheringOwnership",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_UpdateGatheringOwnership_gid = do_Uint32(conn, tree, tvb, off, 'Match_Making_UpdateGatheringOwnership_gid', 'gid')
off, Match_Making_UpdateGatheringOwnership_participantsOnly = do_Bool(conn, tree, tvb, off, 'Match_Making_UpdateGatheringOwnership_participantsOnly', 'participantsOnly')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_UpdateGatheringOwnership_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_UpdateGatheringOwnership_retval', 'retval')
 end
			},
			[44] = {
				["name"] = "MigrateGatheringOwnership",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_MigrateGatheringOwnership_gid = do_Uint32(conn, tree, tvb, off, 'Match_Making_MigrateGatheringOwnership_gid', 'gid')
local Match_Making_MigrateGatheringOwnership_lstPotentialNewOwnersID_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_MigrateGatheringOwnership_lstPotentialNewOwnersID_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_MigrateGatheringOwnership_lstPotentialNewOwnersID_len do
	off, Match_Making_MigrateGatheringOwnership_lstPotentialNewOwnersID_item = do_PID(conn, subtree, tvb, off, 'Match_Making_MigrateGatheringOwnership_lstPotentialNewOwnersID_item', 'lstPotentialNewOwnersID')

	end
	
off, Match_Making_MigrateGatheringOwnership_participantsOnly = do_Bool(conn, tree, tvb, off, 'Match_Making_MigrateGatheringOwnership_participantsOnly', 'participantsOnly')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			
		}
	})
add_proto(109,
	{
		["nested"] = true,
		["name"] = "SMB 35",
		["methods"] = {
[55] = {
				["name"] = "ResetGameSession",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	})
add_proto(112,
	{
		["nested"] = true,
		["name"] = "MK8",
		["methods"] = {
[14] = {
				["name"] = "GetCompetitionRankingScore",
				["request"] = nil,
				["response"] = nil
			},
			[15] = {
				["name"] = "UploadCompetitionRankingScore",
				["request"] = nil,
				["response"] = nil
			},
			[16] = {
				["name"] = "GetCompetitionInfo",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	})
add_proto(36,
	{
		["nested"] = false,
		["name"] = "Tracking 3",
		["methods"] = {
[1] = {
				["name"] = "SendTag",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Tracking_3_SendTag_trackingID = do_Uint32(conn, tree, tvb, off, 'Tracking_3_SendTag_trackingID', 'trackingID')
off, Tracking_3_SendTag_tag = do_String(conn, tree, tvb, off, 'Tracking_3_SendTag_tag', 'tag')
off, Tracking_3_SendTag_attributes = do_String(conn, tree, tvb, off, 'Tracking_3_SendTag_attributes', 'attributes')
off, Tracking_3_SendTag_deltaTime = do_Uint32(conn, tree, tvb, off, 'Tracking_3_SendTag_deltaTime', 'deltaTime')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[2] = {
				["name"] = "SendTagAndUpdateUserInfo",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Tracking_3_SendTagAndUpdateUserInfo_trackingID = do_Uint32(conn, tree, tvb, off, 'Tracking_3_SendTagAndUpdateUserInfo_trackingID', 'trackingID')
off, Tracking_3_SendTagAndUpdateUserInfo_tag = do_String(conn, tree, tvb, off, 'Tracking_3_SendTagAndUpdateUserInfo_tag', 'tag')
off, Tracking_3_SendTagAndUpdateUserInfo_attributes = do_String(conn, tree, tvb, off, 'Tracking_3_SendTagAndUpdateUserInfo_attributes', 'attributes')
off, Tracking_3_SendTagAndUpdateUserInfo_deltaTime = do_Uint32(conn, tree, tvb, off, 'Tracking_3_SendTagAndUpdateUserInfo_deltaTime', 'deltaTime')
off, Tracking_3_SendTagAndUpdateUserInfo_userID = do_String(conn, tree, tvb, off, 'Tracking_3_SendTagAndUpdateUserInfo_userID', 'userID')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[3] = {
				["name"] = "SendUserInfo",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Tracking_3_SendUserInfo_deltaTime = do_Uint32(conn, tree, tvb, off, 'Tracking_3_SendUserInfo_deltaTime', 'deltaTime')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_TrackingInformation(conn, tree, tvb, off, 'Tracking_3_SendUserInfo_userInfo', 'userInfo')
off, Tracking_3_SendUserInfo_trackingID = do_Uint32(conn, tree, tvb, off, 'Tracking_3_SendUserInfo_trackingID', 'trackingID')
 end
			},
			[4] = {
				["name"] = "GetConfiguration",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Tracking_3_GetConfiguration_tags_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Tracking_3_GetConfiguration_tags_len, tvb(off,4))
	off = off + 4
	for i=1,Tracking_3_GetConfiguration_tags_len do
	off, Tracking_3_GetConfiguration_tags_item = do_String(conn, subtree, tvb, off, 'Tracking_3_GetConfiguration_tags_item', 'tags')

	end
	
 end
			},
			[5] = {
				["name"] = "SendTags",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Tracking_3_SendTags_tagData_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Tracking_3_SendTags_tagData_len, tvb(off,4))
	off = off + 4
	for i=1,Tracking_3_SendTags_tagData_len do
	off = do_TrackingTag(conn, subtree, tvb, off, 'Tracking_3_SendTags_tagData_item', 'tagData')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			
		}
	})
add_proto(23,
	{
		["nested"] = false,
		["name"] = "Messaging",
		["methods"] = {
[1] = {
				["name"] = "DeliverMessage",
				["request"] = function (conn, tree, tvb)
	local off = 0

		local Messaging_DeliverMessage_oUserMessage_container = tree:add(F.Data, tvb(off, 0))
		Messaging_DeliverMessage_oUserMessage_container:set_text("Data")
	off, Messaging_DeliverMessage_oUserMessage_type_name = do_String(conn, Messaging_DeliverMessage_oUserMessage_container, tvb, off, 'Messaging_DeliverMessage_oUserMessage_type_name', 'oUserMessage_type_name')

off, Messaging_DeliverMessage_oUserMessage_len_plus_four = do_Uint32(conn, Messaging_DeliverMessage_oUserMessage_container, tvb, off, 'Messaging_DeliverMessage_oUserMessage_len_plus_four', 'oUserMessage_len_plus_four')

off, Messaging_DeliverMessage_oUserMessage_data_len = do_Uint32(conn, Messaging_DeliverMessage_oUserMessage_container, tvb, off, 'Messaging_DeliverMessage_oUserMessage_data_len', 'oUserMessage_data_len')

local type_func = 'do_'..Messaging_DeliverMessage_oUserMessage_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Messaging_DeliverMessage_oUserMessage_container, tvb, off, "Messaging_DeliverMessage_oUserMessage_data", "oUserMessage")
		else
			Messaging_DeliverMessage_oUserMessage_container:add(F.Messaging_DeliverMessage_oUserMessage_data_bytes, tvb(off, Messaging_DeliverMessage_oUserMessage_len))
			off = off + Messaging_DeliverMessage_oUserMessage_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0

		local Messaging_DeliverMessage_oModifiedMessage_container = tree:add(F.Data, tvb(off, 0))
		Messaging_DeliverMessage_oModifiedMessage_container:set_text("Data")
	off, Messaging_DeliverMessage_oModifiedMessage_type_name = do_String(conn, Messaging_DeliverMessage_oModifiedMessage_container, tvb, off, 'Messaging_DeliverMessage_oModifiedMessage_type_name', 'oModifiedMessage_type_name')

off, Messaging_DeliverMessage_oModifiedMessage_len_plus_four = do_Uint32(conn, Messaging_DeliverMessage_oModifiedMessage_container, tvb, off, 'Messaging_DeliverMessage_oModifiedMessage_len_plus_four', 'oModifiedMessage_len_plus_four')

off, Messaging_DeliverMessage_oModifiedMessage_data_len = do_Uint32(conn, Messaging_DeliverMessage_oModifiedMessage_container, tvb, off, 'Messaging_DeliverMessage_oModifiedMessage_data_len', 'oModifiedMessage_data_len')

local type_func = 'do_'..Messaging_DeliverMessage_oModifiedMessage_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Messaging_DeliverMessage_oModifiedMessage_container, tvb, off, "Messaging_DeliverMessage_oModifiedMessage_data", "oModifiedMessage")
		else
			Messaging_DeliverMessage_oModifiedMessage_container:add(F.Messaging_DeliverMessage_oModifiedMessage_data_bytes, tvb(off, Messaging_DeliverMessage_oModifiedMessage_len))
			off = off + Messaging_DeliverMessage_oModifiedMessage_data_len
		end
	
local Messaging_DeliverMessage_lstSandboxNodeId_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Messaging_DeliverMessage_lstSandboxNodeId_len, tvb(off,4))
	off = off + 4
	for i=1,Messaging_DeliverMessage_lstSandboxNodeId_len do
	off, Messaging_DeliverMessage_lstSandboxNodeId_item = do_Uint32(conn, subtree, tvb, off, 'Messaging_DeliverMessage_lstSandboxNodeId_item', 'lstSandboxNodeId')

	end
	
local Messaging_DeliverMessage_lstParticipants_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Messaging_DeliverMessage_lstParticipants_len, tvb(off,4))
	off = off + 4
	for i=1,Messaging_DeliverMessage_lstParticipants_len do
	off, Messaging_DeliverMessage_lstParticipants_item = do_PID(conn, subtree, tvb, off, 'Messaging_DeliverMessage_lstParticipants_item', 'lstParticipants')

	end
	
 end
			},
			[2] = {
				["name"] = "GetNumberOfMessages",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MessageRecipient(conn, tree, tvb, off, 'Messaging_GetNumberOfMessages_recipient', 'recipient')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Messaging_GetNumberOfMessages_uiNbMessages = do_Uint32(conn, tree, tvb, off, 'Messaging_GetNumberOfMessages_uiNbMessages', 'uiNbMessages')
 end
			},
			[3] = {
				["name"] = "GetMessagesHeaders",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MessageRecipient(conn, tree, tvb, off, 'Messaging_GetMessagesHeaders_recipient', 'recipient')
off = do_ResultRange(conn, tree, tvb, off, 'Messaging_GetMessagesHeaders_range', 'range')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Messaging_GetMessagesHeaders_lstMsgHeaders_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Messaging_GetMessagesHeaders_lstMsgHeaders_len, tvb(off,4))
	off = off + 4
	for i=1,Messaging_GetMessagesHeaders_lstMsgHeaders_len do
	off = do_UserMessage(conn, subtree, tvb, off, 'Messaging_GetMessagesHeaders_lstMsgHeaders_item', 'lstMsgHeaders')

	end
	
 end
			},
			[4] = {
				["name"] = "RetrieveAllMessagesWithinRange",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MessageRecipient(conn, tree, tvb, off, 'Messaging_RetrieveAllMessagesWithinRange_recipient', 'recipient')
off = do_ResultRange(conn, tree, tvb, off, 'Messaging_RetrieveAllMessagesWithinRange_range', 'range')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Messaging_RetrieveAllMessagesWithinRange_lstMessages_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Messaging_RetrieveAllMessagesWithinRange_lstMessages_len, tvb(off,4))
	off = off + 4
	for i=1,Messaging_RetrieveAllMessagesWithinRange_lstMessages_len do
	
		local Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_container = subtree:add(F.Data, tvb(off, 0))
		Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_container:set_text("Data")
	off, Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_type_name = do_String(conn, Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_container, tvb, off, 'Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_type_name', 'lstMessages_type_name')

off, Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_len_plus_four = do_Uint32(conn, Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_container, tvb, off, 'Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_len_plus_four', 'lstMessages_len_plus_four')

off, Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_data_len = do_Uint32(conn, Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_container, tvb, off, 'Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_data_len', 'lstMessages_data_len')

local type_func = 'do_'..Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_container, tvb, off, "Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_data", "lstMessages")
		else
			Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_container:add(F.Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_data_bytes, tvb(off, Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_len))
			off = off + Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_data_len
		end
	

	end
	
 end
			},
			[5] = {
				["name"] = "RetrieveMessages",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MessageRecipient(conn, tree, tvb, off, 'Messaging_RetrieveMessages_recipient', 'recipient')
local Messaging_RetrieveMessages_lstMsgIDs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Messaging_RetrieveMessages_lstMsgIDs_len, tvb(off,4))
	off = off + 4
	for i=1,Messaging_RetrieveMessages_lstMsgIDs_len do
	off, Messaging_RetrieveMessages_lstMsgIDs_item = do_Uint32(conn, subtree, tvb, off, 'Messaging_RetrieveMessages_lstMsgIDs_item', 'lstMsgIDs')

	end
	
off, Messaging_RetrieveMessages_bLeaveOnServer = do_Bool(conn, tree, tvb, off, 'Messaging_RetrieveMessages_bLeaveOnServer', 'bLeaveOnServer')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Messaging_RetrieveMessages_lstMessages_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Messaging_RetrieveMessages_lstMessages_len, tvb(off,4))
	off = off + 4
	for i=1,Messaging_RetrieveMessages_lstMessages_len do
	
		local Messaging_RetrieveMessages_lstMessages_item_container = subtree:add(F.Data, tvb(off, 0))
		Messaging_RetrieveMessages_lstMessages_item_container:set_text("Data")
	off, Messaging_RetrieveMessages_lstMessages_item_type_name = do_String(conn, Messaging_RetrieveMessages_lstMessages_item_container, tvb, off, 'Messaging_RetrieveMessages_lstMessages_item_type_name', 'lstMessages_type_name')

off, Messaging_RetrieveMessages_lstMessages_item_len_plus_four = do_Uint32(conn, Messaging_RetrieveMessages_lstMessages_item_container, tvb, off, 'Messaging_RetrieveMessages_lstMessages_item_len_plus_four', 'lstMessages_len_plus_four')

off, Messaging_RetrieveMessages_lstMessages_item_data_len = do_Uint32(conn, Messaging_RetrieveMessages_lstMessages_item_container, tvb, off, 'Messaging_RetrieveMessages_lstMessages_item_data_len', 'lstMessages_data_len')

local type_func = 'do_'..Messaging_RetrieveMessages_lstMessages_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Messaging_RetrieveMessages_lstMessages_item_container, tvb, off, "Messaging_RetrieveMessages_lstMessages_item_data", "lstMessages")
		else
			Messaging_RetrieveMessages_lstMessages_item_container:add(F.Messaging_RetrieveMessages_lstMessages_item_data_bytes, tvb(off, Messaging_RetrieveMessages_lstMessages_item_len))
			off = off + Messaging_RetrieveMessages_lstMessages_item_data_len
		end
	

	end
	
 end
			},
			[6] = {
				["name"] = "DeleteMessages",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MessageRecipient(conn, tree, tvb, off, 'Messaging_DeleteMessages_recipient', 'recipient')
local Messaging_DeleteMessages_lstMessagesToDelete_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Messaging_DeleteMessages_lstMessagesToDelete_len, tvb(off,4))
	off = off + 4
	for i=1,Messaging_DeleteMessages_lstMessagesToDelete_len do
	off, Messaging_DeleteMessages_lstMessagesToDelete_item = do_Uint32(conn, subtree, tvb, off, 'Messaging_DeleteMessages_lstMessagesToDelete_item', 'lstMessagesToDelete')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[7] = {
				["name"] = "DeleteAllMessages",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MessageRecipient(conn, tree, tvb, off, 'Messaging_DeleteAllMessages_recipient', 'recipient')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Messaging_DeleteAllMessages_uiNbDeletedMessages = do_Uint32(conn, tree, tvb, off, 'Messaging_DeleteAllMessages_uiNbDeletedMessages', 'uiNbDeletedMessages')
 end
			},
			
		}
	})
add_proto(124,
	{
		["nested"] = false,
		["name"] = "Screening",
		["methods"] = {
[1] = {
				["name"] = "ReportDataStoreContent",
				["request"] = nil,
				["response"] = nil
			},
			[2] = {
				["name"] = "ReportUser",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	})
add_proto(115,
	{
		["nested"] = true,
		["name"] = "SMM",
		["methods"] = {
[45] = {
				["name"] = "GetObjectInfos",
				["request"] = function (conn, tree, tvb)
	local off = 0
local SMM_GetObjectInfos_dataIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_GetObjectInfos_dataIds_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_GetObjectInfos_dataIds_len do
	off, SMM_GetObjectInfos_dataIds_item = do_Uint64(conn, subtree, tvb, off, 'SMM_GetObjectInfos_dataIds_item', 'dataIds')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMM_GetObjectInfos_pInfos_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_GetObjectInfos_pInfos_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_GetObjectInfos_pInfos_len do
	off = do_DataStoreFileServerObjectInfo(conn, subtree, tvb, off, 'SMM_GetObjectInfos_pInfos_item', 'pInfos')

	end
	
 end
			},
			[46] = {
				["name"] = "GetMetaByOwnerId",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreGetMetaByOwnerIdParam(conn, tree, tvb, off, 'SMM_GetMetaByOwnerId_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMM_GetMetaByOwnerId_pMetaInfo_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_GetMetaByOwnerId_pMetaInfo_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_GetMetaByOwnerId_pMetaInfo_len do
	off = do_DataStoreMetaInfo(conn, subtree, tvb, off, 'SMM_GetMetaByOwnerId_pMetaInfo_item', 'pMetaInfo')

	end
	
off, SMM_GetMetaByOwnerId_pHasNext = do_Bool(conn, tree, tvb, off, 'SMM_GetMetaByOwnerId_pHasNext', 'pHasNext')
 end
			},
			[47] = {
				["name"] = "CustomSearchObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, SMM_CustomSearchObject_condition = do_Uint32(conn, tree, tvb, off, 'SMM_CustomSearchObject_condition', 'condition')
off = do_DataStoreSearchParam(conn, tree, tvb, off, 'SMM_CustomSearchObject_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreSearchResult(conn, tree, tvb, off, 'SMM_CustomSearchObject_pSearchResult', 'pSearchResult')
 end
			},
			[48] = {
				["name"] = "RateCustomRanking",
				["request"] = function (conn, tree, tvb)
	local off = 0
local SMM_RateCustomRanking_params_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_RateCustomRanking_params_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_RateCustomRanking_params_len do
	off = do_DataStoreRateCustomRankingParam(conn, subtree, tvb, off, 'SMM_RateCustomRanking_params_item', 'params')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[49] = {
				["name"] = "GetCustomRanking",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreGetCustomRankingParam(conn, tree, tvb, off, 'SMM_GetCustomRanking_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMM_GetCustomRanking_pRankingResult_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_GetCustomRanking_pRankingResult_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_GetCustomRanking_pRankingResult_len do
	off = do_DataStoreCustomRankingResult(conn, subtree, tvb, off, 'SMM_GetCustomRanking_pRankingResult_item', 'pRankingResult')

	end
	
local SMM_GetCustomRanking_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_GetCustomRanking_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_GetCustomRanking_pResults_len do
	off, SMM_GetCustomRanking_pResults_item = do_Result(conn, subtree, tvb, off, 'SMM_GetCustomRanking_pResults_item', 'pResults')

	end
	
 end
			},
			[50] = {
				["name"] = "GetCustomRankingByDataId",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreGetCustomRankingByDataIdParam(conn, tree, tvb, off, 'SMM_GetCustomRankingByDataId_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMM_GetCustomRankingByDataId_pRankingResult_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_GetCustomRankingByDataId_pRankingResult_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_GetCustomRankingByDataId_pRankingResult_len do
	off = do_DataStoreCustomRankingResult(conn, subtree, tvb, off, 'SMM_GetCustomRankingByDataId_pRankingResult_item', 'pRankingResult')

	end
	
local SMM_GetCustomRankingByDataId_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_GetCustomRankingByDataId_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_GetCustomRankingByDataId_pResults_len do
	off, SMM_GetCustomRankingByDataId_pResults_item = do_Result(conn, subtree, tvb, off, 'SMM_GetCustomRankingByDataId_pResults_item', 'pResults')

	end
	
 end
			},
			[51] = {
				["name"] = "DeleteCustomRanking",
				["request"] = function (conn, tree, tvb)
	local off = 0
local SMM_DeleteCustomRanking_dataIdList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_DeleteCustomRanking_dataIdList_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_DeleteCustomRanking_dataIdList_len do
	off, SMM_DeleteCustomRanking_dataIdList_item = do_Uint64(conn, subtree, tvb, off, 'SMM_DeleteCustomRanking_dataIdList_item', 'dataIdList')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[52] = {
				["name"] = "AddToBufferQueue",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_BufferQueueParam(conn, tree, tvb, off, 'SMM_AddToBufferQueue_param', 'param')
off, SMM_AddToBufferQueue_buffer = do_qBuffer(conn, tree, tvb, off, 'SMM_AddToBufferQueue_buffer', 'buffer')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[53] = {
				["name"] = "AddToBufferQueues",
				["request"] = function (conn, tree, tvb)
	local off = 0
local SMM_AddToBufferQueues_params_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_AddToBufferQueues_params_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_AddToBufferQueues_params_len do
	off = do_BufferQueueParam(conn, subtree, tvb, off, 'SMM_AddToBufferQueues_params_item', 'params')

	end
	
local SMM_AddToBufferQueues_buffers_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_AddToBufferQueues_buffers_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_AddToBufferQueues_buffers_len do
	off, SMM_AddToBufferQueues_buffers_item = do_qBuffer(conn, subtree, tvb, off, 'SMM_AddToBufferQueues_buffers_item', 'buffers')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMM_AddToBufferQueues_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_AddToBufferQueues_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_AddToBufferQueues_pResults_len do
	off, SMM_AddToBufferQueues_pResults_item = do_Result(conn, subtree, tvb, off, 'SMM_AddToBufferQueues_pResults_item', 'pResults')

	end
	
 end
			},
			[54] = {
				["name"] = "GetBufferQueue",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_BufferQueueParam(conn, tree, tvb, off, 'SMM_GetBufferQueue_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMM_GetBufferQueue_pBufferQueue_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_GetBufferQueue_pBufferQueue_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_GetBufferQueue_pBufferQueue_len do
	off, SMM_GetBufferQueue_pBufferQueue_item = do_qBuffer(conn, subtree, tvb, off, 'SMM_GetBufferQueue_pBufferQueue_item', 'pBufferQueue')

	end
	
 end
			},
			[55] = {
				["name"] = "GetBufferQueues",
				["request"] = function (conn, tree, tvb)
	local off = 0
local SMM_GetBufferQueues_params_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_GetBufferQueues_params_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_GetBufferQueues_params_len do
	off = do_BufferQueueParam(conn, subtree, tvb, off, 'SMM_GetBufferQueues_params_item', 'params')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMM_GetBufferQueues_pBufferQueueLst_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_GetBufferQueues_pBufferQueueLst_len, tvb(off,4))
	off = off + 4
	for j=1,SMM_GetBufferQueues_pBufferQueueLst_len do
	local SMM_GetBufferQueues_pBufferQueueLst_item_len = tvb(off, 4):le_uint()
	subsubtree = subtree:add_le(F.SMM_GetBufferQueues_pBufferQueueLst_item_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_GetBufferQueues_pBufferQueueLst_item_len do
	off, SMM_GetBufferQueues_pBufferQueueLst_item_item = do_qBuffer(conn, subsubtree, tvb, off, 'SMM_GetBufferQueues_pBufferQueueLst_item_item', 'pBufferQueueLst')

	end
	

	end
	
local SMM_GetBufferQueues_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_GetBufferQueues_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_GetBufferQueues_pResults_len do
	off, SMM_GetBufferQueues_pResults_item = do_Result(conn, subtree, tvb, off, 'SMM_GetBufferQueues_pResults_item', 'pResults')

	end
	
 end
			},
			[56] = {
				["name"] = "ClearBufferQueues",
				["request"] = function (conn, tree, tvb)
	local off = 0
local SMM_ClearBufferQueues_params_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_ClearBufferQueues_params_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_ClearBufferQueues_params_len do
	off = do_BufferQueueParam(conn, subtree, tvb, off, 'SMM_ClearBufferQueues_params_item', 'params')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMM_ClearBufferQueues_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_ClearBufferQueues_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_ClearBufferQueues_pResults_len do
	off, SMM_ClearBufferQueues_pResults_item = do_Result(conn, subtree, tvb, off, 'SMM_ClearBufferQueues_pResults_item', 'pResults')

	end
	
 end
			},
			[57] = {
				["name"] = "CompleteAttachFile",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreCompletePostParam(conn, tree, tvb, off, 'SMM_CompleteAttachFile_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, SMM_CompleteAttachFile_pUrl = do_String(conn, tree, tvb, off, 'SMM_CompleteAttachFile_pUrl', 'pUrl')
 end
			},
			[58] = {
				["name"] = "CompleteAttachFileV1",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreCompletePostParamV1(conn, tree, tvb, off, 'SMM_CompleteAttachFileV1_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, SMM_CompleteAttachFileV1_pUrl = do_String(conn, tree, tvb, off, 'SMM_CompleteAttachFileV1_pUrl', 'pUrl')
 end
			},
			[59] = {
				["name"] = "PrepareAttachFile",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreAttachFileParam(conn, tree, tvb, off, 'SMM_PrepareAttachFile_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreReqPostInfo(conn, tree, tvb, off, 'SMM_PrepareAttachFile_pReqPostInfo', 'pReqPostInfo')
 end
			},
			[60] = {
				["name"] = "ConditionalSearchObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, SMM_ConditionalSearchObject_condition = do_Uint32(conn, tree, tvb, off, 'SMM_ConditionalSearchObject_condition', 'condition')
off = do_DataStoreSearchParam(conn, tree, tvb, off, 'SMM_ConditionalSearchObject_param', 'param')
local SMM_ConditionalSearchObject_extraData_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_ConditionalSearchObject_extraData_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_ConditionalSearchObject_extraData_len do
	off, SMM_ConditionalSearchObject_extraData_item = do_String(conn, subtree, tvb, off, 'SMM_ConditionalSearchObject_extraData_item', 'extraData')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMM_ConditionalSearchObject_pRankingResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_ConditionalSearchObject_pRankingResults_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_ConditionalSearchObject_pRankingResults_len do
	off = do_DataStoreCustomRankingResult(conn, subtree, tvb, off, 'SMM_ConditionalSearchObject_pRankingResults_item', 'pRankingResults')

	end
	
 end
			},
			[61] = {
				["name"] = "GetApplicationConfig",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, SMM_GetApplicationConfig_applicationId = do_Uint32(conn, tree, tvb, off, 'SMM_GetApplicationConfig_applicationId', 'applicationId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMM_GetApplicationConfig_config_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_GetApplicationConfig_config_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_GetApplicationConfig_config_len do
	off, SMM_GetApplicationConfig_config_item = do_Sint32(conn, subtree, tvb, off, 'SMM_GetApplicationConfig_config_item', 'config')

	end
	
 end
			},
			[62] = {
				["name"] = "SetApplicationConfig",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, SMM_SetApplicationConfig_applicationId = do_Uint32(conn, tree, tvb, off, 'SMM_SetApplicationConfig_applicationId', 'applicationId')
off, SMM_SetApplicationConfig_key = do_Uint32(conn, tree, tvb, off, 'SMM_SetApplicationConfig_key', 'key')
off, SMM_SetApplicationConfig_value = do_Sint32(conn, tree, tvb, off, 'SMM_SetApplicationConfig_value', 'value')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[63] = {
				["name"] = "DeleteApplicationConfig",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, SMM_DeleteApplicationConfig_applicationId = do_Uint32(conn, tree, tvb, off, 'SMM_DeleteApplicationConfig_applicationId', 'applicationId')
off, SMM_DeleteApplicationConfig_key = do_Uint32(conn, tree, tvb, off, 'SMM_DeleteApplicationConfig_key', 'key')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[64] = {
				["name"] = "LatestCourseSearchObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreSearchParam(conn, tree, tvb, off, 'SMM_LatestCourseSearchObject_param', 'param')
local SMM_LatestCourseSearchObject_extraData_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_LatestCourseSearchObject_extraData_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_LatestCourseSearchObject_extraData_len do
	off, SMM_LatestCourseSearchObject_extraData_item = do_String(conn, subtree, tvb, off, 'SMM_LatestCourseSearchObject_extraData_item', 'extraData')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMM_LatestCourseSearchObject_pRankingResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_LatestCourseSearchObject_pRankingResults_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_LatestCourseSearchObject_pRankingResults_len do
	off = do_DataStoreCustomRankingResult(conn, subtree, tvb, off, 'SMM_LatestCourseSearchObject_pRankingResults_item', 'pRankingResults')

	end
	
 end
			},
			[65] = {
				["name"] = "FollowingsLatestCourseSearchObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreSearchParam(conn, tree, tvb, off, 'SMM_FollowingsLatestCourseSearchObject_param', 'param')
local SMM_FollowingsLatestCourseSearchObject_extraData_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_FollowingsLatestCourseSearchObject_extraData_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_FollowingsLatestCourseSearchObject_extraData_len do
	off, SMM_FollowingsLatestCourseSearchObject_extraData_item = do_String(conn, subtree, tvb, off, 'SMM_FollowingsLatestCourseSearchObject_extraData_item', 'extraData')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMM_FollowingsLatestCourseSearchObject_pRankingResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_FollowingsLatestCourseSearchObject_pRankingResults_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_FollowingsLatestCourseSearchObject_pRankingResults_len do
	off = do_DataStoreCustomRankingResult(conn, subtree, tvb, off, 'SMM_FollowingsLatestCourseSearchObject_pRankingResults_item', 'pRankingResults')

	end
	
 end
			},
			[66] = {
				["name"] = "RecommendedCourseSearchObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreSearchParam(conn, tree, tvb, off, 'SMM_RecommendedCourseSearchObject_param', 'param')
local SMM_RecommendedCourseSearchObject_extraData_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_RecommendedCourseSearchObject_extraData_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_RecommendedCourseSearchObject_extraData_len do
	off, SMM_RecommendedCourseSearchObject_extraData_item = do_String(conn, subtree, tvb, off, 'SMM_RecommendedCourseSearchObject_extraData_item', 'extraData')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMM_RecommendedCourseSearchObject_pRankingResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_RecommendedCourseSearchObject_pRankingResults_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_RecommendedCourseSearchObject_pRankingResults_len do
	off = do_DataStoreCustomRankingResult(conn, subtree, tvb, off, 'SMM_RecommendedCourseSearchObject_pRankingResults_item', 'pRankingResults')

	end
	
 end
			},
			[67] = {
				["name"] = "ScoreRangeCascadedSearchObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreSearchParam(conn, tree, tvb, off, 'SMM_ScoreRangeCascadedSearchObject_param', 'param')
local SMM_ScoreRangeCascadedSearchObject_extraData_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_ScoreRangeCascadedSearchObject_extraData_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_ScoreRangeCascadedSearchObject_extraData_len do
	off, SMM_ScoreRangeCascadedSearchObject_extraData_item = do_String(conn, subtree, tvb, off, 'SMM_ScoreRangeCascadedSearchObject_extraData_item', 'extraData')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMM_ScoreRangeCascadedSearchObject_pRankingResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_ScoreRangeCascadedSearchObject_pRankingResults_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_ScoreRangeCascadedSearchObject_pRankingResults_len do
	off = do_DataStoreCustomRankingResult(conn, subtree, tvb, off, 'SMM_ScoreRangeCascadedSearchObject_pRankingResults_item', 'pRankingResults')

	end
	
 end
			},
			[68] = {
				["name"] = "SuggestedCourseSearchObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreSearchParam(conn, tree, tvb, off, 'SMM_SuggestedCourseSearchObject_param', 'param')
local SMM_SuggestedCourseSearchObject_extraData_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_SuggestedCourseSearchObject_extraData_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_SuggestedCourseSearchObject_extraData_len do
	off, SMM_SuggestedCourseSearchObject_extraData_item = do_String(conn, subtree, tvb, off, 'SMM_SuggestedCourseSearchObject_extraData_item', 'extraData')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMM_SuggestedCourseSearchObject_pRankingResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_SuggestedCourseSearchObject_pRankingResults_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_SuggestedCourseSearchObject_pRankingResults_len do
	off = do_DataStoreCustomRankingResult(conn, subtree, tvb, off, 'SMM_SuggestedCourseSearchObject_pRankingResults_item', 'pRankingResults')

	end
	
 end
			},
			[69] = {
				["name"] = "PreparePostObjectWithOwnerIdAndDataId",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, SMM_PreparePostObjectWithOwnerIdAndDataId_ownerId = do_Uint32(conn, tree, tvb, off, 'SMM_PreparePostObjectWithOwnerIdAndDataId_ownerId', 'ownerId')
off, SMM_PreparePostObjectWithOwnerIdAndDataId_dataId = do_Uint64(conn, tree, tvb, off, 'SMM_PreparePostObjectWithOwnerIdAndDataId_dataId', 'dataId')
off = do_DataStorePreparePostParam(conn, tree, tvb, off, 'SMM_PreparePostObjectWithOwnerIdAndDataId_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreReqPostInfo(conn, tree, tvb, off, 'SMM_PreparePostObjectWithOwnerIdAndDataId_pReqPostInfo', 'pReqPostInfo')
 end
			},
			[70] = {
				["name"] = "CompletePostObjectWithOwnerId",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, SMM_CompletePostObjectWithOwnerId_ownerId = do_Uint32(conn, tree, tvb, off, 'SMM_CompletePostObjectWithOwnerId_ownerId', 'ownerId')
off = do_DataStoreCompletePostParam(conn, tree, tvb, off, 'SMM_CompletePostObjectWithOwnerId_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[71] = {
				["name"] = "UploadCourseRecord",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreUploadCourseRecordParam(conn, tree, tvb, off, 'SMM_UploadCourseRecord_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[72] = {
				["name"] = "GetCourseRecord",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreGetCourseRecordParam(conn, tree, tvb, off, 'SMM_GetCourseRecord_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreGetCourseRecordResult(conn, tree, tvb, off, 'SMM_GetCourseRecord_result', 'result')
 end
			},
			[73] = {
				["name"] = "DeleteCourseRecord",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreGetCourseRecordParam(conn, tree, tvb, off, 'SMM_DeleteCourseRecord_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[74] = {
				["name"] = "GetApplicationConfigString",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, SMM_GetApplicationConfigString_applicationId = do_Uint32(conn, tree, tvb, off, 'SMM_GetApplicationConfigString_applicationId', 'applicationId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMM_GetApplicationConfigString_config_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_GetApplicationConfigString_config_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_GetApplicationConfigString_config_len do
	off, SMM_GetApplicationConfigString_config_item = do_String(conn, subtree, tvb, off, 'SMM_GetApplicationConfigString_config_item', 'config')

	end
	
 end
			},
			[75] = {
				["name"] = "SetApplicationConfigString",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, SMM_SetApplicationConfigString_applicationId = do_Uint32(conn, tree, tvb, off, 'SMM_SetApplicationConfigString_applicationId', 'applicationId')
off, SMM_SetApplicationConfigString_key = do_Uint32(conn, tree, tvb, off, 'SMM_SetApplicationConfigString_key', 'key')
off, SMM_SetApplicationConfigString_value = do_String(conn, tree, tvb, off, 'SMM_SetApplicationConfigString_value', 'value')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[76] = {
				["name"] = "GetDeletionReason",
				["request"] = function (conn, tree, tvb)
	local off = 0
local SMM_GetDeletionReason_dataIdLst_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_GetDeletionReason_dataIdLst_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_GetDeletionReason_dataIdLst_len do
	off, SMM_GetDeletionReason_dataIdLst_item = do_Uint64(conn, subtree, tvb, off, 'SMM_GetDeletionReason_dataIdLst_item', 'dataIdLst')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMM_GetDeletionReason_pDeletionReasons_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_GetDeletionReason_pDeletionReasons_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_GetDeletionReason_pDeletionReasons_len do
	off, SMM_GetDeletionReason_pDeletionReasons_item = do_Uint32(conn, subtree, tvb, off, 'SMM_GetDeletionReason_pDeletionReasons_item', 'pDeletionReasons')

	end
	
 end
			},
			[77] = {
				["name"] = "SetDeletionReason",
				["request"] = function (conn, tree, tvb)
	local off = 0
local SMM_SetDeletionReason_dataIdLst_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_SetDeletionReason_dataIdLst_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_SetDeletionReason_dataIdLst_len do
	off, SMM_SetDeletionReason_dataIdLst_item = do_Uint64(conn, subtree, tvb, off, 'SMM_SetDeletionReason_dataIdLst_item', 'dataIdLst')

	end
	
off, SMM_SetDeletionReason_deletionReason = do_Uint32(conn, tree, tvb, off, 'SMM_SetDeletionReason_deletionReason', 'deletionReason')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[78] = {
				["name"] = "GetMetasWithCourseRecord",
				["request"] = function (conn, tree, tvb)
	local off = 0
local SMM_GetMetasWithCourseRecord_params_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_GetMetasWithCourseRecord_params_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_GetMetasWithCourseRecord_params_len do
	off = do_DataStoreGetCourseRecordParam(conn, subtree, tvb, off, 'SMM_GetMetasWithCourseRecord_params_item', 'params')

	end
	
off = do_DataStoreGetMetaParam(conn, tree, tvb, off, 'SMM_GetMetasWithCourseRecord_metaParam', 'metaParam')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMM_GetMetasWithCourseRecord_pMetaInfo_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_GetMetasWithCourseRecord_pMetaInfo_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_GetMetasWithCourseRecord_pMetaInfo_len do
	off = do_DataStoreMetaInfo(conn, subtree, tvb, off, 'SMM_GetMetasWithCourseRecord_pMetaInfo_item', 'pMetaInfo')

	end
	
local SMM_GetMetasWithCourseRecord_pCourseResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_GetMetasWithCourseRecord_pCourseResults_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_GetMetasWithCourseRecord_pCourseResults_len do
	off = do_DataStoreGetCourseRecordResult(conn, subtree, tvb, off, 'SMM_GetMetasWithCourseRecord_pCourseResults_item', 'pCourseResults')

	end
	
local SMM_GetMetasWithCourseRecord_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_GetMetasWithCourseRecord_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_GetMetasWithCourseRecord_pResults_len do
	off, SMM_GetMetasWithCourseRecord_pResults_item = do_Result(conn, subtree, tvb, off, 'SMM_GetMetasWithCourseRecord_pResults_item', 'pResults')

	end
	
 end
			},
			[79] = {
				["name"] = "CheckRateCustomRankingCounter",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, SMM_CheckRateCustomRankingCounter_applicationId = do_Uint32(conn, tree, tvb, off, 'SMM_CheckRateCustomRankingCounter_applicationId', 'applicationId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, SMM_CheckRateCustomRankingCounter_isBelowThreshold = do_Bool(conn, tree, tvb, off, 'SMM_CheckRateCustomRankingCounter_isBelowThreshold', 'isBelowThreshold')
 end
			},
			[80] = {
				["name"] = "ResetRateCustomRankingCounter",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, SMM_ResetRateCustomRankingCounter_applicationId = do_Uint32(conn, tree, tvb, off, 'SMM_ResetRateCustomRankingCounter_applicationId', 'applicationId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[81] = {
				["name"] = "BestScoreRateCourseSearchObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreSearchParam(conn, tree, tvb, off, 'SMM_BestScoreRateCourseSearchObject_param', 'param')
local SMM_BestScoreRateCourseSearchObject_extraData_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_BestScoreRateCourseSearchObject_extraData_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_BestScoreRateCourseSearchObject_extraData_len do
	off, SMM_BestScoreRateCourseSearchObject_extraData_item = do_String(conn, subtree, tvb, off, 'SMM_BestScoreRateCourseSearchObject_extraData_item', 'extraData')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMM_BestScoreRateCourseSearchObject_pRankingResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_BestScoreRateCourseSearchObject_pRankingResults_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_BestScoreRateCourseSearchObject_pRankingResults_len do
	off = do_DataStoreCustomRankingResult(conn, subtree, tvb, off, 'SMM_BestScoreRateCourseSearchObject_pRankingResults_item', 'pRankingResults')

	end
	
 end
			},
			[82] = {
				["name"] = "CTRPickUpCourseSearchObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreSearchParam(conn, tree, tvb, off, 'SMM_CTRPickUpCourseSearchObject_param', 'param')
local SMM_CTRPickUpCourseSearchObject_extraData_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_CTRPickUpCourseSearchObject_extraData_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_CTRPickUpCourseSearchObject_extraData_len do
	off, SMM_CTRPickUpCourseSearchObject_extraData_item = do_String(conn, subtree, tvb, off, 'SMM_CTRPickUpCourseSearchObject_extraData_item', 'extraData')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMM_CTRPickUpCourseSearchObject_pRankingResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_CTRPickUpCourseSearchObject_pRankingResults_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_CTRPickUpCourseSearchObject_pRankingResults_len do
	off = do_DataStoreCustomRankingResult(conn, subtree, tvb, off, 'SMM_CTRPickUpCourseSearchObject_pRankingResults_item', 'pRankingResults')

	end
	
 end
			},
			[83] = {
				["name"] = "SetCachedRanking",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, SMM_SetCachedRanking_rankingType = do_String(conn, tree, tvb, off, 'SMM_SetCachedRanking_rankingType', 'rankingType')
local SMM_SetCachedRanking_rankingArgs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_SetCachedRanking_rankingArgs_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_SetCachedRanking_rankingArgs_len do
	off, SMM_SetCachedRanking_rankingArgs_item = do_String(conn, subtree, tvb, off, 'SMM_SetCachedRanking_rankingArgs_item', 'rankingArgs')

	end
	
local SMM_SetCachedRanking_dataIdLst_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_SetCachedRanking_dataIdLst_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_SetCachedRanking_dataIdLst_len do
	off, SMM_SetCachedRanking_dataIdLst_item = do_Uint64(conn, subtree, tvb, off, 'SMM_SetCachedRanking_dataIdLst_item', 'dataIdLst')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[84] = {
				["name"] = "DeleteCachedRanking",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, SMM_DeleteCachedRanking_rankingType = do_String(conn, tree, tvb, off, 'SMM_DeleteCachedRanking_rankingType', 'rankingType')
local SMM_DeleteCachedRanking_rankingArgs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_DeleteCachedRanking_rankingArgs_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_DeleteCachedRanking_rankingArgs_len do
	off, SMM_DeleteCachedRanking_rankingArgs_item = do_String(conn, subtree, tvb, off, 'SMM_DeleteCachedRanking_rankingArgs_item', 'rankingArgs')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[85] = {
				["name"] = "ChangePlayablePlatform",
				["request"] = function (conn, tree, tvb)
	local off = 0
local SMM_ChangePlayablePlatform_params_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_ChangePlayablePlatform_params_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_ChangePlayablePlatform_params_len do
	off = do_DataStoreChangePlayablePlatformParam(conn, subtree, tvb, off, 'SMM_ChangePlayablePlatform_params_item', 'params')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[86] = {
				["name"] = "SearchUnknownPlatformObjects",
				["request"] = nil,
				["response"] = nil
			},
			[87] = {
				["name"] = "ReportCourse",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	})
add_proto(27,
	{
		["nested"] = false,
		["name"] = "Message Delivery",
		["methods"] = {
[1] = {
				["name"] = "DeliverMessage",
				["request"] = function (conn, tree, tvb)
	local off = 0

		local Message_Delivery_DeliverMessage_oUserMessage_container = tree:add(F.Data, tvb(off, 0))
		Message_Delivery_DeliverMessage_oUserMessage_container:set_text("Data")
	off, Message_Delivery_DeliverMessage_oUserMessage_type_name = do_String(conn, Message_Delivery_DeliverMessage_oUserMessage_container, tvb, off, 'Message_Delivery_DeliverMessage_oUserMessage_type_name', 'oUserMessage_type_name')

off, Message_Delivery_DeliverMessage_oUserMessage_len_plus_four = do_Uint32(conn, Message_Delivery_DeliverMessage_oUserMessage_container, tvb, off, 'Message_Delivery_DeliverMessage_oUserMessage_len_plus_four', 'oUserMessage_len_plus_four')

off, Message_Delivery_DeliverMessage_oUserMessage_data_len = do_Uint32(conn, Message_Delivery_DeliverMessage_oUserMessage_container, tvb, off, 'Message_Delivery_DeliverMessage_oUserMessage_data_len', 'oUserMessage_data_len')

local type_func = 'do_'..Message_Delivery_DeliverMessage_oUserMessage_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Message_Delivery_DeliverMessage_oUserMessage_container, tvb, off, "Message_Delivery_DeliverMessage_oUserMessage_data", "oUserMessage")
		else
			Message_Delivery_DeliverMessage_oUserMessage_container:add(F.Message_Delivery_DeliverMessage_oUserMessage_data_bytes, tvb(off, Message_Delivery_DeliverMessage_oUserMessage_len))
			off = off + Message_Delivery_DeliverMessage_oUserMessage_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			
		}
	})
add_proto(121,
	{
		["nested"] = false,
		["name"] = "Subscriber",
		["methods"] = {
[1] = {
				["name"] = "Hello",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Subscriber_Hello_Unknown = do_String(conn, tree, tvb, off, 'Subscriber_Hello_Unknown', 'Unknown')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[2] = {
				["name"] = "PostContent",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_SubscriberPostContentParam(conn, tree, tvb, off, 'Subscriber_PostContent_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Subscriber_PostContent_Unknown = do_Uint64(conn, tree, tvb, off, 'Subscriber_PostContent_Unknown', 'Unknown')
 end
			},
			[3] = {
				["name"] = "GetContent",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_SubscriberGetContentParam(conn, tree, tvb, off, 'Subscriber_GetContent_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Subscriber_GetContent_Content_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Subscriber_GetContent_Content_len, tvb(off,4))
	off = off + 4
	for i=1,Subscriber_GetContent_Content_len do
	off = do_SubscriberContent(conn, subtree, tvb, off, 'Subscriber_GetContent_Content_item', 'Content')

	end
	
 end
			},
			[4] = {
				["name"] = "Follow",
				["request"] = nil,
				["response"] = nil
			},
			[5] = {
				["name"] = "UnfollowAllAndFollow",
				["request"] = nil,
				["response"] = nil
			},
			[6] = {
				["name"] = "Unfollow",
				["request"] = nil,
				["response"] = nil
			},
			[7] = {
				["name"] = "GetFollowing",
				["request"] = nil,
				["response"] = nil
			},
			[8] = {
				["name"] = "GetFollower",
				["request"] = nil,
				["response"] = nil
			},
			[9] = {
				["name"] = "GetNumFollowers",
				["request"] = nil,
				["response"] = nil
			},
			[10] = {
				["name"] = "GetTimeline",
				["request"] = nil,
				["response"] = nil
			},
			[11] = {
				["name"] = "DeleteContent",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Subscriber_DeleteContent_Unknown_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Subscriber_DeleteContent_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,Subscriber_DeleteContent_Unknown_len do
	off, Subscriber_DeleteContent_Unknown_item = do_String(conn, subtree, tvb, off, 'Subscriber_DeleteContent_Unknown_item', 'Unknown')

	end
	
off, Subscriber_DeleteContent_Unknown = do_Uint64(conn, tree, tvb, off, 'Subscriber_DeleteContent_Unknown', 'Unknown')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[12] = {
				["name"] = "GetContentMulti",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Subscriber_GetContentMulti_Param_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Subscriber_GetContentMulti_Param_len, tvb(off,4))
	off = off + 4
	for i=1,Subscriber_GetContentMulti_Param_len do
	off = do_SubscriberGetContentParam(conn, subtree, tvb, off, 'Subscriber_GetContentMulti_Param_item', 'Param')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Subscriber_GetContentMulti_Content_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Subscriber_GetContentMulti_Content_len, tvb(off,4))
	off = off + 4
	for j=1,Subscriber_GetContentMulti_Content_len do
	local Subscriber_GetContentMulti_Content_item_len = tvb(off, 4):le_uint()
	subsubtree = subtree:add_le(F.Subscriber_GetContentMulti_Content_item_len, tvb(off,4))
	off = off + 4
	for i=1,Subscriber_GetContentMulti_Content_item_len do
	off = do_SubscriberContent(conn, subsubtree, tvb, off, 'Subscriber_GetContentMulti_Content_item_item', 'Content')

	end
	

	end
	
 end
			},
			[13] = {
				["name"] = "UpdateUserStatus",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Subscriber_UpdateUserStatus_Unknown_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Subscriber_UpdateUserStatus_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,Subscriber_UpdateUserStatus_Unknown_len do
	off = do_Unknown(conn, subtree, tvb, off, 'Subscriber_UpdateUserStatus_Unknown_item', 'Unknown')

	end
	
local Subscriber_UpdateUserStatus_Unknown_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Subscriber_UpdateUserStatus_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,Subscriber_UpdateUserStatus_Unknown_len do
	off, Subscriber_UpdateUserStatus_Unknown_item = do_Uint8(conn, subtree, tvb, off, 'Subscriber_UpdateUserStatus_Unknown_item', 'Unknown')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[14] = {
				["name"] = "GetFriendUserStatuses",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Subscriber_GetFriendUserStatuses_Up_to_8_different_integers_between_0_and_7_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Subscriber_GetFriendUserStatuses_Up_to_8_different_integers_between_0_and_7_len, tvb(off,4))
	off = off + 4
	for i=1,Subscriber_GetFriendUserStatuses_Up_to_8_different_integers_between_0_and_7_len do
	off, Subscriber_GetFriendUserStatuses_Up_to_8_different_integers_between_0_and_7_item = do_Uint8(conn, subtree, tvb, off, 'Subscriber_GetFriendUserStatuses_Up_to_8_different_integers_between_0_and_7_item', 'Up to 8 different integers between 0 and 7')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Subscriber_GetFriendUserStatuses_Status_list_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Subscriber_GetFriendUserStatuses_Status_list_len, tvb(off,4))
	off = off + 4
	for i=1,Subscriber_GetFriendUserStatuses_Status_list_len do
	off = do_SubscriberUserStatusInfo(conn, subtree, tvb, off, 'Subscriber_GetFriendUserStatuses_Status_list_item', 'Status list')

	end
	
 end
			},
			[15] = {
				["name"] = "GetUserStatuses",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Subscriber_GetUserStatuses_User_ids_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Subscriber_GetUserStatuses_User_ids_len, tvb(off,4))
	off = off + 4
	for i=1,Subscriber_GetUserStatuses_User_ids_len do
	off, Subscriber_GetUserStatuses_User_ids_item = do_PID(conn, subtree, tvb, off, 'Subscriber_GetUserStatuses_User_ids_item', 'User ids')

	end
	
local Subscriber_GetUserStatuses_Up_to_8_different_integers_between_0_and_7_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Subscriber_GetUserStatuses_Up_to_8_different_integers_between_0_and_7_len, tvb(off,4))
	off = off + 4
	for i=1,Subscriber_GetUserStatuses_Up_to_8_different_integers_between_0_and_7_len do
	off, Subscriber_GetUserStatuses_Up_to_8_different_integers_between_0_and_7_item = do_Uint8(conn, subtree, tvb, off, 'Subscriber_GetUserStatuses_Up_to_8_different_integers_between_0_and_7_item', 'Up to 8 different integers between 0 and 7')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Subscriber_GetUserStatuses_Status_list_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Subscriber_GetUserStatuses_Status_list_len, tvb(off,4))
	off = off + 4
	for i=1,Subscriber_GetUserStatuses_Status_list_len do
	off = do_SubscriberUserStatusInfo(conn, subtree, tvb, off, 'Subscriber_GetUserStatuses_Status_list_item', 'Status list')

	end
	
 end
			},
			
		}
	})
add_proto(115,
	{
		["nested"] = true,
		["name"] = "SSBU",
		["methods"] = {
[47] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[48] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[49] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[50] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[51] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[52] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[53] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[54] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[55] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[56] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[57] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[58] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[59] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[60] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[61] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[62] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[63] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[64] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[65] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[66] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[67] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[68] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[69] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[70] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[71] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[72] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[73] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[74] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[75] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[76] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[77] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[78] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[79] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[80] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[81] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[82] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[83] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[84] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	})
add_proto(25,
	{
		["nested"] = false,
		["name"] = "Account Management",
		["methods"] = {
[1] = {
				["name"] = "CreateAccount",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_CreateAccount_strPrincipalName = do_String(conn, tree, tvb, off, 'Account_Management_CreateAccount_strPrincipalName', 'strPrincipalName')
off, Account_Management_CreateAccount_strKey = do_String(conn, tree, tvb, off, 'Account_Management_CreateAccount_strKey', 'strKey')
off, Account_Management_CreateAccount_uiGroups = do_Uint32(conn, tree, tvb, off, 'Account_Management_CreateAccount_uiGroups', 'uiGroups')
off, Account_Management_CreateAccount_strEmail = do_String(conn, tree, tvb, off, 'Account_Management_CreateAccount_strEmail', 'strEmail')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_CreateAccount_retval = do_Result(conn, tree, tvb, off, 'Account_Management_CreateAccount_retval', 'retval')
 end
			},
			[2] = {
				["name"] = "DeleteAccount",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_DeleteAccount_idPrincipal = do_PID(conn, tree, tvb, off, 'Account_Management_DeleteAccount_idPrincipal', 'idPrincipal')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[3] = {
				["name"] = "DisableAccount",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_DisableAccount_idPrincipal = do_PID(conn, tree, tvb, off, 'Account_Management_DisableAccount_idPrincipal', 'idPrincipal')
off, Account_Management_DisableAccount_dtUntil = do_DateTime(conn, tree, tvb, off, 'Account_Management_DisableAccount_dtUntil', 'dtUntil')
off, Account_Management_DisableAccount_strMessage = do_String(conn, tree, tvb, off, 'Account_Management_DisableAccount_strMessage', 'strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_DisableAccount_retval = do_Result(conn, tree, tvb, off, 'Account_Management_DisableAccount_retval', 'retval')
 end
			},
			[4] = {
				["name"] = "ChangePassword",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_ChangePassword_strNewKey = do_String(conn, tree, tvb, off, 'Account_Management_ChangePassword_strNewKey', 'strNewKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_ChangePassword_retval = do_Bool(conn, tree, tvb, off, 'Account_Management_ChangePassword_retval', 'retval')
 end
			},
			[5] = {
				["name"] = "TestCapability",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_TestCapability_uiCapability = do_Uint32(conn, tree, tvb, off, 'Account_Management_TestCapability_uiCapability', 'uiCapability')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_TestCapability_retval = do_Bool(conn, tree, tvb, off, 'Account_Management_TestCapability_retval', 'retval')
 end
			},
			[6] = {
				["name"] = "GetName",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_GetName_idPrincipal = do_PID(conn, tree, tvb, off, 'Account_Management_GetName_idPrincipal', 'idPrincipal')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_GetName_strName = do_String(conn, tree, tvb, off, 'Account_Management_GetName_strName', 'strName')
 end
			},
			[7] = {
				["name"] = "GetAccountData",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_GetAccountData_retval = do_Uint32(conn, tree, tvb, off, 'Account_Management_GetAccountData_retval', 'retval')
off = do_AccountData(conn, tree, tvb, off, 'Account_Management_GetAccountData_oAccountData', 'oAccountData')
 end
			},
			[8] = {
				["name"] = "GetPrivateData",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_GetPrivateData_retval = do_Bool(conn, tree, tvb, off, 'Account_Management_GetPrivateData_retval', 'retval')

		local Account_Management_GetPrivateData_oData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_GetPrivateData_oData_container:set_text("Data")
	off, Account_Management_GetPrivateData_oData_type_name = do_String(conn, Account_Management_GetPrivateData_oData_container, tvb, off, 'Account_Management_GetPrivateData_oData_type_name', 'oData_type_name')

off, Account_Management_GetPrivateData_oData_len_plus_four = do_Uint32(conn, Account_Management_GetPrivateData_oData_container, tvb, off, 'Account_Management_GetPrivateData_oData_len_plus_four', 'oData_len_plus_four')

off, Account_Management_GetPrivateData_oData_data_len = do_Uint32(conn, Account_Management_GetPrivateData_oData_container, tvb, off, 'Account_Management_GetPrivateData_oData_data_len', 'oData_data_len')

local type_func = 'do_'..Account_Management_GetPrivateData_oData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_GetPrivateData_oData_container, tvb, off, "Account_Management_GetPrivateData_oData_data", "oData")
		else
			Account_Management_GetPrivateData_oData_container:add(F.Account_Management_GetPrivateData_oData_data_bytes, tvb(off, Account_Management_GetPrivateData_oData_len))
			off = off + Account_Management_GetPrivateData_oData_data_len
		end
	
 end
			},
			[9] = {
				["name"] = "GetPublicData",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_GetPublicData_idPrincipal = do_PID(conn, tree, tvb, off, 'Account_Management_GetPublicData_idPrincipal', 'idPrincipal')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_GetPublicData_retval = do_Bool(conn, tree, tvb, off, 'Account_Management_GetPublicData_retval', 'retval')

		local Account_Management_GetPublicData_oData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_GetPublicData_oData_container:set_text("Data")
	off, Account_Management_GetPublicData_oData_type_name = do_String(conn, Account_Management_GetPublicData_oData_container, tvb, off, 'Account_Management_GetPublicData_oData_type_name', 'oData_type_name')

off, Account_Management_GetPublicData_oData_len_plus_four = do_Uint32(conn, Account_Management_GetPublicData_oData_container, tvb, off, 'Account_Management_GetPublicData_oData_len_plus_four', 'oData_len_plus_four')

off, Account_Management_GetPublicData_oData_data_len = do_Uint32(conn, Account_Management_GetPublicData_oData_container, tvb, off, 'Account_Management_GetPublicData_oData_data_len', 'oData_data_len')

local type_func = 'do_'..Account_Management_GetPublicData_oData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_GetPublicData_oData_container, tvb, off, "Account_Management_GetPublicData_oData_data", "oData")
		else
			Account_Management_GetPublicData_oData_container:add(F.Account_Management_GetPublicData_oData_data_bytes, tvb(off, Account_Management_GetPublicData_oData_len))
			off = off + Account_Management_GetPublicData_oData_data_len
		end
	
 end
			},
			[10] = {
				["name"] = "GetMultiplePublicData",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Account_Management_GetMultiplePublicData_lstPrincipals_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Account_Management_GetMultiplePublicData_lstPrincipals_len, tvb(off,4))
	off = off + 4
	for i=1,Account_Management_GetMultiplePublicData_lstPrincipals_len do
	off, Account_Management_GetMultiplePublicData_lstPrincipals_item = do_PID(conn, subtree, tvb, off, 'Account_Management_GetMultiplePublicData_lstPrincipals_item', 'lstPrincipals')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_GetMultiplePublicData_retval = do_Bool(conn, tree, tvb, off, 'Account_Management_GetMultiplePublicData_retval', 'retval')
local Account_Management_GetMultiplePublicData_oData_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Account_Management_GetMultiplePublicData_oData_len, tvb(off,4))
	off = off + 4
	for i=1,Account_Management_GetMultiplePublicData_oData_len do
	
		local Account_Management_GetMultiplePublicData_oData_item_container = subtree:add(F.Data, tvb(off, 0))
		Account_Management_GetMultiplePublicData_oData_item_container:set_text("Data")
	off, Account_Management_GetMultiplePublicData_oData_item_type_name = do_String(conn, Account_Management_GetMultiplePublicData_oData_item_container, tvb, off, 'Account_Management_GetMultiplePublicData_oData_item_type_name', 'oData_type_name')

off, Account_Management_GetMultiplePublicData_oData_item_len_plus_four = do_Uint32(conn, Account_Management_GetMultiplePublicData_oData_item_container, tvb, off, 'Account_Management_GetMultiplePublicData_oData_item_len_plus_four', 'oData_len_plus_four')

off, Account_Management_GetMultiplePublicData_oData_item_data_len = do_Uint32(conn, Account_Management_GetMultiplePublicData_oData_item_container, tvb, off, 'Account_Management_GetMultiplePublicData_oData_item_data_len', 'oData_data_len')

local type_func = 'do_'..Account_Management_GetMultiplePublicData_oData_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_GetMultiplePublicData_oData_item_container, tvb, off, "Account_Management_GetMultiplePublicData_oData_item_data", "oData")
		else
			Account_Management_GetMultiplePublicData_oData_item_container:add(F.Account_Management_GetMultiplePublicData_oData_item_data_bytes, tvb(off, Account_Management_GetMultiplePublicData_oData_item_len))
			off = off + Account_Management_GetMultiplePublicData_oData_item_data_len
		end
	

	end
	
 end
			},
			[11] = {
				["name"] = "UpdateAccountName",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_UpdateAccountName_strName = do_String(conn, tree, tvb, off, 'Account_Management_UpdateAccountName_strName', 'strName')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_UpdateAccountName_retval = do_Result(conn, tree, tvb, off, 'Account_Management_UpdateAccountName_retval', 'retval')
 end
			},
			[12] = {
				["name"] = "UpdateAccountEmail",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_UpdateAccountEmail_strName = do_String(conn, tree, tvb, off, 'Account_Management_UpdateAccountEmail_strName', 'strName')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_UpdateAccountEmail_retval = do_Result(conn, tree, tvb, off, 'Account_Management_UpdateAccountEmail_retval', 'retval')
 end
			},
			[13] = {
				["name"] = "UpdateCustomData",
				["request"] = function (conn, tree, tvb)
	local off = 0

		local Account_Management_UpdateCustomData_oPublicData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_UpdateCustomData_oPublicData_container:set_text("Data")
	off, Account_Management_UpdateCustomData_oPublicData_type_name = do_String(conn, Account_Management_UpdateCustomData_oPublicData_container, tvb, off, 'Account_Management_UpdateCustomData_oPublicData_type_name', 'oPublicData_type_name')

off, Account_Management_UpdateCustomData_oPublicData_len_plus_four = do_Uint32(conn, Account_Management_UpdateCustomData_oPublicData_container, tvb, off, 'Account_Management_UpdateCustomData_oPublicData_len_plus_four', 'oPublicData_len_plus_four')

off, Account_Management_UpdateCustomData_oPublicData_data_len = do_Uint32(conn, Account_Management_UpdateCustomData_oPublicData_container, tvb, off, 'Account_Management_UpdateCustomData_oPublicData_data_len', 'oPublicData_data_len')

local type_func = 'do_'..Account_Management_UpdateCustomData_oPublicData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_UpdateCustomData_oPublicData_container, tvb, off, "Account_Management_UpdateCustomData_oPublicData_data", "oPublicData")
		else
			Account_Management_UpdateCustomData_oPublicData_container:add(F.Account_Management_UpdateCustomData_oPublicData_data_bytes, tvb(off, Account_Management_UpdateCustomData_oPublicData_len))
			off = off + Account_Management_UpdateCustomData_oPublicData_data_len
		end
	

		local Account_Management_UpdateCustomData_oPrivateData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_UpdateCustomData_oPrivateData_container:set_text("Data")
	off, Account_Management_UpdateCustomData_oPrivateData_type_name = do_String(conn, Account_Management_UpdateCustomData_oPrivateData_container, tvb, off, 'Account_Management_UpdateCustomData_oPrivateData_type_name', 'oPrivateData_type_name')

off, Account_Management_UpdateCustomData_oPrivateData_len_plus_four = do_Uint32(conn, Account_Management_UpdateCustomData_oPrivateData_container, tvb, off, 'Account_Management_UpdateCustomData_oPrivateData_len_plus_four', 'oPrivateData_len_plus_four')

off, Account_Management_UpdateCustomData_oPrivateData_data_len = do_Uint32(conn, Account_Management_UpdateCustomData_oPrivateData_container, tvb, off, 'Account_Management_UpdateCustomData_oPrivateData_data_len', 'oPrivateData_data_len')

local type_func = 'do_'..Account_Management_UpdateCustomData_oPrivateData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_UpdateCustomData_oPrivateData_container, tvb, off, "Account_Management_UpdateCustomData_oPrivateData_data", "oPrivateData")
		else
			Account_Management_UpdateCustomData_oPrivateData_container:add(F.Account_Management_UpdateCustomData_oPrivateData_data_bytes, tvb(off, Account_Management_UpdateCustomData_oPrivateData_len))
			off = off + Account_Management_UpdateCustomData_oPrivateData_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_UpdateCustomData_retval = do_Result(conn, tree, tvb, off, 'Account_Management_UpdateCustomData_retval', 'retval')
 end
			},
			[14] = {
				["name"] = "FindByNameRegex",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_FindByNameRegex_uiGroups = do_Uint32(conn, tree, tvb, off, 'Account_Management_FindByNameRegex_uiGroups', 'uiGroups')
off, Account_Management_FindByNameRegex_strRegex = do_String(conn, tree, tvb, off, 'Account_Management_FindByNameRegex_strRegex', 'strRegex')
off = do_ResultRange(conn, tree, tvb, off, 'Account_Management_FindByNameRegex_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Account_Management_FindByNameRegex_plstAccounts_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Account_Management_FindByNameRegex_plstAccounts_len, tvb(off,4))
	off = off + 4
	for i=1,Account_Management_FindByNameRegex_plstAccounts_len do
	off = do_BasicAccountInfo(conn, subtree, tvb, off, 'Account_Management_FindByNameRegex_plstAccounts_item', 'plstAccounts')

	end
	
 end
			},
			[15] = {
				["name"] = "UpdateAccountExpiryDate",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_UpdateAccountExpiryDate_idPrincipal = do_PID(conn, tree, tvb, off, 'Account_Management_UpdateAccountExpiryDate_idPrincipal', 'idPrincipal')
off, Account_Management_UpdateAccountExpiryDate_dtExpiry = do_DateTime(conn, tree, tvb, off, 'Account_Management_UpdateAccountExpiryDate_dtExpiry', 'dtExpiry')
off, Account_Management_UpdateAccountExpiryDate_strExpiredMessage = do_String(conn, tree, tvb, off, 'Account_Management_UpdateAccountExpiryDate_strExpiredMessage', 'strExpiredMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[16] = {
				["name"] = "UpdateAccountEffectiveDate",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_UpdateAccountEffectiveDate_idPrincipal = do_PID(conn, tree, tvb, off, 'Account_Management_UpdateAccountEffectiveDate_idPrincipal', 'idPrincipal')
off, Account_Management_UpdateAccountEffectiveDate_dtEffectiveFrom = do_DateTime(conn, tree, tvb, off, 'Account_Management_UpdateAccountEffectiveDate_dtEffectiveFrom', 'dtEffectiveFrom')
off, Account_Management_UpdateAccountEffectiveDate_strNotEffectiveMessage = do_String(conn, tree, tvb, off, 'Account_Management_UpdateAccountEffectiveDate_strNotEffectiveMessage', 'strNotEffectiveMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[17] = {
				["name"] = "UpdateStatus",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_UpdateStatus_strStatus = do_String(conn, tree, tvb, off, 'Account_Management_UpdateStatus_strStatus', 'strStatus')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[18] = {
				["name"] = "GetStatus",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_GetStatus_idPrincipal = do_PID(conn, tree, tvb, off, 'Account_Management_GetStatus_idPrincipal', 'idPrincipal')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_GetStatus_strStatus = do_String(conn, tree, tvb, off, 'Account_Management_GetStatus_strStatus', 'strStatus')
 end
			},
			[19] = {
				["name"] = "GetLastConnectionStats",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_GetLastConnectionStats_idPrincipal = do_PID(conn, tree, tvb, off, 'Account_Management_GetLastConnectionStats_idPrincipal', 'idPrincipal')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_GetLastConnectionStats_dtLastSessionLogin = do_DateTime(conn, tree, tvb, off, 'Account_Management_GetLastConnectionStats_dtLastSessionLogin', 'dtLastSessionLogin')
off, Account_Management_GetLastConnectionStats_dtLastSessionLogout = do_DateTime(conn, tree, tvb, off, 'Account_Management_GetLastConnectionStats_dtLastSessionLogout', 'dtLastSessionLogout')
off, Account_Management_GetLastConnectionStats_dtCurrentSessionLogin = do_DateTime(conn, tree, tvb, off, 'Account_Management_GetLastConnectionStats_dtCurrentSessionLogin', 'dtCurrentSessionLogin')
 end
			},
			[20] = {
				["name"] = "ResetPassword",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_ResetPassword_retval = do_Bool(conn, tree, tvb, off, 'Account_Management_ResetPassword_retval', 'retval')
 end
			},
			[21] = {
				["name"] = "CreateAccountWithCustomData",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_CreateAccountWithCustomData_strPrincipalName = do_String(conn, tree, tvb, off, 'Account_Management_CreateAccountWithCustomData_strPrincipalName', 'strPrincipalName')
off, Account_Management_CreateAccountWithCustomData_strKey = do_String(conn, tree, tvb, off, 'Account_Management_CreateAccountWithCustomData_strKey', 'strKey')
off, Account_Management_CreateAccountWithCustomData_uiGroups = do_Uint32(conn, tree, tvb, off, 'Account_Management_CreateAccountWithCustomData_uiGroups', 'uiGroups')
off, Account_Management_CreateAccountWithCustomData_strEmail = do_String(conn, tree, tvb, off, 'Account_Management_CreateAccountWithCustomData_strEmail', 'strEmail')

		local Account_Management_CreateAccountWithCustomData_oPublicData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_CreateAccountWithCustomData_oPublicData_container:set_text("Data")
	off, Account_Management_CreateAccountWithCustomData_oPublicData_type_name = do_String(conn, Account_Management_CreateAccountWithCustomData_oPublicData_container, tvb, off, 'Account_Management_CreateAccountWithCustomData_oPublicData_type_name', 'oPublicData_type_name')

off, Account_Management_CreateAccountWithCustomData_oPublicData_len_plus_four = do_Uint32(conn, Account_Management_CreateAccountWithCustomData_oPublicData_container, tvb, off, 'Account_Management_CreateAccountWithCustomData_oPublicData_len_plus_four', 'oPublicData_len_plus_four')

off, Account_Management_CreateAccountWithCustomData_oPublicData_data_len = do_Uint32(conn, Account_Management_CreateAccountWithCustomData_oPublicData_container, tvb, off, 'Account_Management_CreateAccountWithCustomData_oPublicData_data_len', 'oPublicData_data_len')

local type_func = 'do_'..Account_Management_CreateAccountWithCustomData_oPublicData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_CreateAccountWithCustomData_oPublicData_container, tvb, off, "Account_Management_CreateAccountWithCustomData_oPublicData_data", "oPublicData")
		else
			Account_Management_CreateAccountWithCustomData_oPublicData_container:add(F.Account_Management_CreateAccountWithCustomData_oPublicData_data_bytes, tvb(off, Account_Management_CreateAccountWithCustomData_oPublicData_len))
			off = off + Account_Management_CreateAccountWithCustomData_oPublicData_data_len
		end
	

		local Account_Management_CreateAccountWithCustomData_oPrivateData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_CreateAccountWithCustomData_oPrivateData_container:set_text("Data")
	off, Account_Management_CreateAccountWithCustomData_oPrivateData_type_name = do_String(conn, Account_Management_CreateAccountWithCustomData_oPrivateData_container, tvb, off, 'Account_Management_CreateAccountWithCustomData_oPrivateData_type_name', 'oPrivateData_type_name')

off, Account_Management_CreateAccountWithCustomData_oPrivateData_len_plus_four = do_Uint32(conn, Account_Management_CreateAccountWithCustomData_oPrivateData_container, tvb, off, 'Account_Management_CreateAccountWithCustomData_oPrivateData_len_plus_four', 'oPrivateData_len_plus_four')

off, Account_Management_CreateAccountWithCustomData_oPrivateData_data_len = do_Uint32(conn, Account_Management_CreateAccountWithCustomData_oPrivateData_container, tvb, off, 'Account_Management_CreateAccountWithCustomData_oPrivateData_data_len', 'oPrivateData_data_len')

local type_func = 'do_'..Account_Management_CreateAccountWithCustomData_oPrivateData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_CreateAccountWithCustomData_oPrivateData_container, tvb, off, "Account_Management_CreateAccountWithCustomData_oPrivateData_data", "oPrivateData")
		else
			Account_Management_CreateAccountWithCustomData_oPrivateData_container:add(F.Account_Management_CreateAccountWithCustomData_oPrivateData_data_bytes, tvb(off, Account_Management_CreateAccountWithCustomData_oPrivateData_len))
			off = off + Account_Management_CreateAccountWithCustomData_oPrivateData_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[22] = {
				["name"] = "RetrieveAccount",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_AccountData(conn, tree, tvb, off, 'Account_Management_RetrieveAccount_oAccountData', 'oAccountData')

		local Account_Management_RetrieveAccount_oPublicData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_RetrieveAccount_oPublicData_container:set_text("Data")
	off, Account_Management_RetrieveAccount_oPublicData_type_name = do_String(conn, Account_Management_RetrieveAccount_oPublicData_container, tvb, off, 'Account_Management_RetrieveAccount_oPublicData_type_name', 'oPublicData_type_name')

off, Account_Management_RetrieveAccount_oPublicData_len_plus_four = do_Uint32(conn, Account_Management_RetrieveAccount_oPublicData_container, tvb, off, 'Account_Management_RetrieveAccount_oPublicData_len_plus_four', 'oPublicData_len_plus_four')

off, Account_Management_RetrieveAccount_oPublicData_data_len = do_Uint32(conn, Account_Management_RetrieveAccount_oPublicData_container, tvb, off, 'Account_Management_RetrieveAccount_oPublicData_data_len', 'oPublicData_data_len')

local type_func = 'do_'..Account_Management_RetrieveAccount_oPublicData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_RetrieveAccount_oPublicData_container, tvb, off, "Account_Management_RetrieveAccount_oPublicData_data", "oPublicData")
		else
			Account_Management_RetrieveAccount_oPublicData_container:add(F.Account_Management_RetrieveAccount_oPublicData_data_bytes, tvb(off, Account_Management_RetrieveAccount_oPublicData_len))
			off = off + Account_Management_RetrieveAccount_oPublicData_data_len
		end
	

		local Account_Management_RetrieveAccount_oPrivateData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_RetrieveAccount_oPrivateData_container:set_text("Data")
	off, Account_Management_RetrieveAccount_oPrivateData_type_name = do_String(conn, Account_Management_RetrieveAccount_oPrivateData_container, tvb, off, 'Account_Management_RetrieveAccount_oPrivateData_type_name', 'oPrivateData_type_name')

off, Account_Management_RetrieveAccount_oPrivateData_len_plus_four = do_Uint32(conn, Account_Management_RetrieveAccount_oPrivateData_container, tvb, off, 'Account_Management_RetrieveAccount_oPrivateData_len_plus_four', 'oPrivateData_len_plus_four')

off, Account_Management_RetrieveAccount_oPrivateData_data_len = do_Uint32(conn, Account_Management_RetrieveAccount_oPrivateData_container, tvb, off, 'Account_Management_RetrieveAccount_oPrivateData_data_len', 'oPrivateData_data_len')

local type_func = 'do_'..Account_Management_RetrieveAccount_oPrivateData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_RetrieveAccount_oPrivateData_container, tvb, off, "Account_Management_RetrieveAccount_oPrivateData_data", "oPrivateData")
		else
			Account_Management_RetrieveAccount_oPrivateData_container:add(F.Account_Management_RetrieveAccount_oPrivateData_data_bytes, tvb(off, Account_Management_RetrieveAccount_oPrivateData_len))
			off = off + Account_Management_RetrieveAccount_oPrivateData_data_len
		end
	
 end
			},
			[23] = {
				["name"] = "UpdateAccount",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_UpdateAccount_strKey = do_String(conn, tree, tvb, off, 'Account_Management_UpdateAccount_strKey', 'strKey')
off, Account_Management_UpdateAccount_strEmail = do_String(conn, tree, tvb, off, 'Account_Management_UpdateAccount_strEmail', 'strEmail')

		local Account_Management_UpdateAccount_oPublicData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_UpdateAccount_oPublicData_container:set_text("Data")
	off, Account_Management_UpdateAccount_oPublicData_type_name = do_String(conn, Account_Management_UpdateAccount_oPublicData_container, tvb, off, 'Account_Management_UpdateAccount_oPublicData_type_name', 'oPublicData_type_name')

off, Account_Management_UpdateAccount_oPublicData_len_plus_four = do_Uint32(conn, Account_Management_UpdateAccount_oPublicData_container, tvb, off, 'Account_Management_UpdateAccount_oPublicData_len_plus_four', 'oPublicData_len_plus_four')

off, Account_Management_UpdateAccount_oPublicData_data_len = do_Uint32(conn, Account_Management_UpdateAccount_oPublicData_container, tvb, off, 'Account_Management_UpdateAccount_oPublicData_data_len', 'oPublicData_data_len')

local type_func = 'do_'..Account_Management_UpdateAccount_oPublicData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_UpdateAccount_oPublicData_container, tvb, off, "Account_Management_UpdateAccount_oPublicData_data", "oPublicData")
		else
			Account_Management_UpdateAccount_oPublicData_container:add(F.Account_Management_UpdateAccount_oPublicData_data_bytes, tvb(off, Account_Management_UpdateAccount_oPublicData_len))
			off = off + Account_Management_UpdateAccount_oPublicData_data_len
		end
	

		local Account_Management_UpdateAccount_oPrivateData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_UpdateAccount_oPrivateData_container:set_text("Data")
	off, Account_Management_UpdateAccount_oPrivateData_type_name = do_String(conn, Account_Management_UpdateAccount_oPrivateData_container, tvb, off, 'Account_Management_UpdateAccount_oPrivateData_type_name', 'oPrivateData_type_name')

off, Account_Management_UpdateAccount_oPrivateData_len_plus_four = do_Uint32(conn, Account_Management_UpdateAccount_oPrivateData_container, tvb, off, 'Account_Management_UpdateAccount_oPrivateData_len_plus_four', 'oPrivateData_len_plus_four')

off, Account_Management_UpdateAccount_oPrivateData_data_len = do_Uint32(conn, Account_Management_UpdateAccount_oPrivateData_container, tvb, off, 'Account_Management_UpdateAccount_oPrivateData_data_len', 'oPrivateData_data_len')

local type_func = 'do_'..Account_Management_UpdateAccount_oPrivateData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_UpdateAccount_oPrivateData_container, tvb, off, "Account_Management_UpdateAccount_oPrivateData_data", "oPrivateData")
		else
			Account_Management_UpdateAccount_oPrivateData_container:add(F.Account_Management_UpdateAccount_oPrivateData_data_bytes, tvb(off, Account_Management_UpdateAccount_oPrivateData_len))
			off = off + Account_Management_UpdateAccount_oPrivateData_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[24] = {
				["name"] = "ChangePasswordByGuest",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_ChangePasswordByGuest_strPrincipalName = do_String(conn, tree, tvb, off, 'Account_Management_ChangePasswordByGuest_strPrincipalName', 'strPrincipalName')
off, Account_Management_ChangePasswordByGuest_strEmail = do_String(conn, tree, tvb, off, 'Account_Management_ChangePasswordByGuest_strEmail', 'strEmail')
off, Account_Management_ChangePasswordByGuest_strKey = do_String(conn, tree, tvb, off, 'Account_Management_ChangePasswordByGuest_strKey', 'strKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[25] = {
				["name"] = "FindByNameLike",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_FindByNameLike_uiGroups = do_Uint32(conn, tree, tvb, off, 'Account_Management_FindByNameLike_uiGroups', 'uiGroups')
off, Account_Management_FindByNameLike_strLike = do_String(conn, tree, tvb, off, 'Account_Management_FindByNameLike_strLike', 'strLike')
off = do_ResultRange(conn, tree, tvb, off, 'Account_Management_FindByNameLike_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Account_Management_FindByNameLike_plstAccounts_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Account_Management_FindByNameLike_plstAccounts_len, tvb(off,4))
	off = off + 4
	for i=1,Account_Management_FindByNameLike_plstAccounts_len do
	off = do_BasicAccountInfo(conn, subtree, tvb, off, 'Account_Management_FindByNameLike_plstAccounts_item', 'plstAccounts')

	end
	
 end
			},
			[26] = {
				["name"] = "CustomCreateAccount",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_CustomCreateAccount_strPrincipalName = do_String(conn, tree, tvb, off, 'Account_Management_CustomCreateAccount_strPrincipalName', 'strPrincipalName')
off, Account_Management_CustomCreateAccount_strKey = do_String(conn, tree, tvb, off, 'Account_Management_CustomCreateAccount_strKey', 'strKey')
off, Account_Management_CustomCreateAccount_uiGroups = do_Uint32(conn, tree, tvb, off, 'Account_Management_CustomCreateAccount_uiGroups', 'uiGroups')
off, Account_Management_CustomCreateAccount_strEmail = do_String(conn, tree, tvb, off, 'Account_Management_CustomCreateAccount_strEmail', 'strEmail')

		local Account_Management_CustomCreateAccount_oAuthData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_CustomCreateAccount_oAuthData_container:set_text("Data")
	off, Account_Management_CustomCreateAccount_oAuthData_type_name = do_String(conn, Account_Management_CustomCreateAccount_oAuthData_container, tvb, off, 'Account_Management_CustomCreateAccount_oAuthData_type_name', 'oAuthData_type_name')

off, Account_Management_CustomCreateAccount_oAuthData_len_plus_four = do_Uint32(conn, Account_Management_CustomCreateAccount_oAuthData_container, tvb, off, 'Account_Management_CustomCreateAccount_oAuthData_len_plus_four', 'oAuthData_len_plus_four')

off, Account_Management_CustomCreateAccount_oAuthData_data_len = do_Uint32(conn, Account_Management_CustomCreateAccount_oAuthData_container, tvb, off, 'Account_Management_CustomCreateAccount_oAuthData_data_len', 'oAuthData_data_len')

local type_func = 'do_'..Account_Management_CustomCreateAccount_oAuthData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_CustomCreateAccount_oAuthData_container, tvb, off, "Account_Management_CustomCreateAccount_oAuthData_data", "oAuthData")
		else
			Account_Management_CustomCreateAccount_oAuthData_container:add(F.Account_Management_CustomCreateAccount_oAuthData_data_bytes, tvb(off, Account_Management_CustomCreateAccount_oAuthData_len))
			off = off + Account_Management_CustomCreateAccount_oAuthData_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_CustomCreateAccount_pid = do_PID(conn, tree, tvb, off, 'Account_Management_CustomCreateAccount_pid', 'pid')
 end
			},
			[27] = {
				["name"] = "NintendoCreateAccount",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_NintendoCreateAccount_strPrincipalName = do_String(conn, tree, tvb, off, 'Account_Management_NintendoCreateAccount_strPrincipalName', 'strPrincipalName')
off, Account_Management_NintendoCreateAccount_strKey = do_String(conn, tree, tvb, off, 'Account_Management_NintendoCreateAccount_strKey', 'strKey')
off, Account_Management_NintendoCreateAccount_uiGroups = do_Uint32(conn, tree, tvb, off, 'Account_Management_NintendoCreateAccount_uiGroups', 'uiGroups')
off, Account_Management_NintendoCreateAccount_strEmail = do_String(conn, tree, tvb, off, 'Account_Management_NintendoCreateAccount_strEmail', 'strEmail')

		local Account_Management_NintendoCreateAccount_oAuthData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_NintendoCreateAccount_oAuthData_container:set_text("Data<NintendoCreateAccountData>")
	off, Account_Management_NintendoCreateAccount_oAuthData_type_name = do_String(conn, Account_Management_NintendoCreateAccount_oAuthData_container, tvb, off, 'Account_Management_NintendoCreateAccount_oAuthData_type_name', 'oAuthData_type_name')

off, Account_Management_NintendoCreateAccount_oAuthData_len_plus_four = do_Uint32(conn, Account_Management_NintendoCreateAccount_oAuthData_container, tvb, off, 'Account_Management_NintendoCreateAccount_oAuthData_len_plus_four', 'oAuthData_len_plus_four')

off, Account_Management_NintendoCreateAccount_oAuthData_data_len = do_Uint32(conn, Account_Management_NintendoCreateAccount_oAuthData_container, tvb, off, 'Account_Management_NintendoCreateAccount_oAuthData_data_len', 'oAuthData_data_len')

local type_func = 'do_'..Account_Management_NintendoCreateAccount_oAuthData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_NintendoCreateAccount_oAuthData_container, tvb, off, "Account_Management_NintendoCreateAccount_oAuthData_data", "oAuthData")
		else
			Account_Management_NintendoCreateAccount_oAuthData_container:add(F.Account_Management_NintendoCreateAccount_oAuthData_data_bytes, tvb(off, Account_Management_NintendoCreateAccount_oAuthData_len))
			off = off + Account_Management_NintendoCreateAccount_oAuthData_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_NintendoCreateAccount_pid = do_PID(conn, tree, tvb, off, 'Account_Management_NintendoCreateAccount_pid', 'pid')
off, Account_Management_NintendoCreateAccount_pidHMAC = do_String(conn, tree, tvb, off, 'Account_Management_NintendoCreateAccount_pidHMAC', 'pidHMAC')
 end
			},
			[28] = {
				["name"] = "LookupOrCreateAccount",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_LookupOrCreateAccount_strPrincipalName = do_String(conn, tree, tvb, off, 'Account_Management_LookupOrCreateAccount_strPrincipalName', 'strPrincipalName')
off, Account_Management_LookupOrCreateAccount_strKey = do_String(conn, tree, tvb, off, 'Account_Management_LookupOrCreateAccount_strKey', 'strKey')
off, Account_Management_LookupOrCreateAccount_uiGroups = do_Uint32(conn, tree, tvb, off, 'Account_Management_LookupOrCreateAccount_uiGroups', 'uiGroups')
off, Account_Management_LookupOrCreateAccount_strEmail = do_String(conn, tree, tvb, off, 'Account_Management_LookupOrCreateAccount_strEmail', 'strEmail')

		local Account_Management_LookupOrCreateAccount_oAuthData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_LookupOrCreateAccount_oAuthData_container:set_text("Data")
	off, Account_Management_LookupOrCreateAccount_oAuthData_type_name = do_String(conn, Account_Management_LookupOrCreateAccount_oAuthData_container, tvb, off, 'Account_Management_LookupOrCreateAccount_oAuthData_type_name', 'oAuthData_type_name')

off, Account_Management_LookupOrCreateAccount_oAuthData_len_plus_four = do_Uint32(conn, Account_Management_LookupOrCreateAccount_oAuthData_container, tvb, off, 'Account_Management_LookupOrCreateAccount_oAuthData_len_plus_four', 'oAuthData_len_plus_four')

off, Account_Management_LookupOrCreateAccount_oAuthData_data_len = do_Uint32(conn, Account_Management_LookupOrCreateAccount_oAuthData_container, tvb, off, 'Account_Management_LookupOrCreateAccount_oAuthData_data_len', 'oAuthData_data_len')

local type_func = 'do_'..Account_Management_LookupOrCreateAccount_oAuthData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_LookupOrCreateAccount_oAuthData_container, tvb, off, "Account_Management_LookupOrCreateAccount_oAuthData_data", "oAuthData")
		else
			Account_Management_LookupOrCreateAccount_oAuthData_container:add(F.Account_Management_LookupOrCreateAccount_oAuthData_data_bytes, tvb(off, Account_Management_LookupOrCreateAccount_oAuthData_len))
			off = off + Account_Management_LookupOrCreateAccount_oAuthData_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_LookupOrCreateAccount_pid = do_PID(conn, tree, tvb, off, 'Account_Management_LookupOrCreateAccount_pid', 'pid')
 end
			},
			[29] = {
				["name"] = "DisconnectPrincipal",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_DisconnectPrincipal_idPrincipal = do_PID(conn, tree, tvb, off, 'Account_Management_DisconnectPrincipal_idPrincipal', 'idPrincipal')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_DisconnectPrincipal_retval = do_Bool(conn, tree, tvb, off, 'Account_Management_DisconnectPrincipal_retval', 'retval')
 end
			},
			[30] = {
				["name"] = "DisconnectAllPrincipals",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_DisconnectAllPrincipals_retval = do_Bool(conn, tree, tvb, off, 'Account_Management_DisconnectAllPrincipals_retval', 'retval')
 end
			},
			
		}
	})
add_proto(109,
	{
		["nested"] = true,
		["name"] = "SSB4",
		["methods"] = {
[36] = {
				["name"] = "GetTournament",
				["request"] = nil,
				["response"] = nil
			},
			[37] = {
				["name"] = "GetTournamentReplayId",
				["request"] = nil,
				["response"] = nil
			},
			[38] = {
				["name"] = "GetTournamentResult",
				["request"] = nil,
				["response"] = nil
			},
			[39] = {
				["name"] = "SetTournamentReplayId",
				["request"] = nil,
				["response"] = nil
			},
			[40] = {
				["name"] = "GetTournamentProfiles",
				["request"] = nil,
				["response"] = nil
			},
			[41] = {
				["name"] = "JoinOrCreateMatchmakeSession",
				["request"] = nil,
				["response"] = nil
			},
			[42] = {
				["name"] = "RegisterTournamentPlayerInfo",
				["request"] = nil,
				["response"] = nil
			},
			[43] = {
				["name"] = "RegisterTournamentBot",
				["request"] = nil,
				["response"] = nil
			},
			[44] = {
				["name"] = "ReportTournamentBotRoundResult",
				["request"] = nil,
				["response"] = nil
			},
			[45] = {
				["name"] = "ReplaceTournamentLeafNode",
				["request"] = nil,
				["response"] = nil
			},
			[46] = {
				["name"] = "StartTournament",
				["request"] = nil,
				["response"] = nil
			},
			[47] = {
				["name"] = "AutoTournamentMatchmake",
				["request"] = nil,
				["response"] = nil
			},
			[48] = {
				["name"] = "SimpleFindByID",
				["request"] = nil,
				["response"] = nil
			},
			[49] = {
				["name"] = "GetTournamentCompetitions",
				["request"] = nil,
				["response"] = nil
			},
			[50] = {
				["name"] = "GetTournamentCompetition",
				["request"] = nil,
				["response"] = nil
			},
			[51] = {
				["name"] = "GetTournamentReplayIds",
				["request"] = nil,
				["response"] = nil
			},
			[52] = {
				["name"] = "RegisterCommunityCompetition",
				["request"] = nil,
				["response"] = nil
			},
			[53] = {
				["name"] = "UnregisterCommunityCompetition",
				["request"] = nil,
				["response"] = nil
			},
			[54] = {
				["name"] = "UnregisterCommunityCompetitionById",
				["request"] = nil,
				["response"] = nil
			},
			[55] = {
				["name"] = "GetCommunityCompetitions",
				["request"] = nil,
				["response"] = nil
			},
			[56] = {
				["name"] = "GetCommunityCompetitionById",
				["request"] = nil,
				["response"] = nil
			},
			[57] = {
				["name"] = "FindCommunityCompetitionsByParticipant",
				["request"] = nil,
				["response"] = nil
			},
			[58] = {
				["name"] = "FindCommunityCompetitionsByGatheringId",
				["request"] = nil,
				["response"] = nil
			},
			[59] = {
				["name"] = "SelectCommunityCompetitionByOwner",
				["request"] = nil,
				["response"] = nil
			},
			[60] = {
				["name"] = "JoinCommunityCompetition",
				["request"] = nil,
				["response"] = nil
			},
			[61] = {
				["name"] = "JoinCommunityCompetitionByGatheringId",
				["request"] = nil,
				["response"] = nil
			},
			[62] = {
				["name"] = "EndCommunityCompetitionParticipation",
				["request"] = nil,
				["response"] = nil
			},
			[63] = {
				["name"] = "EndCommunityCompetitionParticipationByGatheringId",
				["request"] = nil,
				["response"] = nil
			},
			[64] = {
				["name"] = "SearchCommunityCompetition",
				["request"] = nil,
				["response"] = nil
			},
			[65] = {
				["name"] = "PostCommunityCompetitionMatchResult",
				["request"] = nil,
				["response"] = nil
			},
			[66] = {
				["name"] = "GetCommunityCompetitionRanking",
				["request"] = nil,
				["response"] = nil
			},
			[67] = {
				["name"] = "DEBUG_RegisterCommunityCompetition",
				["request"] = nil,
				["response"] = nil
			},
			[68] = {
				["name"] = "DEBUG_UnregisterCommunityCompetition",
				["request"] = nil,
				["response"] = nil
			},
			[69] = {
				["name"] = "DEBUG_JoinCommunityCompetition",
				["request"] = nil,
				["response"] = nil
			},
			[70] = {
				["name"] = "DEBUG_EndCommunityCompetitionParticipation",
				["request"] = nil,
				["response"] = nil
			},
			[71] = {
				["name"] = "DEBUG_PostCommunityCompetitionMatchResult",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	})
add_proto(0x73,
	{
		["nested"] = true,
		["name"] = "Splatoon 2",
		["methods"] = {
[47] = {
				["name"] = "CoconutRegisterMeta",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_CoconutMeta(conn, tree, tvb, off, 'Splatoon_2_CoconutRegisterMeta_meta', 'meta')
off, Splatoon_2_CoconutRegisterMeta_url = do_String(conn, tree, tvb, off, 'Splatoon_2_CoconutRegisterMeta_url', 'url')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[48] = {
				["name"] = "CoconutRatePost",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Splatoon_2_CoconutRatePost_dataId = do_Uint64(conn, tree, tvb, off, 'Splatoon_2_CoconutRatePost_dataId', 'dataId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[49] = {
				["name"] = "CoconutGetObjectInfos",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_CoconutGetParam(conn, tree, tvb, off, 'Splatoon_2_CoconutGetObjectInfos_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Splatoon_2_CoconutGetObjectInfos_pInfos_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Splatoon_2_CoconutGetObjectInfos_pInfos_len, tvb(off,4))
	off = off + 4
	for i=1,Splatoon_2_CoconutGetObjectInfos_pInfos_len do
	off = do_CoconutGetInfo(conn, subtree, tvb, off, 'Splatoon_2_CoconutGetObjectInfos_pInfos_item', 'pInfos')

	end
	
local Splatoon_2_CoconutGetObjectInfos_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Splatoon_2_CoconutGetObjectInfos_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Splatoon_2_CoconutGetObjectInfos_pResults_len do
	off, Splatoon_2_CoconutGetObjectInfos_pResults_item = do_Result(conn, subtree, tvb, off, 'Splatoon_2_CoconutGetObjectInfos_pResults_item', 'pResults')

	end
	
 end
			},
			[50] = {
				["name"] = "CoconutReportViolation",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_CoconutViolation(conn, tree, tvb, off, 'Splatoon_2_CoconutReportViolation_violation', 'violation')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[51] = {
				["name"] = "UploadRegularMatchResult",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_CalicoRegularStats(conn, tree, tvb, off, 'Splatoon_2_UploadRegularMatchResult_stats', 'stats')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[52] = {
				["name"] = "UploadGachiMatchResult",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_CalicoGachiStats(conn, tree, tvb, off, 'Splatoon_2_UploadGachiMatchResult_stats', 'stats')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[53] = {
				["name"] = "UploadLeagueMatchResult",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_CalicoLeagueStats(conn, tree, tvb, off, 'Splatoon_2_UploadLeagueMatchResult_stats', 'stats')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[54] = {
				["name"] = "UploadFesMatchResult",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_CalicoFesStats(conn, tree, tvb, off, 'Splatoon_2_UploadFesMatchResult_stats', 'stats')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[55] = {
				["name"] = "GetOrderedGear",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_OrderedInfo(conn, tree, tvb, off, 'Splatoon_2_GetOrderedGear_info', 'info')
 end
			},
			[56] = {
				["name"] = "PurchaseGear",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_OrderedInfo(conn, tree, tvb, off, 'Splatoon_2_PurchaseGear_info', 'info')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[57] = {
				["name"] = "UploadTimeAttack",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_TimeAttackInfo(conn, tree, tvb, off, 'Splatoon_2_UploadTimeAttack_info', 'info')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[58] = {
				["name"] = "CoconutRegisterMetaByParam",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_CoconutMeta(conn, tree, tvb, off, 'Splatoon_2_CoconutRegisterMetaByParam_meta', 'meta')
off, Splatoon_2_CoconutRegisterMetaByParam_snsName = do_String(conn, tree, tvb, off, 'Splatoon_2_CoconutRegisterMetaByParam_snsName', 'snsName')
off, Splatoon_2_CoconutRegisterMetaByParam_postId = do_String(conn, tree, tvb, off, 'Splatoon_2_CoconutRegisterMetaByParam_postId', 'postId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[59] = {
				["name"] = "UploadFesMatchResultV2",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_CalicoFesStatsV2(conn, tree, tvb, off, 'Splatoon_2_UploadFesMatchResultV2_stats', 'stats')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[60] = {
				["name"] = "UploadXMatchResult",
				["request"] = nil,
				["response"] = nil
			},
			[61] = {
				["name"] = "UploadRegularMatchResultV2",
				["request"] = nil,
				["response"] = nil
			},
			[62] = {
				["name"] = "UploadGachiMatchResultV2",
				["request"] = nil,
				["response"] = nil
			},
			[63] = {
				["name"] = "UploadLeagueMatchResultV2",
				["request"] = nil,
				["response"] = nil
			},
			[64] = {
				["name"] = "UploadFesMatchResultV3",
				["request"] = nil,
				["response"] = nil
			},
			[65] = {
				["name"] = "UploadXMatchResultV2",
				["request"] = nil,
				["response"] = nil
			},
			[66] = {
				["name"] = "PreparePostPlayLog",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_PlayLogPreparePostParam(conn, tree, tvb, off, 'Splatoon_2_PreparePostPlayLog_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreReqPostInfo(conn, tree, tvb, off, 'Splatoon_2_PreparePostPlayLog_POST_request_info', 'POST request info')
 end
			},
			[67] = {
				["name"] = "PrepareGetPlayLog",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_PlayLogPrepareGetParam(conn, tree, tvb, off, 'Splatoon_2_PrepareGetPlayLog_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreReqGetInfo(conn, tree, tvb, off, 'Splatoon_2_PrepareGetPlayLog_GET_request_info', 'GET request info')
 end
			},
			[68] = {
				["name"] = "UploadFesMatchResultV4",
				["request"] = nil,
				["response"] = nil
			},
			[69] = {
				["name"] = "UploadCoopResult",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	})
add_proto(110,
	{
		["nested"] = true,
		["name"] = "SSBU",
		["methods"] = {
[9] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[10] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	})
add_proto(55,
	{
		["nested"] = false,
		["name"] = "Player Stats",
		["methods"] = {
[1] = {
				["name"] = "WriteStats",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Player_Stats_WriteStats_playerStatUpdates_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_WriteStats_playerStatUpdates_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_WriteStats_playerStatUpdates_len do
	off = do_PlayerStatUpdate(conn, subtree, tvb, off, 'Player_Stats_WriteStats_playerStatUpdates_item', 'playerStatUpdates')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[2] = {
				["name"] = "ReadStatsByPlayers",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Player_Stats_ReadStatsByPlayers_playerPIDs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_ReadStatsByPlayers_playerPIDs_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_ReadStatsByPlayers_playerPIDs_len do
	off, Player_Stats_ReadStatsByPlayers_playerPIDs_item = do_Uint32(conn, subtree, tvb, off, 'Player_Stats_ReadStatsByPlayers_playerPIDs_item', 'playerPIDs')

	end
	
local Player_Stats_ReadStatsByPlayers_queries_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_ReadStatsByPlayers_queries_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_ReadStatsByPlayers_queries_len do
	off = do_StatboardQuery(conn, subtree, tvb, off, 'Player_Stats_ReadStatsByPlayers_queries_item', 'queries')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Player_Stats_ReadStatsByPlayers_results_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_ReadStatsByPlayers_results_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_ReadStatsByPlayers_results_len do
	off = do_StatboardResult(conn, subtree, tvb, off, 'Player_Stats_ReadStatsByPlayers_results_item', 'results')

	end
	
 end
			},
			[3] = {
				["name"] = "ReadLeaderboardsNearPlayer",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Player_Stats_ReadLeaderboardsNearPlayer_playerPID = do_Uint32(conn, tree, tvb, off, 'Player_Stats_ReadLeaderboardsNearPlayer_playerPID', 'playerPID')
off, Player_Stats_ReadLeaderboardsNearPlayer_count = do_Uint32(conn, tree, tvb, off, 'Player_Stats_ReadLeaderboardsNearPlayer_count', 'count')
local Player_Stats_ReadLeaderboardsNearPlayer_queries_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_ReadLeaderboardsNearPlayer_queries_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_ReadLeaderboardsNearPlayer_queries_len do
	off = do_LeaderboardQuery(conn, subtree, tvb, off, 'Player_Stats_ReadLeaderboardsNearPlayer_queries_item', 'queries')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Player_Stats_ReadLeaderboardsNearPlayer_results_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_ReadLeaderboardsNearPlayer_results_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_ReadLeaderboardsNearPlayer_results_len do
	off = do_LeaderboardResult(conn, subtree, tvb, off, 'Player_Stats_ReadLeaderboardsNearPlayer_results_item', 'results')

	end
	
 end
			},
			[4] = {
				["name"] = "ReadLeaderboardsByRank",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Player_Stats_ReadLeaderboardsByRank_startingRank = do_Uint32(conn, tree, tvb, off, 'Player_Stats_ReadLeaderboardsByRank_startingRank', 'startingRank')
off, Player_Stats_ReadLeaderboardsByRank_count = do_Uint32(conn, tree, tvb, off, 'Player_Stats_ReadLeaderboardsByRank_count', 'count')
local Player_Stats_ReadLeaderboardsByRank_queries_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_ReadLeaderboardsByRank_queries_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_ReadLeaderboardsByRank_queries_len do
	off = do_LeaderboardQuery(conn, subtree, tvb, off, 'Player_Stats_ReadLeaderboardsByRank_queries_item', 'queries')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Player_Stats_ReadLeaderboardsByRank_results_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_ReadLeaderboardsByRank_results_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_ReadLeaderboardsByRank_results_len do
	off = do_LeaderboardResult(conn, subtree, tvb, off, 'Player_Stats_ReadLeaderboardsByRank_results_item', 'results')

	end
	
 end
			},
			[5] = {
				["name"] = "ReadLeaderboardsByPlayers",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Player_Stats_ReadLeaderboardsByPlayers_playerPIDs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_ReadLeaderboardsByPlayers_playerPIDs_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_ReadLeaderboardsByPlayers_playerPIDs_len do
	off, Player_Stats_ReadLeaderboardsByPlayers_playerPIDs_item = do_Uint32(conn, subtree, tvb, off, 'Player_Stats_ReadLeaderboardsByPlayers_playerPIDs_item', 'playerPIDs')

	end
	
local Player_Stats_ReadLeaderboardsByPlayers_queries_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_ReadLeaderboardsByPlayers_queries_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_ReadLeaderboardsByPlayers_queries_len do
	off = do_LeaderboardQuery(conn, subtree, tvb, off, 'Player_Stats_ReadLeaderboardsByPlayers_queries_item', 'queries')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Player_Stats_ReadLeaderboardsByPlayers_results_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_ReadLeaderboardsByPlayers_results_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_ReadLeaderboardsByPlayers_results_len do
	off = do_LeaderboardResult(conn, subtree, tvb, off, 'Player_Stats_ReadLeaderboardsByPlayers_results_item', 'results')

	end
	
 end
			},
			[6] = {
				["name"] = "ReadStatboardHistory",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Player_Stats_ReadStatboardHistory_queries_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_ReadStatboardHistory_queries_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_ReadStatboardHistory_queries_len do
	off = do_StatboardHistoryQuery(conn, subtree, tvb, off, 'Player_Stats_ReadStatboardHistory_queries_item', 'queries')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Player_Stats_ReadStatboardHistory_results_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_ReadStatboardHistory_results_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_ReadStatboardHistory_results_len do
	off = do_StatboardResult(conn, subtree, tvb, off, 'Player_Stats_ReadStatboardHistory_results_item', 'results')

	end
	
 end
			},
			[7] = {
				["name"] = "ReadLeaderboardHistory",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Player_Stats_ReadLeaderboardHistory_queries_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_ReadLeaderboardHistory_queries_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_ReadLeaderboardHistory_queries_len do
	off = do_LeaderboardHistoryQuery(conn, subtree, tvb, off, 'Player_Stats_ReadLeaderboardHistory_queries_item', 'queries')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Player_Stats_ReadLeaderboardHistory_results_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_ReadLeaderboardHistory_results_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_ReadLeaderboardHistory_results_len do
	off = do_LeaderboardResult(conn, subtree, tvb, off, 'Player_Stats_ReadLeaderboardHistory_results_item', 'results')

	end
	
 end
			},
			[8] = {
				["name"] = "ReadStatboardHistoryAggregated",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Player_Stats_ReadStatboardHistoryAggregated_queries_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_ReadStatboardHistoryAggregated_queries_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_ReadStatboardHistoryAggregated_queries_len do
	off = do_StatboardHistoryAggregatedQuery(conn, subtree, tvb, off, 'Player_Stats_ReadStatboardHistoryAggregated_queries_item', 'queries')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Player_Stats_ReadStatboardHistoryAggregated_results_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_ReadStatboardHistoryAggregated_results_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_ReadStatboardHistoryAggregated_results_len do
	off = do_StatboardResult(conn, subtree, tvb, off, 'Player_Stats_ReadStatboardHistoryAggregated_results_item', 'results')

	end
	
 end
			},
			[9] = {
				["name"] = "GetStatboardNextPurgeDate",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Player_Stats_GetStatboardNextPurgeDate_boardID = do_Uint32(conn, tree, tvb, off, 'Player_Stats_GetStatboardNextPurgeDate_boardID', 'boardID')
off, Player_Stats_GetStatboardNextPurgeDate_resetFrequency = do_Uint32(conn, tree, tvb, off, 'Player_Stats_GetStatboardNextPurgeDate_resetFrequency', 'resetFrequency')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Player_Stats_GetStatboardNextPurgeDate_purgeDate = do_DateTime(conn, tree, tvb, off, 'Player_Stats_GetStatboardNextPurgeDate_purgeDate', 'purgeDate')
 end
			},
			[10] = {
				["name"] = "ReadLeaderboardsNearPlayer2",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Player_Stats_ReadLeaderboardsNearPlayer2_playerPID = do_Uint32(conn, tree, tvb, off, 'Player_Stats_ReadLeaderboardsNearPlayer2_playerPID', 'playerPID')
off, Player_Stats_ReadLeaderboardsNearPlayer2_count = do_Uint32(conn, tree, tvb, off, 'Player_Stats_ReadLeaderboardsNearPlayer2_count', 'count')
local Player_Stats_ReadLeaderboardsNearPlayer2_queries_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_ReadLeaderboardsNearPlayer2_queries_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_ReadLeaderboardsNearPlayer2_queries_len do
	off = do_LeaderboardQuery2(conn, subtree, tvb, off, 'Player_Stats_ReadLeaderboardsNearPlayer2_queries_item', 'queries')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Player_Stats_ReadLeaderboardsNearPlayer2_results_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_ReadLeaderboardsNearPlayer2_results_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_ReadLeaderboardsNearPlayer2_results_len do
	off = do_LeaderboardResult(conn, subtree, tvb, off, 'Player_Stats_ReadLeaderboardsNearPlayer2_results_item', 'results')

	end
	
 end
			},
			[11] = {
				["name"] = "ReadLeaderboardsByRank2",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Player_Stats_ReadLeaderboardsByRank2_startingRank = do_Uint32(conn, tree, tvb, off, 'Player_Stats_ReadLeaderboardsByRank2_startingRank', 'startingRank')
off, Player_Stats_ReadLeaderboardsByRank2_count = do_Uint32(conn, tree, tvb, off, 'Player_Stats_ReadLeaderboardsByRank2_count', 'count')
local Player_Stats_ReadLeaderboardsByRank2_queries_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_ReadLeaderboardsByRank2_queries_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_ReadLeaderboardsByRank2_queries_len do
	off = do_LeaderboardQuery2(conn, subtree, tvb, off, 'Player_Stats_ReadLeaderboardsByRank2_queries_item', 'queries')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Player_Stats_ReadLeaderboardsByRank2_results_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_ReadLeaderboardsByRank2_results_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_ReadLeaderboardsByRank2_results_len do
	off = do_LeaderboardResult(conn, subtree, tvb, off, 'Player_Stats_ReadLeaderboardsByRank2_results_item', 'results')

	end
	
 end
			},
			[12] = {
				["name"] = "ReadLeaderboardsByPlayers2",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Player_Stats_ReadLeaderboardsByPlayers2_queries_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_ReadLeaderboardsByPlayers2_queries_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_ReadLeaderboardsByPlayers2_queries_len do
	off = do_LeaderboardQuery2(conn, subtree, tvb, off, 'Player_Stats_ReadLeaderboardsByPlayers2_queries_item', 'queries')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Player_Stats_ReadLeaderboardsByPlayers2_results_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_ReadLeaderboardsByPlayers2_results_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_ReadLeaderboardsByPlayers2_results_len do
	off = do_LeaderboardResult(conn, subtree, tvb, off, 'Player_Stats_ReadLeaderboardsByPlayers2_results_item', 'results')

	end
	
 end
			},
			[13] = {
				["name"] = "ReadPopulationStats",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Player_Stats_ReadPopulationStats_queries_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_ReadPopulationStats_queries_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_ReadPopulationStats_queries_len do
	off = do_PopulationStatQuery(conn, subtree, tvb, off, 'Player_Stats_ReadPopulationStats_queries_item', 'queries')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Player_Stats_ReadPopulationStats_results_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Player_Stats_ReadPopulationStats_results_len, tvb(off,4))
	off = off + 4
	for i=1,Player_Stats_ReadPopulationStats_results_len do
	off = do_PopulationStatResult(conn, subtree, tvb, off, 'Player_Stats_ReadPopulationStats_results_item', 'results')

	end
	
 end
			},
			
		}
	})
add_proto(49,
	{
		["nested"] = false,
		["name"] = "Uplay Win",
		["methods"] = {
[1] = {
				["name"] = "GetActions",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Uplay_Win_GetActions_startRowIndex = do_Sint32(conn, tree, tvb, off, 'Uplay_Win_GetActions_startRowIndex', 'startRowIndex')
off, Uplay_Win_GetActions_maximumRows = do_Sint32(conn, tree, tvb, off, 'Uplay_Win_GetActions_maximumRows', 'maximumRows')
off, Uplay_Win_GetActions_sortExpression = do_String(conn, tree, tvb, off, 'Uplay_Win_GetActions_sortExpression', 'sortExpression')
off, Uplay_Win_GetActions_cultureName = do_String(conn, tree, tvb, off, 'Uplay_Win_GetActions_cultureName', 'cultureName')
off, Uplay_Win_GetActions_platformCode = do_String(conn, tree, tvb, off, 'Uplay_Win_GetActions_platformCode', 'platformCode')
off, Uplay_Win_GetActions_gameCode = do_String(conn, tree, tvb, off, 'Uplay_Win_GetActions_gameCode', 'gameCode')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Uplay_Win_GetActions_actionList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Uplay_Win_GetActions_actionList_len, tvb(off,4))
	off = off + 4
	for i=1,Uplay_Win_GetActions_actionList_len do
	off = do_UplayAction(conn, subtree, tvb, off, 'Uplay_Win_GetActions_actionList_item', 'actionList')

	end
	
 end
			},
			[2] = {
				["name"] = "GetActionsCompleted",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Uplay_Win_GetActionsCompleted_startRowIndex = do_Sint32(conn, tree, tvb, off, 'Uplay_Win_GetActionsCompleted_startRowIndex', 'startRowIndex')
off, Uplay_Win_GetActionsCompleted_maximumRows = do_Sint32(conn, tree, tvb, off, 'Uplay_Win_GetActionsCompleted_maximumRows', 'maximumRows')
off, Uplay_Win_GetActionsCompleted_sortExpression = do_String(conn, tree, tvb, off, 'Uplay_Win_GetActionsCompleted_sortExpression', 'sortExpression')
off, Uplay_Win_GetActionsCompleted_cultureName = do_String(conn, tree, tvb, off, 'Uplay_Win_GetActionsCompleted_cultureName', 'cultureName')
off, Uplay_Win_GetActionsCompleted_platformCode = do_String(conn, tree, tvb, off, 'Uplay_Win_GetActionsCompleted_platformCode', 'platformCode')
off, Uplay_Win_GetActionsCompleted_gameCode = do_String(conn, tree, tvb, off, 'Uplay_Win_GetActionsCompleted_gameCode', 'gameCode')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Uplay_Win_GetActionsCompleted_actionList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Uplay_Win_GetActionsCompleted_actionList_len, tvb(off,4))
	off = off + 4
	for i=1,Uplay_Win_GetActionsCompleted_actionList_len do
	off = do_UplayAction(conn, subtree, tvb, off, 'Uplay_Win_GetActionsCompleted_actionList_item', 'actionList')

	end
	
 end
			},
			[3] = {
				["name"] = "GetActionsCount",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Uplay_Win_GetActionsCount_platformCode = do_String(conn, tree, tvb, off, 'Uplay_Win_GetActionsCount_platformCode', 'platformCode')
off, Uplay_Win_GetActionsCount_gameCode = do_String(conn, tree, tvb, off, 'Uplay_Win_GetActionsCount_gameCode', 'gameCode')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Uplay_Win_GetActionsCount_actionsCount = do_Sint32(conn, tree, tvb, off, 'Uplay_Win_GetActionsCount_actionsCount', 'actionsCount')
 end
			},
			[4] = {
				["name"] = "GetActionsCompletedCount",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Uplay_Win_GetActionsCompletedCount_platformCode = do_String(conn, tree, tvb, off, 'Uplay_Win_GetActionsCompletedCount_platformCode', 'platformCode')
off, Uplay_Win_GetActionsCompletedCount_gameCode = do_String(conn, tree, tvb, off, 'Uplay_Win_GetActionsCompletedCount_gameCode', 'gameCode')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Uplay_Win_GetActionsCompletedCount_actionsCount = do_Sint32(conn, tree, tvb, off, 'Uplay_Win_GetActionsCompletedCount_actionsCount', 'actionsCount')
 end
			},
			[5] = {
				["name"] = "GetRewards",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Uplay_Win_GetRewards_startRowIndex = do_Sint32(conn, tree, tvb, off, 'Uplay_Win_GetRewards_startRowIndex', 'startRowIndex')
off, Uplay_Win_GetRewards_maximumRows = do_Sint32(conn, tree, tvb, off, 'Uplay_Win_GetRewards_maximumRows', 'maximumRows')
off, Uplay_Win_GetRewards_sortExpression = do_String(conn, tree, tvb, off, 'Uplay_Win_GetRewards_sortExpression', 'sortExpression')
off, Uplay_Win_GetRewards_cultureName = do_String(conn, tree, tvb, off, 'Uplay_Win_GetRewards_cultureName', 'cultureName')
off, Uplay_Win_GetRewards_platformCode = do_String(conn, tree, tvb, off, 'Uplay_Win_GetRewards_platformCode', 'platformCode')
off, Uplay_Win_GetRewards_gameCode = do_String(conn, tree, tvb, off, 'Uplay_Win_GetRewards_gameCode', 'gameCode')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Uplay_Win_GetRewards_rewardList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Uplay_Win_GetRewards_rewardList_len, tvb(off,4))
	off = off + 4
	for i=1,Uplay_Win_GetRewards_rewardList_len do
	off = do_UplayReward(conn, subtree, tvb, off, 'Uplay_Win_GetRewards_rewardList_item', 'rewardList')

	end
	
 end
			},
			[6] = {
				["name"] = "GetRewardsPurchased",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Uplay_Win_GetRewardsPurchased_startRowIndex = do_Sint32(conn, tree, tvb, off, 'Uplay_Win_GetRewardsPurchased_startRowIndex', 'startRowIndex')
off, Uplay_Win_GetRewardsPurchased_maximumRows = do_Sint32(conn, tree, tvb, off, 'Uplay_Win_GetRewardsPurchased_maximumRows', 'maximumRows')
off, Uplay_Win_GetRewardsPurchased_sortExpression = do_String(conn, tree, tvb, off, 'Uplay_Win_GetRewardsPurchased_sortExpression', 'sortExpression')
off, Uplay_Win_GetRewardsPurchased_cultureName = do_String(conn, tree, tvb, off, 'Uplay_Win_GetRewardsPurchased_cultureName', 'cultureName')
off, Uplay_Win_GetRewardsPurchased_platformCode = do_String(conn, tree, tvb, off, 'Uplay_Win_GetRewardsPurchased_platformCode', 'platformCode')
off, Uplay_Win_GetRewardsPurchased_gameCode = do_String(conn, tree, tvb, off, 'Uplay_Win_GetRewardsPurchased_gameCode', 'gameCode')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Uplay_Win_GetRewardsPurchased_rewardList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Uplay_Win_GetRewardsPurchased_rewardList_len, tvb(off,4))
	off = off + 4
	for i=1,Uplay_Win_GetRewardsPurchased_rewardList_len do
	off = do_UplayReward(conn, subtree, tvb, off, 'Uplay_Win_GetRewardsPurchased_rewardList_item', 'rewardList')

	end
	
 end
			},
			[7] = {
				["name"] = "UplayWelcome",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Uplay_Win_UplayWelcome_cultureName = do_String(conn, tree, tvb, off, 'Uplay_Win_UplayWelcome_cultureName', 'cultureName')
off, Uplay_Win_UplayWelcome_platformCode = do_String(conn, tree, tvb, off, 'Uplay_Win_UplayWelcome_platformCode', 'platformCode')
off, Uplay_Win_UplayWelcome_gameCode = do_String(conn, tree, tvb, off, 'Uplay_Win_UplayWelcome_gameCode', 'gameCode')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Uplay_Win_UplayWelcome_actionList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Uplay_Win_UplayWelcome_actionList_len, tvb(off,4))
	off = off + 4
	for i=1,Uplay_Win_UplayWelcome_actionList_len do
	off = do_UplayAction(conn, subtree, tvb, off, 'Uplay_Win_UplayWelcome_actionList_item', 'actionList')

	end
	
 end
			},
			[8] = {
				["name"] = "SetActionCompleted",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Uplay_Win_SetActionCompleted_actionCode = do_String(conn, tree, tvb, off, 'Uplay_Win_SetActionCompleted_actionCode', 'actionCode')
off, Uplay_Win_SetActionCompleted_cultureName = do_String(conn, tree, tvb, off, 'Uplay_Win_SetActionCompleted_cultureName', 'cultureName')
off, Uplay_Win_SetActionCompleted_platformCode = do_String(conn, tree, tvb, off, 'Uplay_Win_SetActionCompleted_platformCode', 'platformCode')
off, Uplay_Win_SetActionCompleted_gameCode = do_String(conn, tree, tvb, off, 'Uplay_Win_SetActionCompleted_gameCode', 'gameCode')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_UplayAction(conn, tree, tvb, off, 'Uplay_Win_SetActionCompleted_unlockedAction', 'unlockedAction')
 end
			},
			[9] = {
				["name"] = "SetActionsCompleted",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Uplay_Win_SetActionsCompleted_actionCodeList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Uplay_Win_SetActionsCompleted_actionCodeList_len, tvb(off,4))
	off = off + 4
	for i=1,Uplay_Win_SetActionsCompleted_actionCodeList_len do
	off, Uplay_Win_SetActionsCompleted_actionCodeList_item = do_String(conn, subtree, tvb, off, 'Uplay_Win_SetActionsCompleted_actionCodeList_item', 'actionCodeList')

	end
	
off, Uplay_Win_SetActionsCompleted_cultureName = do_String(conn, tree, tvb, off, 'Uplay_Win_SetActionsCompleted_cultureName', 'cultureName')
off, Uplay_Win_SetActionsCompleted_platformCode = do_String(conn, tree, tvb, off, 'Uplay_Win_SetActionsCompleted_platformCode', 'platformCode')
off, Uplay_Win_SetActionsCompleted_gameCode = do_String(conn, tree, tvb, off, 'Uplay_Win_SetActionsCompleted_gameCode', 'gameCode')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Uplay_Win_SetActionsCompleted_actionList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Uplay_Win_SetActionsCompleted_actionList_len, tvb(off,4))
	off = off + 4
	for i=1,Uplay_Win_SetActionsCompleted_actionList_len do
	off = do_UplayAction(conn, subtree, tvb, off, 'Uplay_Win_SetActionsCompleted_actionList_item', 'actionList')

	end
	
 end
			},
			[10] = {
				["name"] = "GetUserToken",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Uplay_Win_GetUserToken_token = do_String(conn, tree, tvb, off, 'Uplay_Win_GetUserToken_token', 'token')
 end
			},
			[11] = {
				["name"] = "GetVirtualCurrencyUserBalance",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Uplay_Win_GetVirtualCurrencyUserBalance_platformCode = do_String(conn, tree, tvb, off, 'Uplay_Win_GetVirtualCurrencyUserBalance_platformCode', 'platformCode')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Uplay_Win_GetVirtualCurrencyUserBalance_virtualCurrencyUserBalance = do_Sint32(conn, tree, tvb, off, 'Uplay_Win_GetVirtualCurrencyUserBalance_virtualCurrencyUserBalance', 'virtualCurrencyUserBalance')
 end
			},
			[12] = {
				["name"] = "GetSectionsByKey",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Uplay_Win_GetSectionsByKey_cultureName = do_String(conn, tree, tvb, off, 'Uplay_Win_GetSectionsByKey_cultureName', 'cultureName')
off, Uplay_Win_GetSectionsByKey_sectionKey = do_String(conn, tree, tvb, off, 'Uplay_Win_GetSectionsByKey_sectionKey', 'sectionKey')
off, Uplay_Win_GetSectionsByKey_platformCode = do_String(conn, tree, tvb, off, 'Uplay_Win_GetSectionsByKey_platformCode', 'platformCode')
off, Uplay_Win_GetSectionsByKey_gameCode = do_String(conn, tree, tvb, off, 'Uplay_Win_GetSectionsByKey_gameCode', 'gameCode')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Uplay_Win_GetSectionsByKey_sectionList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Uplay_Win_GetSectionsByKey_sectionList_len, tvb(off,4))
	off = off + 4
	for i=1,Uplay_Win_GetSectionsByKey_sectionList_len do
	off = do_UplaySection(conn, subtree, tvb, off, 'Uplay_Win_GetSectionsByKey_sectionList_item', 'sectionList')

	end
	
 end
			},
			
		}
	})
add_proto(115,
	{
		["nested"] = false,
		["name"] = "Data Store",
		["methods"] = {
[1] = {
				["name"] = "PrepareGetObjectV1",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStorePrepareGetParamV1(conn, tree, tvb, off, 'Data_Store_PrepareGetObjectV1_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreReqGetInfoV1(conn, tree, tvb, off, 'Data_Store_PrepareGetObjectV1_pReqGetInfo', 'pReqGetInfo')
 end
			},
			[2] = {
				["name"] = "PreparePostObjectV1",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStorePreparePostParamV1(conn, tree, tvb, off, 'Data_Store_PreparePostObjectV1_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreReqPostInfoV1(conn, tree, tvb, off, 'Data_Store_PreparePostObjectV1_pReqPostInfo', 'pReqPostInfo')
 end
			},
			[3] = {
				["name"] = "CompletePostObjectV1",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreCompletePostParamV1(conn, tree, tvb, off, 'Data_Store_CompletePostObjectV1_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[4] = {
				["name"] = "DeleteObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreDeleteParam(conn, tree, tvb, off, 'Data_Store_DeleteObject_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[5] = {
				["name"] = "DeleteObjects",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_DeleteObjects_params_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_DeleteObjects_params_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_DeleteObjects_params_len do
	off = do_DataStoreDeleteParam(conn, subtree, tvb, off, 'Data_Store_DeleteObjects_params_item', 'params')

	end
	
off, Data_Store_DeleteObjects_transactional = do_Bool(conn, tree, tvb, off, 'Data_Store_DeleteObjects_transactional', 'transactional')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_DeleteObjects_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_DeleteObjects_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_DeleteObjects_pResults_len do
	off, Data_Store_DeleteObjects_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_DeleteObjects_pResults_item', 'pResults')

	end
	
 end
			},
			[6] = {
				["name"] = "ChangeMetaV1",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreChangeMetaParamV1(conn, tree, tvb, off, 'Data_Store_ChangeMetaV1_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[7] = {
				["name"] = "ChangeMetasV1",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_ChangeMetasV1_dataIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_ChangeMetasV1_dataIds_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_ChangeMetasV1_dataIds_len do
	off, Data_Store_ChangeMetasV1_dataIds_item = do_Uint64(conn, subtree, tvb, off, 'Data_Store_ChangeMetasV1_dataIds_item', 'dataIds')

	end
	
local Data_Store_ChangeMetasV1_params_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_ChangeMetasV1_params_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_ChangeMetasV1_params_len do
	off = do_DataStoreChangeMetaParamV1(conn, subtree, tvb, off, 'Data_Store_ChangeMetasV1_params_item', 'params')

	end
	
off, Data_Store_ChangeMetasV1_transactional = do_Bool(conn, tree, tvb, off, 'Data_Store_ChangeMetasV1_transactional', 'transactional')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_ChangeMetasV1_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_ChangeMetasV1_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_ChangeMetasV1_pResults_len do
	off, Data_Store_ChangeMetasV1_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_ChangeMetasV1_pResults_item', 'pResults')

	end
	
 end
			},
			[8] = {
				["name"] = "GetMeta",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreGetMetaParam(conn, tree, tvb, off, 'Data_Store_GetMeta_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreMetaInfo(conn, tree, tvb, off, 'Data_Store_GetMeta_pMetaInfo', 'pMetaInfo')
 end
			},
			[9] = {
				["name"] = "GetMetas",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_GetMetas_dataIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetMetas_dataIds_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetMetas_dataIds_len do
	off, Data_Store_GetMetas_dataIds_item = do_Uint64(conn, subtree, tvb, off, 'Data_Store_GetMetas_dataIds_item', 'dataIds')

	end
	
off = do_DataStoreGetMetaParam(conn, tree, tvb, off, 'Data_Store_GetMetas_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_GetMetas_pMetaInfo_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetMetas_pMetaInfo_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetMetas_pMetaInfo_len do
	off = do_DataStoreMetaInfo(conn, subtree, tvb, off, 'Data_Store_GetMetas_pMetaInfo_item', 'pMetaInfo')

	end
	
local Data_Store_GetMetas_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetMetas_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetMetas_pResults_len do
	off, Data_Store_GetMetas_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_GetMetas_pResults_item', 'pResults')

	end
	
 end
			},
			[10] = {
				["name"] = "PrepareUpdateObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStorePrepareUpdateParam(conn, tree, tvb, off, 'Data_Store_PrepareUpdateObject_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreReqUpdateInfo(conn, tree, tvb, off, 'Data_Store_PrepareUpdateObject_pReqUpdateInfo', 'pReqUpdateInfo')
 end
			},
			[11] = {
				["name"] = "CompleteUpdateObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreCompleteUpdateParam(conn, tree, tvb, off, 'Data_Store_CompleteUpdateObject_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[12] = {
				["name"] = "SearchObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreSearchParam(conn, tree, tvb, off, 'Data_Store_SearchObject_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreSearchResult(conn, tree, tvb, off, 'Data_Store_SearchObject_pSearchResult', 'pSearchResult')
 end
			},
			[13] = {
				["name"] = "GetNotificationUrl",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreGetNotificationUrlParam(conn, tree, tvb, off, 'Data_Store_GetNotificationUrl_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreReqGetNotificationUrlInfo(conn, tree, tvb, off, 'Data_Store_GetNotificationUrl_info', 'info')
 end
			},
			[14] = {
				["name"] = "GetNewArrivedNotificationsV1",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreGetNewArrivedNotificationsParam(conn, tree, tvb, off, 'Data_Store_GetNewArrivedNotificationsV1_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_GetNewArrivedNotificationsV1_pResult_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetNewArrivedNotificationsV1_pResult_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetNewArrivedNotificationsV1_pResult_len do
	off = do_DataStoreNotificationV1(conn, subtree, tvb, off, 'Data_Store_GetNewArrivedNotificationsV1_pResult_item', 'pResult')

	end
	
off, Data_Store_GetNewArrivedNotificationsV1_pHasNext = do_Bool(conn, tree, tvb, off, 'Data_Store_GetNewArrivedNotificationsV1_pHasNext', 'pHasNext')
 end
			},
			[15] = {
				["name"] = "RateObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreRatingTarget(conn, tree, tvb, off, 'Data_Store_RateObject_target', 'target')
off = do_DataStoreRateObjectParam(conn, tree, tvb, off, 'Data_Store_RateObject_param', 'param')
off, Data_Store_RateObject_fetchRatings = do_Bool(conn, tree, tvb, off, 'Data_Store_RateObject_fetchRatings', 'fetchRatings')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreRatingInfo(conn, tree, tvb, off, 'Data_Store_RateObject_pRating', 'pRating')
 end
			},
			[16] = {
				["name"] = "GetRating",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreRatingTarget(conn, tree, tvb, off, 'Data_Store_GetRating_target', 'target')
off, Data_Store_GetRating_accessPassword = do_Uint64(conn, tree, tvb, off, 'Data_Store_GetRating_accessPassword', 'accessPassword')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreRatingInfo(conn, tree, tvb, off, 'Data_Store_GetRating_pRating', 'pRating')
 end
			},
			[17] = {
				["name"] = "GetRatings",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_GetRatings_dataIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetRatings_dataIds_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetRatings_dataIds_len do
	off, Data_Store_GetRatings_dataIds_item = do_Uint64(conn, subtree, tvb, off, 'Data_Store_GetRatings_dataIds_item', 'dataIds')

	end
	
off, Data_Store_GetRatings_accessPassword = do_Uint64(conn, tree, tvb, off, 'Data_Store_GetRatings_accessPassword', 'accessPassword')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_GetRatings_pRatings_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetRatings_pRatings_len, tvb(off,4))
	off = off + 4
	for j=1,Data_Store_GetRatings_pRatings_len do
	local Data_Store_GetRatings_pRatings_item_len = tvb(off, 4):le_uint()
	subsubtree = subtree:add_le(F.Data_Store_GetRatings_pRatings_item_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetRatings_pRatings_item_len do
	off = do_DataStoreRatingInfoWithSlot(conn, subsubtree, tvb, off, 'Data_Store_GetRatings_pRatings_item_item', 'pRatings')

	end
	

	end
	
local Data_Store_GetRatings_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetRatings_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetRatings_pResults_len do
	off, Data_Store_GetRatings_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_GetRatings_pResults_item', 'pResults')

	end
	
 end
			},
			[18] = {
				["name"] = "ResetRating",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreRatingTarget(conn, tree, tvb, off, 'Data_Store_ResetRating_target', 'target')
off, Data_Store_ResetRating_updatePassword = do_Uint64(conn, tree, tvb, off, 'Data_Store_ResetRating_updatePassword', 'updatePassword')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[19] = {
				["name"] = "ResetRatings",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_ResetRatings_dataIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_ResetRatings_dataIds_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_ResetRatings_dataIds_len do
	off, Data_Store_ResetRatings_dataIds_item = do_Uint64(conn, subtree, tvb, off, 'Data_Store_ResetRatings_dataIds_item', 'dataIds')

	end
	
off, Data_Store_ResetRatings_transactional = do_Bool(conn, tree, tvb, off, 'Data_Store_ResetRatings_transactional', 'transactional')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_ResetRatings_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_ResetRatings_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_ResetRatings_pResults_len do
	off, Data_Store_ResetRatings_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_ResetRatings_pResults_item', 'pResults')

	end
	
 end
			},
			[20] = {
				["name"] = "GetSpecificMetaV1",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreGetSpecificMetaParamV1(conn, tree, tvb, off, 'Data_Store_GetSpecificMetaV1_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_GetSpecificMetaV1_pMetaInfos_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetSpecificMetaV1_pMetaInfos_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetSpecificMetaV1_pMetaInfos_len do
	off = do_DataStoreSpecificMetaInfoV1(conn, subtree, tvb, off, 'Data_Store_GetSpecificMetaV1_pMetaInfos_item', 'pMetaInfos')

	end
	
 end
			},
			[21] = {
				["name"] = "PostMetaBinary",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStorePreparePostParam(conn, tree, tvb, off, 'Data_Store_PostMetaBinary_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Data_Store_PostMetaBinary_dataId = do_Uint64(conn, tree, tvb, off, 'Data_Store_PostMetaBinary_dataId', 'dataId')
 end
			},
			[22] = {
				["name"] = "TouchObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreTouchObjectParam(conn, tree, tvb, off, 'Data_Store_TouchObject_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[23] = {
				["name"] = "GetRatingWithLog",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreRatingTarget(conn, tree, tvb, off, 'Data_Store_GetRatingWithLog_target', 'target')
off, Data_Store_GetRatingWithLog_accessPassword = do_Uint64(conn, tree, tvb, off, 'Data_Store_GetRatingWithLog_accessPassword', 'accessPassword')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreRatingInfo(conn, tree, tvb, off, 'Data_Store_GetRatingWithLog_pRating', 'pRating')
off = do_DataStoreRatingLog(conn, tree, tvb, off, 'Data_Store_GetRatingWithLog_pRatingLog', 'pRatingLog')
 end
			},
			[24] = {
				["name"] = "PreparePostObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStorePreparePostParam(conn, tree, tvb, off, 'Data_Store_PreparePostObject_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreReqPostInfo(conn, tree, tvb, off, 'Data_Store_PreparePostObject_pReqPostInfo', 'pReqPostInfo')
 end
			},
			[25] = {
				["name"] = "PrepareGetObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStorePrepareGetParam(conn, tree, tvb, off, 'Data_Store_PrepareGetObject_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreReqGetInfo(conn, tree, tvb, off, 'Data_Store_PrepareGetObject_pReqGetInfo', 'pReqGetInfo')
 end
			},
			[26] = {
				["name"] = "CompletePostObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreCompletePostParam(conn, tree, tvb, off, 'Data_Store_CompletePostObject_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[27] = {
				["name"] = "GetNewArrivedNotifications",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreGetNewArrivedNotificationsParam(conn, tree, tvb, off, 'Data_Store_GetNewArrivedNotifications_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_GetNewArrivedNotifications_pResult_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetNewArrivedNotifications_pResult_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetNewArrivedNotifications_pResult_len do
	off = do_DataStoreNotification(conn, subtree, tvb, off, 'Data_Store_GetNewArrivedNotifications_pResult_item', 'pResult')

	end
	
off, Data_Store_GetNewArrivedNotifications_pHasNext = do_Bool(conn, tree, tvb, off, 'Data_Store_GetNewArrivedNotifications_pHasNext', 'pHasNext')
 end
			},
			[28] = {
				["name"] = "GetSpecificMeta",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreGetSpecificMetaParam(conn, tree, tvb, off, 'Data_Store_GetSpecificMeta_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_GetSpecificMeta_pMetaInfos_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetSpecificMeta_pMetaInfos_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetSpecificMeta_pMetaInfos_len do
	off = do_DataStoreSpecificMetaInfo(conn, subtree, tvb, off, 'Data_Store_GetSpecificMeta_pMetaInfos_item', 'pMetaInfos')

	end
	
 end
			},
			[29] = {
				["name"] = "GetPersistenceInfo",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Data_Store_GetPersistenceInfo_ownerId = do_PID(conn, tree, tvb, off, 'Data_Store_GetPersistenceInfo_ownerId', 'ownerId')
off, Data_Store_GetPersistenceInfo_persistenceSlotId = do_Uint16(conn, tree, tvb, off, 'Data_Store_GetPersistenceInfo_persistenceSlotId', 'persistenceSlotId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStorePersistenceInfo(conn, tree, tvb, off, 'Data_Store_GetPersistenceInfo_pPersistenceInfo', 'pPersistenceInfo')
 end
			},
			[30] = {
				["name"] = "GetPersistenceInfos",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Data_Store_GetPersistenceInfos_ownerId = do_PID(conn, tree, tvb, off, 'Data_Store_GetPersistenceInfos_ownerId', 'ownerId')
local Data_Store_GetPersistenceInfos_persistenceSlotIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetPersistenceInfos_persistenceSlotIds_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetPersistenceInfos_persistenceSlotIds_len do
	off, Data_Store_GetPersistenceInfos_persistenceSlotIds_item = do_Uint16(conn, subtree, tvb, off, 'Data_Store_GetPersistenceInfos_persistenceSlotIds_item', 'persistenceSlotIds')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_GetPersistenceInfos_pPersistenceInfo_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetPersistenceInfos_pPersistenceInfo_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetPersistenceInfos_pPersistenceInfo_len do
	off = do_DataStorePersistenceInfo(conn, subtree, tvb, off, 'Data_Store_GetPersistenceInfos_pPersistenceInfo_item', 'pPersistenceInfo')

	end
	
local Data_Store_GetPersistenceInfos_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetPersistenceInfos_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetPersistenceInfos_pResults_len do
	off, Data_Store_GetPersistenceInfos_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_GetPersistenceInfos_pResults_item', 'pResults')

	end
	
 end
			},
			[31] = {
				["name"] = "PerpetuateObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Data_Store_PerpetuateObject_persistenceSlotId = do_Uint16(conn, tree, tvb, off, 'Data_Store_PerpetuateObject_persistenceSlotId', 'persistenceSlotId')
off, Data_Store_PerpetuateObject_dataId = do_Uint64(conn, tree, tvb, off, 'Data_Store_PerpetuateObject_dataId', 'dataId')
off, Data_Store_PerpetuateObject_deleteLastObject = do_Bool(conn, tree, tvb, off, 'Data_Store_PerpetuateObject_deleteLastObject', 'deleteLastObject')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[32] = {
				["name"] = "UnperpetuateObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Data_Store_UnperpetuateObject_persistenceSlotId = do_Uint16(conn, tree, tvb, off, 'Data_Store_UnperpetuateObject_persistenceSlotId', 'persistenceSlotId')
off, Data_Store_UnperpetuateObject_deleteLastObject = do_Bool(conn, tree, tvb, off, 'Data_Store_UnperpetuateObject_deleteLastObject', 'deleteLastObject')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[33] = {
				["name"] = "PrepareGetObjectOrMetaBinary",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStorePrepareGetParam(conn, tree, tvb, off, 'Data_Store_PrepareGetObjectOrMetaBinary_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreReqGetInfo(conn, tree, tvb, off, 'Data_Store_PrepareGetObjectOrMetaBinary_pReqGetInfo', 'pReqGetInfo')
off = do_DataStoreReqGetAdditionalMeta(conn, tree, tvb, off, 'Data_Store_PrepareGetObjectOrMetaBinary_pReqGetAdditionalMeta', 'pReqGetAdditionalMeta')
 end
			},
			[34] = {
				["name"] = "GetPasswordInfo",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Data_Store_GetPasswordInfo_dataId = do_Uint64(conn, tree, tvb, off, 'Data_Store_GetPasswordInfo_dataId', 'dataId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStorePasswordInfo(conn, tree, tvb, off, 'Data_Store_GetPasswordInfo_pPasswordInfo', 'pPasswordInfo')
 end
			},
			[35] = {
				["name"] = "GetPasswordInfos",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_GetPasswordInfos_dataIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetPasswordInfos_dataIds_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetPasswordInfos_dataIds_len do
	off, Data_Store_GetPasswordInfos_dataIds_item = do_Uint64(conn, subtree, tvb, off, 'Data_Store_GetPasswordInfos_dataIds_item', 'dataIds')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_GetPasswordInfos_pPasswordInfos_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetPasswordInfos_pPasswordInfos_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetPasswordInfos_pPasswordInfos_len do
	off = do_DataStorePasswordInfo(conn, subtree, tvb, off, 'Data_Store_GetPasswordInfos_pPasswordInfos_item', 'pPasswordInfos')

	end
	
local Data_Store_GetPasswordInfos_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetPasswordInfos_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetPasswordInfos_pResults_len do
	off, Data_Store_GetPasswordInfos_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_GetPasswordInfos_pResults_item', 'pResults')

	end
	
 end
			},
			[36] = {
				["name"] = "GetMetasMultipleParam",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_GetMetasMultipleParam_params_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetMetasMultipleParam_params_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetMetasMultipleParam_params_len do
	off = do_DataStoreGetMetaParam(conn, subtree, tvb, off, 'Data_Store_GetMetasMultipleParam_params_item', 'params')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_GetMetasMultipleParam_pMetaInfo_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetMetasMultipleParam_pMetaInfo_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetMetasMultipleParam_pMetaInfo_len do
	off = do_DataStoreMetaInfo(conn, subtree, tvb, off, 'Data_Store_GetMetasMultipleParam_pMetaInfo_item', 'pMetaInfo')

	end
	
local Data_Store_GetMetasMultipleParam_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetMetasMultipleParam_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetMetasMultipleParam_pResults_len do
	off, Data_Store_GetMetasMultipleParam_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_GetMetasMultipleParam_pResults_item', 'pResults')

	end
	
 end
			},
			[37] = {
				["name"] = "CompletePostObjects",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_CompletePostObjects_dataIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_CompletePostObjects_dataIds_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_CompletePostObjects_dataIds_len do
	off, Data_Store_CompletePostObjects_dataIds_item = do_Uint64(conn, subtree, tvb, off, 'Data_Store_CompletePostObjects_dataIds_item', 'dataIds')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[38] = {
				["name"] = "ChangeMeta",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreChangeMetaParam(conn, tree, tvb, off, 'Data_Store_ChangeMeta_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[39] = {
				["name"] = "ChangeMetas",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_ChangeMetas_dataIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_ChangeMetas_dataIds_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_ChangeMetas_dataIds_len do
	off, Data_Store_ChangeMetas_dataIds_item = do_Uint64(conn, subtree, tvb, off, 'Data_Store_ChangeMetas_dataIds_item', 'dataIds')

	end
	
local Data_Store_ChangeMetas_params_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_ChangeMetas_params_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_ChangeMetas_params_len do
	off = do_DataStoreChangeMetaParam(conn, subtree, tvb, off, 'Data_Store_ChangeMetas_params_item', 'params')

	end
	
off, Data_Store_ChangeMetas_transactional = do_Bool(conn, tree, tvb, off, 'Data_Store_ChangeMetas_transactional', 'transactional')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_ChangeMetas_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_ChangeMetas_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_ChangeMetas_pResults_len do
	off, Data_Store_ChangeMetas_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_ChangeMetas_pResults_item', 'pResults')

	end
	
 end
			},
			[40] = {
				["name"] = "RateObjects",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_RateObjects_targets_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_RateObjects_targets_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_RateObjects_targets_len do
	off = do_DataStoreRatingTarget(conn, subtree, tvb, off, 'Data_Store_RateObjects_targets_item', 'targets')

	end
	
local Data_Store_RateObjects_params_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_RateObjects_params_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_RateObjects_params_len do
	off = do_DataStoreRateObjectParam(conn, subtree, tvb, off, 'Data_Store_RateObjects_params_item', 'params')

	end
	
off, Data_Store_RateObjects_transactional = do_Bool(conn, tree, tvb, off, 'Data_Store_RateObjects_transactional', 'transactional')
off, Data_Store_RateObjects_fetchRatings = do_Bool(conn, tree, tvb, off, 'Data_Store_RateObjects_fetchRatings', 'fetchRatings')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_RateObjects_pRatings_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_RateObjects_pRatings_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_RateObjects_pRatings_len do
	off = do_DataStoreRatingInfo(conn, subtree, tvb, off, 'Data_Store_RateObjects_pRatings_item', 'pRatings')

	end
	
local Data_Store_RateObjects_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_RateObjects_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_RateObjects_pResults_len do
	off, Data_Store_RateObjects_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_RateObjects_pResults_item', 'pResults')

	end
	
 end
			},
			[41] = {
				["name"] = "PostMetaBinaryWithDataId",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Data_Store_PostMetaBinaryWithDataId_dataId = do_Uint64(conn, tree, tvb, off, 'Data_Store_PostMetaBinaryWithDataId_dataId', 'dataId')
off = do_DataStorePreparePostParam(conn, tree, tvb, off, 'Data_Store_PostMetaBinaryWithDataId_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[42] = {
				["name"] = "PostMetaBinariesWithDataId",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_PostMetaBinariesWithDataId_dataIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_PostMetaBinariesWithDataId_dataIds_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_PostMetaBinariesWithDataId_dataIds_len do
	off, Data_Store_PostMetaBinariesWithDataId_dataIds_item = do_Uint64(conn, subtree, tvb, off, 'Data_Store_PostMetaBinariesWithDataId_dataIds_item', 'dataIds')

	end
	
local Data_Store_PostMetaBinariesWithDataId_params_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_PostMetaBinariesWithDataId_params_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_PostMetaBinariesWithDataId_params_len do
	off = do_DataStorePreparePostParam(conn, subtree, tvb, off, 'Data_Store_PostMetaBinariesWithDataId_params_item', 'params')

	end
	
off, Data_Store_PostMetaBinariesWithDataId_transactional = do_Bool(conn, tree, tvb, off, 'Data_Store_PostMetaBinariesWithDataId_transactional', 'transactional')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_PostMetaBinariesWithDataId_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_PostMetaBinariesWithDataId_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_PostMetaBinariesWithDataId_pResults_len do
	off, Data_Store_PostMetaBinariesWithDataId_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_PostMetaBinariesWithDataId_pResults_item', 'pResults')

	end
	
 end
			},
			[43] = {
				["name"] = "RateObjectWithPosting",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreRatingTarget(conn, tree, tvb, off, 'Data_Store_RateObjectWithPosting_target', 'target')
off = do_DataStoreRateObjectParam(conn, tree, tvb, off, 'Data_Store_RateObjectWithPosting_rateParam', 'rateParam')
off = do_DataStorePreparePostParam(conn, tree, tvb, off, 'Data_Store_RateObjectWithPosting_postParam', 'postParam')
off, Data_Store_RateObjectWithPosting_fetchRatings = do_Bool(conn, tree, tvb, off, 'Data_Store_RateObjectWithPosting_fetchRatings', 'fetchRatings')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreRatingInfo(conn, tree, tvb, off, 'Data_Store_RateObjectWithPosting_pRating', 'pRating')
 end
			},
			[44] = {
				["name"] = "RateObjectsWithPosting",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_RateObjectsWithPosting_targets_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_RateObjectsWithPosting_targets_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_RateObjectsWithPosting_targets_len do
	off = do_DataStoreRatingTarget(conn, subtree, tvb, off, 'Data_Store_RateObjectsWithPosting_targets_item', 'targets')

	end
	
local Data_Store_RateObjectsWithPosting_rateParams_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_RateObjectsWithPosting_rateParams_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_RateObjectsWithPosting_rateParams_len do
	off = do_DataStoreRateObjectParam(conn, subtree, tvb, off, 'Data_Store_RateObjectsWithPosting_rateParams_item', 'rateParams')

	end
	
local Data_Store_RateObjectsWithPosting_postParams_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_RateObjectsWithPosting_postParams_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_RateObjectsWithPosting_postParams_len do
	off = do_DataStorePreparePostParam(conn, subtree, tvb, off, 'Data_Store_RateObjectsWithPosting_postParams_item', 'postParams')

	end
	
off, Data_Store_RateObjectsWithPosting_transactional = do_Bool(conn, tree, tvb, off, 'Data_Store_RateObjectsWithPosting_transactional', 'transactional')
off, Data_Store_RateObjectsWithPosting_fetchRatings = do_Bool(conn, tree, tvb, off, 'Data_Store_RateObjectsWithPosting_fetchRatings', 'fetchRatings')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_RateObjectsWithPosting_pRatings_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_RateObjectsWithPosting_pRatings_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_RateObjectsWithPosting_pRatings_len do
	off = do_DataStoreRatingInfo(conn, subtree, tvb, off, 'Data_Store_RateObjectsWithPosting_pRatings_item', 'pRatings')

	end
	
local Data_Store_RateObjectsWithPosting_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_RateObjectsWithPosting_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_RateObjectsWithPosting_pResults_len do
	off, Data_Store_RateObjectsWithPosting_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_RateObjectsWithPosting_pResults_item', 'pResults')

	end
	
 end
			},
			[45] = {
				["name"] = "GetObjectInfos",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_GetObjectInfos_dataIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetObjectInfos_dataIds_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetObjectInfos_dataIds_len do
	off, Data_Store_GetObjectInfos_dataIds_item = do_Uint64(conn, subtree, tvb, off, 'Data_Store_GetObjectInfos_dataIds_item', 'dataIds')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Data_Store_GetObjectInfos_pInfos_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetObjectInfos_pInfos_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetObjectInfos_pInfos_len do
	off = do_DataStoreReqGetInfo(conn, subtree, tvb, off, 'Data_Store_GetObjectInfos_pInfos_item', 'pInfos')

	end
	
local Data_Store_GetObjectInfos_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetObjectInfos_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetObjectInfos_pResults_len do
	off, Data_Store_GetObjectInfos_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_GetObjectInfos_pResults_item', 'pResults')

	end
	
 end
			},
			[46] = {
				["name"] = "SearchObjectLight",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreSearchParam(conn, tree, tvb, off, 'Data_Store_SearchObjectLight_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreSearchResult(conn, tree, tvb, off, 'Data_Store_SearchObjectLight_pSearchResult', 'pSearchResult')
 end
			},
			
		}
	})
add_proto(110,
	{
		["nested"] = false,
		["name"] = "Utility",
		["methods"] = {
[1] = {
				["name"] = "AcquireNexUniqueId",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Utility_AcquireNexUniqueId_pNexUniqueId = do_Uint64(conn, tree, tvb, off, 'Utility_AcquireNexUniqueId_pNexUniqueId', 'pNexUniqueId')
 end
			},
			[2] = {
				["name"] = "AcquireNexUniqueIdWithPassword",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_UniqueIdInfo(conn, tree, tvb, off, 'Utility_AcquireNexUniqueIdWithPassword_pNexUniqueIdInfo', 'pNexUniqueIdInfo')
 end
			},
			[3] = {
				["name"] = "AssociateNexUniqueIdWithMyPrincipalId",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_UniqueIdInfo(conn, tree, tvb, off, 'Utility_AssociateNexUniqueIdWithMyPrincipalId_uniqueIdInfo', 'uniqueIdInfo')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[4] = {
				["name"] = "AssociateNexUniqueIdsWithMyPrincipalId",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Utility_AssociateNexUniqueIdsWithMyPrincipalId_uniqueIdInfo_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Utility_AssociateNexUniqueIdsWithMyPrincipalId_uniqueIdInfo_len, tvb(off,4))
	off = off + 4
	for i=1,Utility_AssociateNexUniqueIdsWithMyPrincipalId_uniqueIdInfo_len do
	off = do_UniqueIdInfo(conn, subtree, tvb, off, 'Utility_AssociateNexUniqueIdsWithMyPrincipalId_uniqueIdInfo_item', 'uniqueIdInfo')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[5] = {
				["name"] = "GetAssociatedNexUniqueIdWithMyPrincipalId",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_UniqueIdInfo(conn, tree, tvb, off, 'Utility_GetAssociatedNexUniqueIdWithMyPrincipalId_pUniqueIdInfo', 'pUniqueIdInfo')
 end
			},
			[6] = {
				["name"] = "GetAssociatedNexUniqueIdsWithMyPrincipalId",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Utility_GetAssociatedNexUniqueIdsWithMyPrincipalId_pUniqueIdInfo_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Utility_GetAssociatedNexUniqueIdsWithMyPrincipalId_pUniqueIdInfo_len, tvb(off,4))
	off = off + 4
	for i=1,Utility_GetAssociatedNexUniqueIdsWithMyPrincipalId_pUniqueIdInfo_len do
	off = do_UniqueIdInfo(conn, subtree, tvb, off, 'Utility_GetAssociatedNexUniqueIdsWithMyPrincipalId_pUniqueIdInfo_item', 'pUniqueIdInfo')

	end
	
 end
			},
			[7] = {
				["name"] = "GetIntegerSettings",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Utility_GetIntegerSettings_integerSettingIndex = do_Uint32(conn, tree, tvb, off, 'Utility_GetIntegerSettings_integerSettingIndex', 'integerSettingIndex')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Utility_GetIntegerSettings_integerSettings_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Utility_GetIntegerSettings_integerSettings_len, tvb(off,4))
	off = off + 4
	for i=1,Utility_GetIntegerSettings_integerSettings_len do
	off, Utility_GetIntegerSettings_integerSettings_key = do_Uint16(conn, subtree, tvb, off, 'Utility_GetIntegerSettings_integerSettings_key', 'integerSettings')

off, Utility_GetIntegerSettings_integerSettings_value = do_Sint32(conn, subtree, tvb, off, 'Utility_GetIntegerSettings_integerSettings_value', 'integerSettings')

	end
	
 end
			},
			[8] = {
				["name"] = "GetStringSettings",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Utility_GetStringSettings_stringSettingIndex = do_Uint32(conn, tree, tvb, off, 'Utility_GetStringSettings_stringSettingIndex', 'stringSettingIndex')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Utility_GetStringSettings_stringSettings_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Utility_GetStringSettings_stringSettings_len, tvb(off,4))
	off = off + 4
	for i=1,Utility_GetStringSettings_stringSettings_len do
	off, Utility_GetStringSettings_stringSettings_key = do_Uint16(conn, subtree, tvb, off, 'Utility_GetStringSettings_stringSettings_key', 'stringSettings')

off, Utility_GetStringSettings_stringSettings_value = do_String(conn, subtree, tvb, off, 'Utility_GetStringSettings_stringSettings_value', 'stringSettings')

	end
	
 end
			},
			
		}
	})
add_proto(53,
	{
		["nested"] = false,
		["name"] = "User Storage",
		["methods"] = {
[1] = {
				["name"] = "SearchContents",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_UserStorageQuery(conn, tree, tvb, off, 'User_Storage_SearchContents_query', 'query')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local User_Storage_SearchContents_searchResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Storage_SearchContents_searchResults_len, tvb(off,4))
	off = off + 4
	for i=1,User_Storage_SearchContents_searchResults_len do
	off = do_UserContent(conn, subtree, tvb, off, 'User_Storage_SearchContents_searchResults_item', 'searchResults')

	end
	
 end
			},
			[2] = {
				["name"] = "SearchContentsWithTotal",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_UserStorageQuery(conn, tree, tvb, off, 'User_Storage_SearchContentsWithTotal_query', 'query')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local User_Storage_SearchContentsWithTotal_searchResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Storage_SearchContentsWithTotal_searchResults_len, tvb(off,4))
	off = off + 4
	for i=1,User_Storage_SearchContentsWithTotal_searchResults_len do
	off = do_UserContent(conn, subtree, tvb, off, 'User_Storage_SearchContentsWithTotal_searchResults_item', 'searchResults')

	end
	
off, User_Storage_SearchContentsWithTotal_totalResults = do_Uint32(conn, tree, tvb, off, 'User_Storage_SearchContentsWithTotal_totalResults', 'totalResults')
 end
			},
			[3] = {
				["name"] = "DeleteContent",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_UserContentKey(conn, tree, tvb, off, 'User_Storage_DeleteContent_contentKey', 'contentKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[4] = {
				["name"] = "SaveMetaData",
				["request"] = function (conn, tree, tvb)
	local off = 0
local User_Storage_SaveMetaData_properties_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Storage_SaveMetaData_properties_len, tvb(off,4))
	off = off + 4
	for i=1,User_Storage_SaveMetaData_properties_len do
	off = do_ContentProperty(conn, subtree, tvb, off, 'User_Storage_SaveMetaData_properties_item', 'properties')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_UserContentKey(conn, tree, tvb, off, 'User_Storage_SaveMetaData_contentKey', 'contentKey')
 end
			},
			[5] = {
				["name"] = "SaveContentDB",
				["request"] = function (conn, tree, tvb)
	local off = 0
local User_Storage_SaveContentDB_properties_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Storage_SaveContentDB_properties_len, tvb(off,4))
	off = off + 4
	for i=1,User_Storage_SaveContentDB_properties_len do
	off = do_ContentProperty(conn, subtree, tvb, off, 'User_Storage_SaveContentDB_properties_item', 'properties')

	end
	
off, User_Storage_SaveContentDB_data = do_Buffer(conn, tree, tvb, off, 'User_Storage_SaveContentDB_data', 'data')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_UserContentKey(conn, tree, tvb, off, 'User_Storage_SaveContentDB_contentKey', 'contentKey')
 end
			},
			[6] = {
				["name"] = "SaveContentAndGetUploadInfo",
				["request"] = function (conn, tree, tvb)
	local off = 0
local User_Storage_SaveContentAndGetUploadInfo_properties_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Storage_SaveContentAndGetUploadInfo_properties_len, tvb(off,4))
	off = off + 4
	for i=1,User_Storage_SaveContentAndGetUploadInfo_properties_len do
	off = do_ContentProperty(conn, subtree, tvb, off, 'User_Storage_SaveContentAndGetUploadInfo_properties_item', 'properties')

	end
	
off, User_Storage_SaveContentAndGetUploadInfo_size = do_Uint32(conn, tree, tvb, off, 'User_Storage_SaveContentAndGetUploadInfo_size', 'size')
off = do_UserContentKey(conn, tree, tvb, off, 'User_Storage_SaveContentAndGetUploadInfo_contentKey', 'contentKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_UserContentURL(conn, tree, tvb, off, 'User_Storage_SaveContentAndGetUploadInfo_uploadInfo', 'uploadInfo')
off, User_Storage_SaveContentAndGetUploadInfo_pendingID = do_Uint64(conn, tree, tvb, off, 'User_Storage_SaveContentAndGetUploadInfo_pendingID', 'pendingID')
local User_Storage_SaveContentAndGetUploadInfo_headers_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Storage_SaveContentAndGetUploadInfo_headers_len, tvb(off,4))
	off = off + 4
	for i=1,User_Storage_SaveContentAndGetUploadInfo_headers_len do
	off, User_Storage_SaveContentAndGetUploadInfo_headers_item = do_String(conn, subtree, tvb, off, 'User_Storage_SaveContentAndGetUploadInfo_headers_item', 'headers')

	end
	
 end
			},
			[7] = {
				["name"] = "UploadEnd",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, User_Storage_UploadEnd_pendingID = do_Uint64(conn, tree, tvb, off, 'User_Storage_UploadEnd_pendingID', 'pendingID')
off, User_Storage_UploadEnd_result = do_Bool(conn, tree, tvb, off, 'User_Storage_UploadEnd_result', 'result')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_UserContentKey(conn, tree, tvb, off, 'User_Storage_UploadEnd_contentKey', 'contentKey')
 end
			},
			[8] = {
				["name"] = "GetContentDB",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_UserContentKey(conn, tree, tvb, off, 'User_Storage_GetContentDB_contentKey', 'contentKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, User_Storage_GetContentDB_data = do_Buffer(conn, tree, tvb, off, 'User_Storage_GetContentDB_data', 'data')
 end
			},
			[9] = {
				["name"] = "GetContentURL",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_UserContentKey(conn, tree, tvb, off, 'User_Storage_GetContentURL_contentKey', 'contentKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_UserContentURL(conn, tree, tvb, off, 'User_Storage_GetContentURL_downloadInfo', 'downloadInfo')
 end
			},
			[10] = {
				["name"] = "GetSlotCount",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, User_Storage_GetSlotCount_typeID = do_Uint32(conn, tree, tvb, off, 'User_Storage_GetSlotCount_typeID', 'typeID')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_UserSlotCount(conn, tree, tvb, off, 'User_Storage_GetSlotCount_slotCount', 'slotCount')
 end
			},
			[11] = {
				["name"] = "GetMetaData",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_UserContentKey(conn, tree, tvb, off, 'User_Storage_GetMetaData_contentKey', 'contentKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_UserContent(conn, tree, tvb, off, 'User_Storage_GetMetaData_content', 'content')
 end
			},
			[12] = {
				["name"] = "Like",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_UserContentKey(conn, tree, tvb, off, 'User_Storage_Like_contentKey', 'contentKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[13] = {
				["name"] = "Unlike",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_UserContentKey(conn, tree, tvb, off, 'User_Storage_Unlike_contentKey', 'contentKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[14] = {
				["name"] = "IsLiked",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_UserContentKey(conn, tree, tvb, off, 'User_Storage_IsLiked_contentKey', 'contentKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, User_Storage_IsLiked_liked = do_Bool(conn, tree, tvb, off, 'User_Storage_IsLiked_liked', 'liked')
 end
			},
			[15] = {
				["name"] = "GetFavourites",
				["request"] = function (conn, tree, tvb)
	local off = 0
local User_Storage_GetFavourites_contentTypes_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Storage_GetFavourites_contentTypes_len, tvb(off,4))
	off = off + 4
	for i=1,User_Storage_GetFavourites_contentTypes_len do
	off, User_Storage_GetFavourites_contentTypes_item = do_Uint32(conn, subtree, tvb, off, 'User_Storage_GetFavourites_contentTypes_item', 'contentTypes')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local User_Storage_GetFavourites_favourites_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Storage_GetFavourites_favourites_len, tvb(off,4))
	off = off + 4
	for i=1,User_Storage_GetFavourites_favourites_len do
	off = do_UserContent(conn, subtree, tvb, off, 'User_Storage_GetFavourites_favourites_item', 'favourites')

	end
	
 end
			},
			[16] = {
				["name"] = "MakeFavourite",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_UserContentKey(conn, tree, tvb, off, 'User_Storage_MakeFavourite_contentKey', 'contentKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[17] = {
				["name"] = "RemoveFromFavourites",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_UserContentKey(conn, tree, tvb, off, 'User_Storage_RemoveFromFavourites_contentKey', 'contentKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[18] = {
				["name"] = "ReportInappropriate",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_UserContentKey(conn, tree, tvb, off, 'User_Storage_ReportInappropriate_contentKey', 'contentKey')
off, User_Storage_ReportInappropriate_reason = do_String(conn, tree, tvb, off, 'User_Storage_ReportInappropriate_reason', 'reason')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[19] = {
				["name"] = "IncrementPlayCount",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_UserContentKey(conn, tree, tvb, off, 'User_Storage_IncrementPlayCount_contentKey', 'contentKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[20] = {
				["name"] = "UpdateCustomStat",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_UserContentKey(conn, tree, tvb, off, 'User_Storage_UpdateCustomStat_contentKey', 'contentKey')
off, User_Storage_UpdateCustomStat_statID = do_Uint16(conn, tree, tvb, off, 'User_Storage_UpdateCustomStat_statID', 'statID')
off, User_Storage_UpdateCustomStat_incValue = do_Sint64(conn, tree, tvb, off, 'User_Storage_UpdateCustomStat_incValue', 'incValue')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[21] = {
				["name"] = "GetOwnContents",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, User_Storage_GetOwnContents_typeID = do_Uint32(conn, tree, tvb, off, 'User_Storage_GetOwnContents_typeID', 'typeID')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local User_Storage_GetOwnContents_results_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Storage_GetOwnContents_results_len, tvb(off,4))
	off = off + 4
	for i=1,User_Storage_GetOwnContents_results_len do
	off = do_UserContent(conn, subtree, tvb, off, 'User_Storage_GetOwnContents_results_item', 'results')

	end
	
 end
			},
			[22] = {
				["name"] = "GetMostPopularTags",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_UserContentKey(conn, tree, tvb, off, 'User_Storage_GetMostPopularTags_contentKey', 'contentKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local User_Storage_GetMostPopularTags_tags_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Storage_GetMostPopularTags_tags_len, tvb(off,4))
	off = off + 4
	for i=1,User_Storage_GetMostPopularTags_tags_len do
	off = do_WeightedTag(conn, subtree, tvb, off, 'User_Storage_GetMostPopularTags_tags_item', 'tags')

	end
	
off, User_Storage_GetMostPopularTags_totalNumberOfTaggings = do_Uint32(conn, tree, tvb, off, 'User_Storage_GetMostPopularTags_totalNumberOfTaggings', 'totalNumberOfTaggings')
 end
			},
			[23] = {
				["name"] = "GetTags",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_UserContentKey(conn, tree, tvb, off, 'User_Storage_GetTags_contentKey', 'contentKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local User_Storage_GetTags_tagIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Storage_GetTags_tagIds_len, tvb(off,4))
	off = off + 4
	for i=1,User_Storage_GetTags_tagIds_len do
	off, User_Storage_GetTags_tagIds_item = do_Uint32(conn, subtree, tvb, off, 'User_Storage_GetTags_tagIds_item', 'tagIds')

	end
	
 end
			},
			[24] = {
				["name"] = "TagContent",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_UserContentKey(conn, tree, tvb, off, 'User_Storage_TagContent_contentKey', 'contentKey')
local User_Storage_TagContent_newTagIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Storage_TagContent_newTagIds_len, tvb(off,4))
	off = off + 4
	for i=1,User_Storage_TagContent_newTagIds_len do
	off, User_Storage_TagContent_newTagIds_item = do_Uint32(conn, subtree, tvb, off, 'User_Storage_TagContent_newTagIds_item', 'newTagIds')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[25] = {
				["name"] = "SearchContentsByPlayers",
				["request"] = function (conn, tree, tvb)
	local off = 0
local User_Storage_SearchContentsByPlayers_pids_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Storage_SearchContentsByPlayers_pids_len, tvb(off,4))
	off = off + 4
	for i=1,User_Storage_SearchContentsByPlayers_pids_len do
	off, User_Storage_SearchContentsByPlayers_pids_item = do_Uint32(conn, subtree, tvb, off, 'User_Storage_SearchContentsByPlayers_pids_item', 'pids')

	end
	
off = do_UserStorageQuery(conn, tree, tvb, off, 'User_Storage_SearchContentsByPlayers_query', 'query')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local User_Storage_SearchContentsByPlayers_searchResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Storage_SearchContentsByPlayers_searchResults_len, tvb(off,4))
	off = off + 4
	for i=1,User_Storage_SearchContentsByPlayers_searchResults_len do
	off = do_UserContent(conn, subtree, tvb, off, 'User_Storage_SearchContentsByPlayers_searchResults_item', 'searchResults')

	end
	
 end
			},
			[26] = {
				["name"] = "SearchContentsByPlayersWithTotal",
				["request"] = function (conn, tree, tvb)
	local off = 0
local User_Storage_SearchContentsByPlayersWithTotal_pids_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Storage_SearchContentsByPlayersWithTotal_pids_len, tvb(off,4))
	off = off + 4
	for i=1,User_Storage_SearchContentsByPlayersWithTotal_pids_len do
	off, User_Storage_SearchContentsByPlayersWithTotal_pids_item = do_Uint32(conn, subtree, tvb, off, 'User_Storage_SearchContentsByPlayersWithTotal_pids_item', 'pids')

	end
	
off = do_UserStorageQuery(conn, tree, tvb, off, 'User_Storage_SearchContentsByPlayersWithTotal_query', 'query')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local User_Storage_SearchContentsByPlayersWithTotal_searchResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Storage_SearchContentsByPlayersWithTotal_searchResults_len, tvb(off,4))
	off = off + 4
	for i=1,User_Storage_SearchContentsByPlayersWithTotal_searchResults_len do
	off = do_UserContent(conn, subtree, tvb, off, 'User_Storage_SearchContentsByPlayersWithTotal_searchResults_item', 'searchResults')

	end
	
off, User_Storage_SearchContentsByPlayersWithTotal_totalResults = do_Uint32(conn, tree, tvb, off, 'User_Storage_SearchContentsByPlayersWithTotal_totalResults', 'totalResults')
 end
			},
			
		}
	})
add_proto(112,
	{
		["nested"] = false,
		["name"] = "Ranking",
		["methods"] = {
[1] = {
				["name"] = "UploadScore",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_RankingScoreData(conn, tree, tvb, off, 'Ranking_UploadScore_scoreData', 'scoreData')
off, Ranking_UploadScore_uniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_UploadScore_uniqueId', 'uniqueId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[2] = {
				["name"] = "DeleteScore",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_DeleteScore_category = do_Uint32(conn, tree, tvb, off, 'Ranking_DeleteScore_category', 'category')
off, Ranking_DeleteScore_uniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_DeleteScore_uniqueId', 'uniqueId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[3] = {
				["name"] = "DeleteAllScores",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_DeleteAllScores_uniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_DeleteAllScores_uniqueId', 'uniqueId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[4] = {
				["name"] = "UploadCommonData",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_UploadCommonData_commonData = do_Buffer(conn, tree, tvb, off, 'Ranking_UploadCommonData_commonData', 'commonData')
off, Ranking_UploadCommonData_uniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_UploadCommonData_uniqueId', 'uniqueId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[5] = {
				["name"] = "DeleteCommonData",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_DeleteCommonData_uniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_DeleteCommonData_uniqueId', 'uniqueId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[6] = {
				["name"] = "GetCommonData",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_GetCommonData_uniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_GetCommonData_uniqueId', 'uniqueId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_GetCommonData_commonData = do_Buffer(conn, tree, tvb, off, 'Ranking_GetCommonData_commonData', 'commonData')
 end
			},
			[7] = {
				["name"] = "ChangeAttributes",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_ChangeAttributes_category = do_Uint32(conn, tree, tvb, off, 'Ranking_ChangeAttributes_category', 'category')
off = do_RankingChangeAttributesParam(conn, tree, tvb, off, 'Ranking_ChangeAttributes_changeParam', 'changeParam')
off, Ranking_ChangeAttributes_uniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_ChangeAttributes_uniqueId', 'uniqueId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[8] = {
				["name"] = "ChangeAllAttributes",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_RankingChangeAttributesParam(conn, tree, tvb, off, 'Ranking_ChangeAllAttributes_changeParam', 'changeParam')
off, Ranking_ChangeAllAttributes_uniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_ChangeAllAttributes_uniqueId', 'uniqueId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[9] = {
				["name"] = "GetRanking",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_GetRanking_rankingMode = do_Uint8(conn, tree, tvb, off, 'Ranking_GetRanking_rankingMode', 'rankingMode')
off, Ranking_GetRanking_category = do_Uint32(conn, tree, tvb, off, 'Ranking_GetRanking_category', 'category')
off = do_RankingOrderParam(conn, tree, tvb, off, 'Ranking_GetRanking_orderParam', 'orderParam')
off, Ranking_GetRanking_uniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_GetRanking_uniqueId', 'uniqueId')
off, Ranking_GetRanking_principalId = do_PID(conn, tree, tvb, off, 'Ranking_GetRanking_principalId', 'principalId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_RankingResult(conn, tree, tvb, off, 'Ranking_GetRanking_pResult', 'pResult')
 end
			},
			[10] = {
				["name"] = "GetApproxOrder",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_GetApproxOrder_category = do_Uint32(conn, tree, tvb, off, 'Ranking_GetApproxOrder_category', 'category')
off = do_RankingOrderParam(conn, tree, tvb, off, 'Ranking_GetApproxOrder_orderParam', 'orderParam')
off, Ranking_GetApproxOrder_score = do_Uint32(conn, tree, tvb, off, 'Ranking_GetApproxOrder_score', 'score')
off, Ranking_GetApproxOrder_uniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_GetApproxOrder_uniqueId', 'uniqueId')
off, Ranking_GetApproxOrder_principalId = do_PID(conn, tree, tvb, off, 'Ranking_GetApproxOrder_principalId', 'principalId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_GetApproxOrder_pOrder = do_Uint32(conn, tree, tvb, off, 'Ranking_GetApproxOrder_pOrder', 'pOrder')
 end
			},
			[11] = {
				["name"] = "GetStats",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_GetStats_category = do_Uint32(conn, tree, tvb, off, 'Ranking_GetStats_category', 'category')
off = do_RankingOrderParam(conn, tree, tvb, off, 'Ranking_GetStats_orderParam', 'orderParam')
off, Ranking_GetStats_flags = do_Uint32(conn, tree, tvb, off, 'Ranking_GetStats_flags', 'flags')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_RankingStats(conn, tree, tvb, off, 'Ranking_GetStats_pStats', 'pStats')
 end
			},
			[12] = {
				["name"] = "GetRankingByPIDList",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Ranking_GetRankingByPIDList_principalIdList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ranking_GetRankingByPIDList_principalIdList_len, tvb(off,4))
	off = off + 4
	for i=1,Ranking_GetRankingByPIDList_principalIdList_len do
	off, Ranking_GetRankingByPIDList_principalIdList_item = do_PID(conn, subtree, tvb, off, 'Ranking_GetRankingByPIDList_principalIdList_item', 'principalIdList')

	end
	
off, Ranking_GetRankingByPIDList_rankingMode = do_Uint8(conn, tree, tvb, off, 'Ranking_GetRankingByPIDList_rankingMode', 'rankingMode')
off, Ranking_GetRankingByPIDList_category = do_Uint32(conn, tree, tvb, off, 'Ranking_GetRankingByPIDList_category', 'category')
off = do_RankingOrderParam(conn, tree, tvb, off, 'Ranking_GetRankingByPIDList_orderParam', 'orderParam')
off, Ranking_GetRankingByPIDList_uniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_GetRankingByPIDList_uniqueId', 'uniqueId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_RankingResult(conn, tree, tvb, off, 'Ranking_GetRankingByPIDList_pResult', 'pResult')
 end
			},
			[13] = {
				["name"] = "GetRankingByUniqueIdList",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Ranking_GetRankingByUniqueIdList_nexUniqueIdList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ranking_GetRankingByUniqueIdList_nexUniqueIdList_len, tvb(off,4))
	off = off + 4
	for i=1,Ranking_GetRankingByUniqueIdList_nexUniqueIdList_len do
	off, Ranking_GetRankingByUniqueIdList_nexUniqueIdList_item = do_Uint64(conn, subtree, tvb, off, 'Ranking_GetRankingByUniqueIdList_nexUniqueIdList_item', 'nexUniqueIdList')

	end
	
off, Ranking_GetRankingByUniqueIdList_rankingMode = do_Uint8(conn, tree, tvb, off, 'Ranking_GetRankingByUniqueIdList_rankingMode', 'rankingMode')
off, Ranking_GetRankingByUniqueIdList_category = do_Uint32(conn, tree, tvb, off, 'Ranking_GetRankingByUniqueIdList_category', 'category')
off = do_RankingOrderParam(conn, tree, tvb, off, 'Ranking_GetRankingByUniqueIdList_orderParam', 'orderParam')
off, Ranking_GetRankingByUniqueIdList_uniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_GetRankingByUniqueIdList_uniqueId', 'uniqueId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_RankingResult(conn, tree, tvb, off, 'Ranking_GetRankingByUniqueIdList_pResult', 'pResult')
 end
			},
			[14] = {
				["name"] = "GetCachedTopXRanking",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_GetCachedTopXRanking_category = do_Uint32(conn, tree, tvb, off, 'Ranking_GetCachedTopXRanking_category', 'category')
off = do_RankingOrderParam(conn, tree, tvb, off, 'Ranking_GetCachedTopXRanking_orderParam', 'orderParam')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_RankingCachedResult(conn, tree, tvb, off, 'Ranking_GetCachedTopXRanking_pResult', 'pResult')
 end
			},
			[15] = {
				["name"] = "GetCachedTopXRankings",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Ranking_GetCachedTopXRankings_categories_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ranking_GetCachedTopXRankings_categories_len, tvb(off,4))
	off = off + 4
	for i=1,Ranking_GetCachedTopXRankings_categories_len do
	off, Ranking_GetCachedTopXRankings_categories_item = do_Uint32(conn, subtree, tvb, off, 'Ranking_GetCachedTopXRankings_categories_item', 'categories')

	end
	
local Ranking_GetCachedTopXRankings_orderParams_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ranking_GetCachedTopXRankings_orderParams_len, tvb(off,4))
	off = off + 4
	for i=1,Ranking_GetCachedTopXRankings_orderParams_len do
	off = do_RankingOrderParam(conn, subtree, tvb, off, 'Ranking_GetCachedTopXRankings_orderParams_item', 'orderParams')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Ranking_GetCachedTopXRankings_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ranking_GetCachedTopXRankings_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Ranking_GetCachedTopXRankings_pResults_len do
	off = do_RankingCachedResult(conn, subtree, tvb, off, 'Ranking_GetCachedTopXRankings_pResults_item', 'pResults')

	end
	
 end
			},
			
		}
	})
add_proto(71,
	{
		["nested"] = false,
		["name"] = "Offline Game Notifications",
		["methods"] = {
[1] = {
				["name"] = "PollNotifications",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Offline_Game_Notifications_PollNotifications_listNotifications_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Offline_Game_Notifications_PollNotifications_listNotifications_len, tvb(off,4))
	off = off + 4
	for i=1,Offline_Game_Notifications_PollNotifications_listNotifications_len do
	off = do_NotificationEvent(conn, subtree, tvb, off, 'Offline_Game_Notifications_PollNotifications_listNotifications_item', 'listNotifications')

	end
	
off, Offline_Game_Notifications_PollNotifications_nbRemainingNotifs = do_Uint32(conn, tree, tvb, off, 'Offline_Game_Notifications_PollNotifications_nbRemainingNotifs', 'nbRemainingNotifs')
 end
			},
			[2] = {
				["name"] = "PollSpecificOfflineNotifications",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Offline_Game_Notifications_PollSpecificOfflineNotifications_majortype_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Offline_Game_Notifications_PollSpecificOfflineNotifications_majortype_len, tvb(off,4))
	off = off + 4
	for i=1,Offline_Game_Notifications_PollSpecificOfflineNotifications_majortype_len do
	off, Offline_Game_Notifications_PollSpecificOfflineNotifications_majortype_item = do_Uint32(conn, subtree, tvb, off, 'Offline_Game_Notifications_PollSpecificOfflineNotifications_majortype_item', 'majortype')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Offline_Game_Notifications_PollSpecificOfflineNotifications_listTimedNotification_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Offline_Game_Notifications_PollSpecificOfflineNotifications_listTimedNotification_len, tvb(off,4))
	off = off + 4
	for i=1,Offline_Game_Notifications_PollSpecificOfflineNotifications_listTimedNotification_len do
	off = do_TimedNotification(conn, subtree, tvb, off, 'Offline_Game_Notifications_PollSpecificOfflineNotifications_listTimedNotification_item', 'listTimedNotification')

	end
	
off, Offline_Game_Notifications_PollSpecificOfflineNotifications_ret = do_Uint32(conn, tree, tvb, off, 'Offline_Game_Notifications_PollSpecificOfflineNotifications_ret', 'ret')
 end
			},
			[3] = {
				["name"] = "PollAnyOfflineNotifications",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Offline_Game_Notifications_PollAnyOfflineNotifications_listTimedNotification_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Offline_Game_Notifications_PollAnyOfflineNotifications_listTimedNotification_len, tvb(off,4))
	off = off + 4
	for i=1,Offline_Game_Notifications_PollAnyOfflineNotifications_listTimedNotification_len do
	off = do_TimedNotification(conn, subtree, tvb, off, 'Offline_Game_Notifications_PollAnyOfflineNotifications_listTimedNotification_item', 'listTimedNotification')

	end
	
off, Offline_Game_Notifications_PollAnyOfflineNotifications_nbRemainingNotifs = do_Uint32(conn, tree, tvb, off, 'Offline_Game_Notifications_PollAnyOfflineNotifications_nbRemainingNotifs', 'nbRemainingNotifs')
 end
			},
			
		}
	})
add_proto(109,
	{
		["nested"] = true,
		["name"] = "Monster Hunter XX",
		["methods"] = {
[54] = {
				["name"] = "UpdateFriendUserProfile",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_FriendUserParam(conn, tree, tvb, off, 'Monster_Hunter_XX_UpdateFriendUserProfile_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[55] = {
				["name"] = "GetFriendUserProfiles",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Monster_Hunter_XX_GetFriendUserProfiles_pids_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Monster_Hunter_XX_GetFriendUserProfiles_pids_len, tvb(off,4))
	off = off + 4
	for i=1,Monster_Hunter_XX_GetFriendUserProfiles_pids_len do
	off, Monster_Hunter_XX_GetFriendUserProfiles_pids_item = do_Uint64(conn, subtree, tvb, off, 'Monster_Hunter_XX_GetFriendUserProfiles_pids_item', 'pids')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Monster_Hunter_XX_GetFriendUserProfiles_infos_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Monster_Hunter_XX_GetFriendUserProfiles_infos_len, tvb(off,4))
	off = off + 4
	for i=1,Monster_Hunter_XX_GetFriendUserProfiles_infos_len do
	off = do_FriendUserInfo(conn, subtree, tvb, off, 'Monster_Hunter_XX_GetFriendUserProfiles_infos_item', 'infos')

	end
	
 end
			},
			[56] = {
				["name"] = "GetFriends",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Monster_Hunter_XX_GetFriends_infos_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Monster_Hunter_XX_GetFriends_infos_len, tvb(off,4))
	off = off + 4
	for i=1,Monster_Hunter_XX_GetFriends_infos_len do
	off = do_FriendUserInfo(conn, subtree, tvb, off, 'Monster_Hunter_XX_GetFriends_infos_item', 'infos')

	end
	
 end
			},
			[57] = {
				["name"] = "AddFriends",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Monster_Hunter_XX_AddFriends_pids_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Monster_Hunter_XX_AddFriends_pids_len, tvb(off,4))
	off = off + 4
	for i=1,Monster_Hunter_XX_AddFriends_pids_len do
	off, Monster_Hunter_XX_AddFriends_pids_item = do_Uint64(conn, subtree, tvb, off, 'Monster_Hunter_XX_AddFriends_pids_item', 'pids')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[58] = {
				["name"] = "RemoveFriend",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Monster_Hunter_XX_RemoveFriend_pid = do_Uint64(conn, tree, tvb, off, 'Monster_Hunter_XX_RemoveFriend_pid', 'pid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[59] = {
				["name"] = "FindCommunityByOwner",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Monster_Hunter_XX_FindCommunityByOwner_id = do_Uint64(conn, tree, tvb, off, 'Monster_Hunter_XX_FindCommunityByOwner_id', 'id')
off = do_ResultRange(conn, tree, tvb, off, 'Monster_Hunter_XX_FindCommunityByOwner_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Monster_Hunter_XX_FindCommunityByOwner_lstCommunity_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Monster_Hunter_XX_FindCommunityByOwner_lstCommunity_len, tvb(off,4))
	off = off + 4
	for i=1,Monster_Hunter_XX_FindCommunityByOwner_lstCommunity_len do
	off = do_PersistentGathering(conn, subtree, tvb, off, 'Monster_Hunter_XX_FindCommunityByOwner_lstCommunity_item', 'lstCommunity')

	end
	
 end
			},
			
		}
	})
add_proto(112,
	{
		["nested"] = true,
		["name"] = "Splatoon 2",
		["methods"] = {
[16] = {
				["name"] = "UploadLeaguePoint",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_LeaguePointInfo(conn, tree, tvb, off, 'Splatoon_2_UploadLeaguePoint_info', 'info')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[17] = {
				["name"] = "GetLeagueResult",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Splatoon_2_GetLeagueResult_leagueId = do_String(conn, tree, tvb, off, 'Splatoon_2_GetLeagueResult_leagueId', 'leagueId')
off, Splatoon_2_GetLeagueResult_tagId = do_Uint64(conn, tree, tvb, off, 'Splatoon_2_GetLeagueResult_tagId', 'tagId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_LeagueResult(conn, tree, tvb, off, 'Splatoon_2_GetLeagueResult_result', 'result')
 end
			},
			[18] = {
				["name"] = "GetFestivalResult",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Splatoon_2_GetFestivalResult_festivalId = do_Uint32(conn, tree, tvb, off, 'Splatoon_2_GetFestivalResult_festivalId', 'festivalId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_FestivalResult(conn, tree, tvb, off, 'Splatoon_2_GetFestivalResult_result', 'result')
 end
			},
			[19] = {
				["name"] = "UploadFestivalVote",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_FestivalUploadVoteParam(conn, tree, tvb, off, 'Splatoon_2_UploadFestivalVote_uploadParam', 'uploadParam')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[20] = {
				["name"] = "UploadFestivalScore",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_FestivalUploadScoreParam(conn, tree, tvb, off, 'Splatoon_2_UploadFestivalScore_uploadParam', 'uploadParam')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[21] = {
				["name"] = "DeleteFestival",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Splatoon_2_DeleteFestival_festivalId = do_Uint32(conn, tree, tvb, off, 'Splatoon_2_DeleteFestival_festivalId', 'festivalId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[22] = {
				["name"] = "UploadXPower",
				["request"] = nil,
				["response"] = nil
			},
			[23] = {
				["name"] = "GetXPowerRanking",
				["request"] = nil,
				["response"] = nil
			},
			[24] = {
				["name"] = "UploadEventMatchResult",
				["request"] = nil,
				["response"] = nil
			},
			[25] = {
				["name"] = "GetEventMatchResult",
				["request"] = nil,
				["response"] = nil
			},
			[26] = {
				["name"] = "AcquireEventMatchRight",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	})
add_proto(101,
	{
		["nested"] = false,
		["name"] = "Friends 3DS",
		["methods"] = {
[1] = {
				["name"] = "UpdateProfile",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MyProfile(conn, tree, tvb, off, 'Friends_3DS_UpdateProfile_Profile_data', 'Profile data')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[2] = {
				["name"] = "UpdateMii",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_Mii(conn, tree, tvb, off, 'Friends_3DS_UpdateMii_Mii', 'Mii')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[3] = {
				["name"] = "UpdateMiiList",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MiiList(conn, tree, tvb, off, 'Friends_3DS_UpdateMiiList_Mii_list', 'Mii list')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[4] = {
				["name"] = "UpdatePlayedGames",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Friends_3DS_UpdatePlayedGames_Played_games_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_UpdatePlayedGames_Played_games_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_UpdatePlayedGames_Played_games_len do
	off = do_PlayedGame(conn, subtree, tvb, off, 'Friends_3DS_UpdatePlayedGames_Played_games_item', 'Played games')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[5] = {
				["name"] = "UpdatePreference",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_3DS_UpdatePreference_Unknown = do_Bool(conn, tree, tvb, off, 'Friends_3DS_UpdatePreference_Unknown', 'Unknown')
off, Friends_3DS_UpdatePreference_Unknown = do_Bool(conn, tree, tvb, off, 'Friends_3DS_UpdatePreference_Unknown', 'Unknown')
off, Friends_3DS_UpdatePreference_Unknown = do_Bool(conn, tree, tvb, off, 'Friends_3DS_UpdatePreference_Unknown', 'Unknown')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[6] = {
				["name"] = "GetFriendMii",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Friends_3DS_GetFriendMii_Friends_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_GetFriendMii_Friends_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_GetFriendMii_Friends_len do
	off = do_FriendMiiRequest(conn, subtree, tvb, off, 'Friends_3DS_GetFriendMii_Friends_item', 'Friends')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[7] = {
				["name"] = "GetFriendMiiList",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Friends_3DS_GetFriendMiiList_Friends_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_GetFriendMiiList_Friends_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_GetFriendMiiList_Friends_len do
	off = do_FriendMiiRequest(conn, subtree, tvb, off, 'Friends_3DS_GetFriendMiiList_Friends_item', 'Friends')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Friends_3DS_GetFriendMiiList_Mii_lists_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_GetFriendMiiList_Mii_lists_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_GetFriendMiiList_Mii_lists_len do
	off = do_FriendMiiList(conn, subtree, tvb, off, 'Friends_3DS_GetFriendMiiList_Mii_lists_item', 'Mii lists')

	end
	
 end
			},
			[8] = {
				["name"] = "IsActiveGame",
				["request"] = nil,
				["response"] = nil
			},
			[9] = {
				["name"] = "GetPrincipalIDByLocalFriendCode",
				["request"] = nil,
				["response"] = nil
			},
			[10] = {
				["name"] = "GetFriendRelationships",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Friends_3DS_GetFriendRelationships_Unknown_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_GetFriendRelationships_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_GetFriendRelationships_Unknown_len do
	off, Friends_3DS_GetFriendRelationships_Unknown_item = do_Uint32(conn, subtree, tvb, off, 'Friends_3DS_GetFriendRelationships_Unknown_item', 'Unknown')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Friends_3DS_GetFriendRelationships_Friend_relationships_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_GetFriendRelationships_Friend_relationships_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_GetFriendRelationships_Friend_relationships_len do
	off = do_FriendRelationship(conn, subtree, tvb, off, 'Friends_3DS_GetFriendRelationships_Friend_relationships_item', 'Friend relationships')

	end
	
 end
			},
			[11] = {
				["name"] = "AddFriendByPrincipalID",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_3DS_AddFriendByPrincipalID_Unknown = do_Uint64(conn, tree, tvb, off, 'Friends_3DS_AddFriendByPrincipalID_Unknown', 'Unknown')
off, Friends_3DS_AddFriendByPrincipalID_Principal_id = do_Uint32(conn, tree, tvb, off, 'Friends_3DS_AddFriendByPrincipalID_Principal_id', 'Principal id')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_FriendRelationship(conn, tree, tvb, off, 'Friends_3DS_AddFriendByPrincipalID_Friend_relationship', 'Friend relationship')
 end
			},
			[12] = {
				["name"] = "AddFriendBylstPrincipalID",
				["request"] = nil,
				["response"] = nil
			},
			[13] = {
				["name"] = "RemoveFriendByLocalFriendCode",
				["request"] = nil,
				["response"] = nil
			},
			[14] = {
				["name"] = "RemoveFriendByPrincipalID",
				["request"] = nil,
				["response"] = nil
			},
			[15] = {
				["name"] = "GetAllFriends",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Friends_3DS_GetAllFriends_Friend_relationships_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_GetAllFriends_Friend_relationships_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_GetAllFriends_Friend_relationships_len do
	off = do_FriendRelationship(conn, subtree, tvb, off, 'Friends_3DS_GetAllFriends_Friend_relationships_item', 'Friend relationships')

	end
	
 end
			},
			[16] = {
				["name"] = "UpdateBlackList",
				["request"] = nil,
				["response"] = nil
			},
			[17] = {
				["name"] = "SyncFriend",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_3DS_SyncFriend_Unknown = do_Uint64(conn, tree, tvb, off, 'Friends_3DS_SyncFriend_Unknown', 'Unknown')
local Friends_3DS_SyncFriend_Unknown_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_SyncFriend_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_SyncFriend_Unknown_len do
	off, Friends_3DS_SyncFriend_Unknown_item = do_Uint32(conn, subtree, tvb, off, 'Friends_3DS_SyncFriend_Unknown_item', 'Unknown')

	end
	
local Friends_3DS_SyncFriend_Unknown_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_SyncFriend_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_SyncFriend_Unknown_len do
	off, Friends_3DS_SyncFriend_Unknown_item = do_Uint64(conn, subtree, tvb, off, 'Friends_3DS_SyncFriend_Unknown_item', 'Unknown')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Friends_3DS_SyncFriend_Friend_list_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_SyncFriend_Friend_list_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_SyncFriend_Friend_list_len do
	off = do_FriendRelationship(conn, subtree, tvb, off, 'Friends_3DS_SyncFriend_Friend_list_item', 'Friend list')

	end
	
 end
			},
			[18] = {
				["name"] = "UpdatePresence",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_NintendoPresence(conn, tree, tvb, off, 'Friends_3DS_UpdatePresence_Presence_info', 'Presence info')
off, Friends_3DS_UpdatePresence_Unknown = do_Bool(conn, tree, tvb, off, 'Friends_3DS_UpdatePresence_Unknown', 'Unknown')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[19] = {
				["name"] = "UpdateFavoriteGameKey",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GameKey(conn, tree, tvb, off, 'Friends_3DS_UpdateFavoriteGameKey_Game_key', 'Game key')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[20] = {
				["name"] = "UpdateComment",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_3DS_UpdateComment_Comment = do_String(conn, tree, tvb, off, 'Friends_3DS_UpdateComment_Comment', 'Comment')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[21] = {
				["name"] = "UpdatePicture",
				["request"] = nil,
				["response"] = nil
			},
			[22] = {
				["name"] = "GetFriendPresence",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Friends_3DS_GetFriendPresence_Unknown_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_GetFriendPresence_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_GetFriendPresence_Unknown_len do
	off, Friends_3DS_GetFriendPresence_Unknown_item = do_Uint32(conn, subtree, tvb, off, 'Friends_3DS_GetFriendPresence_Unknown_item', 'Unknown')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Friends_3DS_GetFriendPresence_Friend_presence_list_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_GetFriendPresence_Friend_presence_list_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_GetFriendPresence_Friend_presence_list_len do
	off = do_FriendPresence(conn, subtree, tvb, off, 'Friends_3DS_GetFriendPresence_Friend_presence_list_item', 'Friend presence list')

	end
	
 end
			},
			[23] = {
				["name"] = "GetFriendComment",
				["request"] = nil,
				["response"] = nil
			},
			[24] = {
				["name"] = "GetFriendPicture",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Friends_3DS_GetFriendPicture_Unknown_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_GetFriendPicture_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_GetFriendPicture_Unknown_len do
	off, Friends_3DS_GetFriendPicture_Unknown_item = do_Uint32(conn, subtree, tvb, off, 'Friends_3DS_GetFriendPicture_Unknown_item', 'Unknown')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Friends_3DS_GetFriendPicture_Friend_pictures_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_GetFriendPicture_Friend_pictures_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_GetFriendPicture_Friend_pictures_len do
	off = do_FriendPicture(conn, subtree, tvb, off, 'Friends_3DS_GetFriendPicture_Friend_pictures_item', 'Friend pictures')

	end
	
 end
			},
			[25] = {
				["name"] = "GetFriendPersistentInfo",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Friends_3DS_GetFriendPersistentInfo_Unknown_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_GetFriendPersistentInfo_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_GetFriendPersistentInfo_Unknown_len do
	off, Friends_3DS_GetFriendPersistentInfo_Unknown_item = do_Uint32(conn, subtree, tvb, off, 'Friends_3DS_GetFriendPersistentInfo_Unknown_item', 'Unknown')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Friends_3DS_GetFriendPersistentInfo_Persistent_info_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_GetFriendPersistentInfo_Persistent_info_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_GetFriendPersistentInfo_Persistent_info_len do
	off = do_FriendPersistentInfo(conn, subtree, tvb, off, 'Friends_3DS_GetFriendPersistentInfo_Persistent_info_item', 'Persistent info')

	end
	
 end
			},
			[26] = {
				["name"] = "SendInvitation",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Friends_3DS_SendInvitation_Unknown_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_SendInvitation_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_SendInvitation_Unknown_len do
	off, Friends_3DS_SendInvitation_Unknown_item = do_Uint32(conn, subtree, tvb, off, 'Friends_3DS_SendInvitation_Unknown_item', 'Unknown')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			
		}
	})
add_proto(39,
	{
		["nested"] = false,
		["name"] = "Localization",
		["methods"] = {
[1] = {
				["name"] = "GetLocaleCode",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Localization_GetLocaleCode_localCode = do_String(conn, tree, tvb, off, 'Localization_GetLocaleCode_localCode', 'localCode')
 end
			},
			[2] = {
				["name"] = "SetLocaleCode",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Localization_SetLocaleCode_localCode = do_String(conn, tree, tvb, off, 'Localization_SetLocaleCode_localCode', 'localCode')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			
		}
	})
add_proto(3,
	{
		["nested"] = false,
		["name"] = "NAT Traversal",
		["methods"] = {
[1] = {
				["name"] = "RequestProbeInitiation",
				["request"] = function (conn, tree, tvb)
	local off = 0
local NAT_Traversal_RequestProbeInitiation_urlTargetList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.NAT_Traversal_RequestProbeInitiation_urlTargetList_len, tvb(off,4))
	off = off + 4
	for i=1,NAT_Traversal_RequestProbeInitiation_urlTargetList_len do
	off, NAT_Traversal_RequestProbeInitiation_urlTargetList_item = do_StationURL(conn, subtree, tvb, off, 'NAT_Traversal_RequestProbeInitiation_urlTargetList_item', 'urlTargetList')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[2] = {
				["name"] = "InitiateProbe",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, NAT_Traversal_InitiateProbe_urlStationToProbe = do_StationURL(conn, tree, tvb, off, 'NAT_Traversal_InitiateProbe_urlStationToProbe', 'urlStationToProbe')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[3] = {
				["name"] = "RequestProbeInitiationExt",
				["request"] = function (conn, tree, tvb)
	local off = 0
local NAT_Traversal_RequestProbeInitiationExt_urlTargetList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.NAT_Traversal_RequestProbeInitiationExt_urlTargetList_len, tvb(off,4))
	off = off + 4
	for i=1,NAT_Traversal_RequestProbeInitiationExt_urlTargetList_len do
	off, NAT_Traversal_RequestProbeInitiationExt_urlTargetList_item = do_StationURL(conn, subtree, tvb, off, 'NAT_Traversal_RequestProbeInitiationExt_urlTargetList_item', 'urlTargetList')

	end
	
off, NAT_Traversal_RequestProbeInitiationExt_urlStationToProbe = do_StationURL(conn, tree, tvb, off, 'NAT_Traversal_RequestProbeInitiationExt_urlStationToProbe', 'urlStationToProbe')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[4] = {
				["name"] = "ReportNATTraversalResult",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, NAT_Traversal_ReportNATTraversalResult_cid = do_Uint32(conn, tree, tvb, off, 'NAT_Traversal_ReportNATTraversalResult_cid', 'cid')
off, NAT_Traversal_ReportNATTraversalResult_result = do_Bool(conn, tree, tvb, off, 'NAT_Traversal_ReportNATTraversalResult_result', 'result')
off, NAT_Traversal_ReportNATTraversalResult_rtt = do_Uint32(conn, tree, tvb, off, 'NAT_Traversal_ReportNATTraversalResult_rtt', 'rtt')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[5] = {
				["name"] = "ReportNATProperties",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, NAT_Traversal_ReportNATProperties_natmapping = do_Uint32(conn, tree, tvb, off, 'NAT_Traversal_ReportNATProperties_natmapping', 'natmapping')
off, NAT_Traversal_ReportNATProperties_natfiltering = do_Uint32(conn, tree, tvb, off, 'NAT_Traversal_ReportNATProperties_natfiltering', 'natfiltering')
off, NAT_Traversal_ReportNATProperties_rtt = do_Uint32(conn, tree, tvb, off, 'NAT_Traversal_ReportNATProperties_rtt', 'rtt')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[6] = {
				["name"] = "GetRelaySignatureKey",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, NAT_Traversal_GetRelaySignatureKey_relayMode = do_Int32(conn, tree, tvb, off, 'NAT_Traversal_GetRelaySignatureKey_relayMode', 'relayMode')
off, NAT_Traversal_GetRelaySignatureKey_currentUTCTime = do_DateTime(conn, tree, tvb, off, 'NAT_Traversal_GetRelaySignatureKey_currentUTCTime', 'currentUTCTime')
off, NAT_Traversal_GetRelaySignatureKey_address = do_String(conn, tree, tvb, off, 'NAT_Traversal_GetRelaySignatureKey_address', 'address')
off, NAT_Traversal_GetRelaySignatureKey_port = do_Uint16(conn, tree, tvb, off, 'NAT_Traversal_GetRelaySignatureKey_port', 'port')
off, NAT_Traversal_GetRelaySignatureKey_relayAddressType = do_Int32(conn, tree, tvb, off, 'NAT_Traversal_GetRelaySignatureKey_relayAddressType', 'relayAddressType')
off, NAT_Traversal_GetRelaySignatureKey_gameServerID = do_Uint32(conn, tree, tvb, off, 'NAT_Traversal_GetRelaySignatureKey_gameServerID', 'gameServerID')
 end
			},
			[7] = {
				["name"] = "ReportNATTraversalResultDetail",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, NAT_Traversal_ReportNATTraversalResultDetail_cid = do_Uint32(conn, tree, tvb, off, 'NAT_Traversal_ReportNATTraversalResultDetail_cid', 'cid')
off, NAT_Traversal_ReportNATTraversalResultDetail_result = do_Bool(conn, tree, tvb, off, 'NAT_Traversal_ReportNATTraversalResultDetail_result', 'result')
off, NAT_Traversal_ReportNATTraversalResultDetail_detail = do_Int32(conn, tree, tvb, off, 'NAT_Traversal_ReportNATTraversalResultDetail_detail', 'detail')
off, NAT_Traversal_ReportNATTraversalResultDetail_rtt = do_Uint32(conn, tree, tvb, off, 'NAT_Traversal_ReportNATTraversalResultDetail_rtt', 'rtt')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			
		}
	})
add_proto(11,
	{
		["nested"] = false,
		["name"] = "Secure Connection",
		["methods"] = {
[1] = {
				["name"] = "Register",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Secure_Connection_Register_vecMyURLs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Secure_Connection_Register_vecMyURLs_len, tvb(off,4))
	off = off + 4
	for i=1,Secure_Connection_Register_vecMyURLs_len do
	off, Secure_Connection_Register_vecMyURLs_item = do_StationURL(conn, subtree, tvb, off, 'Secure_Connection_Register_vecMyURLs_item', 'vecMyURLs')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Secure_Connection_Register_retval = do_Result(conn, tree, tvb, off, 'Secure_Connection_Register_retval', 'retval')
off, Secure_Connection_Register_pidConnectionID = do_Uint32(conn, tree, tvb, off, 'Secure_Connection_Register_pidConnectionID', 'pidConnectionID')
off, Secure_Connection_Register_urlPublic = do_StationURL(conn, tree, tvb, off, 'Secure_Connection_Register_urlPublic', 'urlPublic')
 end
			},
			[2] = {
				["name"] = "RequestConnectionData",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Secure_Connection_RequestConnectionData_cidTarget = do_Uint32(conn, tree, tvb, off, 'Secure_Connection_RequestConnectionData_cidTarget', 'cidTarget')
off, Secure_Connection_RequestConnectionData_pidTarget = do_Uint32(conn, tree, tvb, off, 'Secure_Connection_RequestConnectionData_pidTarget', 'pidTarget')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Secure_Connection_RequestConnectionData_retval = do_Bool(conn, tree, tvb, off, 'Secure_Connection_RequestConnectionData_retval', 'retval')
local Secure_Connection_RequestConnectionData_pvecConnectionsData_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Secure_Connection_RequestConnectionData_pvecConnectionsData_len, tvb(off,4))
	off = off + 4
	for i=1,Secure_Connection_RequestConnectionData_pvecConnectionsData_len do
	off = do_ConnectionData(conn, subtree, tvb, off, 'Secure_Connection_RequestConnectionData_pvecConnectionsData_item', 'pvecConnectionsData')

	end
	
 end
			},
			[3] = {
				["name"] = "RequestUrls",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Secure_Connection_RequestUrls_cidTarget = do_Uint32(conn, tree, tvb, off, 'Secure_Connection_RequestUrls_cidTarget', 'cidTarget')
off, Secure_Connection_RequestUrls_pidTarget = do_Uint32(conn, tree, tvb, off, 'Secure_Connection_RequestUrls_pidTarget', 'pidTarget')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Secure_Connection_RequestUrls_retval = do_Bool(conn, tree, tvb, off, 'Secure_Connection_RequestUrls_retval', 'retval')
local Secure_Connection_RequestUrls_plstURLs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Secure_Connection_RequestUrls_plstURLs_len, tvb(off,4))
	off = off + 4
	for i=1,Secure_Connection_RequestUrls_plstURLs_len do
	off, Secure_Connection_RequestUrls_plstURLs_item = do_StationURL(conn, subtree, tvb, off, 'Secure_Connection_RequestUrls_plstURLs_item', 'plstURLs')

	end
	
 end
			},
			[4] = {
				["name"] = "RegisterEx",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Secure_Connection_RegisterEx_vecMyURLs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Secure_Connection_RegisterEx_vecMyURLs_len, tvb(off,4))
	off = off + 4
	for i=1,Secure_Connection_RegisterEx_vecMyURLs_len do
	off, Secure_Connection_RegisterEx_vecMyURLs_item = do_StationURL(conn, subtree, tvb, off, 'Secure_Connection_RegisterEx_vecMyURLs_item', 'vecMyURLs')

	end
	

		local Secure_Connection_RegisterEx_hCustomData_container = tree:add(F.Data, tvb(off, 0))
		Secure_Connection_RegisterEx_hCustomData_container:set_text("Data")
	off, Secure_Connection_RegisterEx_hCustomData_type_name = do_String(conn, Secure_Connection_RegisterEx_hCustomData_container, tvb, off, 'Secure_Connection_RegisterEx_hCustomData_type_name', 'hCustomData_type_name')

off, Secure_Connection_RegisterEx_hCustomData_len_plus_four = do_Uint32(conn, Secure_Connection_RegisterEx_hCustomData_container, tvb, off, 'Secure_Connection_RegisterEx_hCustomData_len_plus_four', 'hCustomData_len_plus_four')

off, Secure_Connection_RegisterEx_hCustomData_data_len = do_Uint32(conn, Secure_Connection_RegisterEx_hCustomData_container, tvb, off, 'Secure_Connection_RegisterEx_hCustomData_data_len', 'hCustomData_data_len')

local type_func = 'do_'..Secure_Connection_RegisterEx_hCustomData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Secure_Connection_RegisterEx_hCustomData_container, tvb, off, "Secure_Connection_RegisterEx_hCustomData_data", "hCustomData")
		else
			Secure_Connection_RegisterEx_hCustomData_container:add(F.Secure_Connection_RegisterEx_hCustomData_data_bytes, tvb(off, Secure_Connection_RegisterEx_hCustomData_len))
			off = off + Secure_Connection_RegisterEx_hCustomData_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[5] = {
				["name"] = "TestConnectivity",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[6] = {
				["name"] = "UpdateURLs",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Secure_Connection_UpdateURLs_vecMyURLs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Secure_Connection_UpdateURLs_vecMyURLs_len, tvb(off,4))
	off = off + 4
	for i=1,Secure_Connection_UpdateURLs_vecMyURLs_len do
	off, Secure_Connection_UpdateURLs_vecMyURLs_item = do_StationURL(conn, subtree, tvb, off, 'Secure_Connection_UpdateURLs_vecMyURLs_item', 'vecMyURLs')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[7] = {
				["name"] = "ReplaceURL",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Secure_Connection_ReplaceURL_target = do_StationURL(conn, tree, tvb, off, 'Secure_Connection_ReplaceURL_target', 'target')
off, Secure_Connection_ReplaceURL_url = do_StationURL(conn, tree, tvb, off, 'Secure_Connection_ReplaceURL_url', 'url')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[8] = {
				["name"] = "SendReport",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Secure_Connection_SendReport_reportId = do_Uint32(conn, tree, tvb, off, 'Secure_Connection_SendReport_reportId', 'reportId')
off, Secure_Connection_SendReport_reportData = do_qBuffer(conn, tree, tvb, off, 'Secure_Connection_SendReport_reportData', 'reportData')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			
		}
	})
add_proto(109,
	{
		["nested"] = false,
		["name"] = "Matchmake Extension",
		["methods"] = {
[1] = {
				["name"] = "CloseParticipation",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_CloseParticipation_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_CloseParticipation_gid', 'gid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[2] = {
				["name"] = "OpenParticipation",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_OpenParticipation_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_OpenParticipation_gid', 'gid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[3] = {
				["name"] = "AutoMatchmake_Postpone",
				["request"] = function (conn, tree, tvb)
	local off = 0

		local Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_container = tree:add(F.Data, tvb(off, 0))
		Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_container:set_text("Data<Gathering>")
	off, Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_type_name = do_String(conn, Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_type_name', 'anyGathering_type_name')

off, Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_len_plus_four = do_Uint32(conn, Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_len_plus_four', 'anyGathering_len_plus_four')

off, Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_data_len = do_Uint32(conn, Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_data_len', 'anyGathering_data_len')

local type_func = 'do_'..Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_container, tvb, off, "Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_data", "anyGathering")
		else
			Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_container:add(F.Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_data_bytes, tvb(off, Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_len))
			off = off + Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_data_len
		end
	
off, Matchmake_Extension_AutoMatchmake_Postpone_strMessage = do_String(conn, tree, tvb, off, 'Matchmake_Extension_AutoMatchmake_Postpone_strMessage', 'strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0

		local Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_container = tree:add(F.Data, tvb(off, 0))
		Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_container:set_text("Data<Gathering>")
	off, Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_type_name = do_String(conn, Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_type_name', 'joinedGathering_type_name')

off, Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_len_plus_four = do_Uint32(conn, Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_len_plus_four', 'joinedGathering_len_plus_four')

off, Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_data_len = do_Uint32(conn, Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_data_len', 'joinedGathering_data_len')

local type_func = 'do_'..Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_container, tvb, off, "Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_data", "joinedGathering")
		else
			Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_container:add(F.Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_data_bytes, tvb(off, Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_len))
			off = off + Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_data_len
		end
	
 end
			},
			[4] = {
				["name"] = "BrowseMatchmakeSession",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeSessionSearchCriteria(conn, tree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSession_searchCriteria', 'searchCriteria')
off = do_ResultRange(conn, tree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSession_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_BrowseMatchmakeSession_lstGathering_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_BrowseMatchmakeSession_lstGathering_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_BrowseMatchmakeSession_lstGathering_len do
	
		local Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_container = subtree:add(F.Data, tvb(off, 0))
		Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_container:set_text("Data<Gathering>")
	off, Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_type_name = do_String(conn, Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_container, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_type_name', 'lstGathering_type_name')

off, Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_len_plus_four = do_Uint32(conn, Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_container, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_len_plus_four', 'lstGathering_len_plus_four')

off, Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_data_len = do_Uint32(conn, Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_container, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_data_len', 'lstGathering_data_len')

local type_func = 'do_'..Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_container, tvb, off, "Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_data", "lstGathering")
		else
			Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_container:add(F.Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_data_bytes, tvb(off, Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_len))
			off = off + Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_data_len
		end
	

	end
	
 end
			},
			[5] = {
				["name"] = "BrowseMatchmakeSessionWithHostUrls",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeSessionSearchCriteria(conn, tree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_searchCriteria', 'searchCriteria')
off = do_ResultRange(conn, tree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_len do
	
		local Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_container = subtree:add(F.Data, tvb(off, 0))
		Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_container:set_text("Data<Gathering>")
	off, Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_type_name = do_String(conn, Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_container, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_type_name', 'lstGathering_type_name')

off, Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_len_plus_four = do_Uint32(conn, Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_container, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_len_plus_four', 'lstGathering_len_plus_four')

off, Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_data_len = do_Uint32(conn, Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_container, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_data_len', 'lstGathering_data_len')

local type_func = 'do_'..Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_container, tvb, off, "Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_data", "lstGathering")
		else
			Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_container:add(F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_data_bytes, tvb(off, Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_len))
			off = off + Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_data_len
		end
	

	end
	
local Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGatheringUrls_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGatheringUrls_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGatheringUrls_len do
	off = do_GatheringURLs(conn, subtree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGatheringUrls_item', 'lstGatheringUrls')

	end
	
 end
			},
			[6] = {
				["name"] = "CreateMatchmakeSession",
				["request"] = function (conn, tree, tvb)
	local off = 0

		local Matchmake_Extension_CreateMatchmakeSession_anyGathering_container = tree:add(F.Data, tvb(off, 0))
		Matchmake_Extension_CreateMatchmakeSession_anyGathering_container:set_text("Data<Gathering>")
	off, Matchmake_Extension_CreateMatchmakeSession_anyGathering_type_name = do_String(conn, Matchmake_Extension_CreateMatchmakeSession_anyGathering_container, tvb, off, 'Matchmake_Extension_CreateMatchmakeSession_anyGathering_type_name', 'anyGathering_type_name')

off, Matchmake_Extension_CreateMatchmakeSession_anyGathering_len_plus_four = do_Uint32(conn, Matchmake_Extension_CreateMatchmakeSession_anyGathering_container, tvb, off, 'Matchmake_Extension_CreateMatchmakeSession_anyGathering_len_plus_four', 'anyGathering_len_plus_four')

off, Matchmake_Extension_CreateMatchmakeSession_anyGathering_data_len = do_Uint32(conn, Matchmake_Extension_CreateMatchmakeSession_anyGathering_container, tvb, off, 'Matchmake_Extension_CreateMatchmakeSession_anyGathering_data_len', 'anyGathering_data_len')

local type_func = 'do_'..Matchmake_Extension_CreateMatchmakeSession_anyGathering_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Matchmake_Extension_CreateMatchmakeSession_anyGathering_container, tvb, off, "Matchmake_Extension_CreateMatchmakeSession_anyGathering_data", "anyGathering")
		else
			Matchmake_Extension_CreateMatchmakeSession_anyGathering_container:add(F.Matchmake_Extension_CreateMatchmakeSession_anyGathering_data_bytes, tvb(off, Matchmake_Extension_CreateMatchmakeSession_anyGathering_len))
			off = off + Matchmake_Extension_CreateMatchmakeSession_anyGathering_data_len
		end
	
off, Matchmake_Extension_CreateMatchmakeSession_strMessage = do_String(conn, tree, tvb, off, 'Matchmake_Extension_CreateMatchmakeSession_strMessage', 'strMessage')
off, Matchmake_Extension_CreateMatchmakeSession_participationCount = do_Uint16(conn, tree, tvb, off, 'Matchmake_Extension_CreateMatchmakeSession_participationCount', 'participationCount')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_CreateMatchmakeSession_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_CreateMatchmakeSession_gid', 'gid')
off, Matchmake_Extension_CreateMatchmakeSession_sessionKey = do_Buffer(conn, tree, tvb, off, 'Matchmake_Extension_CreateMatchmakeSession_sessionKey', 'sessionKey')
 end
			},
			[7] = {
				["name"] = "JoinMatchmakeSession",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_JoinMatchmakeSession_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_JoinMatchmakeSession_gid', 'gid')
off, Matchmake_Extension_JoinMatchmakeSession_strMessage = do_String(conn, tree, tvb, off, 'Matchmake_Extension_JoinMatchmakeSession_strMessage', 'strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_JoinMatchmakeSession_sessionKey = do_Buffer(conn, tree, tvb, off, 'Matchmake_Extension_JoinMatchmakeSession_sessionKey', 'sessionKey')
 end
			},
			[8] = {
				["name"] = "ModifyCurrentGameAttribute",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_ModifyCurrentGameAttribute_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_ModifyCurrentGameAttribute_gid', 'gid')
off, Matchmake_Extension_ModifyCurrentGameAttribute_attribIndex = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_ModifyCurrentGameAttribute_attribIndex', 'attribIndex')
off, Matchmake_Extension_ModifyCurrentGameAttribute_newValue = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_ModifyCurrentGameAttribute_newValue', 'newValue')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[9] = {
				["name"] = "UpdateNotificationData",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_UpdateNotificationData_uiType = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_UpdateNotificationData_uiType', 'uiType')
off, Matchmake_Extension_UpdateNotificationData_uiParam1 = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_UpdateNotificationData_uiParam1', 'uiParam1')
off, Matchmake_Extension_UpdateNotificationData_uiParam2 = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_UpdateNotificationData_uiParam2', 'uiParam2')
off, Matchmake_Extension_UpdateNotificationData_strParam = do_String(conn, tree, tvb, off, 'Matchmake_Extension_UpdateNotificationData_strParam', 'strParam')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_UpdateNotificationData_uiType = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_UpdateNotificationData_uiType', 'uiType')
off, Matchmake_Extension_UpdateNotificationData_uiParam1 = do_Uint64(conn, tree, tvb, off, 'Matchmake_Extension_UpdateNotificationData_uiParam1', 'uiParam1')
off, Matchmake_Extension_UpdateNotificationData_uiParam2 = do_Uint64(conn, tree, tvb, off, 'Matchmake_Extension_UpdateNotificationData_uiParam2', 'uiParam2')
off, Matchmake_Extension_UpdateNotificationData_strParam = do_String(conn, tree, tvb, off, 'Matchmake_Extension_UpdateNotificationData_strParam', 'strParam')
 end
			},
			[10] = {
				["name"] = "GetFriendNotificationData",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_GetFriendNotificationData_uiType = do_Sint32(conn, tree, tvb, off, 'Matchmake_Extension_GetFriendNotificationData_uiType', 'uiType')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_GetFriendNotificationData_dataList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_GetFriendNotificationData_dataList_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_GetFriendNotificationData_dataList_len do
	off = do_NotificationEvent(conn, subtree, tvb, off, 'Matchmake_Extension_GetFriendNotificationData_dataList_item', 'dataList')

	end
	
 end
			},
			[11] = {
				["name"] = "UpdateApplicationBuffer",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_UpdateApplicationBuffer_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_UpdateApplicationBuffer_gid', 'gid')
off, Matchmake_Extension_UpdateApplicationBuffer_applicationBuffer = do_Buffer(conn, tree, tvb, off, 'Matchmake_Extension_UpdateApplicationBuffer_applicationBuffer', 'applicationBuffer')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[12] = {
				["name"] = "UpdateMatchmakeSessionAttribute",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_UpdateMatchmakeSessionAttribute_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_UpdateMatchmakeSessionAttribute_gid', 'gid')
local Matchmake_Extension_UpdateMatchmakeSessionAttribute_attribs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_UpdateMatchmakeSessionAttribute_attribs_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_UpdateMatchmakeSessionAttribute_attribs_len do
	off, Matchmake_Extension_UpdateMatchmakeSessionAttribute_attribs_item = do_Uint32(conn, subtree, tvb, off, 'Matchmake_Extension_UpdateMatchmakeSessionAttribute_attribs_item', 'attribs')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[13] = {
				["name"] = "GetlstFriendNotificationData",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_GetlstFriendNotificationData_lstTypes_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_GetlstFriendNotificationData_lstTypes_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_GetlstFriendNotificationData_lstTypes_len do
	off, Matchmake_Extension_GetlstFriendNotificationData_lstTypes_item = do_Uint32(conn, subtree, tvb, off, 'Matchmake_Extension_GetlstFriendNotificationData_lstTypes_item', 'lstTypes')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_GetlstFriendNotificationData_dataList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_GetlstFriendNotificationData_dataList_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_GetlstFriendNotificationData_dataList_len do
	off = do_NotificationEvent(conn, subtree, tvb, off, 'Matchmake_Extension_GetlstFriendNotificationData_dataList_item', 'dataList')

	end
	
 end
			},
			[14] = {
				["name"] = "UpdateMatchmakeSession",
				["request"] = function (conn, tree, tvb)
	local off = 0

		local Matchmake_Extension_UpdateMatchmakeSession_anyGathering_container = tree:add(F.Data, tvb(off, 0))
		Matchmake_Extension_UpdateMatchmakeSession_anyGathering_container:set_text("Data<Gathering>")
	off, Matchmake_Extension_UpdateMatchmakeSession_anyGathering_type_name = do_String(conn, Matchmake_Extension_UpdateMatchmakeSession_anyGathering_container, tvb, off, 'Matchmake_Extension_UpdateMatchmakeSession_anyGathering_type_name', 'anyGathering_type_name')

off, Matchmake_Extension_UpdateMatchmakeSession_anyGathering_len_plus_four = do_Uint32(conn, Matchmake_Extension_UpdateMatchmakeSession_anyGathering_container, tvb, off, 'Matchmake_Extension_UpdateMatchmakeSession_anyGathering_len_plus_four', 'anyGathering_len_plus_four')

off, Matchmake_Extension_UpdateMatchmakeSession_anyGathering_data_len = do_Uint32(conn, Matchmake_Extension_UpdateMatchmakeSession_anyGathering_container, tvb, off, 'Matchmake_Extension_UpdateMatchmakeSession_anyGathering_data_len', 'anyGathering_data_len')

local type_func = 'do_'..Matchmake_Extension_UpdateMatchmakeSession_anyGathering_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Matchmake_Extension_UpdateMatchmakeSession_anyGathering_container, tvb, off, "Matchmake_Extension_UpdateMatchmakeSession_anyGathering_data", "anyGathering")
		else
			Matchmake_Extension_UpdateMatchmakeSession_anyGathering_container:add(F.Matchmake_Extension_UpdateMatchmakeSession_anyGathering_data_bytes, tvb(off, Matchmake_Extension_UpdateMatchmakeSession_anyGathering_len))
			off = off + Matchmake_Extension_UpdateMatchmakeSession_anyGathering_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[15] = {
				["name"] = "AutoMatchmakeWithSearchCriteria_Postpone",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_lstSearchCriteria_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_lstSearchCriteria_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_lstSearchCriteria_len do
	off = do_MatchmakeSessionSearchCriteria(conn, subtree, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_lstSearchCriteria_item', 'lstSearchCriteria')

	end
	

		local Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_container = tree:add(F.Data, tvb(off, 0))
		Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_container:set_text("Data<Gathering>")
	off, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_type_name = do_String(conn, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_type_name', 'anyGathering_type_name')

off, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_len_plus_four = do_Uint32(conn, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_len_plus_four', 'anyGathering_len_plus_four')

off, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_data_len = do_Uint32(conn, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_data_len', 'anyGathering_data_len')

local type_func = 'do_'..Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_container, tvb, off, "Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_data", "anyGathering")
		else
			Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_container:add(F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_data_bytes, tvb(off, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_len))
			off = off + Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_data_len
		end
	
off, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_strMessage = do_String(conn, tree, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_strMessage', 'strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0

		local Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_container = tree:add(F.Data, tvb(off, 0))
		Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_container:set_text("Data<Gathering>")
	off, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_type_name = do_String(conn, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_type_name', 'joinedGathering_type_name')

off, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_len_plus_four = do_Uint32(conn, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_len_plus_four', 'joinedGathering_len_plus_four')

off, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_data_len = do_Uint32(conn, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_data_len', 'joinedGathering_data_len')

local type_func = 'do_'..Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_container, tvb, off, "Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_data", "joinedGathering")
		else
			Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_container:add(F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_data_bytes, tvb(off, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_len))
			off = off + Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_data_len
		end
	
 end
			},
			[16] = {
				["name"] = "GetPlayingSession",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_GetPlayingSession_lstPid_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_GetPlayingSession_lstPid_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_GetPlayingSession_lstPid_len do
	off, Matchmake_Extension_GetPlayingSession_lstPid_item = do_PID(conn, subtree, tvb, off, 'Matchmake_Extension_GetPlayingSession_lstPid_item', 'lstPid')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_GetPlayingSession_lstPlayingSession_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_GetPlayingSession_lstPlayingSession_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_GetPlayingSession_lstPlayingSession_len do
	off = do_PlayingSession(conn, subtree, tvb, off, 'Matchmake_Extension_GetPlayingSession_lstPlayingSession_item', 'lstPlayingSession')

	end
	
 end
			},
			[17] = {
				["name"] = "CreateCommunity",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_PersistentGathering(conn, tree, tvb, off, 'Matchmake_Extension_CreateCommunity_community', 'community')
off, Matchmake_Extension_CreateCommunity_strMessage = do_String(conn, tree, tvb, off, 'Matchmake_Extension_CreateCommunity_strMessage', 'strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_CreateCommunity_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_CreateCommunity_gid', 'gid')
 end
			},
			[18] = {
				["name"] = "UpdateCommunity",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_PersistentGathering(conn, tree, tvb, off, 'Matchmake_Extension_UpdateCommunity_community', 'community')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[19] = {
				["name"] = "JoinCommunity",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_JoinCommunity_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_JoinCommunity_gid', 'gid')
off, Matchmake_Extension_JoinCommunity_strMessage = do_String(conn, tree, tvb, off, 'Matchmake_Extension_JoinCommunity_strMessage', 'strMessage')
off, Matchmake_Extension_JoinCommunity_strPassword = do_String(conn, tree, tvb, off, 'Matchmake_Extension_JoinCommunity_strPassword', 'strPassword')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[20] = {
				["name"] = "FindCommunityByGatheringId",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_FindCommunityByGatheringId_lstGid_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_FindCommunityByGatheringId_lstGid_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_FindCommunityByGatheringId_lstGid_len do
	off, Matchmake_Extension_FindCommunityByGatheringId_lstGid_item = do_Uint32(conn, subtree, tvb, off, 'Matchmake_Extension_FindCommunityByGatheringId_lstGid_item', 'lstGid')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_FindCommunityByGatheringId_lstCommunity_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_FindCommunityByGatheringId_lstCommunity_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_FindCommunityByGatheringId_lstCommunity_len do
	off = do_PersistentGathering(conn, subtree, tvb, off, 'Matchmake_Extension_FindCommunityByGatheringId_lstCommunity_item', 'lstCommunity')

	end
	
 end
			},
			[21] = {
				["name"] = "FindOfficialCommunity",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_FindOfficialCommunity_isAvailableOnly = do_Bool(conn, tree, tvb, off, 'Matchmake_Extension_FindOfficialCommunity_isAvailableOnly', 'isAvailableOnly')
off = do_ResultRange(conn, tree, tvb, off, 'Matchmake_Extension_FindOfficialCommunity_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_FindOfficialCommunity_lstCommunity_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_FindOfficialCommunity_lstCommunity_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_FindOfficialCommunity_lstCommunity_len do
	off = do_PersistentGathering(conn, subtree, tvb, off, 'Matchmake_Extension_FindOfficialCommunity_lstCommunity_item', 'lstCommunity')

	end
	
 end
			},
			[22] = {
				["name"] = "FindCommunityByParticipant",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_FindCommunityByParticipant_pid = do_PID(conn, tree, tvb, off, 'Matchmake_Extension_FindCommunityByParticipant_pid', 'pid')
off = do_ResultRange(conn, tree, tvb, off, 'Matchmake_Extension_FindCommunityByParticipant_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_FindCommunityByParticipant_lstCommunity_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_FindCommunityByParticipant_lstCommunity_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_FindCommunityByParticipant_lstCommunity_len do
	off = do_PersistentGathering(conn, subtree, tvb, off, 'Matchmake_Extension_FindCommunityByParticipant_lstCommunity_item', 'lstCommunity')

	end
	
 end
			},
			[23] = {
				["name"] = "UpdatePrivacySetting",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_UpdatePrivacySetting_onlineStatus = do_Bool(conn, tree, tvb, off, 'Matchmake_Extension_UpdatePrivacySetting_onlineStatus', 'onlineStatus')
off, Matchmake_Extension_UpdatePrivacySetting_participationCommunity = do_Bool(conn, tree, tvb, off, 'Matchmake_Extension_UpdatePrivacySetting_participationCommunity', 'participationCommunity')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[24] = {
				["name"] = "GetMyBlockList",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_GetMyBlockList_lstPrincipalId_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_GetMyBlockList_lstPrincipalId_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_GetMyBlockList_lstPrincipalId_len do
	off, Matchmake_Extension_GetMyBlockList_lstPrincipalId_item = do_PID(conn, subtree, tvb, off, 'Matchmake_Extension_GetMyBlockList_lstPrincipalId_item', 'lstPrincipalId')

	end
	
 end
			},
			[25] = {
				["name"] = "AddToBlockList",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_AddToBlockList_lstPrincipalId_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_AddToBlockList_lstPrincipalId_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_AddToBlockList_lstPrincipalId_len do
	off, Matchmake_Extension_AddToBlockList_lstPrincipalId_item = do_PID(conn, subtree, tvb, off, 'Matchmake_Extension_AddToBlockList_lstPrincipalId_item', 'lstPrincipalId')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[26] = {
				["name"] = "RemoveFromBlockList",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_RemoveFromBlockList_lstPrincipalId_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_RemoveFromBlockList_lstPrincipalId_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_RemoveFromBlockList_lstPrincipalId_len do
	off, Matchmake_Extension_RemoveFromBlockList_lstPrincipalId_item = do_PID(conn, subtree, tvb, off, 'Matchmake_Extension_RemoveFromBlockList_lstPrincipalId_item', 'lstPrincipalId')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[27] = {
				["name"] = "ClearMyBlockList",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[28] = {
				["name"] = "ReportViolation",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_ReportViolation_pid = do_PID(conn, tree, tvb, off, 'Matchmake_Extension_ReportViolation_pid', 'pid')
off, Matchmake_Extension_ReportViolation_userName = do_String(conn, tree, tvb, off, 'Matchmake_Extension_ReportViolation_userName', 'userName')
off, Matchmake_Extension_ReportViolation_violationCode = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_ReportViolation_violationCode', 'violationCode')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[29] = {
				["name"] = "IsViolationUser",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_IsViolationUser_flag = do_Bool(conn, tree, tvb, off, 'Matchmake_Extension_IsViolationUser_flag', 'flag')
off, Matchmake_Extension_IsViolationUser_score = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_IsViolationUser_score', 'score')
 end
			},
			[30] = {
				["name"] = "JoinMatchmakeSessionEx",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_JoinMatchmakeSessionEx_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_JoinMatchmakeSessionEx_gid', 'gid')
off, Matchmake_Extension_JoinMatchmakeSessionEx_strMessage = do_String(conn, tree, tvb, off, 'Matchmake_Extension_JoinMatchmakeSessionEx_strMessage', 'strMessage')
off, Matchmake_Extension_JoinMatchmakeSessionEx_dontCareMyBlockList = do_Bool(conn, tree, tvb, off, 'Matchmake_Extension_JoinMatchmakeSessionEx_dontCareMyBlockList', 'dontCareMyBlockList')
off, Matchmake_Extension_JoinMatchmakeSessionEx_participationCount = do_Uint16(conn, tree, tvb, off, 'Matchmake_Extension_JoinMatchmakeSessionEx_participationCount', 'participationCount')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_JoinMatchmakeSessionEx_sessionKey = do_Buffer(conn, tree, tvb, off, 'Matchmake_Extension_JoinMatchmakeSessionEx_sessionKey', 'sessionKey')
 end
			},
			[31] = {
				["name"] = "GetSimplePlayingSession",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_GetSimplePlayingSession_lstPrincipalId_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_GetSimplePlayingSession_lstPrincipalId_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_GetSimplePlayingSession_lstPrincipalId_len do
	off, Matchmake_Extension_GetSimplePlayingSession_lstPrincipalId_item = do_PID(conn, subtree, tvb, off, 'Matchmake_Extension_GetSimplePlayingSession_lstPrincipalId_item', 'lstPrincipalId')

	end
	
off, Matchmake_Extension_GetSimplePlayingSession_includeLoginUser = do_Bool(conn, tree, tvb, off, 'Matchmake_Extension_GetSimplePlayingSession_includeLoginUser', 'includeLoginUser')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_GetSimplePlayingSession_lstSimplePlayingSession_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_GetSimplePlayingSession_lstSimplePlayingSession_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_GetSimplePlayingSession_lstSimplePlayingSession_len do
	off = do_SimplePlayingSession(conn, subtree, tvb, off, 'Matchmake_Extension_GetSimplePlayingSession_lstSimplePlayingSession_item', 'lstSimplePlayingSession')

	end
	
 end
			},
			[32] = {
				["name"] = "GetSimpleCommunity",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_GetSimpleCommunity_gatheringIdList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_GetSimpleCommunity_gatheringIdList_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_GetSimpleCommunity_gatheringIdList_len do
	off, Matchmake_Extension_GetSimpleCommunity_gatheringIdList_item = do_Uint32(conn, subtree, tvb, off, 'Matchmake_Extension_GetSimpleCommunity_gatheringIdList_item', 'gatheringIdList')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_GetSimpleCommunity_lstSimpleCommunityList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_GetSimpleCommunity_lstSimpleCommunityList_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_GetSimpleCommunity_lstSimpleCommunityList_len do
	off = do_SimpleCommunity(conn, subtree, tvb, off, 'Matchmake_Extension_GetSimpleCommunity_lstSimpleCommunityList_item', 'lstSimpleCommunityList')

	end
	
 end
			},
			[33] = {
				["name"] = "AutoMatchmakeWithGatheringId_Postpone",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_lstGid_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_lstGid_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_lstGid_len do
	off, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_lstGid_item = do_Uint32(conn, subtree, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_lstGid_item', 'lstGid')

	end
	

		local Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_container = tree:add(F.Data, tvb(off, 0))
		Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_container:set_text("Data<Gathering>")
	off, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_type_name = do_String(conn, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_type_name', 'anyGathering_type_name')

off, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_len_plus_four = do_Uint32(conn, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_len_plus_four', 'anyGathering_len_plus_four')

off, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_data_len = do_Uint32(conn, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_data_len', 'anyGathering_data_len')

local type_func = 'do_'..Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_container, tvb, off, "Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_data", "anyGathering")
		else
			Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_container:add(F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_data_bytes, tvb(off, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_len))
			off = off + Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_data_len
		end
	
off, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_strMessage = do_String(conn, tree, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_strMessage', 'strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0

		local Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_container = tree:add(F.Data, tvb(off, 0))
		Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_container:set_text("Data<Gathering>")
	off, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_type_name = do_String(conn, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_type_name', 'joinedGathering_type_name')

off, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_len_plus_four = do_Uint32(conn, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_len_plus_four', 'joinedGathering_len_plus_four')

off, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_data_len = do_Uint32(conn, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_data_len', 'joinedGathering_data_len')

local type_func = 'do_'..Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_container, tvb, off, "Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_data", "joinedGathering")
		else
			Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_container:add(F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_data_bytes, tvb(off, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_len))
			off = off + Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_data_len
		end
	
 end
			},
			[34] = {
				["name"] = "UpdateProgressScore",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_UpdateProgressScore_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_UpdateProgressScore_gid', 'gid')
off, Matchmake_Extension_UpdateProgressScore_progressScore = do_Uint8(conn, tree, tvb, off, 'Matchmake_Extension_UpdateProgressScore_progressScore', 'progressScore')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[35] = {
				["name"] = "DebugNotifyEvent",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_DebugNotifyEvent_pid = do_PID(conn, tree, tvb, off, 'Matchmake_Extension_DebugNotifyEvent_pid', 'pid')
off, Matchmake_Extension_DebugNotifyEvent_mainType = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_DebugNotifyEvent_mainType', 'mainType')
off, Matchmake_Extension_DebugNotifyEvent_subType = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_DebugNotifyEvent_subType', 'subType')
off, Matchmake_Extension_DebugNotifyEvent_param1 = do_Uint64(conn, tree, tvb, off, 'Matchmake_Extension_DebugNotifyEvent_param1', 'param1')
off, Matchmake_Extension_DebugNotifyEvent_param2 = do_Uint64(conn, tree, tvb, off, 'Matchmake_Extension_DebugNotifyEvent_param2', 'param2')
off, Matchmake_Extension_DebugNotifyEvent_stringParam = do_String(conn, tree, tvb, off, 'Matchmake_Extension_DebugNotifyEvent_stringParam', 'stringParam')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[36] = {
				["name"] = "GenerateMatchmakeSessionSystemPassword",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_GenerateMatchmakeSessionSystemPassword_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_GenerateMatchmakeSessionSystemPassword_gid', 'gid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_GenerateMatchmakeSessionSystemPassword_password = do_String(conn, tree, tvb, off, 'Matchmake_Extension_GenerateMatchmakeSessionSystemPassword_password', 'password')
 end
			},
			[37] = {
				["name"] = "ClearMatchmakeSessionSystemPassword",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_ClearMatchmakeSessionSystemPassword_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_ClearMatchmakeSessionSystemPassword_gid', 'gid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[38] = {
				["name"] = "CreateMatchmakeSessionWithParam",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_CreateMatchmakeSessionParam(conn, tree, tvb, off, 'Matchmake_Extension_CreateMatchmakeSessionWithParam_createMatchmakeSessionParam', 'createMatchmakeSessionParam')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeSession(conn, tree, tvb, off, 'Matchmake_Extension_CreateMatchmakeSessionWithParam_joinedMatchmakeSession', 'joinedMatchmakeSession')
 end
			},
			[39] = {
				["name"] = "JoinMatchmakeSessionWithParam",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_JoinMatchmakeSessionParam(conn, tree, tvb, off, 'Matchmake_Extension_JoinMatchmakeSessionWithParam_joinMatchmakeSessionParam', 'joinMatchmakeSessionParam')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeSession(conn, tree, tvb, off, 'Matchmake_Extension_JoinMatchmakeSessionWithParam_joinedMatchmakeSession', 'joinedMatchmakeSession')
 end
			},
			[40] = {
				["name"] = "AutoMatchmakeWithParam_Postpone",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_AutoMatchmakeParam(conn, tree, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithParam_Postpone_autoMatchmakeParam', 'autoMatchmakeParam')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeSession(conn, tree, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithParam_Postpone_joinedMatchmakeSession', 'joinedMatchmakeSession')
 end
			},
			[41] = {
				["name"] = "FindMatchmakeSessionByGatheringIdDetail",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_FindMatchmakeSessionByGatheringIdDetail_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_FindMatchmakeSessionByGatheringIdDetail_gid', 'gid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeSession(conn, tree, tvb, off, 'Matchmake_Extension_FindMatchmakeSessionByGatheringIdDetail_matchmakeSession', 'matchmakeSession')
 end
			},
			[42] = {
				["name"] = "BrowseMatchmakeSessionNoHolder",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeSessionSearchCriteria(conn, tree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionNoHolder_searchCriteria', 'searchCriteria')
off = do_ResultRange(conn, tree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionNoHolder_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_BrowseMatchmakeSessionNoHolder_lstMatchmakeSession_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_BrowseMatchmakeSessionNoHolder_lstMatchmakeSession_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_BrowseMatchmakeSessionNoHolder_lstMatchmakeSession_len do
	off = do_MatchmakeSession(conn, subtree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionNoHolder_lstMatchmakeSession_item', 'lstMatchmakeSession')

	end
	
 end
			},
			[43] = {
				["name"] = "BrowseMatchmakeSessionWithHostUrlsNoHolder",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeSessionSearchCriteria(conn, tree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_searchCriteria', 'searchCriteria')
off = do_ResultRange(conn, tree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_lstMatchmakeSession_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_lstMatchmakeSession_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_lstMatchmakeSession_len do
	off = do_MatchmakeSession(conn, subtree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_lstMatchmakeSession_item', 'lstMatchmakeSession')

	end
	
local Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_lstGatheringUrls_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_lstGatheringUrls_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_lstGatheringUrls_len do
	off = do_GatheringURLs(conn, subtree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_lstGatheringUrls_item', 'lstGatheringUrls')

	end
	
 end
			},
			[44] = {
				["name"] = "UpdateMatchmakeSessionPart",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_UpdateMatchmakeSessionParam(conn, tree, tvb, off, 'Matchmake_Extension_UpdateMatchmakeSessionPart_updateMatchmakeSessionParam', 'updateMatchmakeSessionParam')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[45] = {
				["name"] = "RequestMatchmaking",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_AutoMatchmakeParam(conn, tree, tvb, off, 'Matchmake_Extension_RequestMatchmaking_autoMatchmakeParam', 'autoMatchmakeParam')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_RequestMatchmaking_requestId = do_Uint64(conn, tree, tvb, off, 'Matchmake_Extension_RequestMatchmaking_requestId', 'requestId')
 end
			},
			[46] = {
				["name"] = "WithdrawMatchmaking",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_WithdrawMatchmaking_requestId = do_Uint64(conn, tree, tvb, off, 'Matchmake_Extension_WithdrawMatchmaking_requestId', 'requestId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[47] = {
				["name"] = "WithdrawMatchmakingAll",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[48] = {
				["name"] = "FindMatchmakeSessionByGatheringId",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstGid_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstGid_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstGid_len do
	off, Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstGid_item = do_Uint32(conn, subtree, tvb, off, 'Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstGid_item', 'lstGid')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstMatchmakeSession_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstMatchmakeSession_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstMatchmakeSession_len do
	off = do_MatchmakeSession(conn, subtree, tvb, off, 'Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstMatchmakeSession_item', 'lstMatchmakeSession')

	end
	
 end
			},
			[49] = {
				["name"] = "FindMatchmakeSessionBySingleGatheringId",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_FindMatchmakeSessionBySingleGatheringId_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_FindMatchmakeSessionBySingleGatheringId_gid', 'gid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeSession(conn, tree, tvb, off, 'Matchmake_Extension_FindMatchmakeSessionBySingleGatheringId_matchmakeSession', 'matchmakeSession')
 end
			},
			[50] = {
				["name"] = "FindMatchmakeSessionByOwner",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_FindMatchmakeSessionByOwner_id = do_PID(conn, tree, tvb, off, 'Matchmake_Extension_FindMatchmakeSessionByOwner_id', 'id')
off = do_ResultRange(conn, tree, tvb, off, 'Matchmake_Extension_FindMatchmakeSessionByOwner_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_FindMatchmakeSessionByOwner_lstMatchmakeSession_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_FindMatchmakeSessionByOwner_lstMatchmakeSession_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_FindMatchmakeSessionByOwner_lstMatchmakeSession_len do
	off = do_MatchmakeSession(conn, subtree, tvb, off, 'Matchmake_Extension_FindMatchmakeSessionByOwner_lstMatchmakeSession_item', 'lstMatchmakeSession')

	end
	
 end
			},
			[51] = {
				["name"] = "FindMatchmakeSessionByParticipant",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_FindMatchmakeSessionByParticipantParam(conn, tree, tvb, off, 'Matchmake_Extension_FindMatchmakeSessionByParticipant_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_FindMatchmakeSessionByParticipant_lstSession_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_FindMatchmakeSessionByParticipant_lstSession_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_FindMatchmakeSessionByParticipant_lstSession_len do
	off = do_FindMatchmakeSessionByParticipantResult(conn, subtree, tvb, off, 'Matchmake_Extension_FindMatchmakeSessionByParticipant_lstSession_item', 'lstSession')

	end
	
 end
			},
			[52] = {
				["name"] = "BrowseMatchmakeSessionNoHolderNoResultRange",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeSessionSearchCriteria(conn, tree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionNoHolderNoResultRange_searchCriteria', 'searchCriteria')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_BrowseMatchmakeSessionNoHolderNoResultRange_lstMatchmakeSession_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_BrowseMatchmakeSessionNoHolderNoResultRange_lstMatchmakeSession_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_BrowseMatchmakeSessionNoHolderNoResultRange_lstMatchmakeSession_len do
	off = do_MatchmakeSession(conn, subtree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionNoHolderNoResultRange_lstMatchmakeSession_item', 'lstMatchmakeSession')

	end
	
 end
			},
			[53] = {
				["name"] = "BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeSessionSearchCriteria(conn, tree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_searchCriteria', 'searchCriteria')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_lstMatchmakeSession_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_lstMatchmakeSession_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_lstMatchmakeSession_len do
	off = do_MatchmakeSession(conn, subtree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_lstMatchmakeSession_item', 'lstMatchmakeSession')

	end
	
local Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_lstGatheringUrls_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_lstGatheringUrls_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_lstGatheringUrls_len do
	off = do_GatheringURLs(conn, subtree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_lstGatheringUrls_item', 'lstGatheringUrls')

	end
	
 end
			},
			[54] = {
				["name"] = "FindCommunityByOwner",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	})
add_proto(24,
	{
		["nested"] = false,
		["name"] = "Persistent Store",
		["methods"] = {
[1] = {
				["name"] = "FindByGroup",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Persistent_Store_FindByGroup_uiGroup = do_Uint32(conn, tree, tvb, off, 'Persistent_Store_FindByGroup_uiGroup', 'uiGroup')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Persistent_Store_FindByGroup_lstTags_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Persistent_Store_FindByGroup_lstTags_len, tvb(off,4))
	off = off + 4
	for i=1,Persistent_Store_FindByGroup_lstTags_len do
	off, Persistent_Store_FindByGroup_lstTags_item = do_String(conn, subtree, tvb, off, 'Persistent_Store_FindByGroup_lstTags_item', 'lstTags')

	end
	
 end
			},
			[2] = {
				["name"] = "InsertItem",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Persistent_Store_InsertItem_uiGroup = do_Uint32(conn, tree, tvb, off, 'Persistent_Store_InsertItem_uiGroup', 'uiGroup')
off, Persistent_Store_InsertItem_strTag = do_String(conn, tree, tvb, off, 'Persistent_Store_InsertItem_strTag', 'strTag')
off, Persistent_Store_InsertItem_bufData = do_Buffer(conn, tree, tvb, off, 'Persistent_Store_InsertItem_bufData', 'bufData')
off, Persistent_Store_InsertItem_bReplace = do_Bool(conn, tree, tvb, off, 'Persistent_Store_InsertItem_bReplace', 'bReplace')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Persistent_Store_InsertItem_bResult = do_Bool(conn, tree, tvb, off, 'Persistent_Store_InsertItem_bResult', 'bResult')
 end
			},
			[3] = {
				["name"] = "RemoveItem",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Persistent_Store_RemoveItem_uiGroup = do_Uint32(conn, tree, tvb, off, 'Persistent_Store_RemoveItem_uiGroup', 'uiGroup')
off, Persistent_Store_RemoveItem_strTag = do_String(conn, tree, tvb, off, 'Persistent_Store_RemoveItem_strTag', 'strTag')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Persistent_Store_RemoveItem_bResult = do_Bool(conn, tree, tvb, off, 'Persistent_Store_RemoveItem_bResult', 'bResult')
 end
			},
			[4] = {
				["name"] = "GetItem",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Persistent_Store_GetItem_uiGroup = do_Uint32(conn, tree, tvb, off, 'Persistent_Store_GetItem_uiGroup', 'uiGroup')
off, Persistent_Store_GetItem_strTag = do_String(conn, tree, tvb, off, 'Persistent_Store_GetItem_strTag', 'strTag')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Persistent_Store_GetItem_bufData = do_Buffer(conn, tree, tvb, off, 'Persistent_Store_GetItem_bufData', 'bufData')
off, Persistent_Store_GetItem_bResult = do_Bool(conn, tree, tvb, off, 'Persistent_Store_GetItem_bResult', 'bResult')
 end
			},
			[5] = {
				["name"] = "InsertCustomItem",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Persistent_Store_InsertCustomItem_uiGroup = do_Uint32(conn, tree, tvb, off, 'Persistent_Store_InsertCustomItem_uiGroup', 'uiGroup')
off, Persistent_Store_InsertCustomItem_strTag = do_String(conn, tree, tvb, off, 'Persistent_Store_InsertCustomItem_strTag', 'strTag')

		local Persistent_Store_InsertCustomItem_hData_container = tree:add(F.Data, tvb(off, 0))
		Persistent_Store_InsertCustomItem_hData_container:set_text("Data")
	off, Persistent_Store_InsertCustomItem_hData_type_name = do_String(conn, Persistent_Store_InsertCustomItem_hData_container, tvb, off, 'Persistent_Store_InsertCustomItem_hData_type_name', 'hData_type_name')

off, Persistent_Store_InsertCustomItem_hData_len_plus_four = do_Uint32(conn, Persistent_Store_InsertCustomItem_hData_container, tvb, off, 'Persistent_Store_InsertCustomItem_hData_len_plus_four', 'hData_len_plus_four')

off, Persistent_Store_InsertCustomItem_hData_data_len = do_Uint32(conn, Persistent_Store_InsertCustomItem_hData_container, tvb, off, 'Persistent_Store_InsertCustomItem_hData_data_len', 'hData_data_len')

local type_func = 'do_'..Persistent_Store_InsertCustomItem_hData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Persistent_Store_InsertCustomItem_hData_container, tvb, off, "Persistent_Store_InsertCustomItem_hData_data", "hData")
		else
			Persistent_Store_InsertCustomItem_hData_container:add(F.Persistent_Store_InsertCustomItem_hData_data_bytes, tvb(off, Persistent_Store_InsertCustomItem_hData_len))
			off = off + Persistent_Store_InsertCustomItem_hData_data_len
		end
	
off, Persistent_Store_InsertCustomItem_bReplace = do_Bool(conn, tree, tvb, off, 'Persistent_Store_InsertCustomItem_bReplace', 'bReplace')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[6] = {
				["name"] = "GetCustomItem",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Persistent_Store_GetCustomItem_uiGroup = do_Uint32(conn, tree, tvb, off, 'Persistent_Store_GetCustomItem_uiGroup', 'uiGroup')
off, Persistent_Store_GetCustomItem_strTag = do_String(conn, tree, tvb, off, 'Persistent_Store_GetCustomItem_strTag', 'strTag')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0

		local Persistent_Store_GetCustomItem_hData_container = tree:add(F.Data, tvb(off, 0))
		Persistent_Store_GetCustomItem_hData_container:set_text("Data")
	off, Persistent_Store_GetCustomItem_hData_type_name = do_String(conn, Persistent_Store_GetCustomItem_hData_container, tvb, off, 'Persistent_Store_GetCustomItem_hData_type_name', 'hData_type_name')

off, Persistent_Store_GetCustomItem_hData_len_plus_four = do_Uint32(conn, Persistent_Store_GetCustomItem_hData_container, tvb, off, 'Persistent_Store_GetCustomItem_hData_len_plus_four', 'hData_len_plus_four')

off, Persistent_Store_GetCustomItem_hData_data_len = do_Uint32(conn, Persistent_Store_GetCustomItem_hData_container, tvb, off, 'Persistent_Store_GetCustomItem_hData_data_len', 'hData_data_len')

local type_func = 'do_'..Persistent_Store_GetCustomItem_hData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Persistent_Store_GetCustomItem_hData_container, tvb, off, "Persistent_Store_GetCustomItem_hData_data", "hData")
		else
			Persistent_Store_GetCustomItem_hData_container:add(F.Persistent_Store_GetCustomItem_hData_data_bytes, tvb(off, Persistent_Store_GetCustomItem_hData_len))
			off = off + Persistent_Store_GetCustomItem_hData_data_len
		end
	
 end
			},
			[7] = {
				["name"] = "FindItemsBySQLQuery",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Persistent_Store_FindItemsBySQLQuery_uiGroup = do_Uint32(conn, tree, tvb, off, 'Persistent_Store_FindItemsBySQLQuery_uiGroup', 'uiGroup')
off, Persistent_Store_FindItemsBySQLQuery_strTag = do_String(conn, tree, tvb, off, 'Persistent_Store_FindItemsBySQLQuery_strTag', 'strTag')
off, Persistent_Store_FindItemsBySQLQuery_strQuery = do_String(conn, tree, tvb, off, 'Persistent_Store_FindItemsBySQLQuery_strQuery', 'strQuery')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Persistent_Store_FindItemsBySQLQuery_lstData_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Persistent_Store_FindItemsBySQLQuery_lstData_len, tvb(off,4))
	off = off + 4
	for i=1,Persistent_Store_FindItemsBySQLQuery_lstData_len do
	
		local Persistent_Store_FindItemsBySQLQuery_lstData_item_container = subtree:add(F.Data, tvb(off, 0))
		Persistent_Store_FindItemsBySQLQuery_lstData_item_container:set_text("Data")
	off, Persistent_Store_FindItemsBySQLQuery_lstData_item_type_name = do_String(conn, Persistent_Store_FindItemsBySQLQuery_lstData_item_container, tvb, off, 'Persistent_Store_FindItemsBySQLQuery_lstData_item_type_name', 'lstData_type_name')

off, Persistent_Store_FindItemsBySQLQuery_lstData_item_len_plus_four = do_Uint32(conn, Persistent_Store_FindItemsBySQLQuery_lstData_item_container, tvb, off, 'Persistent_Store_FindItemsBySQLQuery_lstData_item_len_plus_four', 'lstData_len_plus_four')

off, Persistent_Store_FindItemsBySQLQuery_lstData_item_data_len = do_Uint32(conn, Persistent_Store_FindItemsBySQLQuery_lstData_item_container, tvb, off, 'Persistent_Store_FindItemsBySQLQuery_lstData_item_data_len', 'lstData_data_len')

local type_func = 'do_'..Persistent_Store_FindItemsBySQLQuery_lstData_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Persistent_Store_FindItemsBySQLQuery_lstData_item_container, tvb, off, "Persistent_Store_FindItemsBySQLQuery_lstData_item_data", "lstData")
		else
			Persistent_Store_FindItemsBySQLQuery_lstData_item_container:add(F.Persistent_Store_FindItemsBySQLQuery_lstData_item_data_bytes, tvb(off, Persistent_Store_FindItemsBySQLQuery_lstData_item_len))
			off = off + Persistent_Store_FindItemsBySQLQuery_lstData_item_data_len
		end
	

	end
	
 end
			},
			
		}
	})
add_proto(10,
	{
		["nested"] = false,
		["name"] = "Ticket Granting",
		["methods"] = {
[1] = {
				["name"] = "Login",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ticket_Granting_Login_strUserName = do_String(conn, tree, tvb, off, 'Ticket_Granting_Login_strUserName', 'strUserName')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Ticket_Granting_Login_retval = do_Result(conn, tree, tvb, off, 'Ticket_Granting_Login_retval', 'retval')
off, Ticket_Granting_Login_pidPrincipal = do_PID(conn, tree, tvb, off, 'Ticket_Granting_Login_pidPrincipal', 'pidPrincipal')
off, Ticket_Granting_Login_pbufResponse = do_Buffer(conn, tree, tvb, off, 'Ticket_Granting_Login_pbufResponse', 'pbufResponse')
off = do_RVConnectionData(conn, tree, tvb, off, 'Ticket_Granting_Login_pConnectionData', 'pConnectionData')
off, Ticket_Granting_Login_strReturnMsg = do_String(conn, tree, tvb, off, 'Ticket_Granting_Login_strReturnMsg', 'strReturnMsg')
 end
			},
			[2] = {
				["name"] = "LoginEx",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ticket_Granting_LoginEx_strUserName = do_String(conn, tree, tvb, off, 'Ticket_Granting_LoginEx_strUserName', 'strUserName')

		local Ticket_Granting_LoginEx_oExtraData_container = tree:add(F.Data, tvb(off, 0))
		Ticket_Granting_LoginEx_oExtraData_container:set_text("Any<AuthenticationInfo>")
	off, Ticket_Granting_LoginEx_oExtraData_type_name = do_String(conn, Ticket_Granting_LoginEx_oExtraData_container, tvb, off, 'Ticket_Granting_LoginEx_oExtraData_type_name', 'oExtraData_type_name')

off, Ticket_Granting_LoginEx_oExtraData_len_plus_four = do_Uint32(conn, Ticket_Granting_LoginEx_oExtraData_container, tvb, off, 'Ticket_Granting_LoginEx_oExtraData_len_plus_four', 'oExtraData_len_plus_four')

off, Ticket_Granting_LoginEx_oExtraData_data_len = do_Uint32(conn, Ticket_Granting_LoginEx_oExtraData_container, tvb, off, 'Ticket_Granting_LoginEx_oExtraData_data_len', 'oExtraData_data_len')

local type_func = 'do_'..Ticket_Granting_LoginEx_oExtraData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Ticket_Granting_LoginEx_oExtraData_container, tvb, off, "Ticket_Granting_LoginEx_oExtraData_data", "oExtraData")
		else
			Ticket_Granting_LoginEx_oExtraData_container:add(F.Ticket_Granting_LoginEx_oExtraData_data_bytes, tvb(off, Ticket_Granting_LoginEx_oExtraData_len))
			off = off + Ticket_Granting_LoginEx_oExtraData_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Ticket_Granting_LoginEx_retval = do_Result(conn, tree, tvb, off, 'Ticket_Granting_LoginEx_retval', 'retval')
off, Ticket_Granting_LoginEx_pidPrincipal = do_PID(conn, tree, tvb, off, 'Ticket_Granting_LoginEx_pidPrincipal', 'pidPrincipal')
off, Ticket_Granting_LoginEx_pbufResponse = do_Buffer(conn, tree, tvb, off, 'Ticket_Granting_LoginEx_pbufResponse', 'pbufResponse')
off = do_RVConnectionData(conn, tree, tvb, off, 'Ticket_Granting_LoginEx_pConnectionData', 'pConnectionData')
off, Ticket_Granting_LoginEx_strReturnMsg = do_String(conn, tree, tvb, off, 'Ticket_Granting_LoginEx_strReturnMsg', 'strReturnMsg')
 end
			},
			[3] = {
				["name"] = "RequestTicket",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ticket_Granting_RequestTicket_idSource = do_PID(conn, tree, tvb, off, 'Ticket_Granting_RequestTicket_idSource', 'idSource')
off, Ticket_Granting_RequestTicket_idTarget = do_PID(conn, tree, tvb, off, 'Ticket_Granting_RequestTicket_idTarget', 'idTarget')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Ticket_Granting_RequestTicket_retval = do_Result(conn, tree, tvb, off, 'Ticket_Granting_RequestTicket_retval', 'retval')
off, Ticket_Granting_RequestTicket_bufResponse = do_Buffer(conn, tree, tvb, off, 'Ticket_Granting_RequestTicket_bufResponse', 'bufResponse')
 end
			},
			[4] = {
				["name"] = "GetPID",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ticket_Granting_GetPID_strUserName = do_String(conn, tree, tvb, off, 'Ticket_Granting_GetPID_strUserName', 'strUserName')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Ticket_Granting_GetPID_retval = do_PID(conn, tree, tvb, off, 'Ticket_Granting_GetPID_retval', 'retval')
 end
			},
			[5] = {
				["name"] = "GetName",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ticket_Granting_GetName_id = do_PID(conn, tree, tvb, off, 'Ticket_Granting_GetName_id', 'id')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Ticket_Granting_GetName_retval = do_String(conn, tree, tvb, off, 'Ticket_Granting_GetName_retval', 'retval')
 end
			},
			[6] = {
				["name"] = "LoginWithContext",
				["request"] = function (conn, tree, tvb)
	local off = 0

		local Ticket_Granting_LoginWithContext_loginData_container = tree:add(F.Data, tvb(off, 0))
		Ticket_Granting_LoginWithContext_loginData_container:set_text("Any")
	off, Ticket_Granting_LoginWithContext_loginData_type_name = do_String(conn, Ticket_Granting_LoginWithContext_loginData_container, tvb, off, 'Ticket_Granting_LoginWithContext_loginData_type_name', 'loginData_type_name')

off, Ticket_Granting_LoginWithContext_loginData_len_plus_four = do_Uint32(conn, Ticket_Granting_LoginWithContext_loginData_container, tvb, off, 'Ticket_Granting_LoginWithContext_loginData_len_plus_four', 'loginData_len_plus_four')

off, Ticket_Granting_LoginWithContext_loginData_data_len = do_Uint32(conn, Ticket_Granting_LoginWithContext_loginData_container, tvb, off, 'Ticket_Granting_LoginWithContext_loginData_data_len', 'loginData_data_len')

local type_func = 'do_'..Ticket_Granting_LoginWithContext_loginData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Ticket_Granting_LoginWithContext_loginData_container, tvb, off, "Ticket_Granting_LoginWithContext_loginData_data", "loginData")
		else
			Ticket_Granting_LoginWithContext_loginData_container:add(F.Ticket_Granting_LoginWithContext_loginData_data_bytes, tvb(off, Ticket_Granting_LoginWithContext_loginData_len))
			off = off + Ticket_Granting_LoginWithContext_loginData_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Ticket_Granting_LoginWithContext_retval = do_Result(conn, tree, tvb, off, 'Ticket_Granting_LoginWithContext_retval', 'retval')
off, Ticket_Granting_LoginWithContext_pidPrincipal = do_PID(conn, tree, tvb, off, 'Ticket_Granting_LoginWithContext_pidPrincipal', 'pidPrincipal')
off, Ticket_Granting_LoginWithContext_pbufResponse = do_Buffer(conn, tree, tvb, off, 'Ticket_Granting_LoginWithContext_pbufResponse', 'pbufResponse')
off = do_RVConnectionData(conn, tree, tvb, off, 'Ticket_Granting_LoginWithContext_pConnectionData', 'pConnectionData')
 end
			},
			
		}
	})
add_proto(100,
	{
		["nested"] = false,
		["name"] = "Nintendo Notifications",
		["methods"] = {
[1] = {
				["name"] = "ProcessNintendoNotificationEvent",
				["request"] = nil,
				["response"] = nil
			},
			[2] = {
				["name"] = "ProcessNintendoNotificationEvent",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	})
add_proto(123,
	{
		["nested"] = false,
		["name"] = "AA User",
		["methods"] = {
[1] = {
				["name"] = "RegisterApplication",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, AA_User_RegisterApplication_Title_id = do_Uint64(conn, tree, tvb, off, 'AA_User_RegisterApplication_Title_id', 'Title id')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[2] = {
				["name"] = "UnregisterApplication",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, AA_User_UnregisterApplication_Title_id = do_Uint64(conn, tree, tvb, off, 'AA_User_UnregisterApplication_Title_id', 'Title id')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[3] = {
				["name"] = "SetApplicationInfo",
				["request"] = function (conn, tree, tvb)
	local off = 0
local AA_User_SetApplicationInfo_Application_info_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.AA_User_SetApplicationInfo_Application_info_len, tvb(off,4))
	off = off + 4
	for i=1,AA_User_SetApplicationInfo_Application_info_len do
	off = do_ApplicationInfo(conn, subtree, tvb, off, 'AA_User_SetApplicationInfo_Application_info_item', 'Application info')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[4] = {
				["name"] = "GetApplicationInfo",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local AA_User_GetApplicationInfo_Application_info_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.AA_User_GetApplicationInfo_Application_info_len, tvb(off,4))
	off = off + 4
	for i=1,AA_User_GetApplicationInfo_Application_info_len do
	off = do_ApplicationInfo(conn, subtree, tvb, off, 'AA_User_GetApplicationInfo_Application_info_item', 'Application info')

	end
	
 end
			},
			
		}
	})
add_proto(109,
	{
		["nested"] = true,
		["name"] = "SSBU",
		["methods"] = {
[54] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[55] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[56] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[57] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[58] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[59] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	})
add_proto(0x73,
	{
		["nested"] = true,
		["name"] = "SMM 2",
		["methods"] = {
[47] = {
				["name"] = "RegisterUser",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_RegisterUserParam(conn, tree, tvb, off, 'SMM_2_RegisterUser_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[48] = {
				["name"] = "GetUsers",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GetUsersParam(conn, tree, tvb, off, 'SMM_2_GetUsers_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type (in list) UserInfo]]
local SMM_2_GetUsers_Result_codes_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_2_GetUsers_Result_codes_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_2_GetUsers_Result_codes_len do
	off, SMM_2_GetUsers_Result_codes_item = do_Result(conn, subtree, tvb, off, 'SMM_2_GetUsers_Result_codes_item', 'Result codes')

	end
	
 end
			},
			[49] = {
				["name"] = "SyncUserProfile",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_SyncUserProfileParam(conn, tree, tvb, off, 'SMM_2_SyncUserProfile_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_SyncUserProfileResult(conn, tree, tvb, off, 'SMM_2_SyncUserProfile_Result', 'Result')
 end
			},
			[50] = {
				["name"] = "SearchUsersUserPoint",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_SearchUsersUserPointParam(conn, tree, tvb, off, 'SMM_2_SearchUsersUserPoint_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type (in list) UserInfo]]
local SMM_2_SearchUsersUserPoint_Ranks_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_2_SearchUsersUserPoint_Ranks_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_2_SearchUsersUserPoint_Ranks_len do
	off, SMM_2_SearchUsersUserPoint_Ranks_item = do_Uint32(conn, subtree, tvb, off, 'SMM_2_SearchUsersUserPoint_Ranks_item', 'Ranks')

	end
	
off, SMM_2_SearchUsersUserPoint_Result = do_Bool(conn, tree, tvb, off, 'SMM_2_SearchUsersUserPoint_Result', 'Result')
 end
			},
			[51] = {
				["name"] = "SearchUsersEndlessMode",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_SearchUsersEndlessModeParam(conn, tree, tvb, off, 'SMM_2_SearchUsersEndlessMode_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type (in list) UserInfo]]
local SMM_2_SearchUsersEndlessMode_Unknown_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_2_SearchUsersEndlessMode_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_2_SearchUsersEndlessMode_Unknown_len do
	off, SMM_2_SearchUsersEndlessMode_Unknown_item = do_Uint32(conn, subtree, tvb, off, 'SMM_2_SearchUsersEndlessMode_Unknown_item', 'Unknown')

	end
	
off, SMM_2_SearchUsersEndlessMode_Unknown = do_Bool(conn, tree, tvb, off, 'SMM_2_SearchUsersEndlessMode_Unknown', 'Unknown')
 end
			},
			[52] = {
				["name"] = "SearchUsersBattleMode",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_SearchUsersBattleModeParam(conn, tree, tvb, off, 'SMM_2_SearchUsersBattleMode_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type (in list) UserInfo]]
local SMM_2_SearchUsersBattleMode_Unknown_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_2_SearchUsersBattleMode_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_2_SearchUsersBattleMode_Unknown_len do
	off, SMM_2_SearchUsersBattleMode_Unknown_item = do_Uint32(conn, subtree, tvb, off, 'SMM_2_SearchUsersBattleMode_Unknown_item', 'Unknown')

	end
	
off, SMM_2_SearchUsersBattleMode_Unknown = do_Bool(conn, tree, tvb, off, 'SMM_2_SearchUsersBattleMode_Unknown', 'Unknown')
 end
			},
			[53] = {
				["name"] = "SearchUsersPlayedCourse",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_SearchUsersPlayedCourseParam(conn, tree, tvb, off, 'SMM_2_SearchUsersPlayedCourse_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type (in list) UserInfo]]
 end
			},
			[54] = {
				["name"] = "SearchUsersClearedCourse",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_SearchUsersClearedCourseParam(conn, tree, tvb, off, 'SMM_2_SearchUsersClearedCourse_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type (in list) UserInfo]]
 end
			},
			[55] = {
				["name"] = "SearchUsersPositiveRatedCourse",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_SearchUsersPositiveRatedCourseParam(conn, tree, tvb, off, 'SMM_2_SearchUsersPositiveRatedCourse_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type (in list) UserInfo]]
 end
			},
			[56] = {
				["name"] = "SearchUsersFollowee",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_SearchUsersFolloweeParam(conn, tree, tvb, off, 'SMM_2_SearchUsersFollowee_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type (in list) UserInfo]]
off, SMM_2_SearchUsersFollowee_Unknown = do_Bool(conn, tree, tvb, off, 'SMM_2_SearchUsersFollowee_Unknown', 'Unknown')
 end
			},
			[57] = {
				["name"] = "SearchUsersClearRanking",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_SearchUsersClearRankingParam(conn, tree, tvb, off, 'SMM_2_SearchUsersClearRanking_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type (in list) UserInfo]]
local SMM_2_SearchUsersClearRanking_Unknown_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_2_SearchUsersClearRanking_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_2_SearchUsersClearRanking_Unknown_len do
	off, SMM_2_SearchUsersClearRanking_Unknown_item = do_Uint32(conn, subtree, tvb, off, 'SMM_2_SearchUsersClearRanking_Unknown_item', 'Unknown')

	end
	
off, SMM_2_SearchUsersClearRanking_Unknown = do_Bool(conn, tree, tvb, off, 'SMM_2_SearchUsersClearRanking_Unknown', 'Unknown')
 end
			},
			[58] = {
				["name"] = "SearchUsersTermsRanking",
				["request"] = nil,
				["response"] = nil
			},
			[59] = {
				["name"] = "UpdateLastLoginTime",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[60] = {
				["name"] = "CanPostCourse",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, SMM_2_CanPostCourse_Unknown = do_Bool(conn, tree, tvb, off, 'SMM_2_CanPostCourse_Unknown', 'Unknown')
off, SMM_2_CanPostCourse_Unknown = do_Uint32(conn, tree, tvb, off, 'SMM_2_CanPostCourse_Unknown', 'Unknown')
 end
			},
			[61] = {
				["name"] = "CanPostRatingAndComment",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_CanPostRatingAndCommentParam(conn, tree, tvb, off, 'SMM_2_CanPostRatingAndComment_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_CanPostRatingAndCommentResult(conn, tree, tvb, off, 'SMM_2_CanPostRatingAndComment_Result', 'Result')
 end
			},
			[62] = {
				["name"] = "UpdateMiiClothes",
				["request"] = function (conn, tree, tvb)
	local off = 0
local SMM_2_UpdateMiiClothes_Param_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_2_UpdateMiiClothes_Param_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_2_UpdateMiiClothes_Param_len do
	off = do_UpdateMiiClothesParam(conn, subtree, tvb, off, 'SMM_2_UpdateMiiClothes_Param_item', 'Param')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[63] = {
				["name"] = "GetMiiClothes",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMM_2_GetMiiClothes_Mii_clothes_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_2_GetMiiClothes_Mii_clothes_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_2_GetMiiClothes_Mii_clothes_len do
	off = do_MiiClothes(conn, subtree, tvb, off, 'SMM_2_GetMiiClothes_Mii_clothes_item', 'Mii clothes')

	end
	
 end
			},
			[64] = {
				["name"] = "PostActivityQuest",
				["request"] = nil,
				["response"] = nil
			},
			[65] = {
				["name"] = "GetUserNameNgType",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, SMM_2_GetUserNameNgType_Type = do_Uint8(conn, tree, tvb, off, 'SMM_2_GetUserNameNgType_Type', 'Type')
 end
			},
			[66] = {
				["name"] = "PreparePostObjectCourse",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_PreparePostCourseParam(conn, tree, tvb, off, 'SMM_2_PreparePostObjectCourse_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreReqPostInfo(conn, tree, tvb, off, 'SMM_2_PreparePostObjectCourse_Info', 'Info')
 end
			},
			[67] = {
				["name"] = "CompletePostObjectCourse",
				["request"] = nil,
				["response"] = nil
			},
			[68] = {
				["name"] = "CompletePostObjectsCourse",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_CompletePostObjectsCourseParam(conn, tree, tvb, off, 'SMM_2_CompletePostObjectsCourse_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[69] = {
				["name"] = "UpdateCourseTag",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_UpdateCourseTagParam(conn, tree, tvb, off, 'SMM_2_UpdateCourseTag_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[70] = {
				["name"] = "GetCourses",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GetCoursesParam(conn, tree, tvb, off, 'SMM_2_GetCourses_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type (in list) CourseInfo]]
local SMM_2_GetCourses_Result_codes_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_2_GetCourses_Result_codes_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_2_GetCourses_Result_codes_len do
	off, SMM_2_GetCourses_Result_codes_item = do_Result(conn, subtree, tvb, off, 'SMM_2_GetCourses_Result_codes_item', 'Result codes')

	end
	
 end
			},
			[71] = {
				["name"] = "SearchCoursesPointRanking",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_SearchCoursesPointRankingParam(conn, tree, tvb, off, 'SMM_2_SearchCoursesPointRanking_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type (in list) CourseInfo]]
local SMM_2_SearchCoursesPointRanking_Ranks_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_2_SearchCoursesPointRanking_Ranks_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_2_SearchCoursesPointRanking_Ranks_len do
	off, SMM_2_SearchCoursesPointRanking_Ranks_item = do_Uint32(conn, subtree, tvb, off, 'SMM_2_SearchCoursesPointRanking_Ranks_item', 'Ranks')

	end
	
off, SMM_2_SearchCoursesPointRanking_Result = do_Bool(conn, tree, tvb, off, 'SMM_2_SearchCoursesPointRanking_Result', 'Result')
 end
			},
			[72] = {
				["name"] = "SearchCoursesAdvanced",
				["request"] = nil,
				["response"] = nil
			},
			[73] = {
				["name"] = "SearchCoursesLatest",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_SearchCoursesLatestParam(conn, tree, tvb, off, 'SMM_2_SearchCoursesLatest_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type (in list) CourseInfo]]
off, SMM_2_SearchCoursesLatest_Result = do_Bool(conn, tree, tvb, off, 'SMM_2_SearchCoursesLatest_Result', 'Result')
 end
			},
			[74] = {
				["name"] = "SearchCoursesPostedBy",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_SearchCoursesPostedByParam(conn, tree, tvb, off, 'SMM_2_SearchCoursesPostedBy_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type (in list) CourseInfo]]
off, SMM_2_SearchCoursesPostedBy_Result = do_Bool(conn, tree, tvb, off, 'SMM_2_SearchCoursesPostedBy_Result', 'Result')
 end
			},
			[75] = {
				["name"] = "SearchCoursesPositiveRatedBy",
				["request"] = nil,
				["response"] = nil
			},
			[76] = {
				["name"] = "SearchCoursesPlayedBy",
				["request"] = nil,
				["response"] = nil
			},
			[77] = {
				["name"] = "SearchCoursesBattleMode",
				["request"] = nil,
				["response"] = nil
			},
			[78] = {
				["name"] = "SearchCoursesBattleModeByDifficulty",
				["request"] = nil,
				["response"] = nil
			},
			[79] = {
				["name"] = "SearchCoursesEndlessMode",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_SearchCoursesEndlessModeParam(conn, tree, tvb, off, 'SMM_2_SearchCoursesEndlessMode_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type (in list) CourseInfo]]
 end
			},
			[80] = {
				["name"] = "SearchCoursesFirstClear",
				["request"] = nil,
				["response"] = nil
			},
			[81] = {
				["name"] = "SearchCoursesBestTime",
				["request"] = nil,
				["response"] = nil
			},
			[82] = {
				["name"] = "SearchCoursesFolloweePostedBy",
				["request"] = nil,
				["response"] = nil
			},
			[83] = {
				["name"] = "SearchCoursesTermsRanking",
				["request"] = nil,
				["response"] = nil
			},
			[84] = {
				["name"] = "SearchCoursesPickUp",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_SearchCoursesPickUpParam(conn, tree, tvb, off, 'SMM_2_SearchCoursesPickUp_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type (in list) CourseInfo]]
 end
			},
			[85] = {
				["name"] = "GetCoursesEvent",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GetCoursesParam(conn, tree, tvb, off, 'SMM_2_GetCoursesEvent_Course_param', 'Course param')
--[[ Stubbed! Missing type GetCoursesEventParam]]
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type (in list) EventCourseInfo]]
local SMM_2_GetCoursesEvent_Results_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_2_GetCoursesEvent_Results_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_2_GetCoursesEvent_Results_len do
	off, SMM_2_GetCoursesEvent_Results_item = do_Result(conn, subtree, tvb, off, 'SMM_2_GetCoursesEvent_Results_item', 'Results')

	end
	
 end
			},
			[86] = {
				["name"] = "SearchCoursesEvent",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_SearchCoursesEventParam(conn, tree, tvb, off, 'SMM_2_SearchCoursesEvent_Event_param', 'Event param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type (in list) EventCourseInfo]]
 end
			},
			[87] = {
				["name"] = "ReadEventCourseList",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_ReadEventCourseListParam(conn, tree, tvb, off, 'SMM_2_ReadEventCourseList_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[88] = {
				["name"] = "PreparePostObjectCommentPicture",
				["request"] = nil,
				["response"] = nil
			},
			[89] = {
				["name"] = "CompletePostObjectCommentPicture",
				["request"] = nil,
				["response"] = nil
			},
			[90] = {
				["name"] = "CompletePostObjectsCommentPicture",
				["request"] = nil,
				["response"] = nil
			},
			[91] = {
				["name"] = "PostCommentText",
				["request"] = nil,
				["response"] = nil
			},
			[92] = {
				["name"] = "PostCommentStamp",
				["request"] = nil,
				["response"] = nil
			},
			[93] = {
				["name"] = "DeleteComment",
				["request"] = nil,
				["response"] = nil
			},
			[94] = {
				["name"] = "SearchCommentsInOrder",
				["request"] = nil,
				["response"] = nil
			},
			[95] = {
				["name"] = "SearchComments",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, SMM_2_SearchComments_Data_id = do_Uint64(conn, tree, tvb, off, 'SMM_2_SearchComments_Data_id', 'Data id')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMM_2_SearchComments_Comments_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_2_SearchComments_Comments_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_2_SearchComments_Comments_len do
	off = do_CommentInfo(conn, subtree, tvb, off, 'SMM_2_SearchComments_Comments_item', 'Comments')

	end
	
 end
			},
			[96] = {
				["name"] = "PostPlayResult",
				["request"] = nil,
				["response"] = nil
			},
			[97] = {
				["name"] = "PostPlayResults",
				["request"] = nil,
				["response"] = nil
			},
			[98] = {
				["name"] = "PostPlayResultsAccumulated",
				["request"] = nil,
				["response"] = nil
			},
			[99] = {
				["name"] = "PostPlayResultBattleModePersonal",
				["request"] = nil,
				["response"] = nil
			},
			[100] = {
				["name"] = "PostPlayResultBattleModeEntire",
				["request"] = nil,
				["response"] = nil
			},
			[101] = {
				["name"] = "PostPlayResultMultiClear",
				["request"] = nil,
				["response"] = nil
			},
			[102] = {
				["name"] = "PostPlayResultEventCourse",
				["request"] = nil,
				["response"] = nil
			},
			[103] = {
				["name"] = "GetDeathPositions",
				["request"] = nil,
				["response"] = nil
			},
			[104] = {
				["name"] = "PostRatingInfo",
				["request"] = nil,
				["response"] = nil
			},
			[105] = {
				["name"] = "PostRatingInfos",
				["request"] = nil,
				["response"] = nil
			},
			[106] = {
				["name"] = "PostRatingInfoBattleModePersonal",
				["request"] = nil,
				["response"] = nil
			},
			[107] = {
				["name"] = "PostRatingInfoBattleModeEntire",
				["request"] = nil,
				["response"] = nil
			},
			[108] = {
				["name"] = "GetEndlessModeStatus",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_EndlessModeStatus(conn, tree, tvb, off, 'SMM_2_GetEndlessModeStatus_Result', 'Result')
 end
			},
			[109] = {
				["name"] = "InitEndlessMode",
				["request"] = nil,
				["response"] = nil
			},
			[110] = {
				["name"] = "StartEndlessModeCourse",
				["request"] = nil,
				["response"] = nil
			},
			[111] = {
				["name"] = "DominateEndlessModeCourse",
				["request"] = nil,
				["response"] = nil
			},
			[112] = {
				["name"] = "PassEndlessModeCourse",
				["request"] = nil,
				["response"] = nil
			},
			[113] = {
				["name"] = "SuspendEndlessMode",
				["request"] = nil,
				["response"] = nil
			},
			[114] = {
				["name"] = "FinishEndlessMode",
				["request"] = nil,
				["response"] = nil
			},
			[115] = {
				["name"] = "GetEndlessModePlayInfo",
				["request"] = nil,
				["response"] = nil
			},
			[116] = {
				["name"] = "GetEndlessModeRank",
				["request"] = nil,
				["response"] = nil
			},
			[117] = {
				["name"] = "GetBattleModeRating",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, SMM_2_GetBattleModeRating_Unknown = do_Bool(conn, tree, tvb, off, 'SMM_2_GetBattleModeRating_Unknown', 'Unknown')
off = do_BattleModeRating(conn, tree, tvb, off, 'SMM_2_GetBattleModeRating_Rating_1', 'Rating 1')
off = do_BattleModeRating(conn, tree, tvb, off, 'SMM_2_GetBattleModeRating_Rating_2', 'Rating 2')
 end
			},
			[118] = {
				["name"] = "StartBattleMode",
				["request"] = nil,
				["response"] = nil
			},
			[119] = {
				["name"] = "EndBattleMode",
				["request"] = nil,
				["response"] = nil
			},
			[120] = {
				["name"] = "ForceEndBattleMode",
				["request"] = nil,
				["response"] = nil
			},
			[121] = {
				["name"] = "StartMultiClear",
				["request"] = nil,
				["response"] = nil
			},
			[122] = {
				["name"] = "EndMultiClear",
				["request"] = nil,
				["response"] = nil
			},
			[123] = {
				["name"] = "FollowUser",
				["request"] = nil,
				["response"] = nil
			},
			[124] = {
				["name"] = "UnfollowUser",
				["request"] = nil,
				["response"] = nil
			},
			[125] = {
				["name"] = "GetNewNotification",
				["request"] = nil,
				["response"] = nil
			},
			[126] = {
				["name"] = "ReadNewNotification",
				["request"] = nil,
				["response"] = nil
			},
			[127] = {
				["name"] = "GetNotification",
				["request"] = nil,
				["response"] = nil
			},
			[128] = {
				["name"] = "ReadNotification",
				["request"] = nil,
				["response"] = nil
			},
			[129] = {
				["name"] = "GetNgCourseNotification",
				["request"] = nil,
				["response"] = nil
			},
			[130] = {
				["name"] = "GetOperatingInformation",
				["request"] = nil,
				["response"] = nil
			},
			[131] = {
				["name"] = "GetUserOrCourse",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GetUserOrCourseParam(conn, tree, tvb, off, 'SMM_2_GetUserOrCourse_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type UserInfo]]
--[[ Stubbed! Missing type CourseInfo]]
 end
			},
			[132] = {
				["name"] = "PreparePostRelationObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_PreparePostRelationObjectParam(conn, tree, tvb, off, 'SMM_2_PreparePostRelationObject_Info', 'Info')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_RelationObjectReqPostInfo(conn, tree, tvb, off, 'SMM_2_PreparePostRelationObject_Param', 'Param')
 end
			},
			[133] = {
				["name"] = "CompletePostRelationObject",
				["request"] = nil,
				["response"] = nil
			},
			[134] = {
				["name"] = "GetReqGetInfoHeadersInfo",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, SMM_2_GetReqGetInfoHeadersInfo_Data_type = do_Uint8(conn, tree, tvb, off, 'SMM_2_GetReqGetInfoHeadersInfo_Data_type', 'Data type')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_ReqGetInfoHeadersInfo(conn, tree, tvb, off, 'SMM_2_GetReqGetInfoHeadersInfo_Info', 'Info')
 end
			},
			[135] = {
				["name"] = "CanReportFromCourseInfo",
				["request"] = nil,
				["response"] = nil
			},
			[136] = {
				["name"] = "CanReportFromCommentInfo",
				["request"] = nil,
				["response"] = nil
			},
			[137] = {
				["name"] = "CanReportFromUserInfo",
				["request"] = nil,
				["response"] = nil
			},
			[138] = {
				["name"] = "CanReportFromBugDetection",
				["request"] = nil,
				["response"] = nil
			},
			[139] = {
				["name"] = "ReportFromCourseInfo",
				["request"] = nil,
				["response"] = nil
			},
			[140] = {
				["name"] = "ReportFromCommentInfo",
				["request"] = nil,
				["response"] = nil
			},
			[141] = {
				["name"] = "ReportFromUserInfo",
				["request"] = nil,
				["response"] = nil
			},
			[142] = {
				["name"] = "ReportFromBugDetection",
				["request"] = nil,
				["response"] = nil
			},
			[143] = {
				["name"] = "GetAdditionalMiiClothes",
				["request"] = nil,
				["response"] = nil
			},
			[144] = {
				["name"] = "GetAdditionalMiiClothesReqGetInfos",
				["request"] = nil,
				["response"] = nil
			},
			[145] = {
				["name"] = "DebugPreparePostObjectAdditionalMiiClothes",
				["request"] = nil,
				["response"] = nil
			},
			[146] = {
				["name"] = "DebugCompletePostObjectAdditionalMiiClothes",
				["request"] = nil,
				["response"] = nil
			},
			[147] = {
				["name"] = "SearchUsersOfficial",
				["request"] = nil,
				["response"] = nil
			},
			[148] = {
				["name"] = "PostPlayResultCoop",
				["request"] = nil,
				["response"] = nil
			},
			[149] = {
				["name"] = "PostPlayResultBattleModeFriendPersonal",
				["request"] = nil,
				["response"] = nil
			},
			[150] = {
				["name"] = "PostPlayResultBattleModeFriendEntire",
				["request"] = nil,
				["response"] = nil
			},
			[151] = {
				["name"] = "LoginCheck",
				["request"] = nil,
				["response"] = nil
			},
			[152] = {
				["name"] = "UpdateLastLoginInfo",
				["request"] = nil,
				["response"] = nil
			},
			[153] = {
				["name"] = "GetEventCourseStamp",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, SMM_2_GetEventCourseStamp_Stamps = do_Uint32(conn, tree, tvb, off, 'SMM_2_GetEventCourseStamp_Stamps', 'Stamps')
 end
			},
			[154] = {
				["name"] = "GetEventCourseStatus",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_EventCourseStatusInfo(conn, tree, tvb, off, 'SMM_2_GetEventCourseStatus_Status_info', 'Status info')
 end
			},
			[155] = {
				["name"] = "ReadEventCourseResult",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, SMM_2_ReadEventCourseResult_Unknown = do_Uint64(conn, tree, tvb, off, 'SMM_2_ReadEventCourseResult_Unknown', 'Unknown')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[156] = {
				["name"] = "GetEventCourseHistogram",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GetEventCourseHistogramParam(conn, tree, tvb, off, 'SMM_2_GetEventCourseHistogram_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_EventCourseHistogram(conn, tree, tvb, off, 'SMM_2_GetEventCourseHistogram_Histogram_info', 'Histogram info')
 end
			},
			[157] = {
				["name"] = "GetEventCourseGhost",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GetEventCourseGhostParam(conn, tree, tvb, off, 'SMM_2_GetEventCourseGhost_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMM_2_GetEventCourseGhost_Ghosts_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMM_2_GetEventCourseGhost_Ghosts_len, tvb(off,4))
	off = off + 4
	for i=1,SMM_2_GetEventCourseGhost_Ghosts_len do
	off = do_EventCourseGhostInfo(conn, subtree, tvb, off, 'SMM_2_GetEventCourseGhost_Ghosts_item', 'Ghosts')

	end
	
 end
			},
			[158] = {
				["name"] = "DebugUploadEventCourseGhost",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DebugUploadEventCourseGhostParam(conn, tree, tvb, off, 'SMM_2_DebugUploadEventCourseGhost_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[159] = {
				["name"] = "RegisterWorldMap",
				["request"] = nil,
				["response"] = nil
			},
			[160] = {
				["name"] = "GetWorldMap",
				["request"] = nil,
				["response"] = nil
			},
			[161] = {
				["name"] = "SearchWorldMapPlayedBy",
				["request"] = nil,
				["response"] = nil
			},
			[162] = {
				["name"] = "SearchWorldMapPickUp",
				["request"] = nil,
				["response"] = nil
			},
			[163] = {
				["name"] = "GetWorldMapProgress",
				["request"] = nil,
				["response"] = nil
			},
			[164] = {
				["name"] = "DeleteWorldMap",
				["request"] = nil,
				["response"] = nil
			},
			[165] = {
				["name"] = "InitializeWorldMapProgress",
				["request"] = nil,
				["response"] = nil
			},
			[166] = {
				["name"] = "UpdateWorldMapProgress",
				["request"] = nil,
				["response"] = nil
			},
			[167] = {
				["name"] = "GetUsersFriend",
				["request"] = nil,
				["response"] = nil
			},
			[168] = {
				["name"] = "SearchUsersFolloweeV2",
				["request"] = nil,
				["response"] = nil
			},
			[169] = {
				["name"] = "GetEventCourseFriendGhost",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	})
add_proto(112,
	{
		["nested"] = true,
		["name"] = "MK8 Deluxe",
		["methods"] = {
[16] = {
				["name"] = "GetCompetitionRankingScore",
				["request"] = nil,
				["response"] = nil
			},
			[17] = {
				["name"] = "UploadCompetitionRankingScore",
				["request"] = nil,
				["response"] = nil
			},
			[18] = {
				["name"] = "GetCompetitionInfo",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GetCompetitionInfoParam(conn, tree, tvb, off, 'MK8_Deluxe_GetCompetitionInfo_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[19] = {
				["name"] = "UploadScorePack",
				["request"] = nil,
				["response"] = nil
			},
			[20] = {
				["name"] = "GetScorePack",
				["request"] = nil,
				["response"] = nil
			},
			[21] = {
				["name"] = "ExecuteDeleteScoreJob",
				["request"] = nil,
				["response"] = nil
			},
			[22] = {
				["name"] = "GetCommonDataByPIDList",
				["request"] = function (conn, tree, tvb)
	local off = 0
local MK8_Deluxe_GetCommonDataByPIDList_Pids_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.MK8_Deluxe_GetCommonDataByPIDList_Pids_len, tvb(off,4))
	off = off + 4
	for i=1,MK8_Deluxe_GetCommonDataByPIDList_Pids_len do
	off, MK8_Deluxe_GetCommonDataByPIDList_Pids_item = do_PID(conn, subtree, tvb, off, 'MK8_Deluxe_GetCommonDataByPIDList_Pids_item', 'Pids')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_CommonDataList(conn, tree, tvb, off, 'MK8_Deluxe_GetCommonDataByPIDList_Common_data', 'Common data')
 end
			},
			
		}
	})
add_proto(112,
	{
		["nested"] = true,
		["name"] = "Splatoon",
		["methods"] = {
[16] = {
				["name"] = "GetCompetitionRankingScore",
				["request"] = nil,
				["response"] = nil
			},
			[17] = {
				["name"] = "GetcompetitionRankingScoreByPeriodList",
				["request"] = nil,
				["response"] = nil
			},
			[18] = {
				["name"] = "UploadCompetitionRankingScore",
				["request"] = nil,
				["response"] = nil
			},
			[19] = {
				["name"] = "DeleteCompetitionRankingScore",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	})
add_proto(102,
	{
		["nested"] = false,
		["name"] = "Friends Wii U",
		["methods"] = {
[1] = {
				["name"] = "UpdateAndGetAllInformation",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_NNAInfo(conn, tree, tvb, off, 'Friends_Wii_U_UpdateAndGetAllInformation_NNA_Info', 'NNA Info')
off = do_NintendoPresenceV2(conn, tree, tvb, off, 'Friends_Wii_U_UpdateAndGetAllInformation_Nintendo_presence', 'Nintendo presence')
off, Friends_Wii_U_UpdateAndGetAllInformation_Birthday = do_DateTime(conn, tree, tvb, off, 'Friends_Wii_U_UpdateAndGetAllInformation_Birthday', 'Birthday')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_PrincipalPreference(conn, tree, tvb, off, 'Friends_Wii_U_UpdateAndGetAllInformation_Principal_preference', 'Principal preference')
off = do_Comment(conn, tree, tvb, off, 'Friends_Wii_U_UpdateAndGetAllInformation_Status_message', 'Status message')
local Friends_Wii_U_UpdateAndGetAllInformation_Friend_list_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_Wii_U_UpdateAndGetAllInformation_Friend_list_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_Wii_U_UpdateAndGetAllInformation_Friend_list_len do
	off = do_FriendInfo(conn, subtree, tvb, off, 'Friends_Wii_U_UpdateAndGetAllInformation_Friend_list_item', 'Friend list')

	end
	
local Friends_Wii_U_UpdateAndGetAllInformation_Sent_friend_requests_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_Wii_U_UpdateAndGetAllInformation_Sent_friend_requests_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_Wii_U_UpdateAndGetAllInformation_Sent_friend_requests_len do
	off = do_FriendRequest(conn, subtree, tvb, off, 'Friends_Wii_U_UpdateAndGetAllInformation_Sent_friend_requests_item', 'Sent friend requests')

	end
	
local Friends_Wii_U_UpdateAndGetAllInformation_Received_friend_requests_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_Wii_U_UpdateAndGetAllInformation_Received_friend_requests_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_Wii_U_UpdateAndGetAllInformation_Received_friend_requests_len do
	off = do_FriendRequest(conn, subtree, tvb, off, 'Friends_Wii_U_UpdateAndGetAllInformation_Received_friend_requests_item', 'Received friend requests')

	end
	
local Friends_Wii_U_UpdateAndGetAllInformation_Blacklist_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_Wii_U_UpdateAndGetAllInformation_Blacklist_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_Wii_U_UpdateAndGetAllInformation_Blacklist_len do
	off = do_BlacklistedPrincipal(conn, subtree, tvb, off, 'Friends_Wii_U_UpdateAndGetAllInformation_Blacklist_item', 'Blacklist')

	end
	
off, Friends_Wii_U_UpdateAndGetAllInformation_Unknown = do_Bool(conn, tree, tvb, off, 'Friends_Wii_U_UpdateAndGetAllInformation_Unknown', 'Unknown')
local Friends_Wii_U_UpdateAndGetAllInformation_Notifications_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_Wii_U_UpdateAndGetAllInformation_Notifications_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_Wii_U_UpdateAndGetAllInformation_Notifications_len do
	off = do_PersistentNotification(conn, subtree, tvb, off, 'Friends_Wii_U_UpdateAndGetAllInformation_Notifications_item', 'Notifications')

	end
	
off, Friends_Wii_U_UpdateAndGetAllInformation_Unknown = do_Bool(conn, tree, tvb, off, 'Friends_Wii_U_UpdateAndGetAllInformation_Unknown', 'Unknown')
 end
			},
			[2] = {
				["name"] = "AddFriend",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_Wii_U_AddFriend_Pid = do_PID(conn, tree, tvb, off, 'Friends_Wii_U_AddFriend_Pid', 'Pid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_FriendRequest(conn, tree, tvb, off, 'Friends_Wii_U_AddFriend_Friend_request', 'Friend request')
off = do_FriendInfo(conn, tree, tvb, off, 'Friends_Wii_U_AddFriend_Friend_info', 'Friend info')
 end
			},
			[3] = {
				["name"] = "AddFriendByName",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_Wii_U_AddFriendByName_Name = do_String(conn, tree, tvb, off, 'Friends_Wii_U_AddFriendByName_Name', 'Name')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_FriendRequest(conn, tree, tvb, off, 'Friends_Wii_U_AddFriendByName_Friend_request', 'Friend request')
off = do_FriendInfo(conn, tree, tvb, off, 'Friends_Wii_U_AddFriendByName_Friend_info', 'Friend info')
 end
			},
			[4] = {
				["name"] = "RemoveFriend",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_Wii_U_RemoveFriend_Pid = do_PID(conn, tree, tvb, off, 'Friends_Wii_U_RemoveFriend_Pid', 'Pid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[5] = {
				["name"] = "AddFriendRequest",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_Wii_U_AddFriendRequest_Unknown = do_Uint32(conn, tree, tvb, off, 'Friends_Wii_U_AddFriendRequest_Unknown', 'Unknown')
off, Friends_Wii_U_AddFriendRequest_Unknown = do_Uint8(conn, tree, tvb, off, 'Friends_Wii_U_AddFriendRequest_Unknown', 'Unknown')
off, Friends_Wii_U_AddFriendRequest_Unknown = do_String(conn, tree, tvb, off, 'Friends_Wii_U_AddFriendRequest_Unknown', 'Unknown')
off, Friends_Wii_U_AddFriendRequest_Unknown = do_Uint8(conn, tree, tvb, off, 'Friends_Wii_U_AddFriendRequest_Unknown', 'Unknown')
off, Friends_Wii_U_AddFriendRequest_Unknown = do_String(conn, tree, tvb, off, 'Friends_Wii_U_AddFriendRequest_Unknown', 'Unknown')
off = do_GameKey(conn, tree, tvb, off, 'Friends_Wii_U_AddFriendRequest_Game_key', 'Game key')
off, Friends_Wii_U_AddFriendRequest_Unknown = do_DateTime(conn, tree, tvb, off, 'Friends_Wii_U_AddFriendRequest_Unknown', 'Unknown')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_FriendRequest(conn, tree, tvb, off, 'Friends_Wii_U_AddFriendRequest_Friend_request', 'Friend request')
off = do_FriendInfo(conn, tree, tvb, off, 'Friends_Wii_U_AddFriendRequest_Friend_info', 'Friend info')
 end
			},
			[6] = {
				["name"] = "CancelFriendRequest",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_Wii_U_CancelFriendRequest_Id = do_Uint64(conn, tree, tvb, off, 'Friends_Wii_U_CancelFriendRequest_Id', 'Id')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[7] = {
				["name"] = "AcceptFriendRequest",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_Wii_U_AcceptFriendRequest_Id = do_Uint64(conn, tree, tvb, off, 'Friends_Wii_U_AcceptFriendRequest_Id', 'Id')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_FriendInfo(conn, tree, tvb, off, 'Friends_Wii_U_AcceptFriendRequest_Friend_info', 'Friend info')
 end
			},
			[8] = {
				["name"] = "DeleteFriendRequest",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_Wii_U_DeleteFriendRequest_Id = do_Uint64(conn, tree, tvb, off, 'Friends_Wii_U_DeleteFriendRequest_Id', 'Id')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[9] = {
				["name"] = "DenyFriendRequest",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_Wii_U_DenyFriendRequest_Id = do_Uint64(conn, tree, tvb, off, 'Friends_Wii_U_DenyFriendRequest_Id', 'Id')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_BlacklistedPrincipal(conn, tree, tvb, off, 'Friends_Wii_U_DenyFriendRequest_Blacklisted_principal', 'Blacklisted principal')
 end
			},
			[10] = {
				["name"] = "MarkFriendRequestsAsReceived",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Friends_Wii_U_MarkFriendRequestsAsReceived_Friend_requests_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_Wii_U_MarkFriendRequestsAsReceived_Friend_requests_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_Wii_U_MarkFriendRequestsAsReceived_Friend_requests_len do
	off, Friends_Wii_U_MarkFriendRequestsAsReceived_Friend_requests_item = do_Uint64(conn, subtree, tvb, off, 'Friends_Wii_U_MarkFriendRequestsAsReceived_Friend_requests_item', 'Friend requests')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[11] = {
				["name"] = "AddBlackList",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_BlacklistedPrincipal(conn, tree, tvb, off, 'Friends_Wii_U_AddBlackList_Blacklisted_principal', 'Blacklisted principal')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_BlacklistedPrincipal(conn, tree, tvb, off, 'Friends_Wii_U_AddBlackList_Blacklisted_principal', 'Blacklisted principal')
 end
			},
			[12] = {
				["name"] = "RemoveBlackList",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_Wii_U_RemoveBlackList_Pid = do_PID(conn, tree, tvb, off, 'Friends_Wii_U_RemoveBlackList_Pid', 'Pid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[13] = {
				["name"] = "UpdatePresence",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_NintendoPresenceV2(conn, tree, tvb, off, 'Friends_Wii_U_UpdatePresence_Nintendo_presence', 'Nintendo presence')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[14] = {
				["name"] = "UpdateMii",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MiiV2(conn, tree, tvb, off, 'Friends_Wii_U_UpdateMii_Mii', 'Mii')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Friends_Wii_U_UpdateMii_Unknown = do_DateTime(conn, tree, tvb, off, 'Friends_Wii_U_UpdateMii_Unknown', 'Unknown')
 end
			},
			[15] = {
				["name"] = "UpdateComment",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_Comment(conn, tree, tvb, off, 'Friends_Wii_U_UpdateComment_Status_message', 'Status message')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Friends_Wii_U_UpdateComment_Unknown = do_DateTime(conn, tree, tvb, off, 'Friends_Wii_U_UpdateComment_Unknown', 'Unknown')
 end
			},
			[16] = {
				["name"] = "UpdatePreference",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_PrincipalPreference(conn, tree, tvb, off, 'Friends_Wii_U_UpdatePreference_Principal_preferenc', 'Principal preferenc')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[17] = {
				["name"] = "GetBasicInfo",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Friends_Wii_U_GetBasicInfo_Pids_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_Wii_U_GetBasicInfo_Pids_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_Wii_U_GetBasicInfo_Pids_len do
	off, Friends_Wii_U_GetBasicInfo_Pids_item = do_PID(conn, subtree, tvb, off, 'Friends_Wii_U_GetBasicInfo_Pids_item', 'Pids')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Friends_Wii_U_GetBasicInfo_Infos_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_Wii_U_GetBasicInfo_Infos_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_Wii_U_GetBasicInfo_Infos_len do
	off = do_PrincipalBasicInfo(conn, subtree, tvb, off, 'Friends_Wii_U_GetBasicInfo_Infos_item', 'Infos')

	end
	
 end
			},
			[18] = {
				["name"] = "DeletePersistentNotification",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Friends_Wii_U_DeletePersistentNotification_Notifications_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_Wii_U_DeletePersistentNotification_Notifications_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_Wii_U_DeletePersistentNotification_Notifications_len do
	off = do_PersistentNotification(conn, subtree, tvb, off, 'Friends_Wii_U_DeletePersistentNotification_Notifications_item', 'Notifications')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[19] = {
				["name"] = "CheckSettingStatus",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Friends_Wii_U_CheckSettingStatus_Unknown = do_Uint8(conn, tree, tvb, off, 'Friends_Wii_U_CheckSettingStatus_Unknown', 'Unknown')
 end
			},
			[20] = {
				["name"] = "GetRequestBlockSettings",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Friends_Wii_U_GetRequestBlockSettings_Unknown_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_Wii_U_GetRequestBlockSettings_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_Wii_U_GetRequestBlockSettings_Unknown_len do
	off, Friends_Wii_U_GetRequestBlockSettings_Unknown_item = do_Uint32(conn, subtree, tvb, off, 'Friends_Wii_U_GetRequestBlockSettings_Unknown_item', 'Unknown')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Friends_Wii_U_GetRequestBlockSettings_Settings_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_Wii_U_GetRequestBlockSettings_Settings_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_Wii_U_GetRequestBlockSettings_Settings_len do
	off = do_PrincipalRequestBlockSetting(conn, subtree, tvb, off, 'Friends_Wii_U_GetRequestBlockSettings_Settings_item', 'Settings')

	end
	
 end
			},
			
		}
	})
add_proto(18,
	{
		["nested"] = false,
		["name"] = "Health",
		["methods"] = {
[1] = {
				["name"] = "PingDaemon",
				["request"] = nil,
				["response"] = nil
			},
			[2] = {
				["name"] = "PingDatabase",
				["request"] = nil,
				["response"] = nil
			},
			[3] = {
				["name"] = "RunSanityCheck",
				["request"] = nil,
				["response"] = nil
			},
			[4] = {
				["name"] = "FixSanityErrors",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	})
add_proto(109,
	{
		["nested"] = true,
		["name"] = "MK8",
		["methods"] = {
[36] = {
				["name"] = "CreateSimpleSearchObject",
				["request"] = nil,
				["response"] = nil
			},
			[37] = {
				["name"] = "UpdateSimpleSearchObject",
				["request"] = nil,
				["response"] = nil
			},
			[38] = {
				["name"] = "DeleteSimpleSearchObject",
				["request"] = nil,
				["response"] = nil
			},
			[39] = {
				["name"] = "SearchSimpleSearchObject",
				["request"] = nil,
				["response"] = nil
			},
			[40] = {
				["name"] = "JoinMatchmakeSessionWithExtraParticipants",
				["request"] = nil,
				["response"] = nil
			},
			[41] = {
				["name"] = "SearchSimpleSearchObjectByObjectIds",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	})
add_proto(16,
	{
		["nested"] = false,
		["name"] = "Simple Authentication",
		["methods"] = {
[1] = {
				["name"] = "Authenticate",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Simple_Authentication_Authenticate_strUserName = do_String(conn, tree, tvb, off, 'Simple_Authentication_Authenticate_strUserName', 'strUserName')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Simple_Authentication_Authenticate_retval = do_Result(conn, tree, tvb, off, 'Simple_Authentication_Authenticate_retval', 'retval')
off, Simple_Authentication_Authenticate_pidPrincipal = do_Uint32(conn, tree, tvb, off, 'Simple_Authentication_Authenticate_pidPrincipal', 'pidPrincipal')
off = do_RVConnectionData(conn, tree, tvb, off, 'Simple_Authentication_Authenticate_pConnectionData', 'pConnectionData')
off, Simple_Authentication_Authenticate_strReturnMsg = do_String(conn, tree, tvb, off, 'Simple_Authentication_Authenticate_strReturnMsg', 'strReturnMsg')
 end
			},
			[2] = {
				["name"] = "LoginWithToken",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Simple_Authentication_LoginWithToken_strToken = do_String(conn, tree, tvb, off, 'Simple_Authentication_LoginWithToken_strToken', 'strToken')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Simple_Authentication_LoginWithToken_retval = do_Result(conn, tree, tvb, off, 'Simple_Authentication_LoginWithToken_retval', 'retval')
off, Simple_Authentication_LoginWithToken_pidPrincipal = do_Uint32(conn, tree, tvb, off, 'Simple_Authentication_LoginWithToken_pidPrincipal', 'pidPrincipal')
off = do_RVConnectionData(conn, tree, tvb, off, 'Simple_Authentication_LoginWithToken_pConnectionData', 'pConnectionData')
off, Simple_Authentication_LoginWithToken_strReturnMsg = do_String(conn, tree, tvb, off, 'Simple_Authentication_LoginWithToken_strReturnMsg', 'strReturnMsg')
 end
			},
			[3] = {
				["name"] = "LoginWithTokenEx",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Simple_Authentication_LoginWithTokenEx_strToken = do_String(conn, tree, tvb, off, 'Simple_Authentication_LoginWithTokenEx_strToken', 'strToken')

		local Simple_Authentication_LoginWithTokenEx_oAnyData_container = tree:add(F.Data, tvb(off, 0))
		Simple_Authentication_LoginWithTokenEx_oAnyData_container:set_text("Data")
	off, Simple_Authentication_LoginWithTokenEx_oAnyData_type_name = do_String(conn, Simple_Authentication_LoginWithTokenEx_oAnyData_container, tvb, off, 'Simple_Authentication_LoginWithTokenEx_oAnyData_type_name', 'oAnyData_type_name')

off, Simple_Authentication_LoginWithTokenEx_oAnyData_len_plus_four = do_Uint32(conn, Simple_Authentication_LoginWithTokenEx_oAnyData_container, tvb, off, 'Simple_Authentication_LoginWithTokenEx_oAnyData_len_plus_four', 'oAnyData_len_plus_four')

off, Simple_Authentication_LoginWithTokenEx_oAnyData_data_len = do_Uint32(conn, Simple_Authentication_LoginWithTokenEx_oAnyData_container, tvb, off, 'Simple_Authentication_LoginWithTokenEx_oAnyData_data_len', 'oAnyData_data_len')

local type_func = 'do_'..Simple_Authentication_LoginWithTokenEx_oAnyData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Simple_Authentication_LoginWithTokenEx_oAnyData_container, tvb, off, "Simple_Authentication_LoginWithTokenEx_oAnyData_data", "oAnyData")
		else
			Simple_Authentication_LoginWithTokenEx_oAnyData_container:add(F.Simple_Authentication_LoginWithTokenEx_oAnyData_data_bytes, tvb(off, Simple_Authentication_LoginWithTokenEx_oAnyData_len))
			off = off + Simple_Authentication_LoginWithTokenEx_oAnyData_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Simple_Authentication_LoginWithTokenEx_retval = do_Result(conn, tree, tvb, off, 'Simple_Authentication_LoginWithTokenEx_retval', 'retval')
off, Simple_Authentication_LoginWithTokenEx_pidPrincipal = do_Uint32(conn, tree, tvb, off, 'Simple_Authentication_LoginWithTokenEx_pidPrincipal', 'pidPrincipal')
off = do_RVConnectionData(conn, tree, tvb, off, 'Simple_Authentication_LoginWithTokenEx_pConnectionData', 'pConnectionData')
off, Simple_Authentication_LoginWithTokenEx_strReturnMsg = do_String(conn, tree, tvb, off, 'Simple_Authentication_LoginWithTokenEx_strReturnMsg', 'strReturnMsg')
 end
			},
			[4] = {
				["name"] = "Login",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Simple_Authentication_Login_strUsername = do_String(conn, tree, tvb, off, 'Simple_Authentication_Login_strUsername', 'strUsername')
off, Simple_Authentication_Login_strPassword = do_String(conn, tree, tvb, off, 'Simple_Authentication_Login_strPassword', 'strPassword')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Simple_Authentication_Login_retval = do_Result(conn, tree, tvb, off, 'Simple_Authentication_Login_retval', 'retval')
off, Simple_Authentication_Login_pidPrincipal = do_Uint32(conn, tree, tvb, off, 'Simple_Authentication_Login_pidPrincipal', 'pidPrincipal')
off = do_RVConnectionData(conn, tree, tvb, off, 'Simple_Authentication_Login_pConnectionData', 'pConnectionData')
off, Simple_Authentication_Login_strReturnMsg = do_String(conn, tree, tvb, off, 'Simple_Authentication_Login_strReturnMsg', 'strReturnMsg')
 end
			},
			[5] = {
				["name"] = "LoginWithSubAccount",
				["request"] = function (conn, tree, tvb)
	local off = 0

		local Simple_Authentication_LoginWithSubAccount_loginData_container = tree:add(F.Data, tvb(off, 0))
		Simple_Authentication_LoginWithSubAccount_loginData_container:set_text("Data")
	off, Simple_Authentication_LoginWithSubAccount_loginData_type_name = do_String(conn, Simple_Authentication_LoginWithSubAccount_loginData_container, tvb, off, 'Simple_Authentication_LoginWithSubAccount_loginData_type_name', 'loginData_type_name')

off, Simple_Authentication_LoginWithSubAccount_loginData_len_plus_four = do_Uint32(conn, Simple_Authentication_LoginWithSubAccount_loginData_container, tvb, off, 'Simple_Authentication_LoginWithSubAccount_loginData_len_plus_four', 'loginData_len_plus_four')

off, Simple_Authentication_LoginWithSubAccount_loginData_data_len = do_Uint32(conn, Simple_Authentication_LoginWithSubAccount_loginData_container, tvb, off, 'Simple_Authentication_LoginWithSubAccount_loginData_data_len', 'loginData_data_len')

local type_func = 'do_'..Simple_Authentication_LoginWithSubAccount_loginData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Simple_Authentication_LoginWithSubAccount_loginData_container, tvb, off, "Simple_Authentication_LoginWithSubAccount_loginData_data", "loginData")
		else
			Simple_Authentication_LoginWithSubAccount_loginData_container:add(F.Simple_Authentication_LoginWithSubAccount_loginData_data_bytes, tvb(off, Simple_Authentication_LoginWithSubAccount_loginData_len))
			off = off + Simple_Authentication_LoginWithSubAccount_loginData_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Simple_Authentication_LoginWithSubAccount_retval = do_Result(conn, tree, tvb, off, 'Simple_Authentication_LoginWithSubAccount_retval', 'retval')
off, Simple_Authentication_LoginWithSubAccount_pidPrincipal = do_Uint32(conn, tree, tvb, off, 'Simple_Authentication_LoginWithSubAccount_pidPrincipal', 'pidPrincipal')
off = do_RVConnectionData(conn, tree, tvb, off, 'Simple_Authentication_LoginWithSubAccount_pConnectionData', 'pConnectionData')
off, Simple_Authentication_LoginWithSubAccount_strReturnMsg = do_String(conn, tree, tvb, off, 'Simple_Authentication_LoginWithSubAccount_strReturnMsg', 'strReturnMsg')
 end
			},
			[6] = {
				["name"] = "Register",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Simple_Authentication_Register_vecMyURLs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Simple_Authentication_Register_vecMyURLs_len, tvb(off,4))
	off = off + 4
	for i=1,Simple_Authentication_Register_vecMyURLs_len do
	off, Simple_Authentication_Register_vecMyURLs_item = do_StationURL(conn, subtree, tvb, off, 'Simple_Authentication_Register_vecMyURLs_item', 'vecMyURLs')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Simple_Authentication_Register_retval = do_Result(conn, tree, tvb, off, 'Simple_Authentication_Register_retval', 'retval')
off, Simple_Authentication_Register_pidConnectionID = do_Uint32(conn, tree, tvb, off, 'Simple_Authentication_Register_pidConnectionID', 'pidConnectionID')
off, Simple_Authentication_Register_urlPublic = do_StationURL(conn, tree, tvb, off, 'Simple_Authentication_Register_urlPublic', 'urlPublic')
 end
			},
			[7] = {
				["name"] = "RegisterEx",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Simple_Authentication_RegisterEx_vecMyURLs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Simple_Authentication_RegisterEx_vecMyURLs_len, tvb(off,4))
	off = off + 4
	for i=1,Simple_Authentication_RegisterEx_vecMyURLs_len do
	off, Simple_Authentication_RegisterEx_vecMyURLs_item = do_StationURL(conn, subtree, tvb, off, 'Simple_Authentication_RegisterEx_vecMyURLs_item', 'vecMyURLs')

	end
	

		local Simple_Authentication_RegisterEx_hCustomData_container = tree:add(F.Data, tvb(off, 0))
		Simple_Authentication_RegisterEx_hCustomData_container:set_text("Data")
	off, Simple_Authentication_RegisterEx_hCustomData_type_name = do_String(conn, Simple_Authentication_RegisterEx_hCustomData_container, tvb, off, 'Simple_Authentication_RegisterEx_hCustomData_type_name', 'hCustomData_type_name')

off, Simple_Authentication_RegisterEx_hCustomData_len_plus_four = do_Uint32(conn, Simple_Authentication_RegisterEx_hCustomData_container, tvb, off, 'Simple_Authentication_RegisterEx_hCustomData_len_plus_four', 'hCustomData_len_plus_four')

off, Simple_Authentication_RegisterEx_hCustomData_data_len = do_Uint32(conn, Simple_Authentication_RegisterEx_hCustomData_container, tvb, off, 'Simple_Authentication_RegisterEx_hCustomData_data_len', 'hCustomData_data_len')

local type_func = 'do_'..Simple_Authentication_RegisterEx_hCustomData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Simple_Authentication_RegisterEx_hCustomData_container, tvb, off, "Simple_Authentication_RegisterEx_hCustomData_data", "hCustomData")
		else
			Simple_Authentication_RegisterEx_hCustomData_container:add(F.Simple_Authentication_RegisterEx_hCustomData_data_bytes, tvb(off, Simple_Authentication_RegisterEx_hCustomData_len))
			off = off + Simple_Authentication_RegisterEx_hCustomData_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Simple_Authentication_RegisterEx_retval = do_Result(conn, tree, tvb, off, 'Simple_Authentication_RegisterEx_retval', 'retval')
off, Simple_Authentication_RegisterEx_pidConnectionID = do_Uint32(conn, tree, tvb, off, 'Simple_Authentication_RegisterEx_pidConnectionID', 'pidConnectionID')
off, Simple_Authentication_RegisterEx_urlPublic = do_StationURL(conn, tree, tvb, off, 'Simple_Authentication_RegisterEx_urlPublic', 'urlPublic')
 end
			},
			[8] = {
				["name"] = "LoginWithTokenCafe",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Simple_Authentication_LoginWithTokenCafe_strNintendoToken = do_String(conn, tree, tvb, off, 'Simple_Authentication_LoginWithTokenCafe_strNintendoToken', 'strNintendoToken')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Simple_Authentication_LoginWithTokenCafe_retval = do_Result(conn, tree, tvb, off, 'Simple_Authentication_LoginWithTokenCafe_retval', 'retval')
off, Simple_Authentication_LoginWithTokenCafe_pidPrincipal = do_Uint32(conn, tree, tvb, off, 'Simple_Authentication_LoginWithTokenCafe_pidPrincipal', 'pidPrincipal')
off = do_RVConnectionData(conn, tree, tvb, off, 'Simple_Authentication_LoginWithTokenCafe_pConnectionData', 'pConnectionData')
off, Simple_Authentication_LoginWithTokenCafe_strReturnMsg = do_String(conn, tree, tvb, off, 'Simple_Authentication_LoginWithTokenCafe_strReturnMsg', 'strReturnMsg')
 end
			},
			[9] = {
				["name"] = "LoginWithTokenCafeEx",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Simple_Authentication_LoginWithTokenCafeEx_strNintendoToken = do_String(conn, tree, tvb, off, 'Simple_Authentication_LoginWithTokenCafeEx_strNintendoToken', 'strNintendoToken')

		local Simple_Authentication_LoginWithTokenCafeEx_oAnyData_container = tree:add(F.Data, tvb(off, 0))
		Simple_Authentication_LoginWithTokenCafeEx_oAnyData_container:set_text("Data")
	off, Simple_Authentication_LoginWithTokenCafeEx_oAnyData_type_name = do_String(conn, Simple_Authentication_LoginWithTokenCafeEx_oAnyData_container, tvb, off, 'Simple_Authentication_LoginWithTokenCafeEx_oAnyData_type_name', 'oAnyData_type_name')

off, Simple_Authentication_LoginWithTokenCafeEx_oAnyData_len_plus_four = do_Uint32(conn, Simple_Authentication_LoginWithTokenCafeEx_oAnyData_container, tvb, off, 'Simple_Authentication_LoginWithTokenCafeEx_oAnyData_len_plus_four', 'oAnyData_len_plus_four')

off, Simple_Authentication_LoginWithTokenCafeEx_oAnyData_data_len = do_Uint32(conn, Simple_Authentication_LoginWithTokenCafeEx_oAnyData_container, tvb, off, 'Simple_Authentication_LoginWithTokenCafeEx_oAnyData_data_len', 'oAnyData_data_len')

local type_func = 'do_'..Simple_Authentication_LoginWithTokenCafeEx_oAnyData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Simple_Authentication_LoginWithTokenCafeEx_oAnyData_container, tvb, off, "Simple_Authentication_LoginWithTokenCafeEx_oAnyData_data", "oAnyData")
		else
			Simple_Authentication_LoginWithTokenCafeEx_oAnyData_container:add(F.Simple_Authentication_LoginWithTokenCafeEx_oAnyData_data_bytes, tvb(off, Simple_Authentication_LoginWithTokenCafeEx_oAnyData_len))
			off = off + Simple_Authentication_LoginWithTokenCafeEx_oAnyData_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Simple_Authentication_LoginWithTokenCafeEx_retval = do_Result(conn, tree, tvb, off, 'Simple_Authentication_LoginWithTokenCafeEx_retval', 'retval')
off, Simple_Authentication_LoginWithTokenCafeEx_pidPrincipal = do_Uint32(conn, tree, tvb, off, 'Simple_Authentication_LoginWithTokenCafeEx_pidPrincipal', 'pidPrincipal')
off = do_RVConnectionData(conn, tree, tvb, off, 'Simple_Authentication_LoginWithTokenCafeEx_pConnectionData', 'pConnectionData')
off, Simple_Authentication_LoginWithTokenCafeEx_strReturnMsg = do_String(conn, tree, tvb, off, 'Simple_Authentication_LoginWithTokenCafeEx_strReturnMsg', 'strReturnMsg')
 end
			},
			
		}
	})
add_proto(42,
	{
		["nested"] = false,
		["name"] = "Game Session",
		["methods"] = {
[1] = {
				["name"] = "CreateSession",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSession(conn, tree, tvb, off, 'Game_Session_CreateSession_gameSession', 'gameSession')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionKey(conn, tree, tvb, off, 'Game_Session_CreateSession_gameSessionKey', 'gameSessionKey')
 end
			},
			[2] = {
				["name"] = "UpdateSession",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionUpdate(conn, tree, tvb, off, 'Game_Session_UpdateSession_gameSessionUpdate', 'gameSessionUpdate')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[3] = {
				["name"] = "DeleteSession",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionKey(conn, tree, tvb, off, 'Game_Session_DeleteSession_gameSessionKey', 'gameSessionKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[4] = {
				["name"] = "MigrateSession",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionKey(conn, tree, tvb, off, 'Game_Session_MigrateSession_gameSessionKey', 'gameSessionKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionKey(conn, tree, tvb, off, 'Game_Session_MigrateSession_gameSessionKeyMigrated', 'gameSessionKeyMigrated')
 end
			},
			[5] = {
				["name"] = "LeaveSession",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionKey(conn, tree, tvb, off, 'Game_Session_LeaveSession_gameSessionKey', 'gameSessionKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[6] = {
				["name"] = "GetSession",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionKey(conn, tree, tvb, off, 'Game_Session_GetSession_gameSessionKey', 'gameSessionKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionSearchResult(conn, tree, tvb, off, 'Game_Session_GetSession_searchResult', 'searchResult')
 end
			},
			[7] = {
				["name"] = "SearchSessions",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionQuery(conn, tree, tvb, off, 'Game_Session_SearchSessions_gameSessionQuery', 'gameSessionQuery')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Game_Session_SearchSessions_searchResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Game_Session_SearchSessions_searchResults_len, tvb(off,4))
	off = off + 4
	for i=1,Game_Session_SearchSessions_searchResults_len do
	off = do_GameSessionSearchResult(conn, subtree, tvb, off, 'Game_Session_SearchSessions_searchResults_item', 'searchResults')

	end
	
 end
			},
			[8] = {
				["name"] = "AddParticipants",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionKey(conn, tree, tvb, off, 'Game_Session_AddParticipants_gameSessionKey', 'gameSessionKey')
local Game_Session_AddParticipants_publicParticipantIDs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Game_Session_AddParticipants_publicParticipantIDs_len, tvb(off,4))
	off = off + 4
	for i=1,Game_Session_AddParticipants_publicParticipantIDs_len do
	off, Game_Session_AddParticipants_publicParticipantIDs_item = do_Uint32(conn, subtree, tvb, off, 'Game_Session_AddParticipants_publicParticipantIDs_item', 'publicParticipantIDs')

	end
	
local Game_Session_AddParticipants_privateParticipantIDs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Game_Session_AddParticipants_privateParticipantIDs_len, tvb(off,4))
	off = off + 4
	for i=1,Game_Session_AddParticipants_privateParticipantIDs_len do
	off, Game_Session_AddParticipants_privateParticipantIDs_item = do_Uint32(conn, subtree, tvb, off, 'Game_Session_AddParticipants_privateParticipantIDs_item', 'privateParticipantIDs')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[9] = {
				["name"] = "RemoveParticipants",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionKey(conn, tree, tvb, off, 'Game_Session_RemoveParticipants_gameSessionKey', 'gameSessionKey')
local Game_Session_RemoveParticipants_participantIDs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Game_Session_RemoveParticipants_participantIDs_len, tvb(off,4))
	off = off + 4
	for i=1,Game_Session_RemoveParticipants_participantIDs_len do
	off, Game_Session_RemoveParticipants_participantIDs_item = do_Uint32(conn, subtree, tvb, off, 'Game_Session_RemoveParticipants_participantIDs_item', 'participantIDs')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[10] = {
				["name"] = "GetParticipantCount",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionKey(conn, tree, tvb, off, 'Game_Session_GetParticipantCount_gameSessionKey', 'gameSessionKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Game_Session_GetParticipantCount_count = do_Uint32(conn, tree, tvb, off, 'Game_Session_GetParticipantCount_count', 'count')
 end
			},
			[11] = {
				["name"] = "GetParticipants",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionKey(conn, tree, tvb, off, 'Game_Session_GetParticipants_gameSessionKey', 'gameSessionKey')
off = do_ResultRange(conn, tree, tvb, off, 'Game_Session_GetParticipants_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Game_Session_GetParticipants_participants_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Game_Session_GetParticipants_participants_len, tvb(off,4))
	off = off + 4
	for i=1,Game_Session_GetParticipants_participants_len do
	off = do_GameSessionParticipant(conn, subtree, tvb, off, 'Game_Session_GetParticipants_participants_item', 'participants')

	end
	
 end
			},
			[12] = {
				["name"] = "SendInvitation",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionInvitation(conn, tree, tvb, off, 'Game_Session_SendInvitation_invitation', 'invitation')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[13] = {
				["name"] = "GetInvitationReceivedCount",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Game_Session_GetInvitationReceivedCount_gameSessionTypeID = do_Uint32(conn, tree, tvb, off, 'Game_Session_GetInvitationReceivedCount_gameSessionTypeID', 'gameSessionTypeID')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Game_Session_GetInvitationReceivedCount_count = do_Uint32(conn, tree, tvb, off, 'Game_Session_GetInvitationReceivedCount_count', 'count')
 end
			},
			[14] = {
				["name"] = "GetInvitationsReceived",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Game_Session_GetInvitationsReceived_gameSessionTypeID = do_Uint32(conn, tree, tvb, off, 'Game_Session_GetInvitationsReceived_gameSessionTypeID', 'gameSessionTypeID')
off = do_ResultRange(conn, tree, tvb, off, 'Game_Session_GetInvitationsReceived_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Game_Session_GetInvitationsReceived_invitations_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Game_Session_GetInvitationsReceived_invitations_len, tvb(off,4))
	off = off + 4
	for i=1,Game_Session_GetInvitationsReceived_invitations_len do
	off = do_GameSessionInvitationReceived(conn, subtree, tvb, off, 'Game_Session_GetInvitationsReceived_invitations_item', 'invitations')

	end
	
 end
			},
			[15] = {
				["name"] = "GetInvitationSentCount",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Game_Session_GetInvitationSentCount_gameSessionTypeID = do_Uint32(conn, tree, tvb, off, 'Game_Session_GetInvitationSentCount_gameSessionTypeID', 'gameSessionTypeID')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Game_Session_GetInvitationSentCount_count = do_Uint32(conn, tree, tvb, off, 'Game_Session_GetInvitationSentCount_count', 'count')
 end
			},
			[16] = {
				["name"] = "GetInvitationsSent",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Game_Session_GetInvitationsSent_gameSessionTypeID = do_Uint32(conn, tree, tvb, off, 'Game_Session_GetInvitationsSent_gameSessionTypeID', 'gameSessionTypeID')
off = do_ResultRange(conn, tree, tvb, off, 'Game_Session_GetInvitationsSent_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Game_Session_GetInvitationsSent_invitations_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Game_Session_GetInvitationsSent_invitations_len, tvb(off,4))
	off = off + 4
	for i=1,Game_Session_GetInvitationsSent_invitations_len do
	off = do_GameSessionInvitationSent(conn, subtree, tvb, off, 'Game_Session_GetInvitationsSent_invitations_item', 'invitations')

	end
	
 end
			},
			[17] = {
				["name"] = "AcceptInvitation",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionInvitationReceived(conn, tree, tvb, off, 'Game_Session_AcceptInvitation_gameSessionInvitation', 'gameSessionInvitation')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[18] = {
				["name"] = "DeclineInvitation",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionInvitationReceived(conn, tree, tvb, off, 'Game_Session_DeclineInvitation_gameSessionInvitation', 'gameSessionInvitation')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[19] = {
				["name"] = "CancelInvitation",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionInvitationSent(conn, tree, tvb, off, 'Game_Session_CancelInvitation_gameSessionInvitation', 'gameSessionInvitation')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[20] = {
				["name"] = "SendTextMessage",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionMessage(conn, tree, tvb, off, 'Game_Session_SendTextMessage_gameSessionMessage', 'gameSessionMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[21] = {
				["name"] = "RegisterURLs",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Game_Session_RegisterURLs_stationURLs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Game_Session_RegisterURLs_stationURLs_len, tvb(off,4))
	off = off + 4
	for i=1,Game_Session_RegisterURLs_stationURLs_len do
	off, Game_Session_RegisterURLs_stationURLs_item = do_StationURL(conn, subtree, tvb, off, 'Game_Session_RegisterURLs_stationURLs_item', 'stationURLs')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[22] = {
				["name"] = "JoinSession",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionKey(conn, tree, tvb, off, 'Game_Session_JoinSession_gameSessionKey', 'gameSessionKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[23] = {
				["name"] = "AbandonSession",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionKey(conn, tree, tvb, off, 'Game_Session_AbandonSession_gameSessionKey', 'gameSessionKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[24] = {
				["name"] = "SearchSessionsWithParticipants",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Game_Session_SearchSessionsWithParticipants_gameSessionTypeID = do_Uint32(conn, tree, tvb, off, 'Game_Session_SearchSessionsWithParticipants_gameSessionTypeID', 'gameSessionTypeID')
local Game_Session_SearchSessionsWithParticipants_participantIDs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Game_Session_SearchSessionsWithParticipants_participantIDs_len, tvb(off,4))
	off = off + 4
	for i=1,Game_Session_SearchSessionsWithParticipants_participantIDs_len do
	off, Game_Session_SearchSessionsWithParticipants_participantIDs_item = do_Uint32(conn, subtree, tvb, off, 'Game_Session_SearchSessionsWithParticipants_participantIDs_item', 'participantIDs')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Game_Session_SearchSessionsWithParticipants_searchResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Game_Session_SearchSessionsWithParticipants_searchResults_len, tvb(off,4))
	off = off + 4
	for i=1,Game_Session_SearchSessionsWithParticipants_searchResults_len do
	off = do_GameSessionSearchWithParticipantsResult(conn, subtree, tvb, off, 'Game_Session_SearchSessionsWithParticipants_searchResults_item', 'searchResults')

	end
	
 end
			},
			[25] = {
				["name"] = "GetSessions",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Game_Session_GetSessions_gameSessionKeys_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Game_Session_GetSessions_gameSessionKeys_len, tvb(off,4))
	off = off + 4
	for i=1,Game_Session_GetSessions_gameSessionKeys_len do
	off = do_GameSessionKey(conn, subtree, tvb, off, 'Game_Session_GetSessions_gameSessionKeys_item', 'gameSessionKeys')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Game_Session_GetSessions_searchResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Game_Session_GetSessions_searchResults_len, tvb(off,4))
	off = off + 4
	for i=1,Game_Session_GetSessions_searchResults_len do
	off = do_GameSessionSearchResult(conn, subtree, tvb, off, 'Game_Session_GetSessions_searchResults_item', 'searchResults')

	end
	
 end
			},
			[26] = {
				["name"] = "GetParticipantsURLs",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionKey(conn, tree, tvb, off, 'Game_Session_GetParticipantsURLs_gameSessionKey', 'gameSessionKey')
local Game_Session_GetParticipantsURLs_participantIDs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Game_Session_GetParticipantsURLs_participantIDs_len, tvb(off,4))
	off = off + 4
	for i=1,Game_Session_GetParticipantsURLs_participantIDs_len do
	off, Game_Session_GetParticipantsURLs_participantIDs_item = do_Uint32(conn, subtree, tvb, off, 'Game_Session_GetParticipantsURLs_participantIDs_item', 'participantIDs')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Game_Session_GetParticipantsURLs_participants_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Game_Session_GetParticipantsURLs_participants_len, tvb(off,4))
	off = off + 4
	for i=1,Game_Session_GetParticipantsURLs_participants_len do
	off = do_GameSessionParticipant(conn, subtree, tvb, off, 'Game_Session_GetParticipantsURLs_participants_item', 'participants')

	end
	
 end
			},
			[27] = {
				["name"] = "MigrateSessionHost",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionKey(conn, tree, tvb, off, 'Game_Session_MigrateSessionHost_gameSessionKey', 'gameSessionKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[28] = {
				["name"] = "SplitSession",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionKey(conn, tree, tvb, off, 'Game_Session_SplitSession_gameSessionKey', 'gameSessionKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionKey(conn, tree, tvb, off, 'Game_Session_SplitSession_gameSessionKeyMigrated', 'gameSessionKeyMigrated')
 end
			},
			[29] = {
				["name"] = "SearchSocialSessions",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GameSessionSocialQuery(conn, tree, tvb, off, 'Game_Session_SearchSocialSessions_gameSessionSocialQuery', 'gameSessionSocialQuery')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Game_Session_SearchSocialSessions_searchResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Game_Session_SearchSocialSessions_searchResults_len, tvb(off,4))
	off = off + 4
	for i=1,Game_Session_SearchSocialSessions_searchResults_len do
	off = do_GameSessionSearchWithParticipantsResult(conn, subtree, tvb, off, 'Game_Session_SearchSocialSessions_searchResults_item', 'searchResults')

	end
	
 end
			},
			[30] = {
				["name"] = "ReportUnsuccessfulJoinSessions",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Game_Session_ReportUnsuccessfulJoinSessions_unsuccessfulJoinSessions_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Game_Session_ReportUnsuccessfulJoinSessions_unsuccessfulJoinSessions_len, tvb(off,4))
	off = off + 4
	for i=1,Game_Session_ReportUnsuccessfulJoinSessions_unsuccessfulJoinSessions_len do
	off = do_GameSessionUnsuccessfulJoinSession(conn, subtree, tvb, off, 'Game_Session_ReportUnsuccessfulJoinSessions_unsuccessfulJoinSessions_item', 'unsuccessfulJoinSessions')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			
		}
	})
add_proto(122,
	{
		["nested"] = false,
		["name"] = "Ranking 2",
		["methods"] = {
[1] = {
				["name"] = "PutScore",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Ranking_2_PutScore_scoreDataList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ranking_2_PutScore_scoreDataList_len, tvb(off,4))
	off = off + 4
	for i=1,Ranking_2_PutScore_scoreDataList_len do
	off = do_Ranking2ScoreData(conn, subtree, tvb, off, 'Ranking_2_PutScore_scoreDataList_item', 'scoreDataList')

	end
	
off, Ranking_2_PutScore_nexUniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_2_PutScore_nexUniqueId', 'nexUniqueId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[2] = {
				["name"] = "GetCommonData",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_2_GetCommonData_optionFlags = do_Uint32(conn, tree, tvb, off, 'Ranking_2_GetCommonData_optionFlags', 'optionFlags')
off, Ranking_2_GetCommonData_principalId = do_PID(conn, tree, tvb, off, 'Ranking_2_GetCommonData_principalId', 'principalId')
off, Ranking_2_GetCommonData_nexUniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_2_GetCommonData_nexUniqueId', 'nexUniqueId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_Ranking2CommonData(conn, tree, tvb, off, 'Ranking_2_GetCommonData_commonData', 'commonData')
 end
			},
			[3] = {
				["name"] = "PutCommonData",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_Ranking2CommonData(conn, tree, tvb, off, 'Ranking_2_PutCommonData_commonData', 'commonData')
off, Ranking_2_PutCommonData_nexUniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_2_PutCommonData_nexUniqueId', 'nexUniqueId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[4] = {
				["name"] = "DeleteCommonData",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_2_DeleteCommonData_nexUniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_2_DeleteCommonData_nexUniqueId', 'nexUniqueId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[5] = {
				["name"] = "GetRanking",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_Ranking2GetParam(conn, tree, tvb, off, 'Ranking_2_GetRanking_getParam', 'getParam')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_Ranking2Info(conn, tree, tvb, off, 'Ranking_2_GetRanking_rankingInfo', 'rankingInfo')
 end
			},
			[6] = {
				["name"] = "GetRankingByPrincipalId",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_Ranking2GetByListParam(conn, tree, tvb, off, 'Ranking_2_GetRankingByPrincipalId_getParam', 'getParam')
local Ranking_2_GetRankingByPrincipalId_principalIdList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ranking_2_GetRankingByPrincipalId_principalIdList_len, tvb(off,4))
	off = off + 4
	for i=1,Ranking_2_GetRankingByPrincipalId_principalIdList_len do
	off, Ranking_2_GetRankingByPrincipalId_principalIdList_item = do_PID(conn, subtree, tvb, off, 'Ranking_2_GetRankingByPrincipalId_principalIdList_item', 'principalIdList')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_Ranking2Info(conn, tree, tvb, off, 'Ranking_2_GetRankingByPrincipalId_rankingInfo', 'rankingInfo')
 end
			},
			[7] = {
				["name"] = "GetCategorySetting",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_2_GetCategorySetting_category = do_Uint32(conn, tree, tvb, off, 'Ranking_2_GetCategorySetting_category', 'category')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_Ranking2CategorySetting(conn, tree, tvb, off, 'Ranking_2_GetCategorySetting_categorySetting', 'categorySetting')
 end
			},
			[8] = {
				["name"] = "GetRankingChart",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_Ranking2ChartInfoInput(conn, tree, tvb, off, 'Ranking_2_GetRankingChart_info', 'info')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_Ranking2ChartInfo(conn, tree, tvb, off, 'Ranking_2_GetRankingChart_chart', 'chart')
 end
			},
			[9] = {
				["name"] = "GetRankingCharts",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Ranking_2_GetRankingCharts_infoArray_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ranking_2_GetRankingCharts_infoArray_len, tvb(off,4))
	off = off + 4
	for i=1,Ranking_2_GetRankingCharts_infoArray_len do
	off = do_Ranking2ChartInfoInput(conn, subtree, tvb, off, 'Ranking_2_GetRankingCharts_infoArray_item', 'infoArray')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Ranking_2_GetRankingCharts_chartArray_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ranking_2_GetRankingCharts_chartArray_len, tvb(off,4))
	off = off + 4
	for i=1,Ranking_2_GetRankingCharts_chartArray_len do
	off = do_Ranking2ChartInfo(conn, subtree, tvb, off, 'Ranking_2_GetRankingCharts_chartArray_item', 'chartArray')

	end
	
 end
			},
			[10] = {
				["name"] = "GetEstimateScoreRank",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_Ranking2EstimateScoreRankInput(conn, tree, tvb, off, 'Ranking_2_GetEstimateScoreRank_input', 'input')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_Ranking2EstimateScoreRankOutput(conn, tree, tvb, off, 'Ranking_2_GetEstimateScoreRank_output', 'output')
 end
			},
			[11] = {
				["name"] = "GetEstimateMyScoreRank",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	})
add_proto(29,
	{
		["nested"] = false,
		["name"] = "Ubi Account Management",
		["methods"] = {
[1] = {
				["name"] = "CreateAccount",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_UbiAccount(conn, tree, tvb, off, 'Ubi_Account_Management_CreateAccount_ubiAccount', 'ubiAccount')
local Ubi_Account_Management_CreateAccount_failedReasons_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_CreateAccount_failedReasons_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_CreateAccount_failedReasons_len do
	off = do_ValidationFailureReason(conn, subtree, tvb, off, 'Ubi_Account_Management_CreateAccount_failedReasons_item', 'failedReasons')

	end
	
 end
			},
			[2] = {
				["name"] = "UpdateAccount",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_UbiAccount(conn, tree, tvb, off, 'Ubi_Account_Management_UpdateAccount_ubiAccount', 'ubiAccount')
local Ubi_Account_Management_UpdateAccount_failedReasons_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_UpdateAccount_failedReasons_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_UpdateAccount_failedReasons_len do
	off = do_ValidationFailureReason(conn, subtree, tvb, off, 'Ubi_Account_Management_UpdateAccount_failedReasons_item', 'failedReasons')

	end
	
 end
			},
			[3] = {
				["name"] = "GetAccount",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_UbiAccount(conn, tree, tvb, off, 'Ubi_Account_Management_GetAccount_ubiAccount', 'ubiAccount')
off, Ubi_Account_Management_GetAccount_exists = do_Bool(conn, tree, tvb, off, 'Ubi_Account_Management_GetAccount_exists', 'exists')
 end
			},
			[4] = {
				["name"] = "LinkAccount",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ubi_Account_Management_LinkAccount_ubiAccountUsername = do_String(conn, tree, tvb, off, 'Ubi_Account_Management_LinkAccount_ubiAccountUsername', 'ubiAccountUsername')
off, Ubi_Account_Management_LinkAccount_ubiAccountPassword = do_String(conn, tree, tvb, off, 'Ubi_Account_Management_LinkAccount_ubiAccountPassword', 'ubiAccountPassword')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[5] = {
				["name"] = "GetTOS",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ubi_Account_Management_GetTOS_countryCode = do_String(conn, tree, tvb, off, 'Ubi_Account_Management_GetTOS_countryCode', 'countryCode')
off, Ubi_Account_Management_GetTOS_languageCode = do_String(conn, tree, tvb, off, 'Ubi_Account_Management_GetTOS_languageCode', 'languageCode')
off, Ubi_Account_Management_GetTOS_htmlVersion = do_Bool(conn, tree, tvb, off, 'Ubi_Account_Management_GetTOS_htmlVersion', 'htmlVersion')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_TOS(conn, tree, tvb, off, 'Ubi_Account_Management_GetTOS_tos', 'tos')
 end
			},
			[6] = {
				["name"] = "ValidateUsername",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ubi_Account_Management_ValidateUsername_username = do_String(conn, tree, tvb, off, 'Ubi_Account_Management_ValidateUsername_username', 'username')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_UsernameValidation(conn, tree, tvb, off, 'Ubi_Account_Management_ValidateUsername_usernameValidation', 'usernameValidation')
 end
			},
			[7] = {
				["name"] = "ValidatePassword",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ubi_Account_Management_ValidatePassword_password = do_String(conn, tree, tvb, off, 'Ubi_Account_Management_ValidatePassword_password', 'password')
off, Ubi_Account_Management_ValidatePassword_username = do_String(conn, tree, tvb, off, 'Ubi_Account_Management_ValidatePassword_username', 'username')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Ubi_Account_Management_ValidatePassword_failedReasons_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_ValidatePassword_failedReasons_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_ValidatePassword_failedReasons_len do
	off = do_ValidationFailureReason(conn, subtree, tvb, off, 'Ubi_Account_Management_ValidatePassword_failedReasons_item', 'failedReasons')

	end
	
 end
			},
			[8] = {
				["name"] = "ValidateEmail",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ubi_Account_Management_ValidateEmail_email = do_String(conn, tree, tvb, off, 'Ubi_Account_Management_ValidateEmail_email', 'email')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Ubi_Account_Management_ValidateEmail_failedReasons_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_ValidateEmail_failedReasons_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_ValidateEmail_failedReasons_len do
	off = do_ValidationFailureReason(conn, subtree, tvb, off, 'Ubi_Account_Management_ValidateEmail_failedReasons_item', 'failedReasons')

	end
	
 end
			},
			[9] = {
				["name"] = "GetCountryList",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ubi_Account_Management_GetCountryList_languageCode = do_String(conn, tree, tvb, off, 'Ubi_Account_Management_GetCountryList_languageCode', 'languageCode')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Ubi_Account_Management_GetCountryList_countries_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_GetCountryList_countries_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_GetCountryList_countries_len do
	off = do_Country(conn, subtree, tvb, off, 'Ubi_Account_Management_GetCountryList_countries_item', 'countries')

	end
	
 end
			},
			[10] = {
				["name"] = "ForgetPassword",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ubi_Account_Management_ForgetPassword_usernameOrEmail = do_String(conn, tree, tvb, off, 'Ubi_Account_Management_ForgetPassword_usernameOrEmail', 'usernameOrEmail')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[11] = {
				["name"] = "LookupPrincipalIds",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Ubi_Account_Management_LookupPrincipalIds_ubiAccountIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_LookupPrincipalIds_ubiAccountIds_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_LookupPrincipalIds_ubiAccountIds_len do
	off, Ubi_Account_Management_LookupPrincipalIds_ubiAccountIds_item = do_String(conn, subtree, tvb, off, 'Ubi_Account_Management_LookupPrincipalIds_ubiAccountIds_item', 'ubiAccountIds')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Ubi_Account_Management_LookupPrincipalIds_pids_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_LookupPrincipalIds_pids_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_LookupPrincipalIds_pids_len do
	off, Ubi_Account_Management_LookupPrincipalIds_pids_key = do_String(conn, subtree, tvb, off, 'Ubi_Account_Management_LookupPrincipalIds_pids_key', 'pids')

off, Ubi_Account_Management_LookupPrincipalIds_pids_value = do_Uint32(conn, subtree, tvb, off, 'Ubi_Account_Management_LookupPrincipalIds_pids_value', 'pids')

	end
	
 end
			},
			[12] = {
				["name"] = "LookupUbiAccountIDsByPids",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Ubi_Account_Management_LookupUbiAccountIDsByPids_pids_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_LookupUbiAccountIDsByPids_pids_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_LookupUbiAccountIDsByPids_pids_len do
	off, Ubi_Account_Management_LookupUbiAccountIDsByPids_pids_item = do_Uint32(conn, subtree, tvb, off, 'Ubi_Account_Management_LookupUbiAccountIDsByPids_pids_item', 'pids')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Ubi_Account_Management_LookupUbiAccountIDsByPids_ubiaccountIDs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_LookupUbiAccountIDsByPids_ubiaccountIDs_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_LookupUbiAccountIDsByPids_ubiaccountIDs_len do
	off, Ubi_Account_Management_LookupUbiAccountIDsByPids_ubiaccountIDs_key = do_Uint32(conn, subtree, tvb, off, 'Ubi_Account_Management_LookupUbiAccountIDsByPids_ubiaccountIDs_key', 'ubiaccountIDs')

off, Ubi_Account_Management_LookupUbiAccountIDsByPids_ubiaccountIDs_value = do_String(conn, subtree, tvb, off, 'Ubi_Account_Management_LookupUbiAccountIDsByPids_ubiaccountIDs_value', 'ubiaccountIDs')

	end
	
 end
			},
			[13] = {
				["name"] = "LookupUbiAccountIDsByUsernames",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Ubi_Account_Management_LookupUbiAccountIDsByUsernames_Usernames_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_LookupUbiAccountIDsByUsernames_Usernames_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_LookupUbiAccountIDsByUsernames_Usernames_len do
	off, Ubi_Account_Management_LookupUbiAccountIDsByUsernames_Usernames_item = do_String(conn, subtree, tvb, off, 'Ubi_Account_Management_LookupUbiAccountIDsByUsernames_Usernames_item', 'Usernames')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Ubi_Account_Management_LookupUbiAccountIDsByUsernames_UbiAccountIDs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_LookupUbiAccountIDsByUsernames_UbiAccountIDs_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_LookupUbiAccountIDsByUsernames_UbiAccountIDs_len do
	off, Ubi_Account_Management_LookupUbiAccountIDsByUsernames_UbiAccountIDs_key = do_String(conn, subtree, tvb, off, 'Ubi_Account_Management_LookupUbiAccountIDsByUsernames_UbiAccountIDs_key', 'UbiAccountIDs')

off, Ubi_Account_Management_LookupUbiAccountIDsByUsernames_UbiAccountIDs_value = do_String(conn, subtree, tvb, off, 'Ubi_Account_Management_LookupUbiAccountIDsByUsernames_UbiAccountIDs_value', 'UbiAccountIDs')

	end
	
 end
			},
			[14] = {
				["name"] = "LookupUsernamesByUbiAccountIDs",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_UbiAccountIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_UbiAccountIds_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_UbiAccountIds_len do
	off, Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_UbiAccountIds_item = do_String(conn, subtree, tvb, off, 'Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_UbiAccountIds_item', 'UbiAccountIds')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_Usernames_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_Usernames_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_Usernames_len do
	off, Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_Usernames_key = do_String(conn, subtree, tvb, off, 'Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_Usernames_key', 'Usernames')

off, Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_Usernames_value = do_String(conn, subtree, tvb, off, 'Ubi_Account_Management_LookupUsernamesByUbiAccountIDs_Usernames_value', 'Usernames')

	end
	
 end
			},
			[15] = {
				["name"] = "LookupUbiAccountIDsByUsernameSubString",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ubi_Account_Management_LookupUbiAccountIDsByUsernameSubString_UsernameSubString = do_String(conn, tree, tvb, off, 'Ubi_Account_Management_LookupUbiAccountIDsByUsernameSubString_UsernameSubString', 'UsernameSubString')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Ubi_Account_Management_LookupUbiAccountIDsByUsernameSubString_UbiAccountIDs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_LookupUbiAccountIDsByUsernameSubString_UbiAccountIDs_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_LookupUbiAccountIDsByUsernameSubString_UbiAccountIDs_len do
	off, Ubi_Account_Management_LookupUbiAccountIDsByUsernameSubString_UbiAccountIDs_key = do_String(conn, subtree, tvb, off, 'Ubi_Account_Management_LookupUbiAccountIDsByUsernameSubString_UbiAccountIDs_key', 'UbiAccountIDs')

off, Ubi_Account_Management_LookupUbiAccountIDsByUsernameSubString_UbiAccountIDs_value = do_String(conn, subtree, tvb, off, 'Ubi_Account_Management_LookupUbiAccountIDsByUsernameSubString_UbiAccountIDs_value', 'UbiAccountIDs')

	end
	
 end
			},
			[16] = {
				["name"] = "UserHasPlayed",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Ubi_Account_Management_UserHasPlayed_UbiAccountIDs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_UserHasPlayed_UbiAccountIDs_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_UserHasPlayed_UbiAccountIDs_len do
	off, Ubi_Account_Management_UserHasPlayed_UbiAccountIDs_item = do_String(conn, subtree, tvb, off, 'Ubi_Account_Management_UserHasPlayed_UbiAccountIDs_item', 'UbiAccountIDs')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Ubi_Account_Management_UserHasPlayed_UserPresence_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_UserHasPlayed_UserPresence_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_UserHasPlayed_UserPresence_len do
	off, Ubi_Account_Management_UserHasPlayed_UserPresence_key = do_String(conn, subtree, tvb, off, 'Ubi_Account_Management_UserHasPlayed_UserPresence_key', 'UserPresence')

off, Ubi_Account_Management_UserHasPlayed_UserPresence_value = do_Bool(conn, subtree, tvb, off, 'Ubi_Account_Management_UserHasPlayed_UserPresence_value', 'UserPresence')

	end
	
 end
			},
			[17] = {
				["name"] = "IsUserPlaying",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Ubi_Account_Management_IsUserPlaying_UbiAccountIDs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_IsUserPlaying_UbiAccountIDs_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_IsUserPlaying_UbiAccountIDs_len do
	off, Ubi_Account_Management_IsUserPlaying_UbiAccountIDs_item = do_String(conn, subtree, tvb, off, 'Ubi_Account_Management_IsUserPlaying_UbiAccountIDs_item', 'UbiAccountIDs')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Ubi_Account_Management_IsUserPlaying_UserPresence_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_IsUserPlaying_UserPresence_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_IsUserPlaying_UserPresence_len do
	off, Ubi_Account_Management_IsUserPlaying_UserPresence_key = do_String(conn, subtree, tvb, off, 'Ubi_Account_Management_IsUserPlaying_UserPresence_key', 'UserPresence')

off, Ubi_Account_Management_IsUserPlaying_UserPresence_value = do_Bool(conn, subtree, tvb, off, 'Ubi_Account_Management_IsUserPlaying_UserPresence_value', 'UserPresence')

	end
	
 end
			},
			[18] = {
				["name"] = "LookupUbiAccountIDsByUsernamesGlobal",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_Usernames_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_Usernames_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_Usernames_len do
	off, Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_Usernames_item = do_String(conn, subtree, tvb, off, 'Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_Usernames_item', 'Usernames')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_UbiAccountIDs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_UbiAccountIDs_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_UbiAccountIDs_len do
	off, Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_UbiAccountIDs_key = do_String(conn, subtree, tvb, off, 'Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_UbiAccountIDs_key', 'UbiAccountIDs')

off, Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_UbiAccountIDs_value = do_String(conn, subtree, tvb, off, 'Ubi_Account_Management_LookupUbiAccountIDsByUsernamesGlobal_UbiAccountIDs_value', 'UbiAccountIDs')

	end
	
 end
			},
			[19] = {
				["name"] = "LookupUbiAccountIDsByEmailsGlobal",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_Emails_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_Emails_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_Emails_len do
	off, Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_Emails_item = do_String(conn, subtree, tvb, off, 'Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_Emails_item', 'Emails')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_UbiAccountIDs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_UbiAccountIDs_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_UbiAccountIDs_len do
	off, Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_UbiAccountIDs_key = do_String(conn, subtree, tvb, off, 'Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_UbiAccountIDs_key', 'UbiAccountIDs')

off, Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_UbiAccountIDs_value = do_String(conn, subtree, tvb, off, 'Ubi_Account_Management_LookupUbiAccountIDsByEmailsGlobal_UbiAccountIDs_value', 'UbiAccountIDs')

	end
	
 end
			},
			[20] = {
				["name"] = "LookupUsernamesByUbiAccountIDsGlobal",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_UbiAccountIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_UbiAccountIds_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_UbiAccountIds_len do
	off, Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_UbiAccountIds_item = do_String(conn, subtree, tvb, off, 'Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_UbiAccountIds_item', 'UbiAccountIds')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_Usernames_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_Usernames_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_Usernames_len do
	off, Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_Usernames_key = do_String(conn, subtree, tvb, off, 'Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_Usernames_key', 'Usernames')

off, Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_Usernames_value = do_String(conn, subtree, tvb, off, 'Ubi_Account_Management_LookupUsernamesByUbiAccountIDsGlobal_Usernames_value', 'Usernames')

	end
	
 end
			},
			[21] = {
				["name"] = "GetTOSEx",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ubi_Account_Management_GetTOSEx_countryCode = do_String(conn, tree, tvb, off, 'Ubi_Account_Management_GetTOSEx_countryCode', 'countryCode')
off, Ubi_Account_Management_GetTOSEx_languageCode = do_String(conn, tree, tvb, off, 'Ubi_Account_Management_GetTOSEx_languageCode', 'languageCode')
off, Ubi_Account_Management_GetTOSEx_htmlVersion = do_Bool(conn, tree, tvb, off, 'Ubi_Account_Management_GetTOSEx_htmlVersion', 'htmlVersion')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_TOSEx(conn, tree, tvb, off, 'Ubi_Account_Management_GetTOSEx_tosex', 'tosex')
 end
			},
			[22] = {
				["name"] = "HasAcceptedLatestTOS",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Ubi_Account_Management_HasAcceptedLatestTOS_hasAccepted = do_Bool(conn, tree, tvb, off, 'Ubi_Account_Management_HasAcceptedLatestTOS_hasAccepted', 'hasAccepted')
local Ubi_Account_Management_HasAcceptedLatestTOS_failedReasons_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_HasAcceptedLatestTOS_failedReasons_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_HasAcceptedLatestTOS_failedReasons_len do
	off = do_ValidationFailureReason(conn, subtree, tvb, off, 'Ubi_Account_Management_HasAcceptedLatestTOS_failedReasons_item', 'failedReasons')

	end
	
 end
			},
			[23] = {
				["name"] = "AcceptLatestTOS",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Ubi_Account_Management_AcceptLatestTOS_failedReasons_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ubi_Account_Management_AcceptLatestTOS_failedReasons_len, tvb(off,4))
	off = off + 4
	for i=1,Ubi_Account_Management_AcceptLatestTOS_failedReasons_len do
	off = do_ValidationFailureReason(conn, subtree, tvb, off, 'Ubi_Account_Management_AcceptLatestTOS_failedReasons_item', 'failedReasons')

	end
	
 end
			},
			
		}
	})
add_proto(50,
	{
		["nested"] = false,
		["name"] = "Match Making Ext",
		["methods"] = {
[1] = {
				["name"] = "EndParticipation",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_Ext_EndParticipation_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_Ext_EndParticipation_idGathering', 'idGathering')
off, Match_Making_Ext_EndParticipation_strMessage = do_String(conn, tree, tvb, off, 'Match_Making_Ext_EndParticipation_strMessage', 'strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_Ext_EndParticipation_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_Ext_EndParticipation_retval', 'retval')
 end
			},
			[2] = {
				["name"] = "GetParticipants",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_Ext_GetParticipants_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_Ext_GetParticipants_idGathering', 'idGathering')
off, Match_Making_Ext_GetParticipants_bOnlyActive = do_Bool(conn, tree, tvb, off, 'Match_Making_Ext_GetParticipants_bOnlyActive', 'bOnlyActive')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Match_Making_Ext_GetParticipants_lstParticipants_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_Ext_GetParticipants_lstParticipants_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_Ext_GetParticipants_lstParticipants_len do
	off, Match_Making_Ext_GetParticipants_lstParticipants_item = do_PID(conn, subtree, tvb, off, 'Match_Making_Ext_GetParticipants_lstParticipants_item', 'lstParticipants')

	end
	
 end
			},
			[3] = {
				["name"] = "GetDetailedParticipants",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_Ext_GetDetailedParticipants_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_Ext_GetDetailedParticipants_idGathering', 'idGathering')
off, Match_Making_Ext_GetDetailedParticipants_bOnlyActiv = do_Bool(conn, tree, tvb, off, 'Match_Making_Ext_GetDetailedParticipants_bOnlyActiv', 'bOnlyActiv')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Match_Making_Ext_GetDetailedParticipants_lstParticipants_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_Ext_GetDetailedParticipants_lstParticipants_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_Ext_GetDetailedParticipants_lstParticipants_len do
	off = do_ParticipantDetails(conn, subtree, tvb, off, 'Match_Making_Ext_GetDetailedParticipants_lstParticipants_item', 'lstParticipants')

	end
	
 end
			},
			[4] = {
				["name"] = "GetParticipantsURLs",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Match_Making_Ext_GetParticipantsURLs_lstGatherings_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_Ext_GetParticipantsURLs_lstGatherings_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_Ext_GetParticipantsURLs_lstGatherings_len do
	off, Match_Making_Ext_GetParticipantsURLs_lstGatherings_item = do_Uint32(conn, subtree, tvb, off, 'Match_Making_Ext_GetParticipantsURLs_lstGatherings_item', 'lstGatherings')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Match_Making_Ext_GetParticipantsURLs_lstGatheringURLs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_Ext_GetParticipantsURLs_lstGatheringURLs_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_Ext_GetParticipantsURLs_lstGatheringURLs_len do
	off = do_GatheringURLs(conn, subtree, tvb, off, 'Match_Making_Ext_GetParticipantsURLs_lstGatheringURLs_item', 'lstGatheringURLs')

	end
	
 end
			},
			[5] = {
				["name"] = "GetGatheringRelations",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_Ext_GetGatheringRelations_id = do_Uint32(conn, tree, tvb, off, 'Match_Making_Ext_GetGatheringRelations_id', 'id')
off, Match_Making_Ext_GetGatheringRelations_descr = do_String(conn, tree, tvb, off, 'Match_Making_Ext_GetGatheringRelations_descr', 'descr')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_Ext_GetGatheringRelations_retval = do_String(conn, tree, tvb, off, 'Match_Making_Ext_GetGatheringRelations_retval', 'retval')
 end
			},
			[6] = {
				["name"] = "DeleteFromDeletions",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Match_Making_Ext_DeleteFromDeletions_lstDeletions_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_Ext_DeleteFromDeletions_lstDeletions_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_Ext_DeleteFromDeletions_lstDeletions_len do
	off, Match_Making_Ext_DeleteFromDeletions_lstDeletions_item = do_Uint32(conn, subtree, tvb, off, 'Match_Making_Ext_DeleteFromDeletions_lstDeletions_item', 'lstDeletions')

	end
	
off, Match_Making_Ext_DeleteFromDeletions_pid = do_PID(conn, tree, tvb, off, 'Match_Making_Ext_DeleteFromDeletions_pid', 'pid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			
		}
	})
add_proto(19,
	{
		["nested"] = false,
		["name"] = "Monitoring",
		["methods"] = {
[1] = {
				["name"] = "PingDaemon",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Monitoring_PingDaemon_retval = do_Bool(conn, tree, tvb, off, 'Monitoring_PingDaemon_retval', 'retval')
 end
			},
			[2] = {
				["name"] = "GetClusterMembers",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Monitoring_GetClusterMembers_strValues_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Monitoring_GetClusterMembers_strValues_len, tvb(off,4))
	off = off + 4
	for i=1,Monitoring_GetClusterMembers_strValues_len do
	off, Monitoring_GetClusterMembers_strValues_item = do_String(conn, subtree, tvb, off, 'Monitoring_GetClusterMembers_strValues_item', 'strValues')

	end
	
 end
			},
			
		}
	})
add_proto(116,
	{
		["nested"] = false,
		["name"] = "Debug",
		["methods"] = {
[1] = {
				["name"] = "EnableApiRecorder",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[2] = {
				["name"] = "DisableApiRecorder",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[3] = {
				["name"] = "IsApiRecorderEnabled",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Debug_IsApiRecorderEnabled_True_if_the_api_recorder_is_enabled = do_Bool(conn, tree, tvb, off, 'Debug_IsApiRecorderEnabled_True_if_the_api_recorder_is_enabled', 'True if the api recorder is enabled')
 end
			},
			[4] = {
				["name"] = "GetApiCalls",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Debug_GetApiCalls_Pids_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Debug_GetApiCalls_Pids_len, tvb(off,4))
	off = off + 4
	for i=1,Debug_GetApiCalls_Pids_len do
	off, Debug_GetApiCalls_Pids_item = do_PID(conn, subtree, tvb, off, 'Debug_GetApiCalls_Pids_item', 'Pids')

	end
	
off, Debug_GetApiCalls_Unknown = do_DateTime(conn, tree, tvb, off, 'Debug_GetApiCalls_Unknown', 'Unknown')
off, Debug_GetApiCalls_Unknown = do_DateTime(conn, tree, tvb, off, 'Debug_GetApiCalls_Unknown', 'Unknown')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Debug_GetApiCalls_Api_calls_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Debug_GetApiCalls_Api_calls_len, tvb(off,4))
	off = off + 4
	for i=1,Debug_GetApiCalls_Api_calls_len do
	off = do_ApiCall(conn, subtree, tvb, off, 'Debug_GetApiCalls_Api_calls_item', 'Api calls')

	end
	
 end
			},
			[5] = {
				["name"] = "SetExcludeJoinedMatchmakeSession",
				["request"] = nil,
				["response"] = nil
			},
			[6] = {
				["name"] = "GetExcludeJoinedMatchmakeSession",
				["request"] = nil,
				["response"] = nil
			},
			[7] = {
				["name"] = "GetApiCallSummary",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	})
add_proto(110,
	{
		["nested"] = true,
		["name"] = "Splatoon 2",
		["methods"] = {
[9] = {
				["name"] = "AcquireTagId",
				["request"] = function (conn, tree, tvb)
	local off = 0
local Splatoon_2_AcquireTagId_nexUniqueIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Splatoon_2_AcquireTagId_nexUniqueIds_len, tvb(off,4))
	off = off + 4
	for i=1,Splatoon_2_AcquireTagId_nexUniqueIds_len do
	off, Splatoon_2_AcquireTagId_nexUniqueIds_item = do_Uint64(conn, subtree, tvb, off, 'Splatoon_2_AcquireTagId_nexUniqueIds_item', 'nexUniqueIds')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Splatoon_2_AcquireTagId_pTagId = do_Uint64(conn, tree, tvb, off, 'Splatoon_2_AcquireTagId_pTagId', 'pTagId')
 end
			},
			[10] = {
				["name"] = "UpdateCurrentUser",
				["request"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type UpdateCurrentUserParam]]
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			
		}
	})
add_proto(0x73,
	{
		["nested"] = true,
		["name"] = "SMO",
		["methods"] = {
[47] = {
				["name"] = "AddToBufferQueue",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_BufferQueueParam(conn, tree, tvb, off, 'SMO_AddToBufferQueue_param', 'param')
off, SMO_AddToBufferQueue_buffer = do_qBuffer(conn, tree, tvb, off, 'SMO_AddToBufferQueue_buffer', 'buffer')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[48] = {
				["name"] = "AddToBufferQueues",
				["request"] = function (conn, tree, tvb)
	local off = 0
local SMO_AddToBufferQueues_params_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMO_AddToBufferQueues_params_len, tvb(off,4))
	off = off + 4
	for i=1,SMO_AddToBufferQueues_params_len do
	off = do_BufferQueueParam(conn, subtree, tvb, off, 'SMO_AddToBufferQueues_params_item', 'params')

	end
	
local SMO_AddToBufferQueues_buffers_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMO_AddToBufferQueues_buffers_len, tvb(off,4))
	off = off + 4
	for i=1,SMO_AddToBufferQueues_buffers_len do
	off, SMO_AddToBufferQueues_buffers_item = do_qBuffer(conn, subtree, tvb, off, 'SMO_AddToBufferQueues_buffers_item', 'buffers')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMO_AddToBufferQueues_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMO_AddToBufferQueues_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,SMO_AddToBufferQueues_pResults_len do
	off, SMO_AddToBufferQueues_pResults_item = do_Result(conn, subtree, tvb, off, 'SMO_AddToBufferQueues_pResults_item', 'pResults')

	end
	
 end
			},
			[49] = {
				["name"] = "GetBufferQueue",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_BufferQueueParam(conn, tree, tvb, off, 'SMO_GetBufferQueue_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMO_GetBufferQueue_pBufferQueue_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMO_GetBufferQueue_pBufferQueue_len, tvb(off,4))
	off = off + 4
	for i=1,SMO_GetBufferQueue_pBufferQueue_len do
	off, SMO_GetBufferQueue_pBufferQueue_item = do_qBuffer(conn, subtree, tvb, off, 'SMO_GetBufferQueue_pBufferQueue_item', 'pBufferQueue')

	end
	
 end
			},
			[50] = {
				["name"] = "GetBufferQueues",
				["request"] = function (conn, tree, tvb)
	local off = 0
local SMO_GetBufferQueues_params_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMO_GetBufferQueues_params_len, tvb(off,4))
	off = off + 4
	for i=1,SMO_GetBufferQueues_params_len do
	off = do_BufferQueueParam(conn, subtree, tvb, off, 'SMO_GetBufferQueues_params_item', 'params')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMO_GetBufferQueues_pBufferQueueLst_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMO_GetBufferQueues_pBufferQueueLst_len, tvb(off,4))
	off = off + 4
	for j=1,SMO_GetBufferQueues_pBufferQueueLst_len do
	local SMO_GetBufferQueues_pBufferQueueLst_item_len = tvb(off, 4):le_uint()
	subsubtree = subtree:add_le(F.SMO_GetBufferQueues_pBufferQueueLst_item_len, tvb(off,4))
	off = off + 4
	for i=1,SMO_GetBufferQueues_pBufferQueueLst_item_len do
	off, SMO_GetBufferQueues_pBufferQueueLst_item_item = do_qBuffer(conn, subsubtree, tvb, off, 'SMO_GetBufferQueues_pBufferQueueLst_item_item', 'pBufferQueueLst')

	end
	

	end
	
local SMO_GetBufferQueues_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMO_GetBufferQueues_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,SMO_GetBufferQueues_pResults_len do
	off, SMO_GetBufferQueues_pResults_item = do_Result(conn, subtree, tvb, off, 'SMO_GetBufferQueues_pResults_item', 'pResults')

	end
	
 end
			},
			[51] = {
				["name"] = "ClearBufferQueues",
				["request"] = function (conn, tree, tvb)
	local off = 0
local SMO_ClearBufferQueues_params_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMO_ClearBufferQueues_params_len, tvb(off,4))
	off = off + 4
	for i=1,SMO_ClearBufferQueues_params_len do
	off = do_BufferQueueParam(conn, subtree, tvb, off, 'SMO_ClearBufferQueues_params_item', 'params')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMO_ClearBufferQueues_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMO_ClearBufferQueues_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,SMO_ClearBufferQueues_pResults_len do
	off, SMO_ClearBufferQueues_pResults_item = do_Result(conn, subtree, tvb, off, 'SMO_ClearBufferQueues_pResults_item', 'pResults')

	end
	
 end
			},
			[52] = {
				["name"] = "SearchBalloon",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreSearchBalloonParam(conn, tree, tvb, off, 'SMO_SearchBalloon_param', 'param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local SMO_SearchBalloon_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.SMO_SearchBalloon_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,SMO_SearchBalloon_pResults_len do
	off = do_DataStoreSearchBalloonResultSet(conn, subtree, tvb, off, 'SMO_SearchBalloon_pResults_item', 'pResults')

	end
	
 end
			},
			[53] = {
				["name"] = "FetchMyInfos",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreFetchMyInfosParam(conn, tree, tvb, off, 'SMO_FetchMyInfos_patam', 'patam')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreFetchMyInfosResult(conn, tree, tvb, off, 'SMO_FetchMyInfos_pResult', 'pResult')
 end
			},
			
		}
	})
add_proto(1,
	{
		["nested"] = false,
		["name"] = "Remote Log Device",
		["methods"] = {
[1] = {
				["name"] = "Log",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Remote_Log_Device_Log_Message = do_String(conn, tree, tvb, off, 'Remote_Log_Device_Log_Message', 'Message')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			
		}
	})
add_proto(35,
	{
		["nested"] = false,
		["name"] = "Privileges",
		["methods"] = {
[1] = {
				["name"] = "GetPrivileges",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Privileges_GetPrivileges_localeCode = do_String(conn, tree, tvb, off, 'Privileges_GetPrivileges_localeCode', 'localeCode')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Privileges_GetPrivileges_privileges_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Privileges_GetPrivileges_privileges_len, tvb(off,4))
	off = off + 4
	for i=1,Privileges_GetPrivileges_privileges_len do
	off, Privileges_GetPrivileges_privileges_key = do_Uint32(conn, subtree, tvb, off, 'Privileges_GetPrivileges_privileges_key', 'privileges')

off = do_Privilege(conn, subtree, tvb, off, 'Privileges_GetPrivileges_privileges_value', 'privileges')

	end
	
 end
			},
			[2] = {
				["name"] = "ActivateKey",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Privileges_ActivateKey_uniqueKey = do_String(conn, tree, tvb, off, 'Privileges_ActivateKey_uniqueKey', 'uniqueKey')
off, Privileges_ActivateKey_languageCode = do_String(conn, tree, tvb, off, 'Privileges_ActivateKey_languageCode', 'languageCode')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_PrivilegeGroup(conn, tree, tvb, off, 'Privileges_ActivateKey_privilege', 'privilege')
 end
			},
			[3] = {
				["name"] = "ActivateKeyWithExpectedPrivileges",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Privileges_ActivateKeyWithExpectedPrivileges_uniqueKey = do_String(conn, tree, tvb, off, 'Privileges_ActivateKeyWithExpectedPrivileges_uniqueKey', 'uniqueKey')
off, Privileges_ActivateKeyWithExpectedPrivileges_languageCode = do_String(conn, tree, tvb, off, 'Privileges_ActivateKeyWithExpectedPrivileges_languageCode', 'languageCode')
local Privileges_ActivateKeyWithExpectedPrivileges_expectedPrivilegeIDs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Privileges_ActivateKeyWithExpectedPrivileges_expectedPrivilegeIDs_len, tvb(off,4))
	off = off + 4
	for i=1,Privileges_ActivateKeyWithExpectedPrivileges_expectedPrivilegeIDs_len do
	off, Privileges_ActivateKeyWithExpectedPrivileges_expectedPrivilegeIDs_item = do_Uint32(conn, subtree, tvb, off, 'Privileges_ActivateKeyWithExpectedPrivileges_expectedPrivilegeIDs_item', 'expectedPrivilegeIDs')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_PrivilegeGroup(conn, tree, tvb, off, 'Privileges_ActivateKeyWithExpectedPrivileges_privilege', 'privilege')
 end
			},
			[4] = {
				["name"] = "GetPrivilegeRemainDuration",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Privileges_GetPrivilegeRemainDuration_privilegeID = do_Uint32(conn, tree, tvb, off, 'Privileges_GetPrivilegeRemainDuration_privilegeID', 'privilegeID')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Privileges_GetPrivilegeRemainDuration_seconds = do_Sint32(conn, tree, tvb, off, 'Privileges_GetPrivilegeRemainDuration_seconds', 'seconds')
 end
			},
			[5] = {
				["name"] = "GetExpiredPrivileges",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Privileges_GetExpiredPrivileges_expiredPrivileges_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Privileges_GetExpiredPrivileges_expiredPrivileges_len, tvb(off,4))
	off = off + 4
	for i=1,Privileges_GetExpiredPrivileges_expiredPrivileges_len do
	off = do_PrivilegeEx(conn, subtree, tvb, off, 'Privileges_GetExpiredPrivileges_expiredPrivileges_item', 'expiredPrivileges')

	end
	
 end
			},
			[6] = {
				["name"] = "GetPrivilegesEx",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Privileges_GetPrivilegesEx_localeCode = do_String(conn, tree, tvb, off, 'Privileges_GetPrivilegesEx_localeCode', 'localeCode')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Privileges_GetPrivilegesEx_privilegesEx_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Privileges_GetPrivilegesEx_privilegesEx_len, tvb(off,4))
	off = off + 4
	for i=1,Privileges_GetPrivilegesEx_privilegesEx_len do
	off = do_PrivilegeEx(conn, subtree, tvb, off, 'Privileges_GetPrivilegesEx_privilegesEx_item', 'privilegesEx')

	end
	
 end
			},
			
		}
	})
add_proto(20,
	{
		["nested"] = false,
		["name"] = "Friends",
		["methods"] = {
[1] = {
				["name"] = "AddFriend",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_AddFriend_uiPlayer = do_Uint32(conn, tree, tvb, off, 'Friends_AddFriend_uiPlayer', 'uiPlayer')
off, Friends_AddFriend_uiDetails = do_Uint32(conn, tree, tvb, off, 'Friends_AddFriend_uiDetails', 'uiDetails')
off, Friends_AddFriend_strMessage = do_String(conn, tree, tvb, off, 'Friends_AddFriend_strMessage', 'strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Friends_AddFriend_retval = do_Bool(conn, tree, tvb, off, 'Friends_AddFriend_retval', 'retval')
 end
			},
			[2] = {
				["name"] = "AddFriendByName",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_AddFriendByName_strPlayerName = do_String(conn, tree, tvb, off, 'Friends_AddFriendByName_strPlayerName', 'strPlayerName')
off, Friends_AddFriendByName_uiDetails = do_Uint32(conn, tree, tvb, off, 'Friends_AddFriendByName_uiDetails', 'uiDetails')
off, Friends_AddFriendByName_strMessage = do_String(conn, tree, tvb, off, 'Friends_AddFriendByName_strMessage', 'strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Friends_AddFriendByName_retval = do_Bool(conn, tree, tvb, off, 'Friends_AddFriendByName_retval', 'retval')
 end
			},
			[3] = {
				["name"] = "AddFriendWithDetails",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_AddFriendWithDetails_uiPlayer = do_Uint32(conn, tree, tvb, off, 'Friends_AddFriendWithDetails_uiPlayer', 'uiPlayer')
off, Friends_AddFriendWithDetails_uiDetails = do_Uint32(conn, tree, tvb, off, 'Friends_AddFriendWithDetails_uiDetails', 'uiDetails')
off, Friends_AddFriendWithDetails_strMessage = do_String(conn, tree, tvb, off, 'Friends_AddFriendWithDetails_strMessage', 'strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_RelationshipData(conn, tree, tvb, off, 'Friends_AddFriendWithDetails_relationshipData', 'relationshipData')
 end
			},
			[4] = {
				["name"] = "AddFriendByNameWithDetails",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_AddFriendByNameWithDetails_uiPlayer = do_Uint32(conn, tree, tvb, off, 'Friends_AddFriendByNameWithDetails_uiPlayer', 'uiPlayer')
off, Friends_AddFriendByNameWithDetails_uiDetails = do_Uint32(conn, tree, tvb, off, 'Friends_AddFriendByNameWithDetails_uiDetails', 'uiDetails')
off, Friends_AddFriendByNameWithDetails_strMessage = do_String(conn, tree, tvb, off, 'Friends_AddFriendByNameWithDetails_strMessage', 'strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_RelationshipData(conn, tree, tvb, off, 'Friends_AddFriendByNameWithDetails_relationshipData', 'relationshipData')
 end
			},
			[5] = {
				["name"] = "AcceptFriendship",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_AcceptFriendship_uiPlayer = do_Uint32(conn, tree, tvb, off, 'Friends_AcceptFriendship_uiPlayer', 'uiPlayer')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Friends_AcceptFriendship_retval = do_Bool(conn, tree, tvb, off, 'Friends_AcceptFriendship_retval', 'retval')
 end
			},
			[6] = {
				["name"] = "DeclineFriendship",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_DeclineFriendship_uiPlayer = do_Uint32(conn, tree, tvb, off, 'Friends_DeclineFriendship_uiPlayer', 'uiPlayer')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Friends_DeclineFriendship_retval = do_Bool(conn, tree, tvb, off, 'Friends_DeclineFriendship_retval', 'retval')
 end
			},
			[7] = {
				["name"] = "BlackList",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_BlackList_uiPlayer = do_Uint32(conn, tree, tvb, off, 'Friends_BlackList_uiPlayer', 'uiPlayer')
off, Friends_BlackList_uiDetails = do_Uint32(conn, tree, tvb, off, 'Friends_BlackList_uiDetails', 'uiDetails')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Friends_BlackList_retval = do_Bool(conn, tree, tvb, off, 'Friends_BlackList_retval', 'retval')
 end
			},
			[8] = {
				["name"] = "BlackListByName",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_BlackListByName_strPlayerName = do_String(conn, tree, tvb, off, 'Friends_BlackListByName_strPlayerName', 'strPlayerName')
off, Friends_BlackListByName_uiDetails = do_Uint32(conn, tree, tvb, off, 'Friends_BlackListByName_uiDetails', 'uiDetails')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Friends_BlackListByName_retval = do_Bool(conn, tree, tvb, off, 'Friends_BlackListByName_retval', 'retval')
 end
			},
			[9] = {
				["name"] = "ClearRelationship",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_ClearRelationship_uiPlayer = do_Uint32(conn, tree, tvb, off, 'Friends_ClearRelationship_uiPlayer', 'uiPlayer')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Friends_ClearRelationship_retval = do_Bool(conn, tree, tvb, off, 'Friends_ClearRelationship_retval', 'retval')
 end
			},
			[10] = {
				["name"] = "UpdateDetails",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_UpdateDetails_uiPlayer = do_Uint32(conn, tree, tvb, off, 'Friends_UpdateDetails_uiPlayer', 'uiPlayer')
off, Friends_UpdateDetails_uiDetails = do_Uint32(conn, tree, tvb, off, 'Friends_UpdateDetails_uiDetails', 'uiDetails')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Friends_UpdateDetails_retval = do_Bool(conn, tree, tvb, off, 'Friends_UpdateDetails_retval', 'retval')
 end
			},
			[11] = {
				["name"] = "GetList",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_GetList_byRelationship = do_Uint8(conn, tree, tvb, off, 'Friends_GetList_byRelationship', 'byRelationship')
off, Friends_GetList_bReversed = do_Bool(conn, tree, tvb, off, 'Friends_GetList_bReversed', 'bReversed')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Friends_GetList_lstFriendsList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_GetList_lstFriendsList_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_GetList_lstFriendsList_len do
	off, Friends_GetList_lstFriendsList_item = do_Uint32(conn, subtree, tvb, off, 'Friends_GetList_lstFriendsList_item', 'lstFriendsList')

	end
	
 end
			},
			[12] = {
				["name"] = "GetDetailedList",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_GetDetailedList_byRelationship = do_Uint8(conn, tree, tvb, off, 'Friends_GetDetailedList_byRelationship', 'byRelationship')
off, Friends_GetDetailedList_bReversed = do_Bool(conn, tree, tvb, off, 'Friends_GetDetailedList_bReversed', 'bReversed')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Friends_GetDetailedList_lstFriendsList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_GetDetailedList_lstFriendsList_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_GetDetailedList_lstFriendsList_len do
	off = do_FriendData(conn, subtree, tvb, off, 'Friends_GetDetailedList_lstFriendsList_item', 'lstFriendsList')

	end
	
 end
			},
			[13] = {
				["name"] = "GetRelationships",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_ResultRange(conn, tree, tvb, off, 'Friends_GetRelationships_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Friends_GetRelationships_uiTotalCount = do_Uint32(conn, tree, tvb, off, 'Friends_GetRelationships_uiTotalCount', 'uiTotalCount')
local Friends_GetRelationships_lstRelationshipsList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_GetRelationships_lstRelationshipsList_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_GetRelationships_lstRelationshipsList_len do
	off = do_RelationshipData(conn, subtree, tvb, off, 'Friends_GetRelationships_lstRelationshipsList_item', 'lstRelationshipsList')

	end
	
 end
			},
			
		}
	})
add_proto(14,
	{
		["nested"] = false,
		["name"] = "Notifications",
		["methods"] = {
[1] = {
				["name"] = "ProcessNotificationEvent",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_NotificationEvent(conn, tree, tvb, off, 'Notifications_ProcessNotificationEvent_oEvent', 'oEvent')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			
		}
	})
add_proto(72,
	{
		["nested"] = false,
		["name"] = "User Account Management",
		["methods"] = {
[1] = {
				["name"] = "LookupSceNpIds",
				["request"] = function (conn, tree, tvb)
	local off = 0
local User_Account_Management_LookupSceNpIds_pids_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Account_Management_LookupSceNpIds_pids_len, tvb(off,4))
	off = off + 4
	for i=1,User_Account_Management_LookupSceNpIds_pids_len do
	off, User_Account_Management_LookupSceNpIds_pids_item = do_Uint32(conn, subtree, tvb, off, 'User_Account_Management_LookupSceNpIds_pids_item', 'pids')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local User_Account_Management_LookupSceNpIds_npids_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Account_Management_LookupSceNpIds_npids_len, tvb(off,4))
	off = off + 4
	for i=1,User_Account_Management_LookupSceNpIds_npids_len do
	off, User_Account_Management_LookupSceNpIds_npids_key = do_Uint32(conn, subtree, tvb, off, 'User_Account_Management_LookupSceNpIds_npids_key', 'npids')

off, User_Account_Management_LookupSceNpIds_npids_value = do_qBuffer(conn, subtree, tvb, off, 'User_Account_Management_LookupSceNpIds_npids_value', 'npids')

	end
	
 end
			},
			[2] = {
				["name"] = "LookupPrincipalIDs",
				["request"] = function (conn, tree, tvb)
	local off = 0
local User_Account_Management_LookupPrincipalIDs_firstPartyIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Account_Management_LookupPrincipalIDs_firstPartyIds_len, tvb(off,4))
	off = off + 4
	for i=1,User_Account_Management_LookupPrincipalIDs_firstPartyIds_len do
	off, User_Account_Management_LookupPrincipalIDs_firstPartyIds_item = do_String(conn, subtree, tvb, off, 'User_Account_Management_LookupPrincipalIDs_firstPartyIds_item', 'firstPartyIds')

	end
	
off, User_Account_Management_LookupPrincipalIDs_platformId = do_Uint32(conn, tree, tvb, off, 'User_Account_Management_LookupPrincipalIDs_platformId', 'platformId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local User_Account_Management_LookupPrincipalIDs_pids_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Account_Management_LookupPrincipalIDs_pids_len, tvb(off,4))
	off = off + 4
	for i=1,User_Account_Management_LookupPrincipalIDs_pids_len do
	off, User_Account_Management_LookupPrincipalIDs_pids_key = do_String(conn, subtree, tvb, off, 'User_Account_Management_LookupPrincipalIDs_pids_key', 'pids')

off, User_Account_Management_LookupPrincipalIDs_pids_value = do_Uint32(conn, subtree, tvb, off, 'User_Account_Management_LookupPrincipalIDs_pids_value', 'pids')

	end
	
 end
			},
			[3] = {
				["name"] = "LookupFirstPartyIds",
				["request"] = function (conn, tree, tvb)
	local off = 0
local User_Account_Management_LookupFirstPartyIds_pids_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Account_Management_LookupFirstPartyIds_pids_len, tvb(off,4))
	off = off + 4
	for i=1,User_Account_Management_LookupFirstPartyIds_pids_len do
	off, User_Account_Management_LookupFirstPartyIds_pids_item = do_Uint32(conn, subtree, tvb, off, 'User_Account_Management_LookupFirstPartyIds_pids_item', 'pids')

	end
	
off, User_Account_Management_LookupFirstPartyIds_platformId = do_Uint32(conn, tree, tvb, off, 'User_Account_Management_LookupFirstPartyIds_platformId', 'platformId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local User_Account_Management_LookupFirstPartyIds_firstPartyIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Account_Management_LookupFirstPartyIds_firstPartyIds_len, tvb(off,4))
	off = off + 4
	for i=1,User_Account_Management_LookupFirstPartyIds_firstPartyIds_len do
	off, User_Account_Management_LookupFirstPartyIds_firstPartyIds_key = do_Uint32(conn, subtree, tvb, off, 'User_Account_Management_LookupFirstPartyIds_firstPartyIds_key', 'firstPartyIds')

off, User_Account_Management_LookupFirstPartyIds_firstPartyIds_value = do_String(conn, subtree, tvb, off, 'User_Account_Management_LookupFirstPartyIds_firstPartyIds_value', 'firstPartyIds')

	end
	
 end
			},
			[4] = {
				["name"] = "UserHasPlayed",
				["request"] = function (conn, tree, tvb)
	local off = 0
local User_Account_Management_UserHasPlayed_FirstPartyIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Account_Management_UserHasPlayed_FirstPartyIds_len, tvb(off,4))
	off = off + 4
	for i=1,User_Account_Management_UserHasPlayed_FirstPartyIds_len do
	off, User_Account_Management_UserHasPlayed_FirstPartyIds_item = do_String(conn, subtree, tvb, off, 'User_Account_Management_UserHasPlayed_FirstPartyIds_item', 'FirstPartyIds')

	end
	
off, User_Account_Management_UserHasPlayed_platformId = do_Uint32(conn, tree, tvb, off, 'User_Account_Management_UserHasPlayed_platformId', 'platformId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local User_Account_Management_UserHasPlayed_UserPresence_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Account_Management_UserHasPlayed_UserPresence_len, tvb(off,4))
	off = off + 4
	for i=1,User_Account_Management_UserHasPlayed_UserPresence_len do
	off, User_Account_Management_UserHasPlayed_UserPresence_key = do_String(conn, subtree, tvb, off, 'User_Account_Management_UserHasPlayed_UserPresence_key', 'UserPresence')

off, User_Account_Management_UserHasPlayed_UserPresence_value = do_Bool(conn, subtree, tvb, off, 'User_Account_Management_UserHasPlayed_UserPresence_value', 'UserPresence')

	end
	
 end
			},
			[5] = {
				["name"] = "IsUserPlaying",
				["request"] = function (conn, tree, tvb)
	local off = 0
local User_Account_Management_IsUserPlaying_firstPartyIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Account_Management_IsUserPlaying_firstPartyIds_len, tvb(off,4))
	off = off + 4
	for i=1,User_Account_Management_IsUserPlaying_firstPartyIds_len do
	off, User_Account_Management_IsUserPlaying_firstPartyIds_item = do_String(conn, subtree, tvb, off, 'User_Account_Management_IsUserPlaying_firstPartyIds_item', 'firstPartyIds')

	end
	
off, User_Account_Management_IsUserPlaying_platformId = do_Uint32(conn, tree, tvb, off, 'User_Account_Management_IsUserPlaying_platformId', 'platformId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local User_Account_Management_IsUserPlaying_UserPresence_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Account_Management_IsUserPlaying_UserPresence_len, tvb(off,4))
	off = off + 4
	for i=1,User_Account_Management_IsUserPlaying_UserPresence_len do
	off, User_Account_Management_IsUserPlaying_UserPresence_key = do_String(conn, subtree, tvb, off, 'User_Account_Management_IsUserPlaying_UserPresence_key', 'UserPresence')

off, User_Account_Management_IsUserPlaying_UserPresence_value = do_Bool(conn, subtree, tvb, off, 'User_Account_Management_IsUserPlaying_UserPresence_value', 'UserPresence')

	end
	
 end
			},
			[6] = {
				["name"] = "updateSonyAccountInfo",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, User_Account_Management_updateSonyAccountInfo_ticketData = do_qBuffer(conn, tree, tvb, off, 'User_Account_Management_updateSonyAccountInfo_ticketData', 'ticketData')
off, User_Account_Management_updateSonyAccountInfo_ticketSize = do_Uint32(conn, tree, tvb, off, 'User_Account_Management_updateSonyAccountInfo_ticketSize', 'ticketSize')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[7] = {
				["name"] = "LookupUsernames",
				["request"] = function (conn, tree, tvb)
	local off = 0
local User_Account_Management_LookupUsernames_pids_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Account_Management_LookupUsernames_pids_len, tvb(off,4))
	off = off + 4
	for i=1,User_Account_Management_LookupUsernames_pids_len do
	off, User_Account_Management_LookupUsernames_pids_item = do_Uint32(conn, subtree, tvb, off, 'User_Account_Management_LookupUsernames_pids_item', 'pids')

	end
	
off, User_Account_Management_LookupUsernames_platformId = do_Uint32(conn, tree, tvb, off, 'User_Account_Management_LookupUsernames_platformId', 'platformId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local User_Account_Management_LookupUsernames_UserNames_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.User_Account_Management_LookupUsernames_UserNames_len, tvb(off,4))
	off = off + 4
	for i=1,User_Account_Management_LookupUsernames_UserNames_len do
	off, User_Account_Management_LookupUsernames_UserNames_key = do_Uint32(conn, subtree, tvb, off, 'User_Account_Management_LookupUsernames_UserNames_key', 'UserNames')

off, User_Account_Management_LookupUsernames_UserNames_value = do_String(conn, subtree, tvb, off, 'User_Account_Management_LookupUsernames_UserNames_value', 'UserNames')

	end
	
 end
			},
			
		}
	})
add_proto(115,
	{
		["nested"] = true,
		["name"] = "SSB4",
		["methods"] = {
[45] = {
				["name"] = "PostProfile",
				["request"] = nil,
				["response"] = nil
			},
			[46] = {
				["name"] = "GetProfiles",
				["request"] = nil,
				["response"] = nil
			},
			[47] = {
				["name"] = "SendPlayReport",
				["request"] = nil,
				["response"] = nil
			},
			[48] = {
				["name"] = "GetWorldPlayReport",
				["request"] = nil,
				["response"] = nil
			},
			[49] = {
				["name"] = "GetReplayMeta",
				["request"] = nil,
				["response"] = nil
			},
			[50] = {
				["name"] = "PrepareGetReplay",
				["request"] = nil,
				["response"] = nil
			},
			[51] = {
				["name"] = "PreparePostReplay",
				["request"] = nil,
				["response"] = nil
			},
			[52] = {
				["name"] = "CompletePostReplay",
				["request"] = nil,
				["response"] = nil
			},
			[53] = {
				["name"] = "CheckPostReplay",
				["request"] = nil,
				["response"] = nil
			},
			[54] = {
				["name"] = "GetNextReplay",
				["request"] = nil,
				["response"] = nil
			},
			[55] = {
				["name"] = "PreparePostSharedData",
				["request"] = nil,
				["response"] = nil
			},
			[56] = {
				["name"] = "CompletePostSharedData",
				["request"] = nil,
				["response"] = nil
			},
			[57] = {
				["name"] = "SearchSharedData",
				["request"] = nil,
				["response"] = nil
			},
			[58] = {
				["name"] = "GetApplicationConfig",
				["request"] = nil,
				["response"] = nil
			},
			[59] = {
				["name"] = "SearchReplay",
				["request"] = nil,
				["response"] = nil
			},
			[60] = {
				["name"] = "PostFightingPowerScore",
				["request"] = nil,
				["response"] = nil
			},
			[61] = {
				["name"] = "GetFightingPowerChart",
				["request"] = nil,
				["response"] = nil
			},
			[62] = {
				["name"] = "GetFightingPowerChartAll",
				["request"] = nil,
				["response"] = nil
			},
			[63] = {
				["name"] = "ReportSharedData",
				["request"] = nil,
				["response"] = nil
			},
			[64] = {
				["name"] = "GetSharedDataMeta",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	})
add_proto(120,
	{
		["nested"] = false,
		["name"] = "Matchmake Referee",
		["methods"] = {
[1] = {
				["name"] = "StartRound",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeRefereeStartRoundParam(conn, tree, tvb, off, 'Matchmake_Referee_StartRound_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Referee_StartRound_Round_id = do_Uint64(conn, tree, tvb, off, 'Matchmake_Referee_StartRound_Round_id', 'Round id')
 end
			},
			[2] = {
				["name"] = "GetStartRoundParam",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Referee_GetStartRoundParam_Round_id = do_Uint64(conn, tree, tvb, off, 'Matchmake_Referee_GetStartRoundParam_Round_id', 'Round id')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeRefereeStartRoundParam(conn, tree, tvb, off, 'Matchmake_Referee_GetStartRoundParam_Param', 'Param')
 end
			},
			[3] = {
				["name"] = "EndRound",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeRefereeEndRoundParam(conn, tree, tvb, off, 'Matchmake_Referee_EndRound_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[4] = {
				["name"] = "EndRoundWithPartialReport",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeRefereeEndRoundParam(conn, tree, tvb, off, 'Matchmake_Referee_EndRoundWithPartialReport_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[5] = {
				["name"] = "EndRoundWithoutReport",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Referee_EndRoundWithoutReport_Round_id = do_Uint64(conn, tree, tvb, off, 'Matchmake_Referee_EndRoundWithoutReport_Round_id', 'Round id')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[6] = {
				["name"] = "GetRoundParticipants",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Referee_GetRoundParticipants_Round_id = do_Uint64(conn, tree, tvb, off, 'Matchmake_Referee_GetRoundParticipants_Round_id', 'Round id')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Referee_GetRoundParticipants_Participants_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Referee_GetRoundParticipants_Participants_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Referee_GetRoundParticipants_Participants_len do
	off, Matchmake_Referee_GetRoundParticipants_Participants_item = do_PID(conn, subtree, tvb, off, 'Matchmake_Referee_GetRoundParticipants_Participants_item', 'Participants')

	end
	
 end
			},
			[7] = {
				["name"] = "GetNotSummarizedRound",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local Matchmake_Referee_GetNotSummarizedRound_Rounds_in_which_you_are_participating_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Referee_GetNotSummarizedRound_Rounds_in_which_you_are_participating_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Referee_GetNotSummarizedRound_Rounds_in_which_you_are_participating_len do
	off = do_RoundInfo(conn, subtree, tvb, off, 'Matchmake_Referee_GetNotSummarizedRound_Rounds_in_which_you_are_participating_item', 'Rounds in which you are participating')

	end
	
 end
			},
			[8] = {
				["name"] = "GetRound",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Referee_GetRound_Round_id = do_Uint64(conn, tree, tvb, off, 'Matchmake_Referee_GetRound_Round_id', 'Round id')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_RoundInfo(conn, tree, tvb, off, 'Matchmake_Referee_GetRound_Round_info', 'Round info')
 end
			},
			[9] = {
				["name"] = "GetStatsPrimary",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GetStatsParam(conn, tree, tvb, off, 'Matchmake_Referee_GetStatsPrimary_Param', 'Param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[10] = {
				["name"] = "GetStatsPrimaries",
				["request"] = nil,
				["response"] = nil
			},
			[11] = {
				["name"] = "GetStatsAll",
				["request"] = nil,
				["response"] = nil
			},
			[12] = {
				["name"] = "CreateStats",
				["request"] = nil,
				["response"] = nil
			},
			[13] = {
				["name"] = "GetOrCreateStats",
				["request"] = nil,
				["response"] = nil
			},
			[14] = {
				["name"] = "ResetStats",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[15] = {
				["name"] = "GetEventPoint",
				["request"] = nil,
				["response"] = nil
			},
			[16] = {
				["name"] = "ResetEventPoint",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	})
add_proto(31,
	{
		["nested"] = false,
		["name"] = "News",
		["methods"] = {
[1] = {
				["name"] = "GetChannels",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_ResultRange(conn, tree, tvb, off, 'News_GetChannels_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local News_GetChannels_channels_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.News_GetChannels_channels_len, tvb(off,4))
	off = off + 4
	for i=1,News_GetChannels_channels_len do
	off = do_NewsChannel(conn, subtree, tvb, off, 'News_GetChannels_channels_item', 'channels')

	end
	
 end
			},
			[2] = {
				["name"] = "GetChannelsByTypes",
				["request"] = function (conn, tree, tvb)
	local off = 0
local News_GetChannelsByTypes_newsChannelTypes_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.News_GetChannelsByTypes_newsChannelTypes_len, tvb(off,4))
	off = off + 4
	for i=1,News_GetChannelsByTypes_newsChannelTypes_len do
	off, News_GetChannelsByTypes_newsChannelTypes_item = do_String(conn, subtree, tvb, off, 'News_GetChannelsByTypes_newsChannelTypes_item', 'newsChannelTypes')

	end
	
off = do_ResultRange(conn, tree, tvb, off, 'News_GetChannelsByTypes_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local News_GetChannelsByTypes_channels_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.News_GetChannelsByTypes_channels_len, tvb(off,4))
	off = off + 4
	for i=1,News_GetChannelsByTypes_channels_len do
	off = do_NewsChannel(conn, subtree, tvb, off, 'News_GetChannelsByTypes_channels_item', 'channels')

	end
	
 end
			},
			[3] = {
				["name"] = "GetSubscribableChannels",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_ResultRange(conn, tree, tvb, off, 'News_GetSubscribableChannels_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local News_GetSubscribableChannels_channels_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.News_GetSubscribableChannels_channels_len, tvb(off,4))
	off = off + 4
	for i=1,News_GetSubscribableChannels_channels_len do
	off = do_NewsChannel(conn, subtree, tvb, off, 'News_GetSubscribableChannels_channels_item', 'channels')

	end
	
 end
			},
			[4] = {
				["name"] = "GetChannelsByIDs",
				["request"] = function (conn, tree, tvb)
	local off = 0
local News_GetChannelsByIDs_newsChannelIDs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.News_GetChannelsByIDs_newsChannelIDs_len, tvb(off,4))
	off = off + 4
	for i=1,News_GetChannelsByIDs_newsChannelIDs_len do
	off, News_GetChannelsByIDs_newsChannelIDs_item = do_Uint32(conn, subtree, tvb, off, 'News_GetChannelsByIDs_newsChannelIDs_item', 'newsChannelIDs')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local News_GetChannelsByIDs_channels_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.News_GetChannelsByIDs_channels_len, tvb(off,4))
	off = off + 4
	for i=1,News_GetChannelsByIDs_channels_len do
	off = do_NewsChannel(conn, subtree, tvb, off, 'News_GetChannelsByIDs_channels_item', 'channels')

	end
	
 end
			},
			[5] = {
				["name"] = "GetSubscribedChannels",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_ResultRange(conn, tree, tvb, off, 'News_GetSubscribedChannels_resultRange', 'resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local News_GetSubscribedChannels_channels_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.News_GetSubscribedChannels_channels_len, tvb(off,4))
	off = off + 4
	for i=1,News_GetSubscribedChannels_channels_len do
	off = do_NewsChannel(conn, subtree, tvb, off, 'News_GetSubscribedChannels_channels_item', 'channels')

	end
	
 end
			},
			[6] = {
				["name"] = "SubscribeChannel",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, News_SubscribeChannel_newsChannelID = do_Uint32(conn, tree, tvb, off, 'News_SubscribeChannel_newsChannelID', 'newsChannelID')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[7] = {
				["name"] = "UnsubscribeChannel",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, News_UnsubscribeChannel_newsChannelID = do_Uint32(conn, tree, tvb, off, 'News_UnsubscribeChannel_newsChannelID', 'newsChannelID')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[8] = {
				["name"] = "GetNewsHeaders",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_NewsRecipient(conn, tree, tvb, off, 'News_GetNewsHeaders_recipient', 'recipient')
off = do_ResultRange(conn, tree, tvb, off, 'News_GetNewsHeaders_range', 'range')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local News_GetNewsHeaders_newsHeaders_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.News_GetNewsHeaders_newsHeaders_len, tvb(off,4))
	off = off + 4
	for i=1,News_GetNewsHeaders_newsHeaders_len do
	off = do_NewsHeader(conn, subtree, tvb, off, 'News_GetNewsHeaders_newsHeaders_item', 'newsHeaders')

	end
	
 end
			},
			[9] = {
				["name"] = "GetNewsMessages",
				["request"] = function (conn, tree, tvb)
	local off = 0
local News_GetNewsMessages_newsMessageIDs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.News_GetNewsMessages_newsMessageIDs_len, tvb(off,4))
	off = off + 4
	for i=1,News_GetNewsMessages_newsMessageIDs_len do
	off, News_GetNewsMessages_newsMessageIDs_item = do_Uint32(conn, subtree, tvb, off, 'News_GetNewsMessages_newsMessageIDs_item', 'newsMessageIDs')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local News_GetNewsMessages_newsMessages_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.News_GetNewsMessages_newsMessages_len, tvb(off,4))
	off = off + 4
	for i=1,News_GetNewsMessages_newsMessages_len do
	off = do_NewsMessage(conn, subtree, tvb, off, 'News_GetNewsMessages_newsMessages_item', 'newsMessages')

	end
	
 end
			},
			[10] = {
				["name"] = "GetNumberOfNews",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_NewsRecipient(conn, tree, tvb, off, 'News_GetNumberOfNews_recipient', 'recipient')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, News_GetNumberOfNews_numberOfNews = do_Uint32(conn, tree, tvb, off, 'News_GetNumberOfNews_numberOfNews', 'numberOfNews')
 end
			},
			[11] = {
				["name"] = "GetChannelByType",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, News_GetChannelByType_newsChannelType = do_String(conn, tree, tvb, off, 'News_GetChannelByType_newsChannelType', 'newsChannelType')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_NewsChannel(conn, tree, tvb, off, 'News_GetChannelByType_channel', 'channel')
 end
			},
			[12] = {
				["name"] = "GetNewsHeadersByType",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, News_GetNewsHeadersByType_newsChannelType = do_String(conn, tree, tvb, off, 'News_GetNewsHeadersByType_newsChannelType', 'newsChannelType')
off = do_ResultRange(conn, tree, tvb, off, 'News_GetNewsHeadersByType_range', 'range')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local News_GetNewsHeadersByType_newsHeaders_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.News_GetNewsHeadersByType_newsHeaders_len, tvb(off,4))
	off = off + 4
	for i=1,News_GetNewsHeadersByType_newsHeaders_len do
	off = do_NewsHeader(conn, subtree, tvb, off, 'News_GetNewsHeadersByType_newsHeaders_item', 'newsHeaders')

	end
	
 end
			},
			[13] = {
				["name"] = "GetNewsMessagesByType",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, News_GetNewsMessagesByType_newsChannelType = do_String(conn, tree, tvb, off, 'News_GetNewsMessagesByType_newsChannelType', 'newsChannelType')
off = do_ResultRange(conn, tree, tvb, off, 'News_GetNewsMessagesByType_range', 'range')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local News_GetNewsMessagesByType_newsMessages_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.News_GetNewsMessagesByType_newsMessages_len, tvb(off,4))
	off = off + 4
	for i=1,News_GetNewsMessagesByType_newsMessages_len do
	off = do_NewsMessage(conn, subtree, tvb, off, 'News_GetNewsMessagesByType_newsMessages_item', 'newsMessages')

	end
	
 end
			},
			
		}
	})
add_proto(112,
	{
		["nested"] = true,
		["name"] = "SSB4",
		["methods"] = {
[14] = {
				["name"] = "GetCommunityCompetitionScore",
				["request"] = nil,
				["response"] = nil
			},
			[15] = {
				["name"] = "GetCommunityCompetitionRankData",
				["request"] = nil,
				["response"] = nil
			},
			[16] = {
				["name"] = "GetCommunityCompetitionRanking",
				["request"] = nil,
				["response"] = nil
			},
			[17] = {
				["name"] = "PutCommunityCompetitionScore",
				["request"] = nil,
				["response"] = nil
			},
			[18] = {
				["name"] = "DeleteCommunityCompetitionScore",
				["request"] = nil,
				["response"] = nil
			},
			[19] = {
				["name"] = "DeleteCommunityCompetitionScores",
				["request"] = nil,
				["response"] = nil
			},
			[20] = {
				["name"] = "DEBUG_PutCommunityCompetitionScores",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	})
add_proto(109,
	{
		["nested"] = true,
		["name"] = "MK8 Deluxe",
		["methods"] = {
[54] = {
				["name"] = "CreateSimpleSearchObject",
				["request"] = nil,
				["response"] = nil
			},
			[55] = {
				["name"] = "UpdateSimpleSearchObject",
				["request"] = nil,
				["response"] = nil
			},
			[56] = {
				["name"] = "DeleteSimpleSearchObject",
				["request"] = nil,
				["response"] = nil
			},
			[57] = {
				["name"] = "SearchSimpleSearchObject",
				["request"] = nil,
				["response"] = nil
			},
			[58] = {
				["name"] = "SearchSimpleSearchObjectByObjectIds",
				["request"] = nil,
				["response"] = nil
			},
			[59] = {
				["name"] = "JoinMatchmakeSessionWithExtraParticipants",
				["request"] = nil,
				["response"] = nil
			},
			[60] = {
				["name"] = "CustomGetSimplePlayingSession",
				["request"] = function (conn, tree, tvb)
	local off = 0
local MK8_Deluxe_CustomGetSimplePlayingSession_Pids_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.MK8_Deluxe_CustomGetSimplePlayingSession_Pids_len, tvb(off,4))
	off = off + 4
	for i=1,MK8_Deluxe_CustomGetSimplePlayingSession_Pids_len do
	off, MK8_Deluxe_CustomGetSimplePlayingSession_Pids_item = do_PID(conn, subtree, tvb, off, 'MK8_Deluxe_CustomGetSimplePlayingSession_Pids_item', 'Pids')

	end
	
off, MK8_Deluxe_CustomGetSimplePlayingSession_Unknown = do_Uint8(conn, tree, tvb, off, 'MK8_Deluxe_CustomGetSimplePlayingSession_Unknown', 'Unknown')
off, MK8_Deluxe_CustomGetSimplePlayingSession_Unknown = do_Uint8(conn, tree, tvb, off, 'MK8_Deluxe_CustomGetSimplePlayingSession_Unknown', 'Unknown')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
local MK8_Deluxe_CustomGetSimplePlayingSession_Playing_sessions_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.MK8_Deluxe_CustomGetSimplePlayingSession_Playing_sessions_len, tvb(off,4))
	off = off + 4
	for i=1,MK8_Deluxe_CustomGetSimplePlayingSession_Playing_sessions_len do
	off = do_SimplePlayingSession(conn, subtree, tvb, off, 'MK8_Deluxe_CustomGetSimplePlayingSession_Playing_sessions_item', 'Playing sessions')

	end
	
 end
			},
			[61] = {
				["name"] = "CreateCompetition",
				["request"] = nil,
				["response"] = nil
			},
			[62] = {
				["name"] = "DeleteCompetition",
				["request"] = nil,
				["response"] = nil
			},
			[63] = {
				["name"] = "RegisterFavoriteCompetition",
				["request"] = nil,
				["response"] = nil
			},
			[64] = {
				["name"] = "UnregisterFavoriteCompetition",
				["request"] = nil,
				["response"] = nil
			},
			[65] = {
				["name"] = "GetFavoriteCompetition",
				["request"] = nil,
				["response"] = nil
			},
			[66] = {
				["name"] = "GetTeamParticipants",
				["request"] = nil,
				["response"] = nil
			},
			[67] = {
				["name"] = "FindCommunityByOwner",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	})

return info, nested_info